{"version":3,"sources":["src/core/core-barcode.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","barcode","ng","zxing","rxjs","operators","this","library","AjfBarcode","_cdr","_renderer","_this","codeReader","BrowserBarcodeReader","startDetection","EventEmitter","startCalculation","_startDetectionSub","Subscription","EMPTY","_startCalculationSub","_barcodeValue","_toggle","_onChangeCallback","_","_onTouchedCallback","_init","asObservable","pipe","debounceTime","switchMap","data","_getDataFromVideo","videoSource","_readBarcodeFromData","catchError","of","subscribe","result","text","toggle","value","emit","Object","defineProperty","prototype","get","_canvas","getContext","enumerable","configurable","_video","set","detectChanges","val","markForCheck","reset","takeSnapshot","onSelectFile","evt","target","_onSelect","files","onSelectDrop","writeValue","registerOnChange","fn","registerOnTouched","ngOnDestroy","unsubscribe","_initCanvas","_initVideo","createElement","height","width","length","reader","FileReader","readAsDataURL","onload","ev","video","canvasCtx","drawImage","toDataURL","_readBarcodeFromImage","img","from","decodeFromImage","e","image","_createImage","src","decorators","type","Directive","ctorParameters","ChangeDetectorRef","Renderer2"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@zxing/library'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/barcode', ['exports', '@angular/core', '@zxing/library', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.barcode = {}), global.ng.core, global.zxing, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, library, rxjs, operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBarcode = /** @class */ (function () {\n        function AjfBarcode(_cdr, _renderer) {\n            var _this = this;\n            this._cdr = _cdr;\n            this._renderer = _renderer;\n            this.codeReader = new library.BrowserBarcodeReader();\n            this.startDetection = new core.EventEmitter();\n            this.startCalculation = new core.EventEmitter();\n            this._startDetectionSub = rxjs.Subscription.EMPTY;\n            this._startCalculationSub = rxjs.Subscription.EMPTY;\n            /**\n             * implement the control form value.\n             * rappresent the barcode value.\n             *\n             * @memberof AjfBarcode\n             */\n            this._barcodeValue = '';\n            this._toggle = 'drop';\n            this._onChangeCallback = function (_) { };\n            this._onTouchedCallback = function () { };\n            this._init();\n            this._startDetectionSub = this.startDetection.asObservable()\n                .pipe(operators.debounceTime(300), operators.switchMap(function () {\n                var data = _this._getDataFromVideo(_this.videoSource);\n                return _this._readBarcodeFromData(data);\n            }), operators.catchError(function () {\n                return rxjs.of({});\n            }))\n                .subscribe(function (result) {\n                if (!result.text) {\n                    _this.startDetection.emit();\n                }\n                else {\n                    _this.toggle = 'drop';\n                    _this.value = result.text;\n                }\n            });\n            this._startCalculationSub = this.startCalculation.asObservable()\n                .pipe(operators.switchMap(function (data) {\n                return _this._readBarcodeFromData(data);\n            }))\n                .subscribe(function (result) {\n                if (result.text) {\n                    _this.toggle = 'drop';\n                    _this.value = result.text;\n                }\n            });\n        }\n        Object.defineProperty(AjfBarcode.prototype, \"canvasCtx\", {\n            get: function () {\n                return this._canvas.getContext('2d');\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfBarcode.prototype, \"videoSource\", {\n            get: function () {\n                return this._video;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfBarcode.prototype, \"value\", {\n            get: function () {\n                return this._barcodeValue;\n            },\n            set: function (value) {\n                if (this._barcodeValue !== value) {\n                    this._barcodeValue = value;\n                    this._cdr.detectChanges();\n                    this._onChangeCallback(value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfBarcode.prototype, \"toggle\", {\n            get: function () {\n                return this._toggle;\n            },\n            set: function (val) {\n                this._toggle = val;\n                this._cdr.markForCheck();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfBarcode.prototype.reset = function () {\n            this.value = '';\n            this._onTouchedCallback();\n        };\n        AjfBarcode.prototype.takeSnapshot = function () {\n            this.startDetection.emit();\n        };\n        AjfBarcode.prototype.onSelectFile = function (evt) {\n            if (evt == null || evt.target == null) {\n                return;\n            }\n            var target = evt.target;\n            var files = target.files;\n            this._onSelect(files);\n        };\n        AjfBarcode.prototype.onSelectDrop = function (files) {\n            if (files == null) {\n                return;\n            }\n            this._onSelect(files);\n        };\n        /** ControlValueAccessor implements */\n        AjfBarcode.prototype.writeValue = function (value) {\n            this._barcodeValue = value;\n        };\n        AjfBarcode.prototype.registerOnChange = function (fn) {\n            this._onChangeCallback = fn;\n        };\n        AjfBarcode.prototype.registerOnTouched = function (fn) {\n            this._onTouchedCallback = fn;\n        };\n        AjfBarcode.prototype.ngOnDestroy = function () {\n            this._startCalculationSub.unsubscribe();\n            this._startDetectionSub.unsubscribe();\n        };\n        AjfBarcode.prototype._init = function () {\n            this._initCanvas();\n            this._initVideo();\n        };\n        AjfBarcode.prototype._initCanvas = function () {\n            this._canvas = this._renderer.createElement('canvas');\n            this._canvas.height = 480;\n            this._canvas.width = 640;\n        };\n        AjfBarcode.prototype._initVideo = function () {\n            this._video = this._renderer.createElement('video');\n            this._video.height = 480;\n            this._video.width = 640;\n        };\n        AjfBarcode.prototype._onSelect = function (files) {\n            var _this = this;\n            if (files != null && files.length > 0 && files[0]) {\n                var reader = new FileReader();\n                reader.readAsDataURL(files[0]);\n                reader.onload = function (ev) {\n                    var data = ev.target.result;\n                    _this.startCalculation.emit(data);\n                    _this._cdr.detectChanges();\n                };\n            }\n        };\n        /**\n         * write a frame of HTMLVideoElement into HTMLCanvasElement and\n         * return the result of toDataURL('image/png')\n         *\n         * @param video\n         * @memberof AjfBarcode\n         */\n        AjfBarcode.prototype._getDataFromVideo = function (video) {\n            this.canvasCtx.drawImage(video, 0, 0, 640, 480);\n            return this._canvas.toDataURL('image/png');\n        };\n        /**\n         * call @zxing library method with HTMLImageElement as parameter\n         *\n         * @param img\n         * @memberof AjfBarcode\n         */\n        AjfBarcode.prototype._readBarcodeFromImage = function (img) {\n            var decode = rxjs.from(this.codeReader.decodeFromImage(img));\n            return decode.pipe(operators.catchError(function (e) { return rxjs.of(e); }));\n        };\n        /**\n         * build an image by data and call _readBarcodeFromImage\n         *\n         * @param data\n         * @memberof AjfBarcode\n         */\n        AjfBarcode.prototype._readBarcodeFromData = function (data) {\n            var image = this._createImage(data);\n            return this._readBarcodeFromImage(image);\n        };\n        /**\n         * build an image by data\n         *\n         * @param data\n         * @memberof AjfBarcode\n         */\n        AjfBarcode.prototype._createImage = function (data) {\n            var image = this._renderer.createElement('img');\n            if (data !== null && typeof data === 'string') {\n                image.src = data;\n            }\n            return image;\n        };\n        AjfBarcode.decorators = [\n            { type: core.Directive }\n        ];\n        AjfBarcode.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef },\n            { type: core.Renderer2 }\n        ]; };\n        return AjfBarcode;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfBarcode = AjfBarcode;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-barcode.umd.js.map\n"]}