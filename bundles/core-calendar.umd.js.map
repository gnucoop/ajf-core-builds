{"version":3,"file":"core-calendar.umd.js","sources":["../../src/core/calendar/calendar.ts","../../src/core/calendar/calendar-period.ts","../../src/core/calendar/calendar-module.ts","../../src/core/calendar/calendar-entry-label.ts","../../src/core/calendar/calendar-service.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectorRef, EventEmitter, OnInit\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {endOfISOWeek, endOfWeek, endOfYear, parse, startOfISOWeek, startOfWeek,\n  startOfYear} from 'date-fns';\nimport {Observable} from 'rxjs';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarService} from './calendar-service';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod | null;\n}\n\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  set viewDate(viewDate: Date) {\n    this._setViewDate(viewDate);\n    this._cdr.markForCheck();\n  }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n    this._cdr.markForCheck();\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode { return this._viewMode; }\n  set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n    this._cdr.markForCheck();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType { return this._selectionMode; }\n  set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n    this._cdr.markForCheck();\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  set isoMode(isoMode: boolean) {\n    this._isoMode = isoMode;\n    this._buildCalendar();\n  }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  get change(): Observable<AjfCalendarChange> {\n    return this._change.asObservable();\n  }\n\n  private _selectedPeriod: AjfCalendarPeriod | null;\n  private set selectedPeriod(period: AjfCalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n    this._cdr.markForCheck();\n  }\n\n  get value(): AjfCalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  set value(period: AjfCalendarPeriod | Date | null) {\n    if (\n      this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date\n      && (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)\n    ) {\n      this.selectedPeriod = {\n        type: 'day',\n        startDate: period,\n        endDate: period\n      };\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n    this._cdr.markForCheck();\n  }\n\n  get calendarHeaders(): string[] { return this._calendarHeaders; }\n  get calendarRows(): AjfCalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _calendarHeaders: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef, private _service: AjfCalendarService) { }\n\n  prevPage(): void {\n    this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod | null = null;\n    if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._onTouchedCallback();\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  private _onTouchedCallback: () => void = () => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _buildCalendar(): void {\n    const calendarView = this._service.buildView({\n      viewMode: this._viewMode,\n      viewDate: this._viewDate,\n      selection: this._selectedPeriod,\n      isoMode: this._isoMode,\n      minDate: this._minDate == null ? null : new Date(this._minDate),\n      maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n    });\n    this._viewHeader = calendarView.header;\n    this._calendarHeaders = calendarView.headerRow;\n    this._calendarRows = calendarView.rows;\n    this._cdr.markForCheck();\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfCalendarEntryLabelPipe} from './calendar-entry-label';\nimport {AjfCalendarService} from './calendar-service';\n\n@NgModule({\n  declarations: [\n    AjfCalendarEntryLabelPipe,\n  ],\n  exports: [\n    AjfCalendarEntryLabelPipe,\n  ],\n})\nexport class AjfCalendarModule { }\n\n@NgModule({\n  providers: [\n    AjfCalendarService,\n  ],\n})\nexport class AjfGregorianCalendarModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarService} from './calendar-service';\n\n@Injectable()\n@Pipe({name: 'ajfCalendarEntryLabel'})\nexport class AjfCalendarEntryLabelPipe implements PipeTransform {\n  constructor(private _service: AjfCalendarService) { }\n\n  transform(entry: AjfCalendarEntry): string {\n    return this._service.entryLabel(entry);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {addDays, addMonths, addWeeks, addYears, endOfDay, endOfMonth, endOfISOWeek, endOfWeek,\n  endOfYear, format, getISODay, isAfter, isBefore, isSameDay, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears} from 'date-fns';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarView} from './calendar-view';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\n\nexport interface AjfCalendarParams {\n  viewMode: AjfCalendarViewMode;\n  viewDate: Date;\n  selection: AjfCalendarPeriod|null;\n  isoMode: boolean;\n  minDate: Date|null;\n  maxDate: Date|null;\n}\n\nfunction isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n  return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n}\n\nfunction periodOrder(entryType: AjfCalendarPeriodType): number {\n  return ['day', 'week', 'month', 'year'].indexOf(entryType);\n}\n\n@Injectable({providedIn: 'root'})\nexport class AjfCalendarService {\n  buildView(params: AjfCalendarParams): AjfCalendarView {\n    const {viewMode, viewDate} = params;\n    switch (viewMode) {\n      case 'decade':\n        let curYear: number = viewDate.getFullYear();\n        let firstYear = curYear - (curYear % 10) + 1;\n        let lastYear = firstYear + 11;\n        return {\n          header: `${firstYear} - ${lastYear}`,\n          headerRow: [],\n          rows: this._decadeCalendarRows(params),\n        };\n      case 'year':\n        return {\n          header: `${viewDate.getFullYear()}`,\n          headerRow: [],\n          rows: this._yearCalendarRows(params),\n        };\n      case 'month':\n        return {\n          header: format(viewDate, 'MMM YYYY'),\n          headerRow: this._monthHeaderRow(params),\n          rows: this._monthCalendarRows(params),\n        };\n    }\n    return {\n      header: '',\n      headerRow: [],\n      rows: [],\n    };\n  }\n\n  monthBounds(date: Date, isoMode: boolean): {start: Date, end: Date} {\n    if (!isoMode) {\n      return {\n        start: startOfMonth(date),\n        end: endOfMonth(date),\n      };\n    }\n    const isoDay = getISODay(date);\n    date = isoDay < 4 ? endOfISOWeek(date) : startOfISOWeek(date);\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(startDate);\n    const startWeekDay = startDate.getDay();\n    const endWeekDay = endDate.getDay();\n    if (startWeekDay == 0 || startWeekDay > 4) {\n      startDate = addWeeks(startDate, 1);\n    }\n    if (endWeekDay > 0 && endWeekDay < 4) {\n      endDate = subWeeks(endDate, 1);\n    }\n    startDate = startOfISOWeek(startDate);\n    endDate = endOfISOWeek(endDate);\n    return { start: startDate, end: endDate };\n  }\n\n  getEntryRange(entry: AjfCalendarEntry): {start: Date, end: Date} {\n    if (entry.type === 'day') {\n      return { start: new Date(entry.date), end: new Date(entry.date) };\n    } else {\n      let curDate: Date = new Date(entry.date);\n      return {\n        start: entry.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: entry.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n\n  isEntrySelected(\n    entry: AjfCalendarEntry, selection: AjfCalendarPeriod|null\n  ): AjfCalendarEntrySelectedState {\n    if (selection != null && selection.startDate != null && selection.endDate != null) {\n      let selectionStart: Date = startOfDay(selection.startDate);\n      let selectionEnd: Date = endOfDay(selection.endDate);\n      let selectionPeriodOrder: number = periodOrder(selection.type);\n\n      let entryPeriodOrder: number = periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = this.getEntryRange(entry);\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  entryLabel(entry: AjfCalendarEntry): string {\n    if (entry.type === 'day') {\n      return `${entry.date.getDate()}`;\n    }\n    if (entry.type === 'month') {\n      return format(entry.date, 'MMM');\n    }\n    return `${entry.date.getFullYear()}`;\n  }\n\n  nextView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return addMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return addYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return addYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  previousView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return subMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return subYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return subYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  private _monthHeaderRow(params: AjfCalendarParams): string[] {\n    const {isoMode, viewDate} = params;\n    let curDate: Date;\n    if (isoMode) {\n      curDate = setISODay(startOfWeek(viewDate), 1);\n    } else {\n      curDate = startOfWeek(viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'dddd'));\n      curDate = addDays(curDate, 1);\n    }\n    return weekDayNames;\n  }\n\n  private _decadeCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curYear: number = viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let curDate: Date = startOfYear(viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'year',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _yearCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curDate: Date = startOfYear(viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'month',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _monthCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection, isoMode, minDate, maxDate} = params;\n    const monthBounds = this.monthBounds(viewDate, isoMode);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'YYYY-MM-DD') === format(curDate, 'YYYY-MM-DD'),\n          disabled: disabled\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n"],"names":["parse","endOfYear","startOfYear","endOfWeek","endOfISOWeek","startOfWeek","startOfISOWeek","EventEmitter","NgModule","Pipe","Injectable","addDays","format","isAfter","isBefore","addMonths","addYears","setISODay","subYears","subMonths","endOfDay","startOfDay","endOfMonth","startOfMonth","subWeeks","addWeeks","getISODay","isSameDay"],"mappings":"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"}