{"version":3,"file":"core-calendar.umd.js","sources":["../../../../../../src/core/calendar/calendar-service.ts","../../../../../../src/core/calendar/calendar-entry-label.ts","../../../../../../src/core/calendar/calendar-module.ts","../../../../../../src/core/calendar/calendar-period.ts","../../../../../../src/core/calendar/calendar.ts","../../../../../../src/core/calendar/public-api.ts","../../../../../../src/core/calendar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {addDays, addMonths, addWeeks, addYears, endOfDay, endOfMonth, endOfISOWeek, endOfWeek,\n  endOfYear, format, getISODay, isAfter, isBefore, isSameDay, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears} from 'date-fns';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarView} from './calendar-view';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\n\nexport interface AjfCalendarParams {\n  viewMode: AjfCalendarViewMode;\n  viewDate: Date;\n  selection: AjfCalendarPeriod|null;\n  isoMode: boolean;\n  minDate: Date|null;\n  maxDate: Date|null;\n}\n\nfunction isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n  return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n}\n\nfunction periodOrder(entryType: AjfCalendarPeriodType): number {\n  return ['day', 'week', 'month', 'year'].indexOf(entryType);\n}\n\n@Injectable({providedIn: 'root'})\nexport class AjfCalendarService {\n  buildView(params: AjfCalendarParams): AjfCalendarView {\n    const {viewMode, viewDate} = params;\n    switch (viewMode) {\n      case 'decade':\n        let curYear: number = viewDate.getFullYear();\n        let firstYear = curYear - (curYear % 10) + 1;\n        let lastYear = firstYear + 11;\n        return {\n          header: `${firstYear} - ${lastYear}`,\n          headerRow: [],\n          rows: this._decadeCalendarRows(params),\n        };\n      case 'year':\n        return {\n          header: `${viewDate.getFullYear()}`,\n          headerRow: [],\n          rows: this._yearCalendarRows(params),\n        };\n      case 'month':\n        return {\n          header: format(viewDate, 'MMM yyyy'),\n          headerRow: this._monthHeaderRow(params),\n          rows: this._monthCalendarRows(params),\n        };\n    }\n    return {\n      header: '',\n      headerRow: [],\n      rows: [],\n    };\n  }\n\n  monthBounds(date: Date, isoMode: boolean): {start: Date, end: Date} {\n    if (!isoMode) {\n      return {\n        start: startOfMonth(date),\n        end: endOfMonth(date),\n      };\n    }\n    const isoDay = getISODay(date);\n    date = isoDay < 4 ? endOfISOWeek(date) : startOfISOWeek(date);\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(startDate);\n    const startWeekDay = startDate.getDay();\n    const endWeekDay = endDate.getDay();\n    if (startWeekDay == 0 || startWeekDay > 4) {\n      startDate = addWeeks(startDate, 1);\n    }\n    if (endWeekDay > 0 && endWeekDay < 4) {\n      endDate = subWeeks(endDate, 1);\n    }\n    startDate = startOfISOWeek(startDate);\n    endDate = endOfISOWeek(endDate);\n    return { start: startDate, end: endDate };\n  }\n\n  getEntryRange(entry: AjfCalendarEntry): {start: Date, end: Date} {\n    if (entry.type === 'day') {\n      return { start: new Date(entry.date), end: new Date(entry.date) };\n    } else {\n      let curDate: Date = new Date(entry.date);\n      return {\n        start: entry.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: entry.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n\n  isEntrySelected(\n    entry: AjfCalendarEntry, selection: AjfCalendarPeriod|null\n  ): AjfCalendarEntrySelectedState {\n    if (selection != null && selection.startDate != null && selection.endDate != null) {\n      let selectionStart: Date = startOfDay(selection.startDate);\n      let selectionEnd: Date = endOfDay(selection.endDate);\n      let selectionPeriodOrder: number = periodOrder(selection.type);\n\n      let entryPeriodOrder: number = periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = this.getEntryRange(entry);\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  entryLabel(entry: AjfCalendarEntry): string {\n    if (entry.type === 'day') {\n      return `${entry.date.getDate()}`;\n    }\n    if (entry.type === 'month') {\n      return format(entry.date, 'MMM');\n    }\n    return `${entry.date.getFullYear()}`;\n  }\n\n  nextView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return addMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return addYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return addYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  previousView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return subMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return subYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return subYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  private _monthHeaderRow(params: AjfCalendarParams): string[] {\n    const {isoMode, viewDate} = params;\n    let curDate: Date;\n    if (isoMode) {\n      curDate = setISODay(startOfWeek(viewDate), 1);\n    } else {\n      curDate = startOfWeek(viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'EEE'));\n      curDate = addDays(curDate, 1);\n    }\n    return weekDayNames;\n  }\n\n  private _decadeCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curYear: number = viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let curDate: Date = startOfYear(viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'year',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _yearCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curDate: Date = startOfYear(viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'month',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _monthCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection, isoMode, minDate, maxDate} = params;\n    const monthBounds = this.monthBounds(viewDate, isoMode);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'yyyy-MM-dd') === format(curDate, 'yyyy-MM-dd'),\n          disabled: disabled\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarService} from './calendar-service';\n\n@Injectable()\n@Pipe({name: 'ajfCalendarEntryLabel'})\nexport class AjfCalendarEntryLabelPipe implements PipeTransform {\n  constructor(private _service: AjfCalendarService) { }\n\n  transform(entry: AjfCalendarEntry): string {\n    return this._service.entryLabel(entry);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfCalendarEntryLabelPipe} from './calendar-entry-label';\nimport {AjfCalendarService} from './calendar-service';\n\n@NgModule({\n  declarations: [\n    AjfCalendarEntryLabelPipe,\n  ],\n  exports: [\n    AjfCalendarEntryLabelPipe,\n  ],\n})\nexport class AjfCalendarModule { }\n\n@NgModule({\n  providers: [\n    AjfCalendarService,\n  ],\n})\nexport class AjfGregorianCalendarModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AfterContentInit, ChangeDetectorRef, Directive, EventEmitter, Input,\n  OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {endOfISOWeek, endOfWeek, endOfYear, parseISO as parse, startOfISOWeek, startOfWeek,\n  startOfYear} from 'date-fns';\nimport {Observable} from 'rxjs';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarService} from './calendar-service';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod | null;\n}\n\n@Directive()\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  @Input() set viewDate(viewDate: Date) {\n    this._setViewDate(viewDate);\n    this._cdr.markForCheck();\n  }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  @Input() set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  @Input() set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n    this._cdr.markForCheck();\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode { return this._viewMode; }\n  @Input() set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n    this._cdr.markForCheck();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType { return this._selectionMode; }\n  @Input() set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n    this._cdr.markForCheck();\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  @Input() set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  @Input() set isoMode(isoMode: boolean) {\n    this._isoMode = isoMode;\n    this._buildCalendar();\n  }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  @Input() set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  @Input() set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  @Output() readonly change: Observable<AjfCalendarChange> = this._change.asObservable();\n\n  private _selectedPeriod: AjfCalendarPeriod | null;\n  @Input() set selectedPeriod(period: AjfCalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n    this._cdr.markForCheck();\n  }\n\n  get value(): AjfCalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  @Input() set value(period: AjfCalendarPeriod | Date | null) {\n    if (\n      this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date\n      && (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)\n    ) {\n      this.selectedPeriod = {\n        type: 'day',\n        startDate: period,\n        endDate: period\n      };\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n    this._cdr.markForCheck();\n  }\n\n  get calendarHeaders(): string[] { return this._calendarHeaders; }\n  get calendarRows(): AjfCalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _calendarHeaders: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef, private _service: AjfCalendarService) { }\n\n  prevPage(): void {\n    this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod | null = null;\n    if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay as 0|1|2|3|4|5|6}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay as 0|1|2|3|4|5|6})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._onTouchedCallback();\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  private _onTouchedCallback: () => void = () => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _buildCalendar(): void {\n    const calendarView = this._service.buildView({\n      viewMode: this._viewMode,\n      viewDate: this._viewDate,\n      selection: this._selectedPeriod,\n      isoMode: this._isoMode,\n      minDate: this._minDate == null ? null : new Date(this._minDate),\n      maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n    });\n    this._viewHeader = calendarView.header;\n    this._calendarHeaders = calendarView.headerRow;\n    this._calendarRows = calendarView.rows;\n    this._cdr.markForCheck();\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './calendar-entry-label';\nexport * from './calendar-entry-selected-state';\nexport * from './calendar-entry-type';\nexport * from './calendar-entry';\nexport * from './calendar-module';\nexport * from './calendar-period-type';\nexport * from './calendar-period';\nexport * from './calendar-service';\nexport * from './calendar-view';\nexport * from './calendar-view-mode';\nexport * from './calendar-week-day';\nexport * from './calendar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["isAfter","isSameDay","isBefore","format","startOfMonth","endOfMonth","getISODay","endOfISOWeek","startOfISOWeek","addWeeks","subWeeks","startOfYear","endOfYear","startOfDay","endOfDay","addMonths","addYears","subMonths","subYears","setISODay","startOfWeek","addDays","endOfWeek","Injectable","Pipe","NgModule","EventEmitter","parse","__values","Directive","ChangeDetectorRef","Input","Output"],"mappings":"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"}