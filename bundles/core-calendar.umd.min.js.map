{"version":3,"sources":["src/core/core-calendar.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","calendar","ng","dateFns","tslib","this","i0","rxjs","isBetween","date","rangeLeft","rangeRight","isAfter","isSameDay","isBefore","periodOrder","entryType","indexOf","AjfCalendarService","prototype","buildView","params","viewDate","viewMode","curYear","getFullYear","firstYear","header","headerRow","rows","_decadeCalendarRows","_yearCalendarRows","format","_monthHeaderRow","_monthCalendarRows","monthBounds","isoMode","start","startOfMonth","end","endOfMonth","getISODay","endOfISOWeek","startOfISOWeek","startDate","endDate","startWeekDay","getDay","endWeekDay","addWeeks","subWeeks","getEntryRange","entry","type","Date","curDate","startOfYear","endOfYear","isEntrySelected","selection","selectionStart","startOfDay","selectionEnd","endOfDay","selectionPeriodOrder","entryPeriodOrder","entryRange","entryLabel","getDate","nextView","addMonths","addYears","previousView","subMonths","subYears","setISODay","startOfWeek","weekDayNames","i","push","addDays","setFullYear","row","j","newEntry","selected","minDate","maxDate","viewStartDate","viewEndDate","endOfWeek","todayDate","disabled","highlight","decorators","Injectable","args","providedIn","Éµprov","AjfCalendarService_Factory","token","AjfCalendarEntryLabelPipe","_service","transform","Pipe","name","ctorParameters","AjfCalendarModule","NgModule","declarations","AjfGregorianCalendarModule","providers","AjfCalendarPeriod","weekDays","AjfCalendarChange","AjfCalendar","_cdr","_disabled","_dateOnlyForDay","_viewMode","_selectionMode","_startOfWeekDay","_isoMode","_change","EventEmitter","change","asObservable","_viewDate","_viewHeader","_calendarRows","_calendarHeaders","_onChangeCallback","_","_onTouchedCallback","Object","defineProperty","get","set","_setViewDate","markForCheck","enumerable","configurable","newDisabled","dateOnlyForDay","_buildCalendar","selectionMode","weekDay","_minDate","valueOf","_maxDate","period","_selectedPeriod","emit","source","_refreshSelection","selectedPeriod","prevPage","nextPage","previousViewMode","selectEntry","_canSelectEntry","_nextViewMode","newPeriod","weekStartsOn","value","registerOnChange","fn","registerOnTouched","writeValue","parseISO","ngOnInit","ngAfterContentInit","calendarView","e_1","_a","e_2","_b","_c","__values","_d","next","done","row_1","row_1_1","e_2_1","error","return","call","e_1_1","Directive","ChangeDetectorRef","propDecorators","Input","startOfWeekDay","Output"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('date-fns'), require('tslib'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/calendar', ['exports', '@angular/core', 'date-fns', 'tslib', 'rxjs'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.calendar = {}), global.ng.core, global.dateFns, global.tslib, global.rxjs));\n}(this, (function (exports, i0, dateFns, tslib, rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function isBetween(date, rangeLeft, rangeRight) {\n        return (dateFns.isAfter(date, rangeLeft) || dateFns.isSameDay(date, rangeLeft))\n            && (dateFns.isBefore(date, rangeRight) || dateFns.isSameDay(date, rangeRight));\n    }\n    function periodOrder(entryType) {\n        return ['day', 'week', 'month', 'year'].indexOf(entryType);\n    }\n    var AjfCalendarService = /** @class */ (function () {\n        function AjfCalendarService() {\n        }\n        AjfCalendarService.prototype.buildView = function (params) {\n            var viewMode = params.viewMode, viewDate = params.viewDate;\n            switch (viewMode) {\n                case 'decade':\n                    var curYear = viewDate.getFullYear();\n                    var firstYear = curYear - (curYear % 10) + 1;\n                    var lastYear = firstYear + 11;\n                    return {\n                        header: firstYear + \" - \" + lastYear,\n                        headerRow: [],\n                        rows: this._decadeCalendarRows(params),\n                    };\n                case 'year':\n                    return {\n                        header: \"\" + viewDate.getFullYear(),\n                        headerRow: [],\n                        rows: this._yearCalendarRows(params),\n                    };\n                case 'month':\n                    return {\n                        header: dateFns.format(viewDate, 'MMM yyyy'),\n                        headerRow: this._monthHeaderRow(params),\n                        rows: this._monthCalendarRows(params),\n                    };\n            }\n            return {\n                header: '',\n                headerRow: [],\n                rows: [],\n            };\n        };\n        AjfCalendarService.prototype.monthBounds = function (date, isoMode) {\n            if (!isoMode) {\n                return {\n                    start: dateFns.startOfMonth(date),\n                    end: dateFns.endOfMonth(date),\n                };\n            }\n            var isoDay = dateFns.getISODay(date);\n            date = isoDay < 4 ? dateFns.endOfISOWeek(date) : dateFns.startOfISOWeek(date);\n            var startDate = dateFns.startOfMonth(date);\n            var endDate = dateFns.endOfMonth(startDate);\n            var startWeekDay = startDate.getDay();\n            var endWeekDay = endDate.getDay();\n            if (startWeekDay == 0 || startWeekDay > 4) {\n                startDate = dateFns.addWeeks(startDate, 1);\n            }\n            if (endWeekDay > 0 && endWeekDay < 4) {\n                endDate = dateFns.subWeeks(endDate, 1);\n            }\n            startDate = dateFns.startOfISOWeek(startDate);\n            endDate = dateFns.endOfISOWeek(endDate);\n            return { start: startDate, end: endDate };\n        };\n        AjfCalendarService.prototype.getEntryRange = function (entry) {\n            if (entry.type === 'day') {\n                return { start: new Date(entry.date), end: new Date(entry.date) };\n            }\n            else {\n                var curDate = new Date(entry.date);\n                return {\n                    start: entry.type === 'month' ? dateFns.startOfMonth(curDate) : dateFns.startOfYear(curDate),\n                    end: entry.type === 'month' ? dateFns.endOfMonth(curDate) : dateFns.endOfYear(curDate)\n                };\n            }\n        };\n        AjfCalendarService.prototype.isEntrySelected = function (entry, selection) {\n            if (selection != null && selection.startDate != null && selection.endDate != null) {\n                var selectionStart = dateFns.startOfDay(selection.startDate);\n                var selectionEnd = dateFns.endOfDay(selection.endDate);\n                var selectionPeriodOrder = periodOrder(selection.type);\n                var entryPeriodOrder = periodOrder(entry.type);\n                var entryRange = this.getEntryRange(entry);\n                if (entryPeriodOrder <= selectionPeriodOrder &&\n                    isBetween(entryRange.start, selectionStart, selectionEnd) &&\n                    isBetween(entryRange.end, selectionStart, selectionEnd)) {\n                    return 'full';\n                }\n                else if (entryPeriodOrder > selectionPeriodOrder &&\n                    isBetween(selectionStart, entryRange.start, entryRange.end) &&\n                    isBetween(selectionEnd, entryRange.start, entryRange.end)) {\n                    return 'partial';\n                }\n            }\n            return 'none';\n        };\n        AjfCalendarService.prototype.entryLabel = function (entry) {\n            if (entry.type === 'day') {\n                return \"\" + entry.date.getDate();\n            }\n            if (entry.type === 'month') {\n                return dateFns.format(entry.date, 'MMM');\n            }\n            return \"\" + entry.date.getFullYear();\n        };\n        AjfCalendarService.prototype.nextView = function (viewDate, viewMode) {\n            if (viewMode == 'month') {\n                return dateFns.addMonths(viewDate, 1);\n            }\n            else if (viewMode == 'year') {\n                return dateFns.addYears(viewDate, 1);\n            }\n            else if (viewMode == 'decade') {\n                return dateFns.addYears(viewDate, 10);\n            }\n            return viewDate;\n        };\n        AjfCalendarService.prototype.previousView = function (viewDate, viewMode) {\n            if (viewMode == 'month') {\n                return dateFns.subMonths(viewDate, 1);\n            }\n            else if (viewMode == 'year') {\n                return dateFns.subYears(viewDate, 1);\n            }\n            else if (viewMode == 'decade') {\n                return dateFns.subYears(viewDate, 10);\n            }\n            return viewDate;\n        };\n        AjfCalendarService.prototype._monthHeaderRow = function (params) {\n            var isoMode = params.isoMode, viewDate = params.viewDate;\n            var curDate;\n            if (isoMode) {\n                curDate = dateFns.setISODay(dateFns.startOfWeek(viewDate), 1);\n            }\n            else {\n                curDate = dateFns.startOfWeek(viewDate);\n            }\n            var weekDayNames = [];\n            for (var i = 0; i < 7; i++) {\n                weekDayNames.push(dateFns.format(curDate, 'EEE'));\n                curDate = dateFns.addDays(curDate, 1);\n            }\n            return weekDayNames;\n        };\n        AjfCalendarService.prototype._decadeCalendarRows = function (params) {\n            var viewDate = params.viewDate, selection = params.selection;\n            var curYear = viewDate.getFullYear();\n            var firstYear = curYear - (curYear % 10) + 1;\n            var curDate = dateFns.startOfYear(viewDate);\n            curDate.setFullYear(firstYear);\n            var rows = [];\n            for (var i = 0; i < 4; i++) {\n                var row = [];\n                for (var j = 0; j < 3; j++) {\n                    var date = new Date(curDate);\n                    var newEntry = {\n                        type: 'year',\n                        date: date,\n                        selected: 'none'\n                    };\n                    newEntry.selected = this.isEntrySelected(newEntry, selection);\n                    row.push(newEntry);\n                    curDate = dateFns.addYears(curDate, 1);\n                }\n                rows.push(row);\n            }\n            return rows;\n        };\n        AjfCalendarService.prototype._yearCalendarRows = function (params) {\n            var viewDate = params.viewDate, selection = params.selection;\n            var curDate = dateFns.startOfYear(viewDate);\n            var rows = [];\n            for (var i = 0; i < 4; i++) {\n                var row = [];\n                for (var j = 0; j < 3; j++) {\n                    var date = new Date(curDate);\n                    var newEntry = {\n                        type: 'month',\n                        date: date,\n                        selected: 'none'\n                    };\n                    newEntry.selected = this.isEntrySelected(newEntry, selection);\n                    row.push(newEntry);\n                    curDate = dateFns.addMonths(curDate, 1);\n                }\n                rows.push(row);\n            }\n            return rows;\n        };\n        AjfCalendarService.prototype._monthCalendarRows = function (params) {\n            var viewDate = params.viewDate, selection = params.selection, isoMode = params.isoMode, minDate = params.minDate, maxDate = params.maxDate;\n            var monthBounds = this.monthBounds(viewDate, isoMode);\n            var viewStartDate = new Date(monthBounds.start);\n            var viewEndDate = new Date(monthBounds.end);\n            if (!isoMode) {\n                viewStartDate = dateFns.startOfWeek(viewStartDate);\n                viewEndDate = dateFns.endOfWeek(viewEndDate);\n            }\n            var rows = [];\n            var todayDate = new Date();\n            var curDate = new Date(viewStartDate);\n            while (curDate < viewEndDate) {\n                var row = [];\n                for (var i = 0; i < 7; i++) {\n                    var disabled = (minDate != null && dateFns.isBefore(curDate, minDate)) ||\n                        (maxDate != null && dateFns.isAfter(curDate, maxDate));\n                    var date = new Date(curDate);\n                    var newEntry = {\n                        type: 'day',\n                        date: date,\n                        selected: 'none',\n                        highlight: dateFns.format(todayDate, 'yyyy-MM-dd') === dateFns.format(curDate, 'yyyy-MM-dd'),\n                        disabled: disabled\n                    };\n                    newEntry.selected = this.isEntrySelected(newEntry, selection);\n                    row.push(newEntry);\n                    curDate = dateFns.addDays(curDate, 1);\n                }\n                rows.push(row);\n            }\n            return rows;\n        };\n        AjfCalendarService.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        AjfCalendarService.Éµprov = i0[\"ÉµÉµdefineInjectable\"]({ factory: function AjfCalendarService_Factory() { return new AjfCalendarService(); }, token: AjfCalendarService, providedIn: \"root\" });\n        return AjfCalendarService;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfCalendarEntryLabelPipe = /** @class */ (function () {\n        function AjfCalendarEntryLabelPipe(_service) {\n            this._service = _service;\n        }\n        AjfCalendarEntryLabelPipe.prototype.transform = function (entry) {\n            return this._service.entryLabel(entry);\n        };\n        AjfCalendarEntryLabelPipe.decorators = [\n            { type: i0.Injectable },\n            { type: i0.Pipe, args: [{ name: 'ajfCalendarEntryLabel' },] }\n        ];\n        /** @nocollapse */\n        AjfCalendarEntryLabelPipe.ctorParameters = function () { return [\n            { type: AjfCalendarService }\n        ]; };\n        return AjfCalendarEntryLabelPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfCalendarModule = /** @class */ (function () {\n        function AjfCalendarModule() {\n        }\n        AjfCalendarModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        declarations: [\n                            AjfCalendarEntryLabelPipe,\n                        ],\n                        exports: [\n                            AjfCalendarEntryLabelPipe,\n                        ],\n                    },] }\n        ];\n        return AjfCalendarModule;\n    }());\n    var AjfGregorianCalendarModule = /** @class */ (function () {\n        function AjfGregorianCalendarModule() {\n        }\n        AjfGregorianCalendarModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        providers: [\n                            AjfCalendarService,\n                        ],\n                    },] }\n        ];\n        return AjfGregorianCalendarModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfCalendarPeriod = /** @class */ (function () {\n        function AjfCalendarPeriod() {\n        }\n        return AjfCalendarPeriod;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var weekDays = [\n        '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n    ];\n    var AjfCalendarChange = /** @class */ (function () {\n        function AjfCalendarChange() {\n        }\n        return AjfCalendarChange;\n    }());\n    var AjfCalendar = /** @class */ (function () {\n        function AjfCalendar(_cdr, _service) {\n            this._cdr = _cdr;\n            this._service = _service;\n            this._disabled = false;\n            this._dateOnlyForDay = false;\n            this._viewMode = 'month';\n            this._selectionMode = 'day';\n            this._startOfWeekDay = 1;\n            this._isoMode = false;\n            this._change = new i0.EventEmitter();\n            this.change = this._change.asObservable();\n            this._viewDate = new Date();\n            this._viewHeader = '';\n            this._calendarRows = [];\n            this._calendarHeaders = [];\n            this._onChangeCallback = function (_) { };\n            this._onTouchedCallback = function () { };\n        }\n        Object.defineProperty(AjfCalendar.prototype, \"viewDate\", {\n            get: function () { return this._viewDate; },\n            set: function (viewDate) {\n                this._setViewDate(viewDate);\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"disabled\", {\n            get: function () { return this._disabled; },\n            set: function (disabled) {\n                var newDisabled = disabled != null && \"\" + disabled !== 'false';\n                if (newDisabled !== this._disabled) {\n                    this._disabled = newDisabled;\n                    this._cdr.markForCheck();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"dateOnlyForDay\", {\n            get: function () { return this._disabled; },\n            set: function (dateOnlyForDay) {\n                this._dateOnlyForDay = dateOnlyForDay != null && \"\" + dateOnlyForDay !== 'false';\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"viewMode\", {\n            get: function () { return this._viewMode; },\n            set: function (viewMode) {\n                this._viewMode = viewMode;\n                this._buildCalendar();\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"selectionMode\", {\n            get: function () { return this._selectionMode; },\n            set: function (selectionMode) {\n                this._selectionMode = selectionMode;\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"startOfWeekDay\", {\n            get: function () {\n                return weekDays[this._startOfWeekDay];\n            },\n            set: function (weekDay) {\n                this._startOfWeekDay = weekDays.indexOf(weekDay);\n                if (this._viewMode === 'month') {\n                    this._buildCalendar();\n                }\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"isoMode\", {\n            get: function () { return this._isoMode; },\n            set: function (isoMode) {\n                this._isoMode = isoMode;\n                this._buildCalendar();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"minDate\", {\n            get: function () { return this._minDate; },\n            set: function (minDate) {\n                this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"maxDate\", {\n            get: function () { return this._maxDate; },\n            set: function (maxDate) {\n                this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"selectedPeriod\", {\n            set: function (period) {\n                this._selectedPeriod = period;\n                this._change.emit({\n                    source: this,\n                    period: period\n                });\n                this._refreshSelection();\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"value\", {\n            get: function () {\n                if (this._dateOnlyForDay && this.selectionMode === 'day') {\n                    return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n                }\n                return this._selectedPeriod;\n            },\n            set: function (period) {\n                if (this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date\n                    && (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)) {\n                    this.selectedPeriod = {\n                        type: 'day',\n                        startDate: period,\n                        endDate: period\n                    };\n                }\n                else if (period instanceof Object && period !== this._selectedPeriod) {\n                    this.selectedPeriod = period;\n                    this._onChangeCallback(period);\n                }\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"calendarHeaders\", {\n            get: function () { return this._calendarHeaders; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"calendarRows\", {\n            get: function () { return this._calendarRows; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfCalendar.prototype, \"viewHeader\", {\n            get: function () { return this._viewHeader; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfCalendar.prototype.prevPage = function () {\n            this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n            this._buildCalendar();\n        };\n        AjfCalendar.prototype.nextPage = function () {\n            this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n            this._buildCalendar();\n        };\n        AjfCalendar.prototype.previousViewMode = function () {\n            if (this._viewMode == 'decade') {\n                return;\n            }\n            else if (this._viewMode == 'year') {\n                this._viewMode = 'decade';\n            }\n            else if (this._viewMode == 'month') {\n                this._viewMode = 'year';\n            }\n            this._buildCalendar();\n        };\n        AjfCalendar.prototype.selectEntry = function (entry) {\n            if (!this._canSelectEntry(entry)) {\n                return this._nextViewMode(entry);\n            }\n            var newPeriod = null;\n            if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n                newPeriod = null;\n            }\n            else if (this._selectionMode == 'day') {\n                newPeriod = {\n                    type: 'day',\n                    startDate: entry.date,\n                    endDate: entry.date\n                };\n            }\n            else if (this._selectionMode == 'week') {\n                newPeriod = {\n                    type: 'week',\n                    startDate: this._isoMode ?\n                        dateFns.startOfISOWeek(entry.date) :\n                        dateFns.startOfWeek(entry.date, { weekStartsOn: this._startOfWeekDay }),\n                    endDate: this._isoMode ?\n                        dateFns.endOfISOWeek(entry.date) :\n                        dateFns.endOfWeek(entry.date, { weekStartsOn: this._startOfWeekDay })\n                };\n            }\n            else if (this._selectionMode == 'month') {\n                var monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n                newPeriod = {\n                    type: 'month',\n                    startDate: new Date(monthBounds.start),\n                    endDate: new Date(monthBounds.end)\n                };\n            }\n            else if (this._selectionMode == 'year') {\n                newPeriod = {\n                    type: 'year',\n                    startDate: dateFns.startOfYear(entry.date),\n                    endDate: dateFns.endOfYear(entry.date)\n                };\n            }\n            this.value = newPeriod;\n            this._onTouchedCallback();\n            this._cdr.markForCheck();\n        };\n        AjfCalendar.prototype.registerOnChange = function (fn) {\n            this._onChangeCallback = fn;\n        };\n        AjfCalendar.prototype.registerOnTouched = function (fn) {\n            this._onTouchedCallback = fn;\n        };\n        AjfCalendar.prototype.writeValue = function (value) {\n            if (typeof value === 'string') {\n                value = dateFns.parseISO(value);\n            }\n            this.value = value;\n        };\n        AjfCalendar.prototype.ngOnInit = function () {\n            this._buildCalendar();\n        };\n        AjfCalendar.prototype.ngAfterContentInit = function () {\n            this._refreshSelection();\n        };\n        AjfCalendar.prototype._setViewDate = function (date) {\n            this._viewDate = date;\n        };\n        AjfCalendar.prototype._buildCalendar = function () {\n            var calendarView = this._service.buildView({\n                viewMode: this._viewMode,\n                viewDate: this._viewDate,\n                selection: this._selectedPeriod,\n                isoMode: this._isoMode,\n                minDate: this._minDate == null ? null : new Date(this._minDate),\n                maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n            });\n            this._viewHeader = calendarView.header;\n            this._calendarHeaders = calendarView.headerRow;\n            this._calendarRows = calendarView.rows;\n            this._cdr.markForCheck();\n        };\n        AjfCalendar.prototype._refreshSelection = function () {\n            var e_1, _a, e_2, _b;\n            try {\n                for (var _c = tslib.__values(this._calendarRows), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var row = _d.value;\n                    try {\n                        for (var row_1 = (e_2 = void 0, tslib.__values(row)), row_1_1 = row_1.next(); !row_1_1.done; row_1_1 = row_1.next()) {\n                            var entry = row_1_1.value;\n                            entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (row_1_1 && !row_1_1.done && (_b = row_1.return)) _b.call(row_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        AjfCalendar.prototype._canSelectEntry = function (entry) {\n            if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n                return false;\n            }\n            if (this._selectionMode == 'month' && entry.type == 'year') {\n                return false;\n            }\n            return true;\n        };\n        AjfCalendar.prototype._nextViewMode = function (entry) {\n            if (this._viewMode == 'decade') {\n                this._viewMode = 'year';\n            }\n            else if (this._viewMode == 'year') {\n                this._viewMode = 'month';\n            }\n            else if (this._viewMode == 'month') {\n                return;\n            }\n            this._viewDate = entry.date;\n            this._buildCalendar();\n        };\n        AjfCalendar.decorators = [\n            { type: i0.Directive }\n        ];\n        /** @nocollapse */\n        AjfCalendar.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: AjfCalendarService }\n        ]; };\n        AjfCalendar.propDecorators = {\n            viewDate: [{ type: i0.Input }],\n            disabled: [{ type: i0.Input }],\n            dateOnlyForDay: [{ type: i0.Input }],\n            viewMode: [{ type: i0.Input }],\n            selectionMode: [{ type: i0.Input }],\n            startOfWeekDay: [{ type: i0.Input }],\n            isoMode: [{ type: i0.Input }],\n            minDate: [{ type: i0.Input }],\n            maxDate: [{ type: i0.Input }],\n            change: [{ type: i0.Output }],\n            selectedPeriod: [{ type: i0.Input }],\n            value: [{ type: i0.Input }]\n        };\n        return AjfCalendar;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfCalendar = AjfCalendar;\n    exports.AjfCalendarChange = AjfCalendarChange;\n    exports.AjfCalendarEntryLabelPipe = AjfCalendarEntryLabelPipe;\n    exports.AjfCalendarModule = AjfCalendarModule;\n    exports.AjfCalendarPeriod = AjfCalendarPeriod;\n    exports.AjfCalendarService = AjfCalendarService;\n    exports.AjfGregorianCalendarModule = AjfGregorianCalendarModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-calendar.umd.js.map\n"]}