{"version":3,"file":"core-checkbox-group.umd.js","sources":["../../../../../../src/core/checkbox-group/checkbox-group.ts","../../../../../../src/core/checkbox-group/checkbox-group-module.ts","../../../../../../src/core/checkbox-group/public-api.ts","../../../../../../src/core/checkbox-group/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {AfterContentInit, Directive, EventEmitter, Input, forwardRef, OnInit,\n  Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {combineLatest, BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\nexport const AJF_CHECKBOX_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AjfCheckboxGroup),\n  multi: true\n};\n\nexport class AjfCheckboxGroupItemChange<T> {\n  source: AjfCheckboxGroupItem<T>;\n  value: any;\n}\n\nexport class AjfCheckboxGroupChange<T> {\n  source: AjfCheckboxGroup<T>;\n  value: any;\n}\n\nlet _uniqueIdCounter = 0;\n\n\n@Directive({\n  selector: 'ajf-checkbox-group,[ajf-checkbox-group]',\n  providers: [AJF_CHECKBOX_GROUP_VALUE_ACCESSOR]\n})\nexport class AjfCheckboxGroup<T> implements AfterContentInit, ControlValueAccessor {\n  checkboxes: AjfCheckboxGroupItem<T>[] = [];\n\n  /** The value for the button toggle group. Should match currently selected button toggle. */\n  private _value: T[] = [];\n  get value(): T[] { return this._value; }\n  @Input() set value(newValue: T[]) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n      this._updateSelectedCheckboxesFromValue();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** The HTML name attribute applied to toggles in this group. */\n  private _name: string;\n  get name(): string { return this._name; }\n  @Input() set name(value: string) {\n    this._name = value;\n    this._updateCheckboxesNames();\n  }\n\n  /** Disables all toggles in the group. */\n  private _disabled:  boolean = false;\n  get disabled(): boolean { return this._disabled; }\n  @Input() set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** The currently selected button toggle, should match the value. */\n  private _selected: AjfCheckboxGroupItem<T>[] = [];\n  get selected() { return this._selected; }\n  set selected(selected: AjfCheckboxGroupItem<T>[]) {\n    this._selected = selected;\n    let values: T[] = [];\n    if (selected) {\n      selected.forEach(c => {\n        values.push(c.value);\n        if (!c.checked) {\n          c.checked = true;\n        }\n      });\n    }\n    this._value = values;\n  }\n\n  /** Event emitted when the group's value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupChange<T>> =\n    new EventEmitter<AjfCheckboxGroupChange<T>>();\n    @Output() readonly change: Observable<AjfCheckboxGroupChange<T>> = this._change.asObservable();\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: T[]) {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: T[]) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  addValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    if (curValue.indexOf(value) === -1) {\n      curValue.push(value);\n      this.value = curValue;\n    }\n  }\n\n  removeValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    let idx = curValue.indexOf(value);\n    if (idx > -1) {\n      curValue.splice(idx, 1);\n      this.value = curValue;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._updateCheckboxesNames();\n    this._updateSelectedCheckboxesFromValue();\n  }\n\n  registerItem(item: AjfCheckboxGroupItem<T>): void {\n    this.checkboxes.push(item);\n  }\n\n  /** The method to be called in order to update ngModel. */\n  private _controlValueAccessorChangeFn: (value: any) => void = (_) => {};\n\n  private _updateCheckboxesNames(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach((checkbox) => {\n      if (checkbox == null) { return; }\n      checkbox.name = this._name;\n    });\n  }\n\n  private _updateSelectedCheckboxesFromValue(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach(checkbox => {\n      if (checkbox == null) { return; }\n      if ((this._value || []).indexOf(checkbox.value) > -1) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    });\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  private _emitChangeEvent(): void {\n    let event = new AjfCheckboxGroupChange<T>();\n    event.source = this;\n    event.value = this._value;\n    this._controlValueAccessorChangeFn(event.value);\n    this._change.emit(event);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n@Directive()\nexport class AjfCheckboxGroupItem<T> implements OnInit {\n  /** The unique ID for this button toggle. */\n  private _checkboxId: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  readonly checkboxId: Observable<string> = this._checkboxId.asObservable();\n\n  @Input() set id(id: string) { this._checkboxId.next(id); }\n\n  @Input() name: string;\n\n  /** The parent button toggle group (exclusive selection). Optional. */\n  readonly checkboxGroup: AjfCheckboxGroup<T>;\n\n  /** Whether or not this button toggle is checked. */\n  private _checkedState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly checkedState: Observable<boolean> = this._checkedState.asObservable();\n  get checked(): boolean { return this._checkedState.getValue(); }\n  @Input() set checked(checked: boolean) { this._checkedState.next(checked); }\n\n  /** Whether or not this button toggle is disabled. */\n  private _disabledState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly disabledState: Observable<boolean> = this._disabledState.asObservable();\n  get disabled(): boolean {\n    const disabled = this._disabledState.getValue();\n    return disabled || (this.checkboxGroup != null && this.checkboxGroup.disabled);\n  }\n  @Input() set disabled(disabled: boolean) {\n    this._disabledState.next(disabled != null && disabled !== false);\n  }\n\n  /** Value assigned to this button toggle. */\n  private _value: T;\n  get value(): T { return this._value; }\n  @Input() set value(value: T) {\n    if (this._value !== value) {\n      this._value = value;\n    }\n  }\n\n  protected _readonly: boolean;\n  get readonly(): boolean { return this._readonly; }\n  @Input() set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n  }\n\n  private _checkedIconVal: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  get checkedIcon(): string { return this._checkedIconVal.getValue(); }\n  @Input() set checkedIcon(icon: string) { this._checkedIconVal.next(icon); }\n\n  private _notCheckedIconVal: BehaviorSubject<string> =\n      new BehaviorSubject<string>('');\n  get notCheckedIcon(): string { return this._notCheckedIconVal.getValue(); }\n  @Input() set notCheckedIcon(icon: string) { this._notCheckedIconVal.next(icon); }\n\n  readonly icon: Observable<string>;\n\n  /** Event emitted when the group value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupItemChange<T>>\n    = new EventEmitter<AjfCheckboxGroupItemChange<T>>();\n  @Output()\n  readonly change: Observable<AjfCheckboxGroupItemChange<T>> = this._change.asObservable();\n\n  constructor(checkboxGroup?: AjfCheckboxGroup<T>) {\n    this.icon = combineLatest(\n      this._checkedState, this._checkedIconVal, this._notCheckedIconVal\n    ).pipe(\n      map(r => r[0] ? r[1] : r[2])\n    );\n\n    if (checkboxGroup) {\n      this.checkboxGroup = checkboxGroup;\n      this.checkboxGroup.registerItem(this);\n    }\n  }\n\n  ngOnInit() {\n    if (this.id == null) {\n      this.id = `ajf-checkbox-group-item-${_uniqueIdCounter++}`;\n    }\n\n    if (\n      this.checkboxGroup && this.checkboxGroup.value &&\n      this.checkboxGroup.value.indexOf(this._value) > -1\n    ) {\n      this.checked = true;\n    }\n  }\n\n  /** Checks the button toggle due to an interaction with the underlying native input. */\n  onInputChange(event: Event) {\n    event.stopPropagation();\n\n    this._toggle();\n  }\n\n  /** Toggle the state of the current button toggle. */\n  private _toggle(): void {\n    this.checked = !this.checked;\n\n    if (this.checkboxGroup != null) {\n      if (this.checked) {\n        this.checkboxGroup.addValue(this._value);\n      } else {\n        this.checkboxGroup.removeValue(this._value);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AjfCheckboxGroup} from './checkbox-group';\n\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  declarations: [\n    AjfCheckboxGroup\n  ],\n  exports: [\n    AjfCheckboxGroup\n  ]\n})\nexport class AjfCheckboxGroupModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './checkbox-group';\nexport * from './checkbox-group-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","coerceBooleanProperty","Directive","Input","Output","BehaviorSubject","combineLatest","map","NgModule","FormsModule"],"mappings":"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"}