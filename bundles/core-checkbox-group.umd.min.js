!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/coercion"),require("@angular/core"),require("@angular/forms"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@ajf/core/checkbox-group",["exports","@angular/cdk/coercion","@angular/core","@angular/forms","rxjs","rxjs/operators"],t):t(((e=e||self).ajf=e.ajf||{},e.ajf.core=e.ajf.core||{},e.ajf.core.checkboxGroup={}),e.ng.cdk.coercion,e.ng.core,e.ng.forms,e.rxjs,e.rxjs.operators)}(this,(function(e,t,o,n,c,r){"use strict";
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */var i={provide:n.NG_VALUE_ACCESSOR,useExisting:o.forwardRef((function(){return h})),multi:!0},u=function u(){},s=function s(){},a=0,h=function(){function e(){this.checkboxes=[],this._value=[],this._disabled=!1,this._selected=[],this._change=new o.EventEmitter,this.change=this._change.asObservable(),this.onTouched=function(){},this._controlValueAccessorChangeFn=function(e){}}return Object.defineProperty(e.prototype,"value",{get:function(){return this._value},set:function(e){this._value!==e&&(this._value=e,this._updateSelectedCheckboxesFromValue(),this._emitChangeEvent())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e,this._updateCheckboxesNames()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=t.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selected",{get:function(){return this._selected},set:function(e){this._selected=e;var t=[];e&&e.forEach((function(e){t.push(e.value),e.checked||(e.checked=!0)})),this._value=t},enumerable:!0,configurable:!0}),e.prototype.writeValue=function(e){this.value=e},e.prototype.registerOnChange=function(e){this._controlValueAccessorChangeFn=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.addValue=function(e){var t=(this._value||[]).slice(0);-1===t.indexOf(e)&&(t.push(e),this.value=t)},e.prototype.removeValue=function(e){var t=(this._value||[]).slice(0),o=t.indexOf(e);o>-1&&(t.splice(o,1),this.value=t)},e.prototype.ngAfterContentInit=function(){this._updateCheckboxesNames(),this._updateSelectedCheckboxesFromValue()},e.prototype.registerItem=function(e){this.checkboxes.push(e)},e.prototype._updateCheckboxesNames=function(){var e=this;null!=this.checkboxes&&this.checkboxes.forEach((function(t){null!=t&&(t.name=e._name)}))},e.prototype._updateSelectedCheckboxesFromValue=function(){var e=this;null!=this.checkboxes&&this.checkboxes.forEach((function(t){null!=t&&(t.checked=(e._value||[]).indexOf(t.value)>-1)}))},e.prototype._emitChangeEvent=function(){var e=new s;e.source=this,e.value=this._value,this._controlValueAccessorChangeFn(e.value),this._change.emit(e)},e.decorators=[{type:o.Directive,args:[{selector:"ajf-checkbox-group,[ajf-checkbox-group]",providers:[i]}]}],e.propDecorators={value:[{type:o.Input}],name:[{type:o.Input}],disabled:[{type:o.Input}],change:[{type:o.Output}]},e}(),p=function(){function e(e){this._checkboxId=new c.BehaviorSubject(""),this.checkboxId=this._checkboxId.asObservable(),this._checkedState=new c.BehaviorSubject(!1),this.checkedState=this._checkedState.asObservable(),this._disabledState=new c.BehaviorSubject(!1),this.disabledState=this._disabledState.asObservable(),this._checkedIconVal=new c.BehaviorSubject(""),this._notCheckedIconVal=new c.BehaviorSubject(""),this._change=new o.EventEmitter,this.change=this._change.asObservable(),this.icon=c.combineLatest(this._checkedState,this._checkedIconVal,this._notCheckedIconVal).pipe(r.map((function(e){return e[0]?e[1]:e[2]}))),e&&(this.checkboxGroup=e,this.checkboxGroup.registerItem(this))}return Object.defineProperty(e.prototype,"id",{set:function(e){this._checkboxId.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"checked",{get:function(){return this._checkedState.getValue()},set:function(e){this._checkedState.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabledState.getValue()||null!=this.checkboxGroup&&this.checkboxGroup.disabled},set:function(e){this._disabledState.next(null!=e&&!1!==e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){return this._value},set:function(e){this._value!==e&&(this._value=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"checkedIcon",{get:function(){return this._checkedIconVal.getValue()},set:function(e){this._checkedIconVal.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"notCheckedIcon",{get:function(){return this._notCheckedIconVal.getValue()},set:function(e){this._notCheckedIconVal.next(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){null==this.id&&(this.id="ajf-checkbox-group-item-"+a++),this.checkboxGroup&&this.checkboxGroup.value&&this.checkboxGroup.value.indexOf(this._value)>-1&&(this.checked=!0)},e.prototype.onInputChange=function(e){e.stopPropagation(),this._toggle()},e.prototype._toggle=function(){this.checked=!this.checked,null!=this.checkboxGroup&&(this.checked?this.checkboxGroup.addValue(this._value):this.checkboxGroup.removeValue(this._value))},e.decorators=[{type:o.Directive}],e.ctorParameters=function(){return[{type:h}]},e.propDecorators={id:[{type:o.Input}],name:[{type:o.Input}],checked:[{type:o.Input}],disabled:[{type:o.Input}],value:[{type:o.Input}],checkedIcon:[{type:o.Input}],notCheckedIcon:[{type:o.Input}],change:[{type:o.Output}]},e}(),l=function(){function e(){}return e.decorators=[{type:o.NgModule,args:[{imports:[n.FormsModule],declarations:[h],exports:[h]}]}],e}();
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
e.AJF_CHECKBOX_GROUP_VALUE_ACCESSOR=i,e.AjfCheckboxGroup=h,e.AjfCheckboxGroupChange=s,e.AjfCheckboxGroupItem=p,e.AjfCheckboxGroupItemChange=u,e.AjfCheckboxGroupModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));