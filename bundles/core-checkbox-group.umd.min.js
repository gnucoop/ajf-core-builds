/**
 * @license
 * Copyright (C) 2018 Gnucoop soc. coop.
 *
 * This file is part of the Advanced JSON forms (ajf).
 *
 * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Advanced JSON forms (ajf).
 * If not, see http://www.gnu.org/licenses/.
 *
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("@ajf/core/utils")):"function"==typeof define&&define.amd?define("@ajf/core/checkbox-group",["exports","@angular/core","@angular/forms","rxjs","rxjs/operators","@ajf/core/utils"],t):t(((e=e||self).ajf=e.ajf||{},e.ajf.core=e.ajf.core||{},e.ajf.core.checkboxGroup={}),e.ng.core,e.ng.forms,e.rxjs,e.rxjs.operators,e.ajf.core.utils)}(this,function(e,t,o,c,n,i){"use strict";function r(){}var s={provide:o.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return h}),multi:!0},u=function(){},a=0,h=(Object.defineProperty(l.prototype,"value",{get:function(){return this._value},set:function(e){this._value!==e&&(this._value=e,this._updateSelectedCheckboxesFromValue(),this._emitChangeEvent())},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e,this._updateCheckboxesNames()},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=i.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"selected",{get:function(){return this._selected},set:function(e){this._selected=e;var t=[];e&&e.forEach(function(e){t.push(e.value),e.checked||(e.checked=!0)}),this._value=t},enumerable:!0,configurable:!0}),l.prototype.writeValue=function(e){this.value=e},l.prototype.registerOnChange=function(e){this._controlValueAccessorChangeFn=e},l.prototype.registerOnTouched=function(e){this.onTouched=e},l.prototype.addValue=function(e){var t=(this._value||[]).slice(0);-1===t.indexOf(e)&&(t.push(e),this.value=t)},l.prototype.removeValue=function(e){var t=(this._value||[]).slice(0),o=t.indexOf(e);-1<o&&(t.splice(o,1),this.value=t)},l.prototype.ngAfterContentInit=function(){this._updateCheckboxesNames(),this._updateSelectedCheckboxesFromValue()},l.prototype.registerItem=function(e){this.checkboxes.push(e)},l.prototype._updateCheckboxesNames=function(){var t=this;null!=this.checkboxes&&this.checkboxes.forEach(function(e){null!=e&&(e.name=t._name)})},l.prototype._updateSelectedCheckboxesFromValue=function(){var t=this;null!=this.checkboxes&&this.checkboxes.forEach(function(e){null!=e&&(-1<(t._value||[]).indexOf(e.value)?e.checked=!0:e.checked=!1)})},l.prototype._emitChangeEvent=function(){var e=new u;e.source=this,e.value=this._value,this._controlValueAccessorChangeFn(e.value),this._change.emit(e)},l.decorators=[{type:t.Directive,args:[{selector:"ajf-checkbox-group,[ajf-checkbox-group]",providers:[s]}]}],l.propDecorators={value:[{type:t.Input}],name:[{type:t.Input}],disabled:[{type:t.Input}],change:[{type:t.Output}]},l);function l(){this.checkboxes=[],this._value=[],this._disabled=!1,this._selected=[],this._change=new t.EventEmitter,this.change=this._change.asObservable(),this.onTouched=function(){},this._controlValueAccessorChangeFn=function(e){}}var p=(Object.defineProperty(d.prototype,"id",{set:function(e){this._checkboxId.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"checked",{get:function(){return this._checkedState.getValue()},set:function(e){this._checkedState.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"disabled",{get:function(){return this._disabledState.getValue()||null!=this.checkboxGroup&&this.checkboxGroup.disabled},set:function(e){this._disabledState.next(null!=e&&!1!==e)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"value",{get:function(){return this._value},set:function(e){this._value!==e&&(this._value=e)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"checkedIcon",{get:function(){return this._checkedIconVal.getValue()},set:function(e){this._checkedIconVal.next(e)},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"notCheckedIcon",{get:function(){return this._notCheckedIconVal.getValue()},set:function(e){this._notCheckedIconVal.next(e)},enumerable:!0,configurable:!0}),d.prototype.ngOnInit=function(){null==this.id&&(this.id="ajf-checkbox-group-item-"+a++),this.checkboxGroup&&this.checkboxGroup.value&&-1<this.checkboxGroup.value.indexOf(this._value)&&(this.checked=!0)},d.prototype.onInputChange=function(e){e.stopPropagation(),this._toggle()},d.prototype._toggle=function(){this.checked=!this.checked,null!=this.checkboxGroup&&(this.checked?this.checkboxGroup.addValue(this._value):this.checkboxGroup.removeValue(this._value))},d);function d(e){this._checkboxId=new c.BehaviorSubject(""),this.checkboxId=this._checkboxId.asObservable(),this._checkedState=new c.BehaviorSubject(!1),this.checkedState=this._checkedState.asObservable(),this._disabledState=new c.BehaviorSubject(!1),this.disabledState=this._disabledState.asObservable(),this._checkedIconVal=new c.BehaviorSubject(""),this._notCheckedIconVal=new c.BehaviorSubject(""),this._change=new t.EventEmitter,this.change=this._change.asObservable(),this.icon=c.combineLatest(this._checkedState,this._checkedIconVal,this._notCheckedIconVal).pipe(n.map(function(e){return e[0]?e[1]:e[2]})),e&&(this.checkboxGroup=e,this.checkboxGroup.registerItem(this))}var f=(b.decorators=[{type:t.NgModule,args:[{imports:[o.FormsModule],declarations:[h],exports:[h]}]}],b);function b(){}e.AJF_CHECKBOX_GROUP_VALUE_ACCESSOR=s,e.AjfCheckboxGroup=h,e.AjfCheckboxGroupChange=u,e.AjfCheckboxGroupItem=p,e.AjfCheckboxGroupItemChange=r,e.AjfCheckboxGroupModule=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=core-checkbox-group.umd.min.js.map
