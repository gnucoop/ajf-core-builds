{"version":3,"file":"core-common.umd.min.js","sources":["../../src/core/common/apply-styles-directive.ts","../../src/core/common/auto-focus.directive.ts","../../src/core/common/common-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Input, Directive, ElementRef, Renderer2} from '@angular/core';\n\n\n@Directive({ selector: '[applyStyles]' })\nexport class ApplyStylesDirective {\n  private _cssStyles: { [style: string]: any; };\n  @Input()\n  set applyStyles(cssStyles: { [style: string]: any; }) {\n    if (this._cssStyles !== cssStyles) {\n      this._cssStyles = cssStyles;\n      this._updateStyles();\n    }\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateStyles(): void {\n    if (this._cssStyles == null) {\n      return;\n    }\n\n    Object.keys(this._cssStyles).forEach((style: string) => {\n      try {\n        this._renderer.setStyle(\n          this._el.nativeElement,\n          style,\n          `${this._cssStyles[style]}`\n        );\n      } catch (e) { }\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\nimport {AfterContentInit, Directive, ElementRef, Input} from '@angular/core';\n\n@Directive({selector: '[autoFocus]' })\nexport class AutofocusDirective implements AfterContentInit {\n\n    @Input()\n    appAutoFocus: boolean;\n\n    constructor(private _el: ElementRef) {\n    }\n\n    ngAfterContentInit() {\n        this._el.nativeElement.focus();\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {ApplyStylesDirective} from './apply-styles-directive';\nimport {AutofocusDirective} from './auto-focus.directive';\n\n@NgModule({\n  declarations: [\n    ApplyStylesDirective,\n    AutofocusDirective\n  ],\n  exports: [\n    ApplyStylesDirective,\n    AutofocusDirective\n  ]\n})\nexport class AjfCommonModule { }\n"],"names":["ApplyStylesDirective","_el","_renderer","this","Object","defineProperty","prototype","cssStyles","_cssStyles","_updateStyles","_this","keys","forEach","style","setStyle","nativeElement","e","type","Directive","args","selector","ElementRef","Renderer2","applyStyles","Input","AutofocusDirective","ngAfterContentInit","focus","appAutoFocus","AjfCommonModule","NgModule","declarations","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;gUAyBA,IAAAA,EAAA,WAWE,SAAFA,EAAsBC,EAAyBC,GAAzBC,KAAtBF,IAAsBA,EAAyBE,KAA/CD,UAA+CA,EAiB/C,OAzBEE,OAAFC,eACML,EADNM,UAAA,cAAA,KAAE,SACgBC,GACVJ,KAAKK,aAAeD,IACtBJ,KAAKK,WAAaD,EAClBJ,KAAKM,kDAMDT,EAAVM,UAAAG,cAAE,WAAA,IAAFC,EAAAP,KAC2B,MAAnBA,KAAKK,YAITJ,OAAOO,KAAKR,KAAKK,YAAYI,QAAjC,SAA0CC,GACpC,IACEH,EAAKR,UAAUY,SACbJ,EAAKT,IAAIc,cACTF,EACA,GAAGH,EAAKF,WAAWK,IAErB,MAAOG,sBAzBf,CAAAC,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAEC,SAAU,uDAHvB,CAAAH,KAA0BI,EAA1BA,YAAA,CAAAJ,KAAsCK,EAAtCA,+BAMAC,YAAA,CAAA,CAAAN,KAAGO,EAAHA,SAyBAxB,EA5BA,GCFAyB,EAAA,WAMI,SAAJA,EAAwBxB,GAAAE,KAAxBF,IAAwBA,EAMxB,OAHIwB,EAAJnB,UAAAoB,mBAAI,WACIvB,KAAKF,IAAIc,cAAcY,uBAV/B,CAAAV,KAACC,EAADA,UAAAC,KAAA,CAAW,CAACC,SAAU,qDAFtB,CAAAH,KAAqCI,EAArCA,gCAKAO,aAAA,CAAA,CAAAX,KAAKO,EAALA,SASAC,EAZA,GCIAI,EAAA,WAAA,SAAAA,KAU+B,qBAV/B,CAAAZ,KAACa,EAADA,SAAAX,KAAA,CAAU,CACRY,aAAc,CACZ/B,EACAyB,GAEFO,QAAS,CACPhC,EACAyB,OAGJI,EAVA"}