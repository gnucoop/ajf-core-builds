{"version":3,"sources":["src/core/core-common.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","common","ng","tslib","ngxTranslate","this","core$1","ApplyStylesDirective","_el","_renderer","Object","defineProperty","prototype","set","cssStyles","_cssStyles","_updateStyles","enumerable","configurable","_this","keys","forEach","style","setStyle","nativeElement","e","decorators","type","Directive","args","selector","ctorParameters","ElementRef","Renderer2","propDecorators","applyStyles","Input","AutofocusDirective","ngAfterContentInit","focus","appAutoFocus","AjfDndDirective","file","EventEmitter","background","onDragOver","evt","preventDefault","stopPropagation","onDragLeave","onDrop","files","dataTransfer","length","emit","host","[style.background]","(dragover)","(dragleave)","(drop)","Output","FormatIfNumber","_super","apply","arguments","__extends","transform","value","digitsInfo","locale","call","Pipe","name","DecimalPipe","TranslateIfString","query","_i","__spread","TranslatePipe","AjfVideoDirective","isInit","get","_source","source","_initCam","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","play","catch","err","console","log","ngAfterViewInit","appendChild","AjfCommonModule","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('tslib'), require('@angular/common'), require('@ngx-translate/core')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/common', ['exports', '@angular/core', 'tslib', '@angular/common', '@ngx-translate/core'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.common = {}), global.ng.core, global.tslib, global.ng.common, global.ngxTranslate.core));\n}(this, (function (exports, core, tslib, common, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var ApplyStylesDirective = /** @class */ (function () {\n        function ApplyStylesDirective(_el, _renderer) {\n            this._el = _el;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(ApplyStylesDirective.prototype, \"applyStyles\", {\n            set: function (cssStyles) {\n                if (cssStyles != null && this._cssStyles !== cssStyles) {\n                    this._cssStyles = cssStyles;\n                    this._updateStyles();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ApplyStylesDirective.prototype._updateStyles = function () {\n            var _this = this;\n            if (this._cssStyles == null) {\n                return;\n            }\n            Object.keys(this._cssStyles).forEach(function (style) {\n                try {\n                    _this._renderer.setStyle(_this._el.nativeElement, style, \"\" + _this._cssStyles[style]);\n                }\n                catch (e) { }\n            });\n        };\n        ApplyStylesDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[applyStyles]' },] }\n        ];\n        /** @nocollapse */\n        ApplyStylesDirective.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer2 }\n        ]; };\n        ApplyStylesDirective.propDecorators = {\n            applyStyles: [{ type: core.Input }]\n        };\n        return ApplyStylesDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AutofocusDirective = /** @class */ (function () {\n        function AutofocusDirective(_el) {\n            this._el = _el;\n        }\n        AutofocusDirective.prototype.ngAfterContentInit = function () {\n            this._el.nativeElement.focus();\n        };\n        AutofocusDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[autoFocus]' },] }\n        ];\n        /** @nocollapse */\n        AutofocusDirective.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        AutofocusDirective.propDecorators = {\n            appAutoFocus: [{ type: core.Input }]\n        };\n        return AutofocusDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDndDirective = /** @class */ (function () {\n        function AjfDndDirective() {\n            this.file = new core.EventEmitter();\n            this.background = '#eee';\n        }\n        AjfDndDirective.prototype.onDragOver = function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            this.background = '#999';\n        };\n        AjfDndDirective.prototype.onDragLeave = function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            this.background = '#eee';\n        };\n        AjfDndDirective.prototype.onDrop = function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            var files = evt.dataTransfer.files;\n            if (files.length > 0) {\n                this.background = '#eee';\n                this.file.emit(files);\n            }\n        };\n        AjfDndDirective.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[ajfDnd]',\n                        host: {\n                            '[style.background]': 'background',\n                            '(dragover)': 'onDragOver($event)',\n                            '(dragleave)': 'onDragLeave($event)',\n                            '(drop)': 'onDrop($event)',\n                        }\n                    },] }\n        ];\n        AjfDndDirective.propDecorators = {\n            file: [{ type: core.Output }]\n        };\n        return AjfDndDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var FormatIfNumber = /** @class */ (function (_super) {\n        tslib.__extends(FormatIfNumber, _super);\n        function FormatIfNumber() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        FormatIfNumber.prototype.transform = function (value, digitsInfo, locale) {\n            if (typeof value === 'number') {\n                return _super.prototype.transform.call(this, value, digitsInfo, locale);\n            }\n            else {\n                return value;\n            }\n        };\n        FormatIfNumber.decorators = [\n            { type: core.Pipe, args: [{ name: 'ajfFormatIfNumber' },] }\n        ];\n        return FormatIfNumber;\n    }(common.DecimalPipe));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var TranslateIfString = /** @class */ (function (_super) {\n        tslib.__extends(TranslateIfString, _super);\n        function TranslateIfString() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TranslateIfString.prototype.transform = function (query) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            if (typeof query === 'string') {\n                return _super.prototype.transform.apply(this, tslib.__spread([query], args));\n            }\n            else {\n                return query;\n            }\n        };\n        TranslateIfString.decorators = [\n            { type: core.Pipe, args: [{ name: 'ajfTranslateIfString' },] }\n        ];\n        return TranslateIfString;\n    }(core$1.TranslatePipe));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfVideoDirective = /** @class */ (function () {\n        function AjfVideoDirective(_el, _renderer) {\n            this._el = _el;\n            this._renderer = _renderer;\n            this.isInit = new core.EventEmitter();\n        }\n        Object.defineProperty(AjfVideoDirective.prototype, \"source\", {\n            get: function () { return this._source; },\n            set: function (source) {\n                this._source = source;\n                this._initCam();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfVideoDirective.prototype._initCam = function () {\n            var _this = this;\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                navigator.mediaDevices.getUserMedia({ video: true })\n                    .then(function (stream) {\n                    _this._source.srcObject = stream;\n                    _this._source.play();\n                })\n                    .catch(function (err) {\n                    console.log(err);\n                });\n            }\n        };\n        AjfVideoDirective.prototype.ngAfterViewInit = function () {\n            this._renderer.appendChild(this._el.nativeElement, this._source);\n            this.isInit.emit();\n        };\n        AjfVideoDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ajfVideoDirective]' },] }\n        ];\n        /** @nocollapse */\n        AjfVideoDirective.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer2 }\n        ]; };\n        AjfVideoDirective.propDecorators = {\n            source: [{ type: core.Input }],\n            isInit: [{ type: core.Output }]\n        };\n        return AjfVideoDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfCommonModule = /** @class */ (function () {\n        function AjfCommonModule() {\n        }\n        AjfCommonModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [\n                            AjfDndDirective,\n                            AjfVideoDirective,\n                            ApplyStylesDirective,\n                            AutofocusDirective,\n                            FormatIfNumber,\n                            TranslateIfString,\n                        ],\n                        exports: [\n                            AjfDndDirective,\n                            AjfVideoDirective,\n                            ApplyStylesDirective,\n                            AutofocusDirective,\n                            FormatIfNumber,\n                            TranslateIfString,\n                        ],\n                    },] }\n        ];\n        return AjfCommonModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfCommonModule = AjfCommonModule;\n    exports.AjfDndDirective = AjfDndDirective;\n    exports.AjfVideoDirective = AjfVideoDirective;\n    exports.ApplyStylesDirective = ApplyStylesDirective;\n    exports.AutofocusDirective = AutofocusDirective;\n    exports.FormatIfNumber = FormatIfNumber;\n    exports.TranslateIfString = TranslateIfString;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-common.umd.js.map\n"]}