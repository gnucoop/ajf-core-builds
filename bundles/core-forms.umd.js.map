{"version":3,"file":"core-forms.umd.js","sources":["../../src/core/forms/forms.ts","../../src/core/forms/forms-module.ts","../../src/core/forms/table-row-class.ts","../../src/core/forms/field-is-valid.ts","../../src/core/forms/bool-to-int.ts","../../src/core/forms/form.ts","../../src/core/forms/form-renderer.ts","../../src/core/forms/validation-service.ts","../../src/core/forms/form-renderer-utils.ts","../../src/core/forms/field.ts","../../src/core/forms/nodes-instances.ts","../../src/core/forms/field-icon.ts","../../src/core/forms/field-utils.ts","../../src/core/forms/nodes.ts","../../src/core/forms/warning.ts","../../src/core/forms/validation.ts","../../src/core/forms/math.ts","../../src/core/forms/errors.ts","../../src/core/forms/choices.ts","../../src/core/forms/get-type-name.ts","../../src/core/forms/attachments.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfAttachmentsOrigin} from './attachments';\nimport {AjfChoicesOrigin, IAjfChoicesOrigin} from './choices';\nimport {AjfNode} from './nodes';\n\n\nexport class AjfForm extends AjfJsonSerializable {\n  nodes: AjfNode[];\n  choicesOrigins: IAjfChoicesOrigin[];\n  attachmentsOrigins: AjfAttachmentsOrigin[];\n  initContext: any;\n  topBar: boolean;\n  valid = true;\n  stringIdentifier: {label: string, value: string[]}[];\n  lastSelectedLocation: boolean = true;\n  supplementaryInformations: any;\n  /**\n   * this method will load an AjfForm from json\n   * @param obj : any - object form\n   * @return AjfForm\n   */\n  static fromJson(obj: any, context?: any): AjfForm {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n      obj.initContext = context;\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('choicesOrigins') > -1 &&\n        obj.choicesOrigins instanceof Array) {\n      let cos: IAjfChoicesOrigin[] = [];\n      for (let i = 0; i < obj.choicesOrigins.length; i++) {\n        cos.push(AjfChoicesOrigin.fromJson(obj.choicesOrigins[i]));\n      }\n      obj.choicesOrigins = cos;\n    }\n\n    if (keys.indexOf('attachmentsOrigins') > -1 &&\n        obj.attachmentsOrigins instanceof Array) {\n      let cos: AjfAttachmentsOrigin[] = [];\n      for (let i = 0; i < obj.attachmentsOrigins.length; i++) {\n        cos.push(AjfAttachmentsOrigin.fromJson(obj.attachmentsOrigins[i]));\n      }\n      obj.attachmentsOrigins = cos;\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let fs: AjfNode[] = [];\n      for (let i = 0; i < obj.nodes.length; i++) {\n        let nodeObj: any = obj.nodes[i];\n        let node: AjfNode;\n        node = AjfNode.fromJson(nodeObj, obj.choicesOrigins,\n                                obj.attachmentsOrigins, context);\n        fs.push(node);\n      }\n      obj.nodes = fs;\n    }\n\n    return new AjfForm(obj);\n  }\n\n  static toString(schema: any, json: any, emptyString = ''): string | null {\n    if (schema.stringIdentifier != null && schema.stringIdentifier.length > 0) {\n      let str: string[] = schema.stringIdentifier.map((s: any) => {\n        let values: string[] = [];\n        if (s.value != null && s.value.length > 0) {\n          s.value.forEach((curValue: any) => {\n            let val: any;\n            let vp: string[] = curValue.split('.');\n            let cp: any = json;\n            vp.forEach(k => {\n              if (Object.keys(cp).indexOf(k) > -1) {\n                val = cp[k];\n                cp = cp[k];\n              }\n            });\n            if (val instanceof Array && val.length > 0) {\n              val = val.join(', ');\n            }\n            if (val != null) {\n              values.push(`${val}`);\n            }\n          });\n        }\n        return `${s.label}: ${values.length > 0 ? values.join(', ')\n                                                : emptyString}`;\n      });\n      return str.join(' - ');\n    }\n    return null;\n  }\n\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n        [ 'nodes', 'choicesOrigins', 'stringIdentifier', 'topBar' ]);\n\n    this.nodes = obj && obj.nodes || [];\n    this.choicesOrigins = obj && obj.choicesOrigins || [];\n    this.attachmentsOrigins = obj && obj.attachmentsOrigins || [];\n    this.initContext = obj && obj.initContext || {};\n    this.stringIdentifier = obj && obj.stringIdentifier || [];\n    this.lastSelectedLocation = obj && obj.lastSelectedLocation == false ? false : true;\n    this.supplementaryInformations = obj && obj.supplementaryInformations || null;\n  }\n  /**\n   * this method will get child nodes from ajfNode\n   * @param   node : AjfNode\n   * @return ajfNode[] - the child og AjfNode\n   */\n  getChildNodes(node: AjfNode): AjfNode[] {\n    return this.nodes.filter(n => n.parent === node.id).sort(n => n.parentNode);\n  }\n  /**\n   * this method will get root node\n   * @return ajfNode - the root node\n   */\n  getRootNode(): AjfNode | null {\n    if (this.nodes == null || this.nodes.length === 0) {\n      return null;\n    }\n    let ns: AjfNode[] = this.nodes.filter(n => n.parent == null);\n    return ns.length === 1 ? ns[0] : null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {BoolToIntPipe} from './bool-to-int';\nimport {FieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFormRendererService} from './form-renderer';\nimport {TableRowClass} from './table-row-class';\nimport {AjfValidationService} from './validation-service';\n\n\n@NgModule({\n  declarations: [\n    AjfFieldIsValidPipe,\n    BoolToIntPipe,\n    FieldIconPipe,\n    TableRowClass,\n  ],\n  exports: [\n    AjfFieldIsValidPipe,\n    BoolToIntPipe,\n    FieldIconPipe,\n    TableRowClass,\n  ],\n  providers: [\n    AjfFormRendererService,\n    AjfValidationService\n  ]\n})\nexport class AjfFormsModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'tableRowClass'})\nexport class TableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfFieldInstance} from './nodes-instances';\n\n@Pipe({ name: 'ajfFieldIsValid' })\nexport class AjfFieldIsValidPipe {\n    transform(fieldInstance: AjfFieldInstance): boolean {\n        if (\n            fieldInstance &&\n            fieldInstance.validationResults &&\n            fieldInstance.validationResults.length === 0\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'boolToInt'})\nexport class BoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, AfterViewChecked, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@ajf/core/utils';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\nimport {AjfForm} from './forms';\nimport {AjfFieldType} from './nodes';\nimport {\n  AjfNodeGroupInstance, AjfNodeInstance, AjfRepeatingSlideInstance, IAjfSlideInstance\n} from './nodes-instances';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<IAjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation>\n    = new EventEmitter<AjfPageSliderOrientation>();\n  readonly orientationChange: Observable<AjfPageSliderOrientation> =\n    this._orientationChange.asObservable();\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean { return this._saveDisabled; }\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean { return this._hasStartMessage; }\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean { return this._hasEndMessage; }\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean { return this._hideTopToolbar; }\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean { return this._hideBottomToolbar; }\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean { return this._hideNavigationButtons; }\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean { return this._fixedOrientation; }\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation { return this._orientation; }\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') { return; }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  formSlider: AjfPageSlider;\n  fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  readonly formAction: Observable<AjfFormActionEvent> = this._formAction.asObservable();\n\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete)\n    );\n  }\n\n  isRepeatingSlide(slide: IAjfSlideInstance): boolean {\n    return slide instanceof AjfRepeatingSlideInstance;\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void { this._errorMoveEvent.emit(true); }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void { this._errorMoveEvent.emit(false); }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.addGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'down'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.removeGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'up'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue()\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent).pipe(\n        withLatestFrom(this._errorPositions)\n      ).subscribe((v: [boolean, number[]]) => {\n          const move = v[0];\n          const currentPosition = this.formSlider.currentPage - (+this.hasStartMessage) + 1;\n          const errors = v[1];\n          if (errors == null) { return; }\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return node.completeName;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\n\nimport {BehaviorSubject, Observable, Subject, Subscriber, Subscription, timer} from 'rxjs';\nimport {\n  debounceTime, filter, map, pairwise, publishReplay, refCount,\n  scan, share, startWith, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from './forms';\nimport {AjfEmptyField, AjfNode, AjfNodeGroup, AjfTableField} from './nodes';\nimport {\n  AjfFieldInstance, AjfFieldWithChoicesInstance, AjfNodeGroupInstance, AjfNodeInstance,\n  AjfRepeatingSlideInstance, AjfSlideInstance, AjfTableFieldInstance, IAjfNodeInstance,\n  IAjfSlideInstance\n} from './nodes-instances';\nimport {\n  IAjfNodesInstancesOperation, IAjfRendererUpdateMap, IAjfRendererUpdateMapOperation,\n  IAjfRendererUpdateTableMapOperation\n} from './form-renderer-operations';\nimport {\n  flattenNodes, flattenNodesTree, flattenNodesInstances, isContainerNode,\n  isRepeatingNode, nodeToNodeInstance, orderedNodes\n} from './form-renderer-utils';\nimport {AjfValidationService} from './validation-service';\n\nimport * as esprima from 'esprima';\nconst esprimaMod: any = (esprima as any).default || esprima;\nconst {tokenize} = esprimaMod;\n\n\nexport enum AjfFormInitStatus {\n  Initializing,\n  Complete\n}\n\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _visibilityNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this._formInitEvent.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup | null> =\n    new BehaviorSubject<FormGroup | null>(null);\n  readonly formGroup: Observable<FormGroup | null> = this._formGroup.asObservable();\n\n  private _form: BehaviorSubject<{form: AjfForm | null, context?: any} | null> =\n    new BehaviorSubject<{form: AjfForm | null, context?: any} | null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<IAjfNodeInstance[]>;\n  private _flatNodesTree: Observable<IAjfSlideInstance[]>;\n  private _nodesUpdates: Subject<IAjfNodesInstancesOperation>\n    = new Subject<IAjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<IAjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this._nextSlideTrigger.asObservable();\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum.asObservable();\n\n  get nodesTree(): Observable<IAjfSlideInstance[]> { return this._flatNodesTree; }\n  get errorPositions(): Observable<number[]> { return this._errorPositions; }\n  get errors(): Observable<number> { return this._errors; }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm | null, context: any = {}) {\n    this._initUpdateMapStreams();\n    if (\n      form != null && Object.keys(context).length === 0 &&\n      Object.keys(form.initContext).length > 0\n    ) {\n      context = form.initContext;\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) { return {}; }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group instanceof AjfNodeGroupInstance ?\n        group.nodeGroup.maxReps : group.slide.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group instanceof AjfNodeGroupInstance ?\n        group.nodeGroup.minReps : group.slide.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(\n      map((f) => {\n        const fieldName = field.completeName;\n        return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n      })\n    );\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n      withLatestFrom(this._nodes, this._form),\n      filter(v => v[2] != null && v[2].form != null),\n      map((v: [void, AjfNodeInstance[], {form: AjfForm | null, context?: any} | null]) => {\n        const nodes = v[1];\n        const form = v[2]!.form!;\n        let currentPosition = 0;\n        const errors: number[] = [];\n        nodes.forEach((node) => {\n          if (node instanceof AjfRepeatingSlideInstance) {\n            for (let i = 0 ; i < node.reps ; i ++) {\n              if (node.visible) {\n                currentPosition++;\n                if (i == 0) {\n                  node.position = currentPosition;\n                }\n                if (!node.validSlide(i)) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          } else if (node instanceof AjfSlideInstance) {\n            if (node.visible) {\n              currentPosition++;\n              node.position = currentPosition;\n              if (!node.valid) {\n                errors.push(currentPosition);\n              }\n            }\n          }\n        });\n        form.valid = errors.length == 0;\n        this._slidesNum.next(currentPosition);\n        return errors;\n      }),\n      publishReplay(),\n      refCount()\n    );\n    this._errors = this._errorPositions.pipe(\n      map(e => e != null ? e.length : 0),\n      startWith(0),\n      publishReplay(),\n      refCount()\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._visibilityNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._visibilityNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._repetitionNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._repetitionNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._conditionalBranchNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._conditionalBranchNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._formulaNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._formulaNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._validationNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._validationNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._warningNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._warningNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._filteredChoicesNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._filteredChoicesNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._triggerConditionsNodesMap =\n      (<Observable<IAjfRendererUpdateTableMapOperation>>this._triggerConditionsNodesMapUpdates)\n        .pipe(\n          scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateTableMapOperation) => {\n            return op(rmap);\n          }, {}),\n          startWith<IAjfRendererUpdateMap>({}),\n          share()\n        );\n    this._nextSlideConditionsNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._nextSlideConditionsNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n\n    this._nodesMaps = [\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = <Observable<{form: AjfForm | null, context?: any}>>this._form;\n    formObs\n      .pipe(map((_form) => {\n        return this._initFormGroupStreams(new FormGroup({}));\n      }))\n      .subscribe(this._formGroup);\n    formObs\n      .pipe(map((form) => {\n        return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n          const nodes = form != null && form.form != null ?\n            this._orderedNodesInstancesTree(\n              flattenNodes(form.form.nodes), form.form.nodes, undefined, [], form.context\n            ) : [];\n          let currentPosition = 0;\n          nodes.forEach((node) => {\n            if (node instanceof AjfRepeatingSlideInstance) {\n              for (let i = 0 ; i < node.reps ; i ++) {\n                if (node.visible) {\n                  currentPosition++;\n                  if (i == 0) {\n                    node.position = currentPosition;\n                  }\n                }\n              }\n            } else if (node instanceof AjfSlideInstance) {\n              if (node.visible) {\n                currentPosition++;\n                node.position = currentPosition;\n              }\n            }\n          });\n          return nodes;\n        };\n      }))\n      .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n    allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode,\n    prefix: number[], context: any, branchVisibility = true\n  ): AjfNodeInstance | null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      if (\n        instance instanceof AjfNodeGroupInstance ||\n        instance instanceof AjfRepeatingSlideInstance\n      ) {\n        this._explodeRepeatingNode(allNodes, instance, context);\n      } else if ( instance instanceof AjfSlideInstance ) {\n        instance.nodes = this._orderedNodesInstancesTree(\n          allNodes, instance.slide.nodes, instance.slide.id, prefix, context\n        );\n      }\n      instance.updateVisibility(context, branchVisibility);\n      instance.updateConditionalBranches(context);\n      if (instance instanceof AjfFieldWithChoicesInstance) {\n        instance.updateFilteredChoices(context);\n      } else if (instance instanceof AjfFieldInstance) {\n        instance.value = context[instance.completeName];\n        instance.updateFieldState(context);\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    oldReps: number, context: any\n  ): { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } {\n    const newReps = instance.reps;\n    const result: { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } = {\n      added: null,\n      removed: null\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance instanceof AjfNodeGroupInstance) {\n        const node = new AjfEmptyField({\n          'label': instance.node.label\n        });\n        const newInstance = this._initNodeInstance(\n          allNodes, node, instance.prefix.slice(0), context);\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps ; i < newReps ; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup : instance.slide;\n        prefix.push(i);\n        orderedNodes(group.nodes, instance.node.id)\n          .forEach((n) => {\n            const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n            if (newInstance != null) {\n              newNodes.push(newInstance);\n              instance.nodes.push(newInstance);\n            }\n          });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance instanceof AjfNodeGroupInstance) {\n        nodesNum ++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach((n => {\n        this._removeNodeInstance(n);\n      }));\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      if (fg != null && fg.contains(instance.completeName)) {\n        fg.controls[instance.completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance instanceof AjfRepeatingSlideInstance) {\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide = instance.nodesPerSlide;\n      for (let i = 0 ; i < instance.reps ; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      instance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates.asObservable()\n    .pipe(\n      withLatestFrom(this._formGroup),\n      filter(( values: [IAjfNodesInstancesOperation, FormGroup | null ]) => values[1] !== null)\n    )\n    .subscribe(( values: [IAjfNodesInstancesOperation, FormGroup | null ]) => {\n      const form: FormGroup = <FormGroup>values[1];\n      form.updateValueAndValidity();\n    });\n  }\n\n  private _explodeRepeatingNode(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    context: any\n  ) {\n    const oldReps = instance.updateRepsNum(context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    nodes: AjfNode[], parent: number | null = null,\n    prefix: number[] = [], context: any\n  ): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent)\n      .forEach((node: AjfNode) => {\n        const parentNodeInstance = nodesInstances.find(\n          ni => ni.node.id == node.parent && ni.suffix == curSuffix);\n        const branchVisibility = parentNodeInstance != null ?\n          parentNodeInstance.verifiedBranch != null &&\n          parentNodeInstance.verifiedBranch == node.parentNode : true;\n        const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n        if (nni != null) {\n          nodesInstances.push(nni);\n        }\n      });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue)\n      .filter((k) => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription = formGroup.valueChanges.pipe(\n      startWith<any>({}),\n      pairwise(),\n      debounceTime(200),\n      withLatestFrom<\n        [any, any], [[any, any], IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, AjfNodeInstance[]]\n      >(...(this._nodesMaps), this._flatNodes)\n    ).subscribe((\n        v: [[any, any], IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, AjfNodeInstance[]]\n      ) => {\n        const oldFormValue = init && {} || v[0][0];\n        init = false;\n        const newFormValue = v[0][1];\n        const visibilityMap = v[1];\n        const repetitionMap = v[2];\n        const conditionalBranchesMap = v[3];\n        const formulaMap = v[4];\n        const validationMap = v[5];\n        const warningMap = v[6];\n        const nextSlideConditionsMap = v[7];\n        const filteredChoicesMap = v[8];\n        const triggerConditionsMap = v[9];\n        const nodes = v[10];\n\n        const delta = this._formValueDelta(oldFormValue, newFormValue);\n        const deltaLen = delta.length;\n        let updatedNodes: AjfNodeInstance[] = [];\n\n        delta.forEach((fieldName) => {\n          updatedNodes = updatedNodes.concat(nodes.filter(n => n.completeName === fieldName));\n          if (visibilityMap[fieldName] != null) {\n            visibilityMap[fieldName].forEach(nodeInstance => {\n              const visibilityChanged = nodeInstance.updateVisibility(newFormValue);\n              if (visibilityChanged && !nodeInstance.visible) {\n                const fg = this._formGroup.getValue();\n                if (fg != null) {\n                  const s = timer(200).subscribe(() => {\n                    if (s && !s.closed) { s.unsubscribe(); }\n                    fg.controls[nodeInstance.completeName].setValue(null);\n                  });\n                }\n                if (nodeInstance instanceof AjfFieldInstance) {\n                  (<AjfFieldInstance>nodeInstance).value = null;\n                }\n              } else if (\n                visibilityChanged && nodeInstance.visible &&\n                nodeInstance instanceof AjfFieldInstance\n              ) {\n                const fg = this._formGroup.getValue();\n                const res = (<AjfFieldInstance>nodeInstance).updateFormula(newFormValue);\n                if (fg != null && res.changed) {\n                  fg.controls[nodeInstance.completeName].setValue(res.value);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (repetitionMap[fieldName] != null) {\n            repetitionMap[fieldName].forEach(nodeInstance => {\n              if (\n                nodeInstance instanceof AjfNodeGroupInstance ||\n                nodeInstance instanceof AjfRepeatingSlideInstance\n              ) {\n                const oldReps = nodeInstance.updateRepsNum(newFormValue);\n                if (oldReps !== nodeInstance.reps) {\n                  this._adjustReps(nodes, nodeInstance, oldReps, newFormValue);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (conditionalBranchesMap[fieldName] != null) {\n            conditionalBranchesMap[fieldName].forEach((nodeInstance) => {\n              // const branchChanged = nodeInstance.updateConditionalBranches(newFormValue);\n              nodeInstance.updateConditionalBranches(newFormValue);\n              // if (branchChanged) {\n                const verifiedBranch = nodeInstance.verifiedBranch;\n                nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                  if (idx == verifiedBranch) {\n                    this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                  } else {\n                    this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                  }\n                });\n              // }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (formulaMap[fieldName] != null) {\n            formulaMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                const res = nodeInstance.updateFormula(newFormValue);\n                const fg = this._formGroup.getValue();\n                if (fg != null && res.changed) {\n                  nodeInstance.updateValidation(newFormValue);\n                  fg.controls[nodeInstance.completeName].setValue(res.value);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (validationMap[fieldName] != null) {\n            validationMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                newFormValue.$value = newFormValue[nodeInstance.completeName];\n                nodeInstance.updateValidation(\n                  newFormValue,\n                  this.currentSupplementaryInformations\n                );\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (warningMap[fieldName] != null) {\n            warningMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                nodeInstance.updateWarning(newFormValue);\n                if (nodeInstance.warningResults.filter(warning => warning.result).length > 0) {\n                  nodeInstance.emitTriggerWarning();\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n            if (\n              nextSlideConditionsMap[fieldName].filter((nodeInstance) => {\n                if (nodeInstance instanceof AjfFieldInstance) {\n                  return nodeInstance.updateNextSlideCondition(newFormValue);\n                }\n                return false;\n              }).length == 1\n            ) {\n              this._nextSlideTrigger.emit();\n            }\n          }\n\n          if (filteredChoicesMap[fieldName] != null) {\n            filteredChoicesMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldWithChoicesInstance) {\n                nodeInstance.updateFilteredChoices(newFormValue);\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n            const res = triggerConditionsMap[fieldName]\n              .filter((nodeInstance) => {\n                return nodeInstance instanceof AjfFieldWithChoicesInstance &&\n                  nodeInstance.updateTriggerConditions(newFormValue);\n              });\n            if (res.length == 1) {\n              (<AjfFieldWithChoicesInstance>res[0]).emitTriggerSelection();\n            }\n          }\n        });\n        updatedNodes.forEach(n => n.triggerUpdate());\n        if (initForm) {\n          initForm = false;\n          this._formInitEvent.emit(AjfFormInitStatus.Complete);\n        }\n        this._valueChanged.next();\n      });\n    return formGroup;\n  }\n\n  private _showSubtree(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance,\n    visible: boolean, branch?: number\n  ) {\n    let subNodes: AjfNodeInstance[];\n    if (branch != null) {\n      subNodes = nodes.filter(\n        n => {\n          return n.suffix == node.suffix && n.node.parent == node.node.id &&\n            n.node.parentNode == branch;\n        }\n      );\n    } else {\n      subNodes = nodes.filter(n => n.suffix == node.suffix && n.node.parent == node.node.id);\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach((n) => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        n.updateVisibility(context, visible);\n        if (n instanceof AjfFieldInstance) {\n          (<AjfFieldInstance>n).updateFormula(context);\n        }\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = this._nodesUpdates.pipe(\n      scan((nodes: AjfNodeInstance[], op: IAjfNodesInstancesOperation) => {\n        return op(nodes);\n      }, []),\n      share()\n    );\n    this._flatNodesTree = this._nodes.pipe(\n      map(nodes => flattenNodesTree(nodes)),\n      share()\n    );\n    this._flatNodes = this._flatNodesTree.pipe(\n      map(slides => {\n        let nodes: IAjfNodeInstance[] = [];\n        slides.forEach(s => {\n          nodes.push(s);\n          nodes = nodes.concat(s.flatNodes);\n        });\n        return nodes;\n      }),\n      share()\n    );\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstance.completeName;\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (nodeInstance instanceof AjfSlideInstance) {\n      return this._removeSlideInstance(nodeInstance);\n    } else if (isRepeatingNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(<AjfNodeGroupInstance | AjfRepeatingSlideInstance>nodeInstance);\n    } else if (nodeInstance instanceof AjfFieldInstance) {\n      this._removeFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.slide;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(\n    nodeGroupInstance: AjfNodeGroupInstance | AjfRepeatingSlideInstance\n  ): AjfNodeGroupInstance | AjfRepeatingSlideInstance {\n    const nodeGroup = nodeGroupInstance instanceof AjfNodeGroupInstance ?\n      nodeGroupInstance.nodeGroup : nodeGroupInstance.slide;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = fieldInstance.completeName;\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n          if (vmap[fieldInstanceName] == null) {\n            delete vmap[fieldInstanceName];\n          }\n          return vmap;\n        });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula != null) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (fieldInstance instanceof AjfNodeGroupInstance) {\n      if (fieldInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (\n      fieldInstance instanceof AjfFieldWithChoicesInstance && fieldInstance.choicesFilter != null\n    ) {\n      this._removeFromNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n      if (fieldInstance.triggerConditions != null) {\n        fieldInstance.triggerConditions.forEach((condition) => {\n          this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (\n      nodeInstance instanceof AjfRepeatingSlideInstance ||\n      nodeInstance instanceof AjfNodeGroupInstance\n    ) {\n      return this._addNodeGroupInstance(nodeInstance);\n    } else if (nodeInstance instanceof AjfSlideInstance) {\n      return this._addSlideInstance(nodeInstance);\n    } else if (nodeInstance instanceof AjfFieldInstance) {\n      return this._addFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = fieldInstance.completeName;\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (\n      formGroup != null && fieldInstance instanceof AjfTableFieldInstance\n      && (<AjfTableField>fieldInstance.node).editable\n    ) {\n      let node = <AjfTableField>fieldInstance.node;\n      let value: FormControl[][] = [];\n      node.rows.forEach((row) => {\n        let r: FormControl[] = [];\n        row.forEach((k) => {\n          const control = new FormControl();\n          control.setValue(fieldInstance.context[k]);\n          formGroup!.registerControl(k, control);\n          r.push(control);\n        });\n        value.push(r);\n      });\n      fieldInstance.controls = value;\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n          if (vmap[fieldInstanceName] == null) {\n            vmap[fieldInstanceName] = [];\n          }\n          if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n            vmap[fieldInstanceName].push(fieldInstance);\n          }\n          return vmap;\n        });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula != null) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (fieldInstance instanceof AjfNodeGroupInstance) {\n      if (fieldInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (fieldInstance instanceof AjfFieldWithChoicesInstance) {\n      if (fieldInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n      }\n      if (fieldInstance.triggerConditions != null) {\n        fieldInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.slide;\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(\n    nodeGroupInstance: AjfNodeGroupInstance | AjfRepeatingSlideInstance\n  ): AjfNodeGroupInstance | AjfRepeatingSlideInstance {\n    const nodeGroup = nodeGroupInstance instanceof AjfNodeGroupInstance ?\n      nodeGroupInstance.nodeGroup : nodeGroupInstance.slide;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeGroupInstance.completeName;\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<IAjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n    nodesMap: Subject<IAjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n    formula: string\n  ): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] != null) {\n            const idx = vmap[tokenName].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[tokenName].splice(idx, 1);\n              if (vmap[tokenName].length == 0) {\n                delete vmap[tokenName];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n    nodesMap: Subject<IAjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n    formula: string\n  ): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] == null) {\n            vmap[tokenName] = [];\n          }\n          if (vmap[tokenName].indexOf(nodeInstance) === -1) {\n            vmap[tokenName].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {AjfValidatedProperty} from '@ajf/core/models';\n\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'MM/DD/YYYY';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n      `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, treshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(treshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"MM\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the treshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var treshold = (res/counter)*coefficient || 0;\n          return treshold;\n        }\n      }`,\n    `var alert = function(source, property, treshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > treshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeral(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'MM-DD-YYYY';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'MM';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfValidatedProperty.utils[name] === undefined) {\n      AjfValidatedProperty.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => typeof f === 'string' ? f : f.toString())\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfValidatedProperty.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport * as esprima from 'esprima';\nconst esprimaMod: any = (esprima as any).default || esprima;\nconst {tokenize} = esprimaMod;\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\n\nimport {\n  AjfField, AjfFieldWithChoices, AjfNode, AjfNodeGroup, AjfRepeatingSlide, AjfSlide, AjfTableField\n} from './nodes';\nimport {\n  AjfFieldInstance, AjfTableFieldInstance, AjfFieldWithChoicesInstance, AjfNodeGroupInstance,\n  AjfNodeInstance, AjfRepeatingSlideInstance, AjfSlideInstance, IAjfSlideInstance\n} from './nodes-instances';\nimport {AjfValidation, AjfValidationGroup} from './validation';\nimport {AjfWarning, AjfWarningGroup} from './warning';\n\n\nexport function orderedNodes(nodes: AjfNode[], parent: number | null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes.filter((n: AjfNode) => n.parent == parent)\n    .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n    .forEach((n: AjfNode) => {\n      newNodes.push(n);\n      newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n    });\n  return newNodes;\n}\n\nexport function isRepeatingNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (\n      node instanceof AjfNodeGroup ||\n      node instanceof AjfSlide ||\n      node instanceof AjfRepeatingSlide\n    ) {\n      flatNodes = flatNodes.concat(flattenNodes(node.nodes));\n    }\n  });\n  return flatNodes;\n}\n\nexport function flattenNodesInstances(\n  nodes: AjfNodeInstance[], includeGroups = false\n): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (nodeInstance instanceof AjfFieldInstance) {\n      flatNodes.push(nodeInstance);\n    }\n    // @TODO missing composed fields\n    if (\n      nodeInstance instanceof AjfNodeGroupInstance ||\n      nodeInstance instanceof AjfSlideInstance ||\n      nodeInstance instanceof AjfRepeatingSlideInstance\n    ) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(flattenNodesInstances(nodeInstance.nodes, includeGroups));\n    }\n  });\n  return flatNodes;\n}\n\nexport function getAncestorRepeatingNodes(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode\n): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number | null = node.parent;\n  while (curParent != null) {\n    node = (<any[]>allNodes).find((n: AjfNode | AjfNodeInstance) => {\n      return n instanceof AjfNode ? n.id == curParent : n.node.id == curParent;\n    });\n    if (node instanceof AjfNodeInstance) {\n      node = node.node;\n    }\n    if (isRepeatingNode(node)) {\n      nodeGroups.push(node);\n    }\n    curParent = node != null ? node.parent : null;\n  }\n  return nodeGroups;\n}\n\nexport function getAncestorRepeatingNodesNames(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode\n): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  getAncestorRepeatingNodes(allNodes, node)\n    .forEach((n, idx) => {\n      ((<AjfNodeGroup>n).nodes || [])\n        .forEach((sn) => {\n          if (sn instanceof AjfField) {\n            names[sn.name] = idx;\n          }\n        });\n    });\n  return names;\n}\n\nexport function flattenNodesTree(nodes: AjfNodeInstance[]): IAjfSlideInstance[] {\n  let flatTree: IAjfSlideInstance[] = [];\n  nodes\n    .forEach((nodeInstance: AjfNodeInstance) => {\n      if (\n        nodeInstance instanceof AjfSlideInstance ||\n        nodeInstance instanceof AjfRepeatingSlideInstance\n      ) {\n        flatTree.push(nodeInstance);\n        nodeInstance.flatNodes = flattenNodesInstances(nodeInstance.nodes);\n      }\n    });\n  return flatTree;\n}\n\nexport function normalizeFormula(\n  formula: string, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): string {\n  const ancestorsNameStrings = Object.keys(ancestorsNames);\n  const tokens = tokenize(formula)\n    .filter((token: any) => token.type == 'Identifier' && token.value != '$value')\n    .map((token: any) => token.value);\n  tokens.forEach((t: any) => {\n    if (ancestorsNameStrings.indexOf(t) > -1) {\n      formula = formula.replace(\n        new RegExp(`\\\\b${t}\\\\b`, 'g'),\n        `${t}__${prefix.slice(ancestorsNames[t]).join('__')}`\n      );\n    }\n  });\n  return formula;\n}\n\nfunction getInstanceCondition(\n  condition: AjfCondition, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeFormula(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return new AjfCondition({condition: newCondition});\n}\n\nfunction getInstanceFormula(\n  formula: AjfFormula, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeFormula(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return new AjfFormula({formula: newFormula});\n}\n\nfunction getInstanceConditions(\n  conditions: AjfCondition[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map((condition) => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n\nfunction getInstanceValidation(\n  validation: AjfValidation, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeFormula(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return new AjfValidation({condition: newValidation});\n}\n\nfunction getInstanceValidations(\n  validations: AjfValidation[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfValidation[] {\n  let changed = false;\n  const newValidations = validations.map((validation) => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n\nfunction getInstanceWarning(\n  warning: AjfWarning, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeFormula(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return new AjfWarning({condition: newWarning});\n}\n\nfunction getInstanceWarnings(\n  warnings: AjfWarning[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map((warning) => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n\nexport function nodeToNodeInstance(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode, prefix: number[], context: any\n): AjfNodeInstance | null {\n  let instance: AjfNodeInstance | null = null;\n  if (node instanceof AjfFieldWithChoices) {\n    instance = new AjfFieldWithChoicesInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfTableField) {\n    instance = new AjfTableFieldInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfField) {\n    instance = new AjfFieldInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfNodeGroup) {\n    instance = new AjfNodeGroupInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfRepeatingSlide) {\n    instance = new AjfRepeatingSlideInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfSlide) {\n    instance = new AjfSlideInstance({node: node, prefix: prefix}, context);\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeFormula(oldVisibility, ancestorsNames, prefix);\n        instance.visibility = newVisibility !== oldVisibility ? new AjfCondition({\n          condition: newVisibility\n        }) : node.visibility;\n      }\n\n      instance.conditionalBranches = getInstanceConditions(\n        instance.node.conditionalBranches, ancestorsNames, prefix\n      );\n\n      if (\n          instance instanceof AjfNodeGroupInstance || instance instanceof AjfRepeatingSlideInstance\n        ) {\n        const formulaReps = instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup.formulaReps :\n          instance.slide.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeFormula(oldFormula, ancestorsNames, prefix);\n          instance.formulaReps = newFormula !== oldFormula ?\n            new AjfFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (instance instanceof AjfFieldInstance) {\n        if (instance.field.formula != null) {\n          instance.formula = getInstanceFormula(instance.field.formula, ancestorsNames, prefix);\n        }\n\n        if (instance.field.validation != null) {\n          const newConditions = getInstanceValidations(\n            instance.field.validation.conditions, ancestorsNames, prefix\n          );\n          if (newConditions !== instance.field.validation.conditions) {\n            instance.validation = new AjfValidationGroup(instance.field.validation);\n            instance.validation.conditions = newConditions;\n          } else {\n            instance.validation = instance.field.validation;\n          }\n        }\n\n        if (instance.field.warning != null) {\n          const newWarnings = getInstanceWarnings(\n            instance.field.warning.conditions, ancestorsNames, prefix\n          );\n          if (newWarnings !== instance.field.warning.conditions) {\n            instance.warning = new AjfWarningGroup(instance.field.warning);\n            instance.warning.conditions = newWarnings;\n          } else {\n            instance.warning = instance.field.warning;\n          }\n        }\n\n        if (instance.field.nextSlideCondition != null) {\n          instance.nextSlideCondition = getInstanceCondition(\n            instance.field.nextSlideCondition, ancestorsNames, prefix\n          );\n        }\n\n        if (instance instanceof AjfFieldWithChoicesInstance) {\n          if (instance.field.choicesFilter != null) {\n            instance.choicesFilter = getInstanceFormula(\n              instance.field.choicesFilter, ancestorsNames, prefix\n            );\n          }\n          if (instance.field.triggerConditions != null) {\n            instance.triggerConditions = getInstanceConditions(\n              instance.field.triggerConditions, ancestorsNames, prefix\n            );\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      instance.conditionalBranches = instance.node.conditionalBranches;\n      if (\n        instance instanceof AjfNodeGroupInstance || instance instanceof AjfRepeatingSlideInstance\n      ) {\n        instance.formulaReps = (instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup : instance.slide).formulaReps;\n      } else if (instance instanceof AjfFieldInstance) {\n        instance.formula = instance.field.formula;\n        instance.validation = instance.field.validation;\n        instance.warning = instance.field.warning;\n        instance.nextSlideCondition = instance.field.nextSlideCondition;\n        if (instance instanceof AjfFieldWithChoicesInstance) {\n          instance.choicesFilter = instance.field.choicesFilter;\n          instance.triggerConditions = instance.field.triggerConditions;\n        }\n      }\n    }\n  }\n  return instance;\n}\n\nexport function findNodeInstanceInTree(\n  nodes: AjfNodeInstance[], node: AjfNodeInstance\n): {container: AjfNodeInstance[], index: number} {\n  const index = nodes.indexOf(node);\n  if (index > -1) {\n    return {container: nodes, index: index};\n  }\n  const groups = nodes.filter(n => isContainerNodeInstance(n));\n  let i = 0;\n  const len = groups.length;\n  while (i < len) {\n    const res = findNodeInstanceInTree((<any>groups[i]).node.nodes, node);\n    if (res.index > -1) {\n      return res;\n    }\n    i++;\n  }\n  return {\n    container: [],\n    index: -1\n  };\n}\n\nexport function flattenNodeInstances(nodes: AjfNodeInstance[] = []): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    flatNodes.push(nodeInstance);\n    if (\n      nodeInstance instanceof AjfNodeGroupInstance ||\n      nodeInstance instanceof AjfSlideInstance ||\n      nodeInstance instanceof AjfRepeatingSlideInstance\n    ) {\n      flatNodes = flatNodes.concat(flattenNodeInstances(nodeInstance.nodes));\n    }\n  });\n  return flatNodes;\n}\n\nexport function isContainerNodeInstance(node: AjfNodeInstance): boolean {\n  return node != null && (\n    node instanceof AjfSlideInstance ||\n    node instanceof AjfRepeatingSlideInstance ||\n    node instanceof AjfNodeGroupInstance\n  );\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit} from '@angular/core';\nimport {AbstractControl} from '@angular/forms';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {filter, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldType, AjfFieldWithChoices} from './nodes';\nimport {\n  AjfDateFieldInstance, AjfEmptyFieldInstance, AjfFieldInstance,\n  AjfFieldWithChoicesInstance, AjfTableFieldInstance\n} from './nodes-instances';\nimport {AjfFormRendererService} from './form-renderer';\n\nexport interface AjfFormFieldWarningAlertResult { result: boolean; }\n\nexport class AjfFormFieldValueChanged { field: AjfFormField; }\n\n\nexport abstract class AjfFormField implements AfterViewInit, OnDestroy, OnInit {\n  // AjfFieldType obj implement the type of field\n  // ( String, Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed )\n  ajfFieldTypes = AjfFieldType;\n  // this observable implement abstract control\n  control: Observable<AbstractControl | null>;\n\n  private _fieldInstance: AjfFieldInstance;\n  get fieldInstance(): AjfFieldInstance { return this._fieldInstance; }\n  set fieldInstance(fieldInstance: AjfFieldInstance) {\n    this._fieldInstance = fieldInstance;\n    this._fieldUpdateSubscription.unsubscribe();\n    this._fieldUpdateSubscription = fieldInstance.updated.subscribe(() => {\n      if (this._changeDetectionRef) {\n        try {\n          this._changeDetectionRef.detectChanges();\n        } catch (e) { }\n      }\n    });\n  }\n\n  get fwcInst(): AjfFieldWithChoicesInstance {\n    return this._fieldInstance as AjfFieldWithChoicesInstance;\n  }\n  get fwc(): AjfFieldWithChoices { return this._fieldInstance.field as AjfFieldWithChoices; }\n  get datefInst(): AjfDateFieldInstance { return this._fieldInstance as AjfDateFieldInstance; }\n  get tablefInst(): AjfTableFieldInstance { return this._fieldInstance  as AjfTableFieldInstance; }\n  get emptyfInst(): AjfEmptyFieldInstance { return this._fieldInstance as AjfEmptyFieldInstance; }\n\n  singleChoiceSelect: any;\n  multipleChoiceSelect: any;\n\n  // this private AjfFieldValueChanged event emitter emit an event when the\n  // field value is changed\n  private _valueChanged: EventEmitter<AjfFormFieldValueChanged> =\n      new EventEmitter<AjfFormFieldValueChanged>();\n  // this @output expose the value changed like an observable\n  get valueChanged(): Observable<AjfFormFieldValueChanged> {\n    return this._valueChanged.asObservable();\n  }\n\n  private _triggerSelectionSubscription: Subscription = Subscription.EMPTY;\n  private _triggerWarningSubscription: Subscription = Subscription.EMPTY;\n  private _fieldUpdateSubscription: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init _rendererService _changeDetectionRef _alertCtrl\n   * and init the messagesWarning subscription\n   */\n  constructor(protected _rendererService: AjfFormRendererService,\n              protected _changeDetectionRef: ChangeDetectorRef) {}\n\n  abstract showWarningAlertPrompt(\n    messagesWarning: string[]\n  ): Observable<AjfFormFieldWarningAlertResult>;\n\n  /**\n   * this method will init the control, the filtere choices and the change\n   * detection reference\n   */\n  ngOnInit(): void {\n    this.control = this._rendererService.getControl(this.fieldInstance);\n    this._triggerWarningSubscription = this.fieldInstance.triggerWarning\n      .pipe(\n        withLatestFrom(this.control),\n        filter(v => v[1] != null)\n      )\n      .subscribe((v: [void, AbstractControl | null]) => {\n        const control = v[1];\n        const s = this.showWarningAlertPrompt(\n          this.fieldInstance.warningResults.filter(w => w.result).map(w => w.warning)\n        ).subscribe(\n          (r: AjfFormFieldWarningAlertResult) => {\n            if (r.result) { control!.setValue(null); }\n          },\n          (_e: any) => { if (s) { s.unsubscribe(); }},\n          () => { if (s) { s.unsubscribe(); }}\n        );\n      });\n  }\n\n  ngAfterViewInit() {\n    if (this.fieldInstance instanceof AjfFieldWithChoicesInstance) {\n      this._triggerSelectionSubscription = this.fieldInstance.triggerSelection\n        .subscribe(() => {\n          this._triggerSelection();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._triggerSelectionSubscription.unsubscribe();\n    this._triggerWarningSubscription.unsubscribe();\n    this._fieldUpdateSubscription.unsubscribe();\n  }\n\n  private _triggerSelection(): void {\n    if (this.singleChoiceSelect != null && !this.singleChoiceSelect._isOpen) {\n      this.singleChoiceSelect.open();\n    } else if (this.multipleChoiceSelect != null &&\n               !this.multipleChoiceSelect._isOpen) {\n      this.multipleChoiceSelect.open();\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable, ReplaySubject} from 'rxjs';\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\nimport {AjfChoice} from './choices';\nimport {\n  AjfDateField, AjfEmptyField, AjfField, AjfFieldWithChoices, AjfNode, AjfNodeGroup,\n  AjfRepeatingSlide, AjfSlide, AjfTableField, IAjfSlide\n} from './nodes';\nimport {AjfValidationGroup, AjfValidationResult} from './validation';\nimport {AjfWarningGroup, AjfWarningResult} from './warning';\n\n\nexport interface AjfFieldState {\n  visibility: boolean;\n  value: any;\n}\n\nexport interface IAjfNodeInstance {\n  node: AjfNode;\n  prefix?: number[];\n  visible?: boolean;\n}\n\n\nexport class AjfNodeInstance implements IAjfNodeInstance {\n  private _updatedEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _updated: Observable<void>;\n  get updated(): Observable<void> { return this._updated; }\n\n  private _node: AjfNode;\n  get node(): AjfNode { return this._node; }\n  // is the index of node loop\n  private _prefix: number[];\n  get prefix(): number[] { return this._prefix.slice(0); }\n  // if is true this node is visible on the form\n  private _visible: boolean;\n  get visible(): boolean { return this._visible; }\n\n  get suffix(): string {\n    if (this.prefix == null || this.prefix.length == 0) { return ''; }\n    return `__${this.prefix.join('__')}`;\n  }\n\n  /**\n   * this method will get the complete name of the field\n   * @return : string\n   */\n  get completeName(): string {\n    return `${this.node.name}${this.suffix}`;\n  }\n\n  //  index of conditionalBranches that verified the branch\n  verifiedBranch: number;\n  conditionalBranches: AjfCondition[];\n\n  visibility: AjfCondition | null;\n\n  constructor(params: IAjfNodeInstance, _context?: any) {\n    this._updated = this._updatedEvt.asObservable();\n\n    this._node = params.node;\n    this._prefix = params.prefix != null ? params.prefix.slice(0) : [];\n    this._visible = params.visible != null ? params.visible : true;\n  }\n\n  protected setNode(node: AjfNode) { this._node = node; }\n\n  triggerUpdate(): void {\n    this._updatedEvt.emit();\n  }\n\n  /**\n   * Update nodes visibility based on context value.\n   * Returns true if the visibility has changes\n   *\n   * @param context Context value\n   * @param branchVisibility\n   *\n   * @memberOf AjfNodeInstance\n   */\n  updateVisibility(context: any, branchVisibility = true): boolean {\n    if (this.visibility == null) { return false; }\n    const visibility: AjfCondition = this.visibility;\n\n    const oldVisibility: boolean = this.visible;\n    let newVisibility: boolean = branchVisibility && visibility.evaluate(context);\n    if (newVisibility !== this.visible) {\n      this._visible = newVisibility;\n    }\n\n    return oldVisibility !== newVisibility;\n  }\n\n  updateConditionalBranches(context: any): boolean {\n    const conditionalBranches = this.conditionalBranches;\n\n    if (conditionalBranches != null) {\n      const oldBranch = this.verifiedBranch;\n      let idx = 0;\n      let found = false;\n      while (idx < conditionalBranches.length && !found) {\n        let verified: boolean = conditionalBranches[idx].evaluate(context);\n        if (verified) {\n          found = true;\n          if (idx !== this.verifiedBranch) {\n            this.verifiedBranch = idx;\n          }\n        }\n        idx++;\n      }\n\n      if (oldBranch !== this.verifiedBranch) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nexport class AjfFieldInstance extends AjfNodeInstance {\n  // if the field pass the validation\n  valid: boolean;\n  // number of repetitions\n  reps = 0;\n  // an array of AjfValidationResult\n  protected _validationResults: AjfValidationResult[] = [];\n  // an array of AjfWarningResult\n  protected _warningResults: AjfWarningResult[] = [];\n  protected _defaultValue: any = null;\n\n  get field(): AjfField { return <AjfField>this.node; }\n  set field(field: AjfField) { this.setNode(field); }\n\n  private _value: any;\n  // the value of field\n  get value(): any { return this._value != null && this._value || this._defaultValue; }\n  set value(value: any) { this._value = value; }\n\n  private _triggerWarning: ReplaySubject<void> = new ReplaySubject<void>(1);\n  get triggerWarning(): Observable<void> { return this._triggerWarning.asObservable(); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    if (this.node != null && context != null) {\n      if (context[this.node.name] != null) {\n        this.value = context[this.node.name];\n      } else if (context[this.completeName] != null) {\n        this.value = context[this.completeName];\n      } else {\n        this.value = null;\n      }\n    }\n    const defVal = (<AjfField>this.node).defaultValue;\n    this._defaultValue = this.node && defVal != null ? defVal : null;\n  }\n\n  /**\n   * this method will get the validationResults value of the field\n   * @return : _validationResults\n   */\n  get validationResults(): AjfValidationResult[] {\n    return this._validationResults;\n  }\n\n  /**\n   * this method will get the warningResults value of the field\n   * @return : _warningResults\n   */\n  get warningResults(): AjfWarningResult[] {\n    return this._warningResults;\n  }\n\n  formula: AjfFormula | null;\n  validation: AjfValidationGroup | null;\n  warning: AjfWarningGroup | null;\n  nextSlideCondition: AjfCondition | null;\n\n  updateFormula(context: any): { changed: boolean, value: any } {\n    const formula = this.formula;\n    const editable = this.field.editable;\n    if (formula != null && this.visible && (!editable || (editable && this.value == null))) {\n      let newValue: any = formula.evaluate(context);\n      const oldValue = this.value;\n      if (newValue !== this.value) {\n        this.value = newValue;\n        context[this.completeName] = this.value;\n        context.$value = this.value;\n      }\n      return {\n        changed: newValue !== oldValue,\n        value: newValue\n      };\n    }\n    return { changed: false, value: this.value };\n  }\n\n  private _makeSupplementaryContext(context: any, supplementaryInformations: any): any {\n    Object.keys(supplementaryInformations).forEach((key) => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n    return context;\n  }\n\n  updateValidation(context: any, supplementaryInformations?: any): void {\n    const validation = this.validation;\n    if (validation == null) { return; }\n\n    if (supplementaryInformations) {\n      this._makeSupplementaryContext(context, supplementaryInformations);\n    }\n\n    if (context[this.completeName] != null && validation && validation.forceValue) {\n      this.value = validation.evaluateForceValue(context);\n      context[this.completeName] = this.value;\n      context.$value = this.value;\n    }\n\n    if (validation != null) {\n      this._validationResults = validation.evaluate(context[this.completeName], context);\n      this.valid = this.validationResults\n        .reduce((prev: boolean, x: AjfValidationResult) => prev && x.result, true);\n    } else {\n      this.valid = true;\n    }\n  }\n\n  updateWarning(context: any): void {\n    const warning = this.warning;\n\n    if (context[this.completeName] != null && warning) {\n      this._warningResults = warning.evaluate(context);\n    }\n  }\n\n  updateNextSlideCondition(context: any): boolean {\n    if (this.nextSlideCondition != null) {\n      return this.nextSlideCondition.evaluate(context);\n    }\n    return false;\n  }\n\n  /**\n   * this method will update the state of the field\n   * @param   context         : any - the context of the field to update\n   * @param   branchVisibility: boolean\n   */\n  updateFieldState(context: any, branchVisibility = true): void {\n    this.updateVisibility(context, branchVisibility);\n    this.updateConditionalBranches(context);\n    this.updateFormula(context);\n    this.updateValidation(context);\n    this.updateWarning(context);\n    this.updateNextSlideCondition(context);\n  }\n\n  emitTriggerWarning(): void {\n    this._triggerWarning.next();\n  }\n}\n\nexport class AjfFieldWithChoicesInstance extends AjfFieldInstance {\n  choicesFilter: AjfFormula;\n  filteredChoices: AjfChoice<any>[];\n  triggerConditions: AjfCondition[];\n\n  get field(): AjfFieldWithChoices { return <AjfFieldWithChoices>this.node; }\n  set field(field: AjfFieldWithChoices) { this.setNode(field); }\n\n  private _triggerSelection: ReplaySubject<null> = new ReplaySubject<null>(1);\n  get triggerSelection(): Observable<null> { return this._triggerSelection.asObservable(); }\n  private _firstTriggerConditionDone: any = {};\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    this.filteredChoices = this.field.choices.slice(0);\n  }\n\n  updateFilteredChoices(context: any): void {\n    if (this.choicesFilter != null) {\n      this.filteredChoices = this.field.choicesOrigin\n        .getChoices()\n        .filter(c => {\n          context.$choiceValue = c.value;\n          return this.choicesFilter.evaluate(context);\n        });\n    } else {\n      this.filteredChoices = this.field.choicesOrigin\n        .getChoices();\n    }\n  }\n\n  updateTriggerConditions(context: any): boolean {\n    if (this._firstTriggerConditionDone[this.completeName]) {\n      return false;\n    }\n    let found = false;\n    const conditionsNum = this.triggerConditions.length;\n    for (let i = 0 ; i < conditionsNum ; i++) {\n      if (this.triggerConditions[i].evaluate(context)) {\n        found = true;\n        break;\n      }\n    }\n    this._firstTriggerConditionDone[this.completeName] = found;\n    return found;\n  }\n\n  emitTriggerSelection(): void {\n    this._triggerSelection.next(null);\n  }\n}\n\nexport class AjfNodeGroupInstance extends AjfNodeInstance {\n  nodesNames: string[];\n  nodes: AjfNodeInstance[];\n  flatNodes: AjfNodeInstance[];\n  formulaReps: AjfFormula | null;\n\n  // number of repetitions\n  private _reps: number;\n  get reps(): number { return this._reps; }\n  set reps(reps: number) {\n    this._reps = reps;\n    this._repsArr = new Array(reps);\n  }\n\n  private _repsArr: Array<number>;\n  get repsArr(): Array<number> { return this._repsArr; }\n\n  get valid(): boolean {\n    return this.nodes.map(n => {\n      if (Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    }).reduce((v1, v2) => v1 && v2);\n  }\n\n  get nodeGroup(): AjfNodeGroup { return <AjfNodeGroup>this.node; }\n  protected setNodeGroup(nodeGroup: AjfNodeGroup) { this.setNode(nodeGroup); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n  }\n\n  updateRepsNum(context: any): number {\n    const oldReps: number = this.reps || 0;\n    if (this.nodeGroup.formulaReps == null) {\n      const ctxReps = context[this.completeName];\n      if (ctxReps != null) {\n        this.reps = ctxReps;\n      } else if (oldReps == 0) {\n        this.reps = 1;\n      }\n    } else {\n      let newReps = this.nodeGroup.formulaReps.evaluate(context);\n      if (newReps !== oldReps) {\n        this.reps = newReps;\n      }\n    }\n    return oldReps;\n  }\n}\n\nexport interface IAjfSlideInstance extends IAjfNodeInstance {\n  nodes: AjfNodeInstance[];\n  flatNodes: AjfNodeInstance[];\n  readonly valid: boolean;\n  readonly slide: IAjfSlide;\n}\n\nexport class AjfSlideInstance extends AjfNodeInstance implements IAjfSlideInstance {\n  nodes: AjfNodeInstance[] = [];\n  flatNodes: AjfNodeInstance[] = [];\n  position: number;\n  get valid(): boolean {\n    return this.flatNodes.map(n => {\n      if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    }).reduce((v1, v2) => v1 && v2, true);\n  }\n  get slide(): AjfSlide { return <AjfSlide>this.node; }\n  protected setSlide(slide: AjfSlide) { this.setNode(slide); }\n}\n\nexport class AjfRepeatingSlideInstance extends AjfSlideInstance implements IAjfSlideInstance {\n  formulaReps: AjfFormula;\n  position: number;\n  slideNodes: AjfNodeInstance[][];\n  canRemoveGroup: boolean;\n  canAddGroup: boolean;\n\n  private _reps: number;\n  get reps(): number { return this._reps; }\n  set reps(reps: number) {\n    this._reps = reps;\n    this.canRemoveGroup = this.slide.minReps === 0 || reps > this.slide.minReps;\n    this.canAddGroup = this.slide.maxReps === 0 || reps < this.slide.maxReps;\n    this._repsArr = new Array(reps);\n  }\n\n  private _repsArr: Array<number>;\n  get repsArr(): Array<number> { return this._repsArr; }\n\n  get slide(): AjfRepeatingSlide { return <AjfRepeatingSlide>this.node; }\n\n  get nodesPerSlide(): number {\n    return this.nodes != null ? this.nodes.length / this.reps : 0;\n  }\n\n  protected setSlide(slide: AjfRepeatingSlide) { this.setNode(slide); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n  }\n\n  validSlide(idx: number): boolean {\n    if (idx >= this.slideNodes.length) {\n      return true;\n    }\n    return this.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      }).reduce((v1, v2) => v1 && v2, true);\n  }\n\n  slidePosition(idx: number): number {\n    return this.position + idx;\n  }\n\n  updateRepsNum(context: any): number {\n    const oldReps: number = this.reps || 0;\n    if (this.slide.formulaReps == null) {\n      const ctxReps = context[this.completeName];\n      if (ctxReps != null) {\n        this.reps = ctxReps;\n      } else if (oldReps == 0) {\n        this.reps = 1;\n      }\n    } else {\n      let newReps = this.slide.formulaReps.evaluate(context);\n      if (newReps !== oldReps) {\n        this.reps = newReps;\n      }\n    }\n    return oldReps;\n  }\n}\n\nexport class AjfTableFieldInstance extends AjfFieldInstance {\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    this.setValue(context);\n    this._hideEmptyRows = (<AjfTableField>this.node).hideEmptyRows;\n  }\n\n  private _hideEmptyRows: boolean;\n\n  get hideEmptyRows(): boolean {\n    return this._hideEmptyRows;\n  }\n\n  private _matrixValue: string[][];\n  private _matrixFormControl: FormControl[][];\n  private _matrixFormControlWithLabels: (FormControl | string)[][];\n  private _context: any = {};\n\n\n  get controls(): FormControl[][] {\n    return this._matrixFormControl;\n  }\n\n  set controls(v: FormControl[][]) {\n    this._matrixFormControl = v;\n    this._matrixFormControlWithLabels = this._controlsWithLabels();\n  }\n\n  get controlsWithLabels(): (FormControl | string)[][] {\n    return this._matrixFormControlWithLabels;\n  }\n\n  private _controlsWithLabels(): (FormControl | string) [][] {\n    let node = <AjfTableField>this.node;\n    let ret: (FormControl | string)[][] = [];\n    let i = 0;\n    for (let rowLabel of <any>(node.rowLabels)) {\n      ret.push([rowLabel].concat(<any>this._matrixFormControl[i]));\n      i = i + 1;\n    }\n    ret.unshift([node.label].concat(node.columnLabels));\n    return ret;\n  }\n\n  get value() {\n    let node = <AjfTableField>this.node;\n    if (node.editable) {\n      return this._matrixFormControl;\n    }\n    return this._matrixValue;\n  }\n  set value(_v: any) {}\n\n  get context(): any {\n    return this._context;\n  }\n\n  setValue(context: any) {\n    let node = <AjfTableField>this.node;\n    if (!node.editable) {\n      let value: string[][] = [];\n      let rowIndex = 0;\n      node.rows.forEach((row) => {\n        row.forEach((k) => {\n          this._context[k] = context[k];\n        });\n        value[rowIndex] = [node.rowLabels[rowIndex]]\n          .concat(\n          row.map(k => context[k])\n          );\n        rowIndex += 1;\n      });\n      value.unshift([node.label].concat(node.columnLabels));\n      this._matrixValue = value;\n    } else {\n      this._context = context;\n    }\n  }\n\n  get visibleColumns(): string[][] {\n    if (this.hideEmptyRows) {\n      return this.value\n        .filter((column: any[]) =>\n          column\n            .slice(1)\n            .reduce((a: any, b: any) => {\n              return a || (b != null && b !== '' && b !== 0 && b !== '0');\n            }, false));\n    }\n    return this.value;\n  }\n}\n\nexport class AjfDateFieldInstance extends AjfFieldInstance {\n  get field(): AjfDateField { return this.field; }\n  set field(field: AjfDateField) { this.setNode(field); }\n}\n\nexport class AjfEmptyFieldInstance extends AjfFieldInstance {\n  get field(): AjfEmptyField { return this.field; }\n  set field(field: AjfEmptyField) { this.setNode(field); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField, AjfFieldType} from './nodes';\n\n@Pipe({name: 'fieldIcon'})\nexport class FieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(field instanceof AjfField ? field.fieldType : field);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './nodes';\n\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${AjfFieldType[type].toLowerCase()}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfAttachmentsOrigin} from './attachments';\nimport {IAjfChoicesOrigin} from './choices';\nimport {AjfInvalidFieldDefinitionError} from './errors';\nimport {factorial} from './math';\nimport {AjfValidationGroup} from './validation';\nimport {AjfWarningGroup} from './warning';\n\n\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH\n}\n\n\n/**\n * This class will define an ajf node\n */\nexport class AjfNode extends AjfJsonSerializable {\n  // node identification number\n  private _id: number;\n  get id(): number { return this._id; }\n  set id(id: number) { this._id = id; }\n\n  // id of predecessor node\n  private _parent: number;\n  get parent(): number { return this._parent; }\n  set parent(parent: number) { this._parent = parent; }\n\n  // is a id of parent node,  if this node is part of an AjfNodeGroup\n  private _parentNode: number;\n  get parentNode(): number { return this._parentNode; }\n  set parentNode(parentNode: number) { this._parentNode = parentNode; }\n\n  // an AjfCondition array\n  private _conditionalBranches: AjfCondition[];\n  /**\n   * this method will get the conditionalBranches of the field\n   * @return : _conditionalBranches\n   */\n  get conditionalBranches(): AjfCondition[] {\n    return this._conditionalBranches;\n  }\n  /**\n   * this method will set the conditionalBranches of the field\n   * @param conditionalBranches : AjfCondition[] - the new conditionalBranches\n   */\n  set conditionalBranches(conditionalBranches: AjfCondition[]) {\n    this._conditionalBranches = conditionalBranches;\n  }\n\n  // the name of the field\n  private _name: string;\n  /**\n   * this method will get the current name of field\n   * @return : _name\n   */\n  get name(): string {\n    return this._name;\n  }\n  /**\n   * this method will set the current name of field\n   * @param name : string - the new name\n   */\n  set name(name: string) {\n    this._name = name;\n  }\n  // hte label of the field\n  private _label: string;\n  /**\n   * this method will get the label of the field\n   * @return : _label\n   */\n  get label(): string {\n    return this._label;\n  }\n  /**\n   * this method will set the label of the field\n   * @param label : string - the new label\n   */\n  set label(label: string) {\n    this._label = label;\n  }\n\n  // AjfCondition for handling visibility\n  private _visibility: AjfCondition | null;\n  /**\n   * this method will get the visibility of the field\n   * @return : _visibility\n   */\n  get visibility(): AjfCondition | null {\n    return this._visibility;\n  }\n  /**\n   * this method will set the visibility of the field\n   * @param visibility : AjfCondition - the new visibility\n   */\n  set visibility(visibility: AjfCondition | null) {\n    this._visibility = visibility;\n  }\n\n  /**\n   * this method will load an AjfNode from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static fromJson(obj: any, choicesOrigins?: any[], attachmentsOrigins?: any[],\n      context?: any): AjfNode {\n    // array of string:  contains a keys Object\n    // example:\n    // [\"id\", \"name\", \"label\", \"visibility\", \"hasChoices\", \"parent\",\n    //  \"parentNode\", \"nodeType\", \"conditionalBranches\", \"fieldType\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('nodeType') === -1) {\n      throw new Error('Node type missing type');\n    }\n\n    let nodeType = obj.nodeType;\n    delete obj.nodeType;\n    if (AjfNodeType[nodeType] == null) {\n      throw new Error('Invalid node type');\n    }\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      if (cbs.length == 0) {\n        cbs.push(AjfCondition.alwaysCondition());\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return AjfNode.createNode(nodeType, obj, choicesOrigins, attachmentsOrigins, context);\n  }\n  /**\n   * this method will create an AjfNode\n   * @param nodeType           : identified a type of node (nodeGroup or nodeField)\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static createNode(\n    nodeType: AjfNodeType, obj?: any, choicesOrigins?: any[],\n    attachmentsOrigins?: any[], context?: any\n  ): AjfNode {\n    choicesOrigins = choicesOrigins || [];\n    attachmentsOrigins = attachmentsOrigins || [];\n    switch (nodeType) {\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeGroup.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfField:\n        return AjfField.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfRepeatingSlide.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfSlide:\n        return AjfSlide.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      default:\n        throw new Error('Invalid node type');\n    }\n  }\n  /**\n   * this method get the nodeType\n   * @return AjfNodeType\n   */\n  get nodeType(): AjfNodeType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfField) {\n      return AjfNodeType.AjfField;\n    }\n    if (thisObj instanceof AjfFieldNodeLink) {\n      return AjfNodeType.AjfFieldNodeLink;\n    }\n    if (thisObj instanceof AjfNodeGroup) {\n      return AjfNodeType.AjfNodeGroup;\n    }\n    if (thisObj instanceof AjfRepeatingSlide) {\n      return AjfNodeType.AjfRepeatingSlide;\n    }\n    if (thisObj instanceof AjfSlide) {\n      return AjfNodeType.AjfSlide;\n    }\n    throw new Error('Invalid node type');\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'id', 'nodeType', 'parent', 'parentNode', 'visibility', 'name', 'label',\n      'conditionalBranches'\n    ]);\n\n    this._id         = obj && obj.id          || null;\n    this._parent     = obj && obj.parent      || null;\n    this._parentNode = obj && obj.parentNode  || 0;\n    this._visibility = obj && obj.visibility  || AjfCondition.alwaysCondition();\n    this._name       = obj && obj.name        || null;\n    this._label      = obj && obj.label       || null;\n    this._conditionalBranches = obj && obj.conditionalBranches || [AjfCondition.alwaysCondition()];\n  }\n\n  /**\n   * this method will set the conditiona branch number of the field\n   * @param cbn : number\n   */\n  setConditionalBranchesNum(cbn: number): void {\n    if (this.getMaxConditionalBranches() >= 0) {\n      cbn = Math.min(cbn, this.getMaxConditionalBranches());\n    }\n    if (cbn < this.conditionalBranches.length) {\n      this.conditionalBranches = this.conditionalBranches.slice(0, cbn);\n    } else if (cbn > this.conditionalBranches.length) {\n      for (let i = this.conditionalBranches.length; i < cbn; i++) {\n        this.conditionalBranches.push(AjfCondition.alwaysCondition());\n      }\n    }\n  }\n\n  /**\n   * this method will get the max xonditional branches of the field\n   * @return number\n   */\n  getMaxConditionalBranches(): number {\n    return -1;\n  }\n}\n\nexport class AjfFieldNodeLink extends AjfNode {\n}\n\n/**\n * this enumerate any field type\n */\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  LENGTH\n}\n\n/**\n * This class will define an ajf node group\n */\nexport class AjfNodeGroup extends AjfNode {\n  // array of ajfNode\n  private _nodes: AjfNode[];\n  get nodes(): AjfNode[] { return this._nodes; }\n  set nodes(nodes: AjfNode[]) { this._nodes = nodes; }\n\n  // is a node group repeat condition\n  // example: \"opd_treatment == 'Yes' && ($groupReps || 1) || 0\"\n  private _formulaReps: AjfFormula;\n  get formulaReps(): AjfFormula { return this._formulaReps; }\n  set formulaReps(formulaReps: AjfFormula) { this._formulaReps = formulaReps; }\n\n  // max number of repetitions\n  private _maxReps: number;\n  get maxReps(): number { return this._maxReps; }\n  set maxReps(maxReps: number) { this._maxReps = maxReps; }\n\n  // min number of repetitions\n  private _minReps: number;\n  get minReps(): number { return this._minReps; }\n  set minReps(minReps: number) { this._minReps = minReps; }\n\n  /**\n   * this method will load an AjfNodeGroup from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNodeGroup\n   */\n  static fromJson(obj: any, choicesOrigins: any[], attachmentsOrigins: any[],\n      context: any): AjfNodeGroup {\n    // array of string:  contains a keys Object\n    // example:\n    // [\"id\", \"parent\", \"parentNode\", \"formulaReps\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('formulaReps') > -1 && obj.formulaReps != null) {\n      obj.formulaReps = AjfFormula.fromJson(obj.formulaReps);\n    }\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    let ret =  new AjfNodeGroup(obj);\n\n    return ret;\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'formulaReps', 'minReps', 'maxReps', 'nodes'\n    ]);\n\n    this.nodes = obj && obj.nodes || [];\n    this.formulaReps = obj && obj.formulaReps || null;\n    this.maxReps = obj && obj.maxReps || null;\n    this.minReps = obj && obj.minReps || null;\n  }\n}\n\nexport interface IAjfSlide {\n  nodes: AjfNode[];\n}\n\n/**\n * Represents a form slide.\n * Slides are specialized node groups used to layout the form.\n * They must be at the root level of the form\n *\n * @export\n */\nexport class AjfSlide extends AjfNode implements IAjfSlide {\n  private _nodes: AjfNode[];\n  get nodes(): AjfNode[] { return this._nodes.slice(0); }\n  set nodes(nodes: AjfNode[]) { this._nodes = nodes.slice(0); }\n\n  static fromJson(\n    obj: any, choicesOrigins: any[], attachmentsOrigins: any[], context: any\n  ): AjfSlide {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return new AjfSlide(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['nodes']);\n\n    this._nodes = obj && obj.nodes || [];\n  }\n}\n\nexport class AjfRepeatingSlide extends AjfSlide {\n  private _formulaReps: AjfFormula | null;\n  get formulaReps(): AjfFormula | null { return this._formulaReps; }\n  set formulaReps(formulaReps: AjfFormula | null) { this._formulaReps = formulaReps; }\n\n  // max number of repetitions\n  private _maxReps: number;\n  get maxReps(): number { return this._maxReps; }\n  set maxReps(maxReps: number) { this._maxReps = maxReps; }\n\n  // min number of repetitions\n  private _minReps: number;\n  get minReps(): number { return this._minReps; }\n  set minReps(minReps: number) { this._minReps = minReps; }\n\n  static fromJson(\n    obj: any, choicesOrigins: any[], attachmentsOrigins: any[], context: any\n  ): AjfRepeatingSlide {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('formulaReps') > -1 && obj.formulaReps != null) {\n      obj.formulaReps = AjfFormula.fromJson(obj.formulaReps);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return new AjfRepeatingSlide(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'nodes', 'formulaReps', 'minReps', 'maxReps'\n    ]);\n\n    this.formulaReps = obj && obj.formulaReps || null;\n    this.nodes = obj && obj.nodes || [];\n    this.minReps = obj && obj.minReps || 1;\n    this.maxReps = obj && obj.maxReps || 0;\n  }\n}\n\n/**\n * This class will define an ajf Field\n */\nexport abstract class AjfField extends AjfNode {\n  // a field description\n  private _description: string;\n  /**\n   * this method will get the description of the field\n   * @return : _description\n   */\n  get description(): string {\n    return this._description;\n  }\n  /**\n   * this method will set the description of the field\n   * @param description : string - the new description\n   */\n  set description(description: string) {\n    this._description = description;\n  }\n\n  // a boolean to identify an editable status\n  private _editable: boolean;\n  /**\n   * this method will get the editable status  of the field\n   * @return : _editable\n   */\n  get editable(): boolean {\n    return this._editable;\n  }\n  //  an AjfFormula\n  private _formula: AjfFormula | null;\n  /**\n   * this method will get the formula of the field\n   * @return : _formula\n   */\n  get formula(): AjfFormula | null {\n    return this._formula;\n  }\n  set formula(formula: AjfFormula | null) {\n    this._formula = formula;\n  }\n\n  // a boolean to identify if the field have choices\n  private _hasChoices = false;\n  /**\n   * this method will get the hasChoices status of the field\n   * @return : _hasChoices\n   */\n  get hasChoices(): boolean {\n    return this._hasChoices;\n  }\n\n  //  a default value\n  private _defaultValue: any;\n\n  /**\n   * this method will get the default value of the field\n   * @return : _defaultValue\n   */\n  get defaultValue(): any {\n    return this._defaultValue;\n  }\n\n  /**\n   * this method will set the defaultValue of the field\n   * @param defaultValue : any - the new defaultValue\n   */\n  set defaultValue(defaultValue: any) {\n    if (defaultValue == null || this.validateValue(defaultValue)) {\n      this._defaultValue = defaultValue;\n    } else {\n      throw new AjfInvalidFieldDefinitionError(\n        'The default value is not valid for this field type');\n    }\n  }\n\n  private _size: 'normal' | 'small' | 'smaller' | 'tiny' | 'mini';\n  get size(): 'normal' | 'small' | 'smaller' | 'tiny' | 'mini' {\n    return this._size;\n  }\n  set size(size: 'normal' | 'small' | 'smaller' | 'tiny' | 'mini') {\n    this._size = size;\n  }\n\n  //  an AjfValidationGroup\n  private _validation: AjfValidationGroup | null;\n\n  /**\n   * this method will get the validation value of the field\n   * @return : _validation\n   */\n  get validation(): AjfValidationGroup | null {\n    return this._validation;\n  }\n  set validation(validation: AjfValidationGroup | null) {\n    this._validation = validation;\n  }\n\n  // an AjfWarningGroup\n  private _warning: AjfWarningGroup | null;\n\n  /**\n   * this method will get the warning value of the field\n   * @return : _warning\n   */\n  get warning(): AjfWarningGroup | null {\n    return this._warning;\n  }\n  set warning(warning: AjfWarningGroup | null) {\n    this._warning = warning;\n  }\n\n  //  a boolean to identify if field has attachments\n  private _hasAttachments = false;\n  /**\n   * this method will get the hasAttachments status of the field\n   * @return : _hasAttachments\n   */\n  get hasAttachments(): boolean { return this._hasAttachments; }\n\n  // an AjfAttachmentsOrigin\n  private _attachmentsOrigin: AjfAttachmentsOrigin;\n\n  /**\n   * this method will get the attachmentsOrigin of the field\n   * @return : AjfAttachmentsOrigin\n   */\n  get attachmentsOrigin(): AjfAttachmentsOrigin | null {\n    return this.hasAttachments && this._attachmentsOrigin || null;\n  }\n\n  /**\n   * this method will get the attachments of the field\n   * @return : any the attachments\n   */\n  get attachments(): any[] {\n      return this.hasAttachments &&\n         this._attachmentsOrigin.getAttachments()  || [];\n  }\n\n  private _nextSlideCondition: AjfCondition | null;\n  get nextSlideCondition(): AjfCondition | null {\n    return this._nextSlideCondition;\n  }\n  set nextSlideCondition(condition: AjfCondition | null) {\n    this._nextSlideCondition = condition;\n  }\n\n  // @TODO Maybe not used??\n  private _nextSlide: boolean;\n  get nextSlide(): boolean {\n    return this._nextSlide;\n  }\n  set nextSlide(val: boolean) {\n    this._nextSlide = val;\n  }\n\n  /**\n   * this method will get the field type\n   * @return : AjfFieldType\n   */\n  get fieldType(): AjfFieldType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfFormulaField) {\n      return AjfFieldType.Formula;\n    }\n    if (thisObj instanceof AjfMultipleChoiceField) {\n      return AjfFieldType.MultipleChoice;\n    }\n    if (thisObj instanceof AjfSingleChoiceField) {\n      return AjfFieldType.SingleChoice;\n    }\n    if (thisObj instanceof AjfBooleanField) {\n      return AjfFieldType.Boolean;\n    }\n    if (thisObj instanceof AjfNumberField) {\n      return AjfFieldType.Number;\n    }\n    if (thisObj instanceof AjfTextField) {\n      return AjfFieldType.Text;\n    }\n    if (thisObj instanceof AjfStringField) {\n      return AjfFieldType.String;\n    }\n    if (thisObj instanceof AjfDateField) {\n      return AjfFieldType.Date;\n    }\n    if (thisObj instanceof AjfDateInputField) {\n      return AjfFieldType.DateInput;\n    }\n    if (thisObj instanceof AjfTableField) {\n      return AjfFieldType.Table;\n    }\n    if (thisObj instanceof AjfTimeField) {\n      return AjfFieldType.Time;\n    }\n    return AjfFieldType.Empty;\n  }\n\n  /**\n   * this method will get the node type of the field\n   * @return : AjfFieldType\n   */\n  get nodeType(): AjfNodeType { return AjfNodeType.AjfField; }\n\n  /**\n   * this method will create new field\n   * @return : ajfField\n   */\n  static create(fieldType: AjfFieldType, obj?: any): AjfField {\n    let ret: AjfField;\n    switch (fieldType) {\n      case AjfFieldType.String:\n        ret = new AjfStringField(obj);\n        break;\n      case AjfFieldType.Text:\n        ret = new AjfTextField(obj);\n        break;\n      case AjfFieldType.Number:\n        ret = new AjfNumberField(obj);\n        break;\n      case AjfFieldType.Boolean:\n        ret = new AjfBooleanField(obj);\n        break;\n      case AjfFieldType.SingleChoice:\n        ret = new AjfSingleChoiceField(obj);\n        break;\n      case AjfFieldType.MultipleChoice:\n        ret = new AjfMultipleChoiceField(obj);\n        break;\n      case AjfFieldType.Formula:\n        ret = new AjfFormulaField(obj);\n        break;\n      case AjfFieldType.Empty:\n        ret = new AjfEmptyField(obj);\n        break;\n      case AjfFieldType.Date:\n        ret = new AjfDateField(obj);\n        break;\n      case AjfFieldType.DateInput:\n        ret = new AjfDateInputField(obj);\n        break;\n      case AjfFieldType.Time:\n        ret = new AjfTimeField(obj);\n        break;\n      case AjfFieldType.Table:\n        ret = new AjfTableField(obj);\n        break;\n      default:\n        throw new Error('Invalid field type');\n    }\n    return ret;\n  }\n\n  /**\n   * this method will load an AjfField from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static fromJson(obj: any, choicesOrigins: any[], attachmentsOrigins: any[],\n      context: any): AjfField {\n    // array of string: contains a keys object\n    // example:\n    // [\"id\", \"name\", \"label\", \"visibility\", \"hasChoices\", \"parent\",\n    // \"parentNode\", \"conditionalBranches\", \"fieldType\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('fieldType') === -1) {\n      throw new Error('Field type missing type');\n    }\n    let fieldType = obj.fieldType;\n    delete obj.fieldType;\n    if (AjfFieldType[fieldType] == null) {\n      throw new Error('Invalid field type');\n    }\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('formula') > -1 && obj.formula != null) {\n      obj.formula = AjfFormula.fromJson(obj.formula);\n    }\n\n    if (keys.indexOf('choicesFilter') > -1 && obj.choicesFilter != null) {\n      obj.choicesFilter = AjfFormula.fromJson(obj.choicesFilter);\n    }\n\n    if (keys.indexOf('validation') > -1 && obj.validation != null) {\n      obj.validation = AjfValidationGroup.fromJson(obj.validation);\n    }\n\n    if (keys.indexOf('warning') > -1  && obj.warning != null) {\n      obj.warning = AjfWarningGroup.fromJson(obj.warning);\n    }\n\n    if (keys.indexOf('choicesOriginRef') > -1) {\n      let origins = choicesOrigins.filter(x => x.getName() === obj.choicesOriginRef);\n      obj.choicesOrigin = origins.length > 0 ? origins[0] : null;\n    }\n\n    if (keys.indexOf('attachmentsOriginRef') > -1) {\n      let origins = attachmentsOrigins.filter(x => x.getName() === obj.attachmentsOriginRef);\n      obj.attachmentsOrigin = origins.length > 0 ? origins[0] : null;\n    }\n\n    if (keys.indexOf('triggerConditions') > -1 &&\n        obj.triggerConditions != null &&\n        obj.triggerConditions.length > 0) {\n      obj.triggerConditions = obj.triggerConditions\n        .map((t: any) => {\n          return AjfCondition.fromJson(t);\n        });\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        let childNode = obj.nodes[i];\n        childNode.parentField = obj.id;\n        nodes.push(AjfNode.fromJson(childNode, choicesOrigins, attachmentsOrigins, context));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('nextSlideCondition') > -1 && obj.nextSlideCondition != null) {\n      obj.nextSlideCondition = AjfCondition.fromJson(obj.nextSlideCondition);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return AjfField.create(fieldType, obj);\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'fieldType', 'description',\n      'editable', 'formula', 'validation', 'warning', 'hasChoices', 'defaultValue', 'size',\n      'nextSlideCondition'\n    ]);\n\n    this._description         = obj && obj.description         || null;\n    this._formula             = obj && obj.formula             || null;\n    this._validation          = obj && obj.validation          || null;\n    this._warning             = obj && obj.warning             || null;\n    this._attachmentsOrigin   = obj && obj.attachmentsOrigin   || null;\n    this.defaultValue         = obj && obj.defaultValue != null ? obj.defaultValue : null;\n    this._size                = obj && obj.size                || 'normal';\n    this._nextSlideCondition  = obj && obj.nextSlideCondition  || null;\n\n    this.setHasAttachments(this._attachmentsOrigin && true || false);\n\n    this._hasChoices = false;\n    this.setEditable();\n  }\n\n  /**\n   * this method will set the editable value of the field\n   * @param editable : boolean\n   */\n  protected setEditable(editable = true) {\n    this._editable = editable;\n  }\n\n  /**\n   * this method will set the HasChoices value of the field\n   * @param hasChoices : boolean\n   */\n  protected setHasChoices(hasChoices: boolean) {\n    this._hasChoices = hasChoices;\n  }\n\n  /**\n   * this method will set the hasAttachments value of the field\n   * @param hasAttachments : boolean\n   */\n  protected setHasAttachments(hasAttachments: boolean) {\n    this._hasAttachments = hasAttachments;\n  }\n\n  abstract validateValue(defaultValue: any): boolean;\n}\n\n/**\n * This class will define an ajf empty field\n */\nexport class AjfEmptyField extends AjfField {\n  HTML: string;\n\n  validateValue(_: any): boolean {\n    return true;\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'HTML'\n    ]);\n    this.HTML = obj && obj.HTML || null;\n  }\n}\n\n/**\n * This class will define an ajf string field\n */\nexport class AjfStringField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\n/**\n * This class will define an ajf text field\n */\n\nexport class AjfTextField extends AjfStringField {\n}\n\n/**\n * This class will define an ajf number field\n */\nexport class AjfNumberField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === parseInt(value, 10) || value === parseFloat(value);\n  }\n}\n\n/**\n * This class will define an ajf boolean field\n */\nexport class AjfBooleanField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === !!value;\n  }\n\n  getMaxConditionalBranches(): number {\n    return 2;\n  }\n}\n\n/**\n * This class will define an ajf field with choices\n */\nexport class AjfFieldWithChoices extends AjfField {\n  choicesOrigin: IAjfChoicesOrigin;\n  choicesFilter: AjfFormula;\n  forceExpanded: boolean;\n  forceNarrow: boolean;\n  triggerConditions: AjfCondition[];\n\n  get choices(): any[] {\n    return this.choicesOrigin && this.choicesOrigin.getChoices() || [];\n  }\n\n  get choicesOriginRef(): string {\n    return this.choicesOrigin.getName();\n  }\n\n  validateValue(_: any): boolean {\n    return true;\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([\n        'choicesOriginRef', 'choicesFilter',\n        'forceExpanded', 'forceNarrow', 'triggerConditions'\n      ]);\n\n    this.choicesOrigin     = obj && obj.choicesOrigin     || null;\n    this.choicesFilter     = obj && obj.choicesFilter     || null;\n    this.forceExpanded     = obj && obj.forceExpanded     || false;\n    this.forceNarrow       = obj && obj.forceNarrow       || false;\n    this.triggerConditions = obj && obj.triggerConditions || null;\n\n    this.setHasChoices(true);\n  }\n}\n\n/**\n * This class will define an ajf field with SingleChoice\n */\nexport class AjfSingleChoiceField extends AjfFieldWithChoices {\n  constructor(obj?: any) {\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    return value == null || this.choices.filter(x => x === value).length > 0;\n  }\n\n  getMaxConditionalBranches(): number {\n    return Math.max(1, this.choices.length + 1);\n  }\n}\n\n/**\n * This class will define an ajf field with MultipleChoice\n */\nexport class AjfMultipleChoiceField extends AjfSingleChoiceField {\n  constructor(obj?: any) {\n    let defaultValue = obj && obj.defaultValue || [];\n    obj = {...obj || {}, defaultValue};\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    if (value instanceof Array) {\n      let i = 0;\n      let l: number = value.length;\n      let good = true;\n      while (good && i < l) {\n        good = super.validateValue(value[i++]);\n      }\n      return good;\n    } else {\n      return super.validateValue(value);\n    }\n  }\n\n  getMaxConditionalBranches(): number {\n    let total = 0;\n    let l: number = this.choices.length;\n    let f: number[] = [1];\n\n    for (let i = 1; i <= l; i++) {\n      f.push(factorial(i));\n    }\n\n    for (let i = 1; i <= l; i++) {\n      total += f[l] / (f[i] * f[l - i]);\n    }\n\n    return total;\n  }\n}\n\n/**\n * This class will define an formula field\n */\nexport class AjfFormulaField extends AjfNumberField {\n  constructor(obj?: any) {\n    super(obj);\n    this.setEditable(false);\n  }\n}\n\n/**\n * This class will define an ajf date field\n */\nexport class AjfDateField extends AjfField {\n  minDate: Date | 'today';\n  maxDate: Date | 'today';\n\n  minDateValue: Date;\n  maxDateValue: Date;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['maxDate', 'minDate']);\n\n    this.minDate = obj && obj.minDate || null;\n    this.maxDate = obj && obj.maxDate || null;\n\n    this.minDateValue = this.minDate === 'today' ? new Date() : <Date>this.minDate;\n    this.maxDateValue = this.maxDate === 'today' ? new Date() : <Date>this.maxDate;\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\n\nexport class AjfDateInputField extends AjfField {\n  constructor(obj?: any) {\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\nexport class AjfTimeField extends AjfField {\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([]);\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\nexport class AjfTableField extends AjfField {\n  rows: string[][];\n  columnLabels: string[] = [];\n  rowLabels: string[] = [];\n  hideEmptyRows: boolean = false;\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.setEditable(obj && obj.editable || false);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n      [ 'rows', 'columnLabels', 'rowLabels' ]);\n\n    this.rows = obj && obj.rows || [];\n    this.columnLabels = obj && obj.columnLabels || [];\n    this.rowLabels = obj && obj.rowLabels || [];\n    this.hideEmptyRows = obj && obj.hideEmptyRows || false;\n  }\n\n  validateValue(value: any): boolean { return value === value.toString(); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfJsonSerializable} from '@ajf/core/models';\n\n\n/**\n * This class will define an ajf warning result\n */\nexport class AjfWarningResult {\n\n  result: boolean;\n  warning: string;\n\n  /**\n   * this constructor will assign the parameters value to a class variables\n   * @param res : boolean\n   * @param wrn : string\n   */\n  constructor(res: boolean, wrn: string) {\n    this.result = res;\n    this.warning = wrn;\n  }\n}\n\n/**\n * This class will define an ajf warning\n */\nexport class AjfWarning extends AjfCondition {\n  warningMessage: string;\n\n  /**\n   * this static method will load an AjfWarning from json\n   * @param obj  : any - object warning\n   * @return AjfWarning\n   */\n  static fromJson(obj: any): AjfWarning { return new AjfWarning(obj); }\n\n  static getNotEmptyWarning(): AjfWarning {\n    return new AjfWarning({\n      condition : `notEmpty($value)`,\n      warningMessage : `Value must not be empty`\n    });\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables and call\n   * super()\n   */\n  constructor(obj?: any) {\n    super(obj);\n    this.warningMessage = obj && obj.warningMessage || 'Undefined Error';\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['warningMessage']);\n  }\n\n  /**\n   * this public method will evaluate context or forceFormula\n   * @param context      : any - context\n   * @param forceFormula : string - formula\n   * @return AjfWarningResult\n   */\n  evaluate(context?: any, forceFormula?: string): AjfWarningResult {\n    return new AjfWarningResult(super.evaluate(context, forceFormula),\n                                this.warningMessage);\n  }\n}\n\n/**\n * This class will define an ajf warning group\n */\nexport class AjfWarningGroup extends AjfJsonSerializable {\n  notEmpty: AjfWarning | null;\n  conditions: AjfWarning[];\n\n  /**\n   * this static method will load an AjfWarningGroup from json\n   * @param obj  : any - object warningGroup\n   * @return AjfValidationGroup\n   */\n  static fromJson(obj: any): AjfWarningGroup {\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('notEmpty') > -1) {\n      obj.notEmpty = AjfWarning.getNotEmptyWarning();\n    }\n\n    if (keys.indexOf('conditions') > -1 && obj.conditions instanceof Array) {\n      let conditions: AjfCondition[] = [];\n      for (let c of obj.conditions) {\n        conditions.push(AjfWarning.fromJson(c));\n      }\n      obj.conditions = conditions;\n    }\n\n    return new AjfWarningGroup(obj);\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables\n   * @param obj : any\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.notEmpty = obj && obj.notEmpty || null;\n    this.conditions = obj && obj.conditions || null;\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['notEmpty', 'conditions']);\n  }\n\n  /**\n   * this protected method evaluate conditions\n   * @param context : any\n   * @return AjfWarningResult[]\n   */\n  protected _evaluateConditions(context: any): AjfWarningResult[] {\n    let res: AjfWarningResult[] = [];\n    this.conditions.forEach((cond) => {\n      res.push(cond.evaluate(context));\n    });\n    return res;\n  }\n\n  /**\n   * this public method evaluate\n   * @param value   : any\n   * @param context : any\n   * @return AjfWarningResult[]\n   */\n  evaluate(context?: any): AjfWarningResult[] {\n    let res: AjfWarningResult[] = this._evaluateConditions(context);\n    return res;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport class AjfValidationResult {\n\n  result: boolean;\n  error: string;\n  clientValidation: boolean;\n\n  /**\n   * this constructor will assign the parameters value to a class variables\n   * @param res : boolean\n   * @param err : string\n   * @cVal : boolean\n   */\n  constructor(res: boolean, err: string, cVal: boolean) {\n    this.result = res;\n    this.error = err;\n    this.clientValidation = cVal;\n  }\n}\n\n/**\n * This class will define an ajf validation\n */\nexport class AjfValidation extends AjfCondition {\n  clientValidation: boolean;\n  errorMessage: string;\n\n  /**\n   * this static method will load an AjfValidation from json\n   * @param obj  : any - object validation\n   * @return AjfValidation\n   */\n  static fromJson(obj: any): AjfValidation {\n    obj = deepCopy(obj);\n    return new AjfValidation(obj);\n  }\n\n  /**\n   * this static method will get an ajfValidation with maxValue setted\n   * @param maxValue : number - max value\n   * @return AjfValidation\n   */\n  static getMaxCondition(maxValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : '$value <= ' + maxValue.toString(),\n      errorMessage : 'Value must be <= ' + maxValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with minValue setted\n   * @param minValue : number - min value\n   * @return AjfValidation\n   */\n  static getMinCondition(minValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : '$value >= ' + minValue.toString(),\n      errorMessage : 'Value must be >= ' + minValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with notEmpty setted\n   * @return AjfValidation\n   */\n  static getNotEmptyCondition(): AjfValidation {\n    return new AjfValidation({\n      condition : `notEmpty($value)`,\n      errorMessage : `Value must not be empty`\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with maxDigit setted\n   * @return AjfValidation\n   */\n  static getMaxDigitsCondition(maxValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : `$value ? $value.toString().length <= ${maxValue.toString()} : false`,\n      errorMessage : 'Digits count must be <= ' + maxValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with minDigit setted\n   * @return AjfValidation\n   */\n  static getMinDigitsCondition(minValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n      errorMessage : 'Digits count must be >= ' + minValue.toString()\n    });\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables and call\n   * super()\n   */\n  constructor(obj?: any) {\n    super(obj);\n    this.clientValidation = obj && obj.clientValidation || false;\n    this.errorMessage = obj && obj.errorMessage || 'Undefined Error';\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['clientValidation', 'errorMessage']);\n  }\n\n  /**\n   * this public method will evaluate context or forceFormula\n   * @param context      : any - context\n   * @param forceFormula : string - formula\n   * @return AjfValidationResult\n   */\n  evaluate(context?: any, forceFormula?: string): AjfValidationResult {\n    return new AjfValidationResult(super.evaluate(context, forceFormula),\n                                   this.errorMessage, this.clientValidation);\n  }\n}\n\n/**\n * This class will define an ajf validation group\n */\nexport class AjfValidationGroup extends AjfJsonSerializable {\n  forceValue: AjfCondition;\n  maxValue: AjfValidation | null;\n  minValue: AjfValidation | null;\n  notEmpty: AjfValidation | null;\n  maxDigits: AjfValidation | null;\n  minDigits: AjfValidation | null;\n  conditions: AjfValidation[];\n\n  /**\n   * this static method will load an AjfValidationGroup from json\n   * @param obj  : any - object validationGroup\n   * @return AjfValidationGroup\n   */\n  static fromJson(obj: any): AjfValidationGroup {\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('maxValue') > -1 && typeof obj.maxValue === 'number') {\n      obj.maxValue = AjfValidation.getMaxCondition(obj.maxValue);\n    }\n\n    if (keys.indexOf('minValue') > -1 && typeof obj.minValue === 'number') {\n      obj.minValue = AjfValidation.getMinCondition(obj.minValue);\n    }\n\n    if (keys.indexOf('notEmpty') > -1) {\n      obj.notEmpty = AjfValidation.getNotEmptyCondition();\n    }\n\n    if (keys.indexOf('forceValue') > -1) {\n      obj.forceValue = AjfCondition.fromJson(obj.forceValue);\n    }\n\n    if (keys.indexOf('maxDigits') > -1 && typeof obj.maxDigits === 'number') {\n      obj.maxDigits = AjfValidation.getMaxDigitsCondition(obj.maxDigits);\n    }\n\n    if (keys.indexOf('minDigits') > -1 && typeof obj.minDigits === 'number') {\n      obj.minDigits = AjfValidation.getMinDigitsCondition(obj.minDigits);\n    }\n\n    if (keys.indexOf('conditions') > -1 && obj.conditions instanceof Array) {\n      let conditions: AjfCondition[] = [];\n      for (let c of obj.conditions) {\n        conditions.push(AjfValidation.fromJson(c));\n      }\n      obj.conditions = conditions;\n    }\n\n    return new AjfValidationGroup(obj);\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables\n   * @param obj : any\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.forceValue = obj && obj.forceValue || null;\n    this.maxValue = obj && obj.maxValue || null;\n    this.minValue = obj && obj.minValue || null;\n    this.notEmpty = obj && obj.notEmpty || null;\n    this.maxDigits = obj && obj.maxDigits || null;\n    this.minDigits = obj && obj.minDigits || null;\n    this.conditions = obj && obj.conditions || [];\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([\n        'forceValue', 'maxValue', 'minValue', 'notEmpty',\n        'maxDigits', 'minDigits', 'conditions'\n      ]);\n  }\n\n  toJson(): any {\n    const json: any = {};\n    if (this.forceValue != null) {\n      json['forceValue'] = true;\n    }\n\n    if (this.maxValue != null) {\n      json['maxValue'] = this.maxValue.condition.replace('$value <= ', '');\n    }\n\n    if (this.minValue != null) {\n      json['minValue'] = this.minValue.condition.replace('$value >= ', '');\n    }\n\n    if (this.notEmpty != null) {\n      json['notEmpty'] = true;\n    }\n\n    if (this.maxDigits != null) {\n      json['maxDigits'] = this.maxDigits.condition.replace(\n        '$value ? $value.toString().length <=  : false', '');\n    }\n\n    if (this.minDigits != null) {\n      json['minDigits'] = this.minDigits.condition.replace(\n        '$value ? $value.toString().length >=  : false', '');\n    }\n\n    if (this.conditions != null) {\n      json['conditions'] = this.conditions.map(c => c.toJson());\n    }\n\n    return json;\n  }\n\n  /**\n   * this protected method evaluate max value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateMaxValue(value: any) {\n    if (this.maxValue == null) { return null; }\n    return this.maxValue.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate min value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateMinvalue(value: any) {\n    if (this.minValue == null) { return null; }\n    return this.minValue.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate not empty value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateNotEmpty(value: any) {\n    if (this.notEmpty == null) { return null; }\n    return this.notEmpty.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate conditions\n   * @param context : any\n   * @return AjfValidationResult[]\n   */\n  protected _evaluateConditions(context: any): AjfValidationResult[] {\n    let res: AjfValidationResult[] = [];\n    this.conditions.forEach((cond) => {\n      res.push(cond.evaluate(context));\n    });\n    return res;\n  }\n\n  /**\n   * this public method evaluate\n   * @param value   : any\n   * @param context : any\n   * @return AjfValidationResult[]\n   */\n  evaluate(value: any, context?: any): AjfValidationResult[] {\n    let res: AjfValidationResult[] = [];\n    let ctx = deepCopy(context);\n    ctx['$value'] = value;\n    res = this._evaluateConditions(ctx);\n    if (this.maxValue) {\n      const maxValue = this._evaluateMaxValue(value);\n      if (maxValue != null) {\n        res.push();\n      }\n    }\n    if (this.minValue) {\n      const minValue = this._evaluateMinvalue(value);\n      if (minValue != null) {\n        res.push(minValue);\n      }\n    }\n    if (this.notEmpty) {\n      const notEmpty = this._evaluateNotEmpty(value);\n      if (notEmpty != null) {\n        res.push(notEmpty);\n      }\n    }\n    if (this.maxDigits) {\n      res.push(this.maxDigits.evaluate({'$value' : value}));\n    }\n    if (this.minDigits) {\n      res.push(this.minDigits.evaluate({'$value' : value}));\n    }\n    return res;\n  }\n  /**\n   * this public method evaluate force value\n   * @param context : any\n   * @return string\n   */\n  evaluateForceValue(context: any) {\n    return this.forceValue.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function factorial(n: number): number {\n  let f = 1;\n  for (let i: number = n; i > 1; i--) {\n    f = f * i;\n  }\n  return f;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  get name(): string { return 'AjfInvalidFieldDefinitionError'; }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {getTypeName} from './get-type-name';\n\nexport enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH\n}\n\nexport interface IAjfChoicesOrigin {\n  getType(): string;\n  getName(): string;\n  getLabel(): string;\n  getChoices(): Array<any>;\n  getChoicesType(): any;\n  setName(name: string): void;\n  setLabel(label: string): void;\n}\n\nexport class AjfChoice<T> extends AjfJsonSerializable {\n  label: string;\n  value: T;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.label = obj && obj.label || '';\n    this.value = obj && obj.value || null;\n  }\n}\n\nexport abstract class AjfChoicesOrigin<T> extends AjfJsonSerializable implements\n    IAjfChoicesOrigin {\n  private _name: string;\n  private _label: string;\n  private _choicesType: string;\n\n  static create(type: string, obj?: any): any {\n    switch (type) {\n    case 'string':\n      return new AjfChoicesFixedOrigin<string>(obj);\n    case 'number':\n      return new AjfChoicesFixedOrigin<number>(obj);\n    default:\n      return null;\n    }\n  }\n\n  static fromJson(obj: any): AjfChoicesOrigin<any> {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n    if (keys.indexOf('type') === -1) {\n      throw new Error('Choices origin type missing type');\n    }\n    let type: string = obj.type;\n    delete obj.type;\n    switch (type) {\n    case 'fixed':\n      return new AjfChoicesFixedOrigin<any>(obj);\n    case 'function':\n      return new AjfChoicesFunctionOrigin<any>(obj);\n    case 'observable':\n      return new AjfChoicesObservableOrigin<any>(obj);\n    case 'observableArray':\n      return new AjfChoicesObservableArrayOrigin<any>(obj);\n    case 'promise':\n      return new AjfChoicesObservableOrigin<any>(obj);\n    default:\n      throw new Error('Invalid choices origin type');\n    }\n  }\n\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n        [ 'type', 'name', 'label', 'choicesType' ]);\n\n    this._name = obj && obj.name || null;\n    this._label = obj && obj.label || null;\n    this._choicesType = obj && obj.choicesType || null;\n  }\n\n  abstract getType(): string;\n\n  getName(): string { return this._name; }\n\n  getLabel(): string { return this._label; }\n\n  setName(name: string): void { this._name = name; }\n\n  setLabel(label: string): void { this._label = label; }\n\n  abstract getChoices(): Array<AjfChoice<T>>;\n\n  getChoicesType(): string {\n    return this._choicesType || this._guessChoicesType();\n  }\n\n  private _guessChoicesType(): string {\n    let cs = this.getChoices();\n    if (cs && cs.length > 0) {\n      this._choicesType = getTypeName(cs[0].value);\n    }\n    return this._choicesType;\n  }\n}\n\nexport interface IAjfChoicesFunction<T> extends Function { (): AjfChoice<T>[]; }\n\nexport class AjfChoicesFixedOrigin<T> extends AjfChoicesOrigin<T> {\n  private _choices: AjfChoice<T>[];\n\n  getType(): string { return 'fixed'; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('choices');\n\n    this._choices = obj && <AjfChoice<T>[]>obj.choices || [];\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._choices; }\n\n  setChoices(choices: AjfChoice<T>[]) { this._choices = choices.slice(0); }\n}\n\nexport class AjfChoicesFunctionOrigin<T> extends AjfChoicesOrigin<T> {\n  private _generator: IAjfChoicesFunction<T>;\n  get generator(): IAjfChoicesFunction<T> { return this._generator; }\n\n  getType(): string { return 'function'; }\n\n  constructor(generator: IAjfChoicesFunction<T>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('generator');\n\n    this._generator = generator;\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._generator(); }\n}\n\nexport class AjfChoicesObservableOrigin<T> extends AjfChoicesOrigin<T> {\n  private _currentChoices: AjfChoice<T>[] = [];\n  private _subscription: Subscription = Subscription.EMPTY;\n\n  get observable(): Observable<AjfChoice<T>> {\n    return this._observable;\n  }\n\n  getType(): string { return 'observable'; }\n\n  constructor(private _observable: Observable<AjfChoice<T>>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('observable');\n\n    let self = this;\n    this._subscription = _observable.subscribe(\n        (x: AjfChoice<T>) => self._currentChoices.push(x));\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._currentChoices.splice(0); }\n\n  destroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nexport class AjfChoicesObservableArrayOrigin<T> extends AjfChoicesOrigin<T> {\n  private _currentChoices: AjfChoice<T>[] = [];\n  private _subscription: Subscription = Subscription.EMPTY;\n\n  get observable(): Observable<AjfChoice<T>[]> {\n    return this._observable;\n  }\n\n  getType(): string { return 'observableArray'; }\n\n  constructor(private _observable: Observable<AjfChoice<T>[]>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('observable');\n\n    let self = this;\n    this._subscription = _observable.subscribe(\n        (x: AjfChoice<T>[]) => self._currentChoices = x.splice(0));\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._currentChoices.splice(0); }\n\n  destroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nexport class AjfChoicesPromiseOrigin<T> extends AjfChoicesOrigin<T> {\n  private _choices: AjfChoice<T>[] = [];\n\n  getType(): string { return 'promise'; }\n\n  constructor(promise: Promise<AjfChoice<T>[]>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('promise');\n\n    promise.then((x: AjfChoice<T>[]) => { this._choices = x.splice(0); });\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._choices.splice(0); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function getTypeName(v: any): string {\n  let typeStr = typeof v;\n  return typeStr === 'object'\n    ? v.constructor.toString().match(/\\w+/g)[1]\n    : typeStr;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\n\nexport enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH\n}\n\nexport interface IAjfAttachment {\n  label: string;\n  value: any;\n  type: string;\n}\n\n/**\n * This class will define an ajf attachment\n */\nexport class AjfAttachment<T> {\n  get label(): string { return this._label; }\n  get value(): T { return this._value; }\n  get type(): string { return this._type; }\n\n  private _label: string;\n  private _value: T;\n  private _type: string;\n\n  constructor(obj?: any) {\n    this._label = obj && obj.label || null;\n    this._value = obj && obj.value || null;\n    this._type = obj && obj.type || null;\n  }\n}\n\n/**\n * This class will define an ajf attachments orgin\n */\nexport abstract class AjfAttachmentsOrigin {\n  private _name: string;\n\n  /**\n   * this static method will create attachment\n   * @param obj : any - object attachment\n   * @return AjfAttachment\n   */\n  static create(obj: any): any {\n    let attachments: IAjfAttachment[] = [];\n    if (obj.attachments instanceof Array) {\n      for (let i = 0; i < obj.attachments.length; i++) {\n        let att: any = obj.attachments[i];\n        switch (att.type) {\n        case AjfAttachmentsType.Link:\n          attachments.push(new AjfAttachment<string>(att));\n          break;\n        case AjfAttachmentsType.Pdf:\n          attachments.push(new AjfAttachment<string>(att));\n          break;\n        default:\n          throw new Error('Invalid attachment type');\n        }\n      }\n    }\n    obj.attachments = attachments;\n    return new AjfAttachmentsFixedOrigin(obj);\n  }\n  /**\n   * this static method will load an AjfAttachmentsOrigin from json\n   * @param obj : any - object Attachments\n   * @return AjfAttachmentsOrigin\n   */\n  static fromJson(obj: any): AjfAttachmentsOrigin {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n    if (keys.indexOf('type') === -1) {\n      throw new Error('Attachments origin type missing type');\n    }\n    let type: string = obj.type;\n    delete obj.type;\n    switch (type) {\n    case 'fixed':\n      return AjfAttachmentsFixedOrigin.create(obj);\n    default:\n      throw new Error('Invalid attachment origin type');\n    }\n  }\n\n  getName(): string { return this._name; }\n\n  constructor(obj?: any) { this._name = obj && obj.name || null; }\n\n  abstract getAttachments(): IAjfAttachment[];\n}\n/**\n * This class will define an ajf attachments fixed origin\n */\nexport class AjfAttachmentsFixedOrigin extends AjfAttachmentsOrigin {\n  private _attachments: IAjfAttachment[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this._attachments = obj && obj.attachments || [];\n  }\n\n  getAttachments(): IAjfAttachment[] { return this._attachments; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["AjfJsonSerializable","deepCopy","tslib_1.__extends","NgModule","Pipe","withLatestFrom","delayWhen","coerceBooleanProperty","map","EventEmitter","Subscription","Injectable","tokenize","FormControl","share","scan","timer","startWith","pairwise","debounceTime","filter","FormGroup","publishReplay","refCount","Observable","BehaviorSubject","Subject","esprimaMod","((/** @type {?} */ (esprima))).default","esprima","AjfValidatedProperty","AjfFormula","AjfCondition","ReplaySubject","tslib_1.__assign","AjfError"],"mappings":"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"}