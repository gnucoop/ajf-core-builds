{"version":3,"file":"core-forms.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/core/forms/base-field.ts","../../src/core/forms/date-value.ts","../../src/core/forms/date-value-string.ts","../../src/core/forms/errors.ts","../../src/core/forms/interface/fields/field-type.ts","../../src/core/forms/field-utils.ts","../../src/core/forms/field-icon.ts","../../src/core/forms/field-is-valid.ts","../../src/core/forms/field.ts","../../src/core/forms/field-host.ts","../../src/core/forms/utils/fields/fields-map.ts","../../src/core/forms/field-service.ts","../../src/core/forms/field-with-choices.ts","../../src/core/forms/interface/nodes/node-type.ts","../../src/core/forms/utils/fields/is-custom-field-with-choices.ts","../../src/core/forms/utils/fields/is-field-with-choices.ts","../../src/core/forms/utils/nodes/is-field.ts","../../src/core/forms/utils/nodes-instances/is-field-instance.ts","../../src/core/forms/utils/fields-instances/is-field-with-choices-instance.ts","../../src/core/forms/utils/fields-instances/is-table-field-instance.ts","../../src/core/forms/utils/fields/is-table-field.ts","../../src/core/forms/utils/nodes-instances/update-conditional-branches.ts","../../src/core/forms/utils/nodes-instances/update-visibility.ts","../../src/core/forms/utils/nodes-instances/node-instance-suffix.ts","../../src/core/forms/utils/nodes-instances/node-instance-complete-name.ts","../../src/core/forms/utils/fields-instances/update-formula.ts","../../src/core/forms/utils/fields-instances/update-next-slide-condition.ts","../../src/core/forms/utils/validation/evaluate-validation.ts","../../src/core/forms/utils/validation/evaluate-validation-group.ts","../../src/core/forms/utils/validation/evaluate-validation-conditions.ts","../../src/core/forms/utils/validation/evaluate-validation-max-value.ts","../../src/core/forms/utils/validation/evaluate-validation-min-value.ts","../../src/core/forms/utils/validation/evaluate-validation-not-empty.ts","../../src/core/forms/utils/validation/evaluate-validation-max-digits.ts","../../src/core/forms/utils/validation/evaluate-validation-min-digits.ts","../../src/core/forms/utils/fields-instances/update-validation.ts","../../src/core/forms/utils/warning/evaluate-warning-conditions.ts","../../src/core/forms/utils/warning/evaluate-warning.ts","../../src/core/forms/utils/fields-instances/update-warning.ts","../../src/core/forms/utils/warning/evaluate-warning-group.ts","../../src/core/forms/utils/fields-instances/update-filtered-choices.ts","../../src/core/forms/utils/nodes/create-node.ts","../../src/core/forms/utils/fields/create-field.ts","../../src/core/forms/utils/nodes/is-slides-node.ts","../../src/core/forms/utils/nodes/is-container-node.ts","../../src/core/forms/utils/nodes-instances/flatten-nodes-instances.ts","../../src/core/forms/utils/nodes-instances/is-container-node-instance.ts","../../src/core/forms/utils/nodes-instances/is-slides-instance.ts","../../src/core/forms/utils/nodes-instances/is-node-group-instance.ts","../../src/core/forms/utils/nodes/is-node-group.ts","../../src/core/forms/utils/nodes-instances/is-slide-instance.ts","../../src/core/forms/utils/nodes/is-slide-node.ts","../../src/core/forms/utils/nodes-instances/create-node-instance.ts","../../src/core/forms/utils/fields-instances/create-field-instance.ts","../../src/core/forms/utils/fields-instances/create-field-with-choices-instance.ts","../../src/core/forms/utils/slides-instances/create-slide-instance.ts","../../src/core/forms/utils/validation/create-validation-group.ts","../../src/core/forms/utils/warning/create-warning-group.ts","../../src/core/forms/utils/nodes/is-repeating-container-node.ts","../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes-names.ts","../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes.ts","../../src/core/forms/utils/nodes-instances/get-instance-condition.ts","../../src/core/forms/utils/nodes-instances/get-instance-conditions.ts","../../src/core/forms/utils/nodes-instances/get-instance-formula.ts","../../src/core/forms/utils/validation/create-validation.ts","../../src/core/forms/utils/nodes-instances/get-instance-validations.ts","../../src/core/forms/utils/nodes-instances/get-instance-validation.ts","../../src/core/forms/utils/warning/create-warning.ts","../../src/core/forms/utils/nodes-instances/get-instance-warnings.ts","../../src/core/forms/utils/nodes-instances/get-instance-warning.ts","../../src/core/forms/utils/nodes-instances/is-repeating-slide-instance.ts","../../src/core/forms/utils/nodes/is-repeating-slide.ts","../../src/core/forms/utils/nodes-instances/node-to-node-instance.ts","../../src/core/forms/utils/fields-instances/create-table-field-instance.ts","../../src/core/forms/utils/nodes-instances/create-node-group-instance.ts","../../src/core/forms/utils/slides-instances/create-repeating-slide-instance.ts","../../src/core/forms/utils/nodes/flatten-nodes.ts","../../src/core/forms/utils/nodes/ordered-nodes.ts","../../src/core/forms/utils/slides-instances/update-reps-num.ts","../../src/core/forms/validation-service.ts","../../src/core/forms/form-renderer.ts","../../src/core/forms/utils/slides-instances/valid-slide.ts","../../src/core/forms/utils/fields-instances/update-field-instance-state.ts","../../src/core/forms/utils/fields-instances/update-trigger-conditions.ts","../../src/core/forms/utils/nodes-instances/flatten-nodes-instances-tree.ts","../../src/core/forms/form.ts","../../src/core/forms/bool-to-int.ts","../../src/core/forms/expand-input-with-choices.ts","../../src/core/forms/increment.ts","../../src/core/forms/is-repeating-slide.ts","../../src/core/forms/node-complete-name.ts","../../src/core/forms/range.ts","../../src/core/forms/table-row-class.ts","../../src/core/forms/table-visible-columns.ts","../../src/core/forms/valid-slide.ts","../../src/core/forms/forms-module.ts","../../src/core/forms/input-field.ts","../../src/core/forms/search-alert-threshold.ts","../../src/core/forms/serializers/attachments-origin-serializer.ts","../../src/core/forms/utils/attachments/create-attachments-origin.ts","../../src/core/forms/utils/choices/create-choices-origin.ts","../../src/core/forms/serializers/choices-origin-serializer.ts","../../src/core/forms/utils/nodes/create-container-node.ts","../../src/core/forms/utils/nodes/create-repeating-node.ts","../../src/core/forms/utils/nodes/create-node-group.ts","../../src/core/forms/utils/slides/create-repeating-slide.ts","../../src/core/forms/utils/slides/create-slide.ts","../../src/core/forms/serializers/validation-group-serializer.ts","../../src/core/forms/serializers/warning-group-serializer.ts","../../src/core/forms/serializers/node-serializer.ts","../../src/core/forms/utils/fields/create-field-with-choices.ts","../../src/core/forms/serializers/form-serializer.ts","../../src/core/forms/interface/attachments/attachments-type.ts","../../src/core/forms/interface/choices/choices-type.ts","../../src/core/forms/utils/choices/is-choices-origin.ts","../../src/core/forms/utils/choices/create-choices-fixed-origin.ts","../../src/core/forms/utils/choices/create-choices-function-origin.ts","../../src/core/forms/utils/choices/create-choices-observable-array-origin.ts","../../src/core/forms/utils/choices/create-choices-observable-origin.ts","../../src/core/forms/utils/choices/create-choices-promise-origin.ts","../../src/core/forms/utils/forms/create-form.ts","../../src/core/forms/get-type-name.ts","../../src/core/forms/utils/choices/init-choices-origin.ts","../../src/core/forms/utils/choices/is-choices-fixed-origin.ts","../../src/core/forms/utils/fields/is-number-field.ts","../../src/core/forms/utils/validation/max-digits-validation.ts","../../src/core/forms/utils/validation/max-validation.ts","../../src/core/forms/utils/validation/min-digits-validation.ts","../../src/core/forms/utils/validation/min-validation.ts","../../src/core/forms/utils/validation/not-empty-validation.ts","../../src/core/forms/utils/warning/not-empty-warning.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, OnDestroy, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfBaseFieldComponent<T extends AjfFieldInstance = AjfFieldInstance>\n    implements OnDestroy, OnInit {\n  private _instance: T;\n  get instance(): T { return this._instance; }\n  set instance(instance: T) {\n    if (instance !== this._instance) {\n      this._instance = instance;\n      this._setUpInstanceUpdate();\n      this._onInstanceChange();\n    }\n  }\n\n  private _control: Observable<AbstractControl | null>;\n  get control(): Observable<AbstractControl | null> { return this._control; }\n\n  private _warningTriggerSub: Subscription = Subscription.EMPTY;\n  private _instanceUpdateSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    protected _changeDetectorRef: ChangeDetectorRef,\n    private _service: AjfFormRendererService,\n    private _warningAlertService: AjfWarningAlertService,\n  ) {\n    this._control = defer(() => this._service.getControl(this.instance).pipe(\n      map(ctrl => ctrl || new FormControl()),\n    ));\n  }\n\n  ngOnInit(): void {\n    this._warningTriggerSub = this.instance.warningTrigger.pipe(\n      withLatestFrom(this.control),\n      filter(v => v[1] != null)\n    ).subscribe((v: [void, AbstractControl | null]) => {\n      if (this.instance.warningResults == null) { return; }\n      const control = v[1];\n      const s = this._warningAlertService.showWarningAlertPrompt(\n        this.instance.warningResults.filter(w => w.result).map(w => w.warning)\n      ).subscribe(\n        (r: AjfFieldWarningAlertResult) => {\n          if (r.result) { control!.setValue(null); }\n        },\n        (_e: any) => { if (s) { s.unsubscribe(); }},\n        () => { if (s) { s.unsubscribe(); }}\n      );\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._warningTriggerSub.unsubscribe();\n    this._instanceUpdateSub.unsubscribe();\n  }\n\n  protected _onInstanceChange(): void { }\n\n  private _setUpInstanceUpdate(): void {\n    this._instanceUpdateSub.unsubscribe();\n    if (this._instance != null) {\n      this._instanceUpdateSub = this._instance.updated.subscribe(() => {\n        if (this._changeDetectorRef) {\n          try {\n            this._changeDetectorRef.detectChanges();\n          } catch (e) { }\n        }\n      });\n    } else {\n      this._instanceUpdateSub = Subscription.EMPTY;\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfDateValue'})\nexport class AjfDateValuePipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): Date|undefined {\n    if (date == null) { return undefined; }\n    return date === 'today' ? new Date() : date as Date;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport {format} from 'date-fns';\n\n@Injectable()\n@Pipe({name: 'ajfDateValueString'})\nexport class AjfDateValueStringPipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): string|undefined {\n    if (date == null) { return undefined; }\n    const dateObj = date === 'today' ? new Date() : date;\n    return format(dateObj, 'YYYY-MM-DD');\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  get name(): string { return 'AjfInvalidFieldDefinitionError'; }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  Geolocation,\n  Barcode,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './interface/fields/field-type';\n\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${\n    typeof AjfFieldType[type] === 'string'\n    ? AjfFieldType[type].toLowerCase()\n    : type}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\n\n@Pipe({name: 'ajfFieldIcon'})\nexport class AjfFieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(\n        (field as AjfField).fieldType ? (field as AjfField).fieldType : field as AjfFieldType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\n\n@Pipe({ name: 'ajfFieldIsValid' })\nexport class AjfFieldIsValidPipe {\n    transform(fieldInstance: AjfFieldInstance): boolean {\n        if (\n            fieldInstance &&\n            fieldInstance.validationResults &&\n            fieldInstance.validationResults.length === 0\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ComponentFactoryResolver, OnInit} from '@angular/core';\n\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldHost} from './field-host';\n\nexport abstract class AjfFormField implements OnInit {\n  fieldHost: AjfFieldHost;\n\n  private _instance: AjfFieldInstance;\n  get instance(): AjfFieldInstance { return this._instance; }\n  set instance(instance: AjfFieldInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._loadComponent();\n    }\n  }\n\n  protected abstract componentsMap: AjfFieldComponentsMap;\n\n  constructor(private _cfr: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    if (this._instance == null || this.fieldHost == null) { return; }\n\n    const vcr = this.fieldHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.componentsMap[this._instance.node.fieldType];\n    if (componentDef == null) { return; }\n    const component = componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      const componentInstance = componentRef.instance;\n      componentInstance.instance = this._instance;\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            (componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n    } catch (e) { }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({selector: '[ajf-field-host]'})\nexport class AjfFieldHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap} from '../../interface/fields/field-components-map';\n\nexport const componentsMap: AjfFieldComponentsMap = {};\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {componentsMap} from './utils/fields/fields-map';\nimport {AjfFieldInstanceCreate} from './utils/fields-instances/create-field-instance';\n\nexport abstract class AjfFieldService {\n  readonly componentsMap: AjfFieldComponentsMap = componentsMap;\n\n  registerCustomField(field: {\n    fieldType: number,\n    component: Type<AjfBaseFieldComponent>,\n    createInstance?: (instance: AjfFieldInstanceCreate, context: AjfContext) => AjfFieldInstance;\n    isFieldWithChoice?: boolean,\n  }): void {\n    const {fieldType, component} = field;\n    if (fieldType < 100) {\n      throw new Error('Invalid custom field type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom field component');\n    }\n    this.componentsMap[fieldType] = field;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfFieldWithChoicesComponent<T>\n    extends AjfBaseFieldComponent<AjfFieldWithChoicesInstance<T>> {\n  private _searchThreshold: number = 6;\n  get searchThreshold(): number { return this._searchThreshold; }\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    warningAlertService: AjfWarningAlertService,\n    searchThreshold: number\n  ) {\n    super(cdr, service, warningAlertService);\n    if (searchThreshold != null) {\n      this._searchThreshold = searchThreshold;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {componentsMap} from './fields-map';\n\nexport function isCustomFieldWithChoices(field: AjfField): boolean {\n  return field.fieldType > 100\n    && componentsMap[field.fieldType] != null\n    && componentsMap[field.fieldType].isFieldWithChoice === true;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isFieldWithChoices(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.SingleChoice ||\n      field.fieldType === AjfFieldType.MultipleChoice;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isField(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfField;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isField} from '../nodes/is-field';\n\nexport function isFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isField(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isFieldWithChoicesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isFieldWithChoices((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isTableField} from '../fields/is-table-field';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isTableFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isTableField((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isTableField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Table;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateConditionalBranches(instance: AjfNodeInstance, context: AjfContext): boolean {\n  const conditionalBranches = instance.conditionalBranches;\n\n  if (conditionalBranches != null) {\n    const oldBranch = instance.verifiedBranch;\n    let idx = 0;\n    let found = false;\n    while (idx < conditionalBranches.length && !found) {\n      let verified: boolean = evaluateExpression(conditionalBranches[idx].condition, context);\n      if (verified) {\n        found = true;\n        if (idx !== instance.verifiedBranch) {\n          instance.verifiedBranch = idx;\n        }\n      }\n      idx++;\n    }\n\n    if (oldBranch !== instance.verifiedBranch) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateVisibility(\n    instance: AjfNodeInstance, context: AjfContext, branchVisibility = true): boolean {\n  if (instance.visibility == null) {\n    instance.visible = false;\n    return false;\n  }\n  const visibility: AjfCondition = instance.visibility;\n\n  const oldVisibility: boolean = instance.visible;\n  let newVisibility: boolean =\n      branchVisibility && evaluateExpression(visibility.condition, context);\n  if (newVisibility !== instance.visible) {\n    instance.visible = newVisibility;\n  }\n\n  return oldVisibility !== newVisibility;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function nodeInstanceSuffix(instance: AjfNodeInstance): string {\n  if (instance.prefix == null || instance.prefix.length == 0) {\n    return '';\n  }\n  return `__${instance.prefix.join('__')}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {nodeInstanceSuffix} from './node-instance-suffix';\n\nexport function nodeInstanceCompleteName(instance: AjfNodeInstance): string {\n  return `${instance.node.name}${nodeInstanceSuffix(instance)}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateFormula(\n    instance: AjfFieldInstance, context: AjfContext): {changed: boolean, value: any} {\n  const formula = instance.formula;\n  const editable = instance.node.editable;\n  if (formula != null && instance.visible && (!editable || (editable && instance.value == null))) {\n    let newValue: any = evaluateExpression(formula.formula, context);\n    const oldValue = instance.value;\n    if (newValue !== instance.value) {\n      instance.value = newValue;\n      context[nodeInstanceCompleteName(instance)] = instance.value;\n      context.$value = instance.value;\n    }\n    return {changed: newValue !== oldValue, value: newValue};\n  }\n  return {changed: false, value: instance.value};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\n\nexport function updateNextSlideCondition(instance: AjfFieldInstance, context: AjfContext): boolean {\n  if (instance.nextSlideCondition != null) {\n    return evaluateExpression(instance.nextSlideCondition.condition, context);\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nexport function evaluateValidation(\n    validation: AjfValidation, context?: AjfContext, forceFormula?: string): AjfValidationResult {\n  return {\n    result: evaluateExpression(validation.condition, context, forceFormula),\n    error: validation.errorMessage,\n    clientValidation: validation.clientValidation,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nimport {evaluateValidationConditions} from './evaluate-validation-conditions';\nimport {evaluateValidationMaxDigits} from './evaluate-validation-max-digits';\nimport {evaluateValidationMaxValue} from './evaluate-validation-max-value';\nimport {evaluateValidationMinDigits} from './evaluate-validation-min-digits';\nimport {evaluateValidationMinValue} from './evaluate-validation-min-value';\nimport {evaluateValidationNotEmpty} from './evaluate-validation-not-empty';\n\nexport function evaluateValidationGroup(\n    validation: AjfValidationGroup, value: any, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  let ctx = deepCopy(context);\n  ctx['$value'] = value;\n  res = evaluateValidationConditions(validation, ctx);\n  if (validation.maxValue) {\n    const maxValue = evaluateValidationMaxValue(validation, value);\n    if (maxValue != null) {\n      res.push(maxValue);\n    }\n  }\n  if (validation.minValue) {\n    const minValue = evaluateValidationMinValue(validation, value);\n    if (minValue != null) {\n      res.push(minValue);\n    }\n  }\n  if (validation.notEmpty) {\n    const notEmpty = evaluateValidationNotEmpty(validation, value);\n    if (notEmpty != null) {\n      res.push(notEmpty);\n    }\n  }\n  if (validation.maxDigits) {\n    const maxDigits = evaluateValidationMaxDigits(validation, value);\n    if (maxDigits != null) {\n      res.push(maxDigits);\n    }\n  }\n  if (validation.minDigits) {\n    const minDigits = evaluateValidationMinDigits(validation, value);\n    if (minDigits != null) {\n      res.push(minDigits);\n    }\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationConditions(\n    validation: AjfValidationGroup, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  validation.conditions.forEach((cond) => {\n    res.push(evaluateValidation(cond, context));\n  });\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.maxValue}`, ctx),\n      error: `Value must be <= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.minValue}`, ctx),\n      error: `Value must be >= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationNotEmpty(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.notEmpty == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.notEmpty === 'boolean') {\n    return {\n      result: evaluateExpression(`($value != null) === ${validation.notEmpty}`, ctx),\n      error: 'Value must not be empty',\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.notEmpty, );\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length <= ${validation.maxDigits}`, ctx),\n      error: `Digits count must be <= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length >= ${validation.minDigits}`, ctx),\n      error: `Digits count must be >= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateValidationGroup} from '../validation/evaluate-validation-group';\n\nexport function updateValidation(\n    instance: AjfFieldInstance, context: AjfContext, supplementaryInformations?: any): void {\n  const validation = instance.validation;\n  if (validation == null) {\n    return;\n  }\n\n  if (supplementaryInformations) {\n    Object.keys(supplementaryInformations).forEach((key) => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && validation && validation.forceValue) {\n    instance.value = evaluateExpression(validation.forceValue.condition, context);\n    context[completeName] = instance.value;\n    context.$value = instance.value;\n  }\n\n  if (validation != null) {\n    instance.validationResults =\n        evaluateValidationGroup(validation, context[completeName], context);\n    instance.valid = instance.validationResults.reduce(\n        (prev: boolean, x: AjfValidationResult) => prev && x.result, true);\n  } else {\n    instance.valid = true;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarning} from './evaluate-warning';\n\nexport function evaluateWarningConditions(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return warning.conditions.map(cond => evaluateWarning(cond, context));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\n\nexport function evaluateWarning(\n    warning: AjfWarning, context?: AjfContext, forceFormula?: string): AjfWarningResult {\n  return {\n    result: evaluateExpression(warning.condition, context, forceFormula),\n    warning: warning.warningMessage,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateWarningGroup} from '../warning/evaluate-warning-group';\n\nexport function updateWarning(instance: AjfFieldInstance, context: AjfContext): void {\n  const warning = instance.warning;\n  if (warning == null) {\n    return;\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && warning) {\n    instance.warningResults = evaluateWarningGroup(warning, context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarningConditions} from './evaluate-warning-conditions';\n\nexport function evaluateWarningGroup(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return evaluateWarningConditions(warning, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nexport function updateFilteredChoices(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): void {\n  if (instance.choicesFilter != null) {\n    instance.filteredChoices = instance.node.choicesOrigin.choices.filter(c => {\n      context.$choiceValue = c.value;\n      return evaluateExpression(instance.choicesFilter!.formula, context);\n    });\n  } else {\n    instance.filteredChoices = instance.node.choicesOrigin.choices;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport type AjfNodeCreate = Pick<AjfNode, 'nodeType'|'id'|'parent'|'name'>&Partial<AjfNode>;\n\nexport function createNode(node: AjfNodeCreate): AjfNode {\n  const conditionalBranches =\n      node.conditionalBranches != null && node.conditionalBranches.length > 0 ?\n      node.conditionalBranches :\n      [alwaysCondition()];\n  return {\n    ...node,\n    parentNode: node.parentNode != null ? node.parentNode : 0,\n    label: node.label || '',\n    visibility: node.visibility || alwaysCondition(),\n    conditionalBranches,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeCreate, createNode} from '../nodes/create-node';\n\nexport type AjfFieldCreate =\n    Omit<AjfNodeCreate, 'nodeType'>&Pick<AjfField, 'fieldType'>&Partial<AjfField>;\n\nexport function createField(field: AjfFieldCreate): AjfField {\n  const node = createNode({...field, nodeType: AjfNodeType.AjfField});\n  const editable = field.editable != null ?\n      field.editable :\n      field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;\n  return {\n    ...node,\n    ...field,\n    nodeType: AjfNodeType.AjfField,\n    editable,\n    defaultValue: field.defaultValue != null ? field.defaultValue : null,\n    size: field.size || 'normal',\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlidesNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfRepeatingSlide || node.nodeType === AjfNodeType.AjfSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {isSlidesNode} from './is-slides-node';\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (node.nodeType === AjfNodeType.AjfNodeGroup || isSlidesNode(node));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nimport {isContainerNodeInstance} from './is-container-node-instance';\nimport {isFieldInstance} from './is-field-instance';\n\nexport function flattenNodesInstances(\n    nodes: AjfNodeInstance[], includeGroups = false): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isFieldInstance(nodeInstance)) {\n      flatNodes.push(nodeInstance);\n    }\n    if (isContainerNodeInstance(nodeInstance)) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(\n          flattenNodesInstances((nodeInstance as AjfContainerNodeInstance).nodes, includeGroups));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isContainerNode} from '../nodes/is-container-node';\n\nexport function isContainerNodeInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isContainerNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesNode} from '../nodes/is-slides-node';\n\nexport function isSlidesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isNodeGroup} from '../nodes/is-node-group';\n\nexport function isNodeGroupInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isNodeGroup(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isNodeGroup(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlideNode} from '../nodes/is-slide-node';\n\nexport function isSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlideNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport type AjfNodeInstanceCreate = Pick<AjfNodeInstance, 'node'>&Partial<AjfNodeInstance>;\n\nexport function createNodeInstance(instance: AjfNodeInstanceCreate): AjfNodeInstance {\n  return {\n    node: instance.node,\n    prefix: instance.prefix ? [...instance.prefix] : [],\n    visible: instance.visible != null ? instance.visible : true,\n    conditionalBranches: [],\n    updatedEvt: new EventEmitter<void>()\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport type AjfFieldInstanceCreate = AjfNodeInstanceCreate&Partial<AjfFieldInstance>;\n\nexport function createFieldInstance(\n    instance: AjfFieldInstanceCreate, context: AjfContext): AjfFieldInstance {\n  const nodeInstance = createNodeInstance(instance);\n  let value: any = null;\n  if (nodeInstance.node != null && context != null) {\n    const completeName = nodeInstanceCompleteName(nodeInstance);\n    if (context[nodeInstance.node.name] != null) {\n      value = context[nodeInstance.node.name];\n    } else if (context[completeName] != null) {\n      value = context[completeName];\n    }\n  }\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    value,\n    valid: false,\n    defaultValue: instance.defaultValue != null ? instance.defaultValue : null,\n    validationResults: instance.validationResults || [],\n    warningResults: instance.warningResults || [],\n    warningTrigger: new EventEmitter<void>(),\n    updated: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfFieldWithChoicesInstanceCreate<T> =\n    AjfFieldInstanceCreate&Partial<AjfFieldWithChoicesInstance<T>>;\n\nexport function createFieldWithChoicesInstance<T>(\n    instance: AjfFieldWithChoicesInstanceCreate<T>,\n    context: AjfContext): AjfFieldWithChoicesInstance<T> {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    filteredChoices: [...instance.node.choices],\n    firstTriggerConditionDone: {},\n    selectionTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {AjfBaseSlideInstanceCreate} from './base';\n\nexport type AjfSlideInstanceCreate = AjfBaseSlideInstanceCreate&Partial<AjfSlideInstance>;\n\nexport function createSlideInstance(instance: AjfSlideInstanceCreate): AjfSlideInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    nodes: [],\n    slideNodes: [],\n    flatNodes: [],\n    valid: false,\n    position: 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\n\nexport function createValidationGroup(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\n\nexport function createWarningGroup(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfNodeGroup ||\n       node.nodeType === AjfNodeType.AjfRepeatingSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {isField} from '../nodes/is-field';\n\nimport {getAncestorRepeatingNodes} from './get-ancestor-repeating-nodes';\n\nexport function getAncestorRepeatingNodesNames(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  const nodeGroups = getAncestorRepeatingNodes(allNodes, node) as AjfNodeGroup[];\n  nodeGroups.forEach((n, idx) => (n.nodes || []).forEach((sn) => {\n    if (isField(sn)) {\n      names[sn.name] = idx;\n    }\n  }));\n  return names;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\nexport function getAncestorRepeatingNodes(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number|null = node.parent;\n  while (curParent != null) {\n    const curNode =\n        allNodes.map((n: AjfNode|AjfNodeInstance) => (n as AjfNodeInstance).node || n as AjfNode)\n            .find(n => n.id == curParent);\n    if (curNode) {\n      if (isRepeatingContainerNode(curNode)) {\n        nodeGroups.push(curNode);\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return nodeGroups;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceCondition(\n    condition: AjfCondition, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeExpression(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return {condition: newCondition};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {getInstanceCondition} from './get-instance-condition';\n\nexport function getInstanceConditions(\n    conditions: AjfCondition[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map((condition) => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceFormula(\n    formula: AjfFormula, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return {formula: newFormula};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\n\nexport function createValidation(validation: Pick<AjfValidation, 'condition'>&\n                                 Partial<AjfValidation>): AjfValidation {\n  return {\n    ...validation,\n    clientValidation: validation.clientValidation || false,\n    errorMessage: validation.errorMessage || 'Undefined Error'\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {getInstanceValidation} from './get-instance-validation';\n\nexport function getInstanceValidations(\n    validations: AjfValidation[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation[] {\n  let changed = false;\n  const newValidations = validations.map((validation) => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from '../validation/create-validation';\n\nexport function getInstanceValidation(\n    validation: AjfValidation, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeExpression(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return createValidation({condition: newValidation});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\n\nexport function createWarning(warning: Pick<AjfWarning, 'condition'>&\n                              Partial<AjfWarning>): AjfWarning {\n  return {...warning, warningMessage: warning.warningMessage || 'Undefined Warning'};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {getInstanceWarning} from './get-instance-warning';\n\nexport function getInstanceWarnings(\n    warnings: AjfWarning[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map((warning) => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from '../warning/create-warning';\n\nexport function getInstanceWarning(\n    warning: AjfWarning, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeExpression(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return createWarning({condition: newWarning});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesInstance} from '../nodes-instances/is-slides-instance';\nimport {isRepeatingSlide} from '../nodes/is-repeating-slide';\n\nexport function isRepeatingSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesInstance(nodeInstance) &&\n      isRepeatingSlide(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingSlide(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext, createCondition, createFormula, normalizeExpression, alwaysCondition\n} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfTableField} from '../../interface/fields/table-field';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {componentsMap} from '../fields/fields-map';\nimport {createFieldInstance} from '../fields-instances/create-field-instance';\nimport {\n  createFieldWithChoicesInstance\n} from '../fields-instances/create-field-with-choices-instance';\nimport {createTableFieldInstance} from '../fields-instances/create-table-field-instance';\nimport {isFieldWithChoicesInstance} from '../fields-instances/is-field-with-choices-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {createNodeGroupInstance} from '../nodes-instances/create-node-group-instance';\nimport {createRepeatingSlideInstance} from '../slides-instances/create-repeating-slide-instance';\nimport {createSlideInstance} from '../slides-instances/create-slide-instance';\nimport {createValidationGroup} from '../validation/create-validation-group';\nimport {createWarningGroup} from '../warning/create-warning-group';\n\nimport {getAncestorRepeatingNodesNames} from './get-ancestor-repeating-nodes-names';\nimport {getInstanceCondition} from './get-instance-condition';\nimport {getInstanceConditions} from './get-instance-conditions';\nimport {getInstanceFormula} from './get-instance-formula';\nimport {getInstanceValidations} from './get-instance-validations';\nimport {getInstanceWarnings} from './get-instance-warnings';\nimport {isFieldInstance} from './is-field-instance';\nimport {isNodeGroupInstance} from './is-node-group-instance';\nimport {isRepeatingSlideInstance} from './is-repeating-slide-instance';\n\nexport function nodeToNodeInstance(\n    allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[],\n    context: AjfContext): AjfNodeInstance|null {\n  let instance: AjfNodeInstance|null = null;\n  const nodeType = node.nodeType;\n  switch (nodeType) {\n    case AjfNodeType.AjfField:\n      const field = node as AjfField;\n      if (field.fieldType > 100) {\n        if (\n          componentsMap[field.fieldType] != null\n          && componentsMap[field.fieldType].createInstance != null\n        ) {\n          instance = componentsMap[field.fieldType].createInstance!(\n            {node: node as AjfField, prefix}, context);\n        } else {\n          instance = createFieldInstance({node: node as AjfField, prefix}, context);\n        }\n      } else {\n        switch (field.fieldType) {\n          case AjfFieldType.SingleChoice:\n          case AjfFieldType.MultipleChoice:\n            instance = createFieldWithChoicesInstance(\n                {node: node as AjfFieldWithChoices<any>, prefix}, context);\n            break;\n          case AjfFieldType.Table:\n            instance = createTableFieldInstance({node: node as AjfTableField, prefix}, context);\n            break;\n          default:\n            instance = createFieldInstance({node: node as AjfField, prefix}, context);\n            break;\n        }\n      }\n      break;\n    case AjfNodeType.AjfNodeGroup:\n      instance = createNodeGroupInstance({node: node as AjfNodeGroup, prefix});\n      break;\n    case AjfNodeType.AjfRepeatingSlide:\n      instance = createRepeatingSlideInstance({node: node as AjfRepeatingSlide, prefix});\n      break;\n    case AjfNodeType.AjfSlide:\n      instance = createSlideInstance({node: node as AjfSlide, prefix});\n      break;\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeExpression(oldVisibility, ancestorsNames, prefix);\n        instance.visibility = newVisibility !== oldVisibility ?\n            createCondition({condition: newVisibility}) :\n            node.visibility;\n      }\n\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = getInstanceConditions(\n        conditionalBranches, ancestorsNames, prefix);\n\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        const ngInstance = instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance;\n        const formulaReps = ngInstance.node.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n          ngInstance.formulaReps =\n              newFormula !== oldFormula ? createFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n        const fNode = fInstance.node;\n\n        if (fNode.formula) {\n          fInstance.formula = getInstanceFormula(fNode.formula, ancestorsNames, prefix);\n        }\n\n        if (fNode.validation != null) {\n          const newConditions =\n              getInstanceValidations(fNode.validation.conditions, ancestorsNames, prefix);\n          if (newConditions !== fNode.validation.conditions) {\n            fInstance.validation = createValidationGroup(fNode.validation);\n            fInstance.validation.conditions = newConditions;\n          } else {\n            fInstance.validation = fNode.validation;\n          }\n        }\n\n        if (fNode.warning != null) {\n          const newWarnings = getInstanceWarnings(fNode.warning.conditions, ancestorsNames, prefix);\n          if (newWarnings !== fNode.warning.conditions) {\n            fInstance.warning = createWarningGroup(fNode.warning);\n            fInstance.warning.conditions = newWarnings;\n          } else {\n            fInstance.warning = fNode.warning;\n          }\n        }\n\n        if (fNode.nextSlideCondition != null) {\n          fInstance.nextSlideCondition =\n              getInstanceCondition(fNode.nextSlideCondition, ancestorsNames, prefix);\n        }\n\n        if (isFieldWithChoices(fNode)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          const fwcNode = fwcInstance.node;\n          if (fwcNode.choicesFilter != null) {\n            fwcInstance.choicesFilter =\n                getInstanceFormula(fwcNode.choicesFilter, ancestorsNames, prefix);\n          }\n          if (fwcNode.triggerConditions != null) {\n            fwcInstance.triggerConditions =\n                getInstanceConditions(fwcNode.triggerConditions, ancestorsNames, prefix);\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = conditionalBranches;\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const rgInstance = instance as AjfRepeatingContainerNodeInstance;\n        rgInstance.formulaReps = rgInstance.node.formulaReps;\n      } else if (isFieldInstance(instance)) {\n        const fInstance = instance as AjfFieldInstance;\n        fInstance.validation = fInstance.node.validation;\n        fInstance.warning = fInstance.node.warning;\n        fInstance.nextSlideCondition = fInstance.node.nextSlideCondition;\n        if (isFieldWithChoicesInstance(instance)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          fwcInstance.choicesFilter = fwcInstance.node.choicesFilter;\n          fwcInstance.triggerConditions = fwcInstance.node.triggerConditions;\n        }\n        fInstance.formula = fInstance.node.formula;\n      }\n    }\n  }\n  return instance;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfTableFieldInstanceCreate = AjfFieldInstanceCreate&Partial<AjfTableFieldInstance>;\n\nexport function createTableFieldInstance(\n    instance: AjfTableFieldInstanceCreate, context: AjfContext): AjfTableFieldInstance {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    context,\n    hideEmptyRows: instance.hideEmptyRows || false,\n    controls: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from './create-node-instance';\n\nexport type AjfNodeGroupInstanceCreate = AjfNodeInstanceCreate&Partial<AjfNodeGroupInstance>;\n\nexport function createNodeGroupInstance(instance: AjfNodeGroupInstanceCreate):\n    AjfNodeGroupInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstanceCreate, createSlideInstance} from './create-slide-instance';\n\nexport type AjfRepeatingSlideInstanceCreate = Omit<AjfSlideInstanceCreate, 'node'>&\n    Pick<AjfRepeatingSlideInstance, 'node'>&Partial<AjfRepeatingSlideInstance>;\n\nexport function createRepeatingSlideInstance(instance: AjfRepeatingSlideInstanceCreate):\n    AjfRepeatingSlideInstance {\n  const slideInstance = createSlideInstance(instance);\n  return {\n    ...slideInstance,\n    node: instance.node,\n    slideNodes: [],\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from './is-container-node';\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((node as AjfContainerNode).nodes));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport function orderedNodes(nodes: AjfNode[], parent: number|null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes\n      .filter(\n          (n: AjfNode) => parent != null ? n.parent == parent : n.parent == null || n.parent === 0)\n      .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n      .forEach((n: AjfNode) => {\n        newNodes.push(n);\n        newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n      });\n  return newNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfRepeatingNodeInstance} from '../../interface/nodes-instances/repeating-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateRepsNum(instance: AjfRepeatingNodeInstance, context?: AjfContext): number {\n  const oldReps: number = instance.reps || 0;\n  context = context || {};\n  if (instance.node.formulaReps == null) {\n    const ctxReps = context[nodeInstanceCompleteName(instance)];\n    if (ctxReps != null) {\n      instance.reps = ctxReps;\n    } else if (oldReps == 0) {\n      instance.reps = 1;\n    }\n  } else {\n    let newReps = evaluateExpression(instance.node.formulaReps.formula, context);\n    if (newReps !== oldReps) {\n      instance.reps = newReps;\n    }\n  }\n  instance.canAdd = instance.node.maxReps === 0 || instance.reps < instance.node.maxReps;\n  instance.canRemove = instance.node.minReps === 0 || instance.reps > instance.node.minReps;\n  return oldReps;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'MM/DD/YYYY';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n      `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, threshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(threshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"MM\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the threshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var threshold = (res/counter)*coefficient || 0;\n          return threshold;\n        }\n      }`,\n    `var alert = function(source, property, threshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > threshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeral(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'MM-DD-YYYY';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'MM';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfExpressionUtils.utils[name] === undefined) {\n      AjfExpressionUtils.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => typeof f === 'string' ? f : f.toString())\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfExpressionUtils.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\nimport * as esprima from 'esprima';\nimport {BehaviorSubject, Observable, Subject, Subscriber, Subscription, timer} from 'rxjs';\nimport {\n  debounceTime, filter, map, pairwise, publishReplay, refCount, scan, share, startWith,\n  withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFormulaFieldInstance} from './interface/fields-instances/formula-field-instance';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfEmptyField} from './interface/fields/empty-field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from './interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfNodeGroup} from './interface/nodes/node-group';\nimport {AjfNodeType} from './interface/nodes/node-type';\nimport {AjfNodesInstancesOperation} from './interface/operations/nodes-instances-operation';\nimport {AjfRendererUpdateMapOperation} from './interface/operations/renderer-update-map-operation';\nimport {AjfRendererUpdateMap} from './interface/renderer-maps/update-map';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {isCustomFieldWithChoices} from './utils/fields/is-custom-field-with-choices';\nimport {isFieldWithChoicesInstance} from './utils/fields-instances/is-field-with-choices-instance';\nimport {isTableFieldInstance} from './utils/fields-instances/is-table-field-instance';\nimport {updateFieldInstanceState} from './utils/fields-instances/update-field-instance-state';\nimport {updateFilteredChoices} from './utils/fields-instances/update-filtered-choices';\nimport {updateFormula} from './utils/fields-instances/update-formula';\nimport {updateNextSlideCondition} from './utils/fields-instances/update-next-slide-condition';\nimport {updateTriggerConditions} from './utils/fields-instances/update-trigger-conditions';\nimport {updateValidation} from './utils/fields-instances/update-validation';\nimport {updateWarning} from './utils/fields-instances/update-warning';\nimport {createField} from './utils/fields/create-field';\nimport {isFieldWithChoices} from './utils/fields/is-field-with-choices';\nimport {flattenNodesInstances} from './utils/nodes-instances/flatten-nodes-instances';\nimport {flattenNodesInstancesTree} from './utils/nodes-instances/flatten-nodes-instances-tree';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\nimport {isNodeGroupInstance} from './utils/nodes-instances/is-node-group-instance';\nimport {isSlideInstance} from './utils/nodes-instances/is-slide-instance';\nimport {isSlidesInstance} from './utils/nodes-instances/is-slides-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\nimport {nodeInstanceSuffix} from './utils/nodes-instances/node-instance-suffix';\nimport {nodeToNodeInstance} from './utils/nodes-instances/node-to-node-instance';\nimport {updateConditionalBranches} from './utils/nodes-instances/update-conditional-branches';\nimport {updateVisibility} from './utils/nodes-instances/update-visibility';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isContainerNode} from './utils/nodes/is-container-node';\nimport {isRepeatingContainerNode} from './utils/nodes/is-repeating-container-node';\nimport {orderedNodes} from './utils/nodes/ordered-nodes';\nimport {updateRepsNum} from './utils/slides-instances/update-reps-num';\nimport {validSlide} from './utils/slides-instances/valid-slide';\nimport {AjfValidationService} from './validation-service';\n\nconst esprimaMod: any = (esprima as any).default || esprima;\nconst {tokenize} = esprimaMod;\n\nexport enum AjfFormInitStatus {\n  Initializing,\n  Complete\n}\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _visibilityNodesMap: Observable<AjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<AjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<AjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<AjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<AjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<AjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<AjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this._formInitEvent.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup | null> =\n    new BehaviorSubject<FormGroup | null>(null);\n  readonly formGroup: Observable<FormGroup | null> = this._formGroup.asObservable();\n\n  private _form: BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null> =\n      new BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<AjfNodeInstance[]>;\n  private _flatNodesTree: Observable<AjfSlideInstance[]>;\n  private _nodesUpdates: Subject<AjfNodesInstancesOperation> =\n      new Subject<AjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<AjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this._nextSlideTrigger.asObservable();\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum.asObservable();\n\n  get nodesTree(): Observable<AjfSlideInstance[]> {\n    return this._flatNodesTree;\n  }\n  get errorPositions(): Observable<number[]> { return this._errorPositions; }\n  get errors(): Observable<number> { return this._errors; }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm|null, context: AjfContext = {}) {\n    this._initUpdateMapStreams();\n    if (form != null && Object.keys(context).length === 0 &&\n        Object.keys(form.initContext || {}).length > 0) {\n      context = form.initContext || {};\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) { return {}; }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group.node.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group.node.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(map((f) => {\n      const fieldName = nodeInstanceCompleteName(field);\n      return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n    }));\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n        withLatestFrom(this._nodes, this._form), filter(v => v[2] != null && v[2].form != null),\n        map((v: [void, AjfNodeInstance[], {form: AjfForm | null, context?: AjfContext}|null]) => {\n          const nodes = v[1];\n          const form = v[2]!.form!;\n          let currentPosition = 0;\n          const errors: number[] = [];\n          nodes.forEach((node) => {\n            if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n              const rsNode = node as AjfRepeatingSlideInstance;\n              for (let i = 0; i < rsNode.reps; i++) {\n                if (node.visible) {\n                  currentPosition++;\n                  if (i == 0) {\n                    rsNode.position = currentPosition;\n                  }\n                  if (!validSlide(rsNode, i)) {\n                    errors.push(currentPosition);\n                  }\n                }\n              }\n            } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n              const sNode = node as AjfSlideInstance;\n              if (sNode.visible) {\n                currentPosition++;\n                sNode.position = currentPosition;\n                if (!sNode.valid) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          });\n          form.valid = errors.length == 0;\n          this._slidesNum.next(currentPosition);\n          return errors;\n        }),\n        publishReplay(), refCount());\n    this._errors = this._errorPositions.pipe(\n      map(e => e != null ? e.length : 0),\n      startWith(0),\n      publishReplay(),\n      refCount()\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._visibilityNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._visibilityNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._repetitionNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._repetitionNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._conditionalBranchNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._conditionalBranchNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._formulaNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._formulaNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._validationNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._validationNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._warningNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._warningNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._filteredChoicesNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._filteredChoicesNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._triggerConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._triggerConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._nextSlideConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._nextSlideConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n\n    this._nodesMaps = [\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = <Observable<{form: AjfForm | null, context?: AjfContext}>>this._form;\n    formObs\n      .pipe(map((_form) => {\n        return this._initFormGroupStreams(new FormGroup({}));\n      }))\n      .subscribe(this._formGroup);\n    formObs\n        .pipe(map((form) => {\n          return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n            const nodes = form != null && form.form != null ?\n                this._orderedNodesInstancesTree(\n                    flattenNodes(form.form.nodes), form.form.nodes, undefined, [],\n                    form.context || {}) :\n                [];\n            let currentPosition = 0;\n            nodes.forEach((node) => {\n              if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n                const rsNode = node as AjfRepeatingSlideInstance;\n                for (let i = 0; i < rsNode.reps; i++) {\n                  if (node.visible) {\n                    currentPosition++;\n                    if (i == 0) {\n                      rsNode.position = currentPosition;\n                    }\n                  }\n                }\n              } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n                const sNode = node as AjfSlideInstance;\n                if (sNode.visible) {\n                  currentPosition++;\n                  sNode.position = currentPosition;\n                }\n              }\n            });\n            return nodes;\n          };\n        }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n      allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[], context: AjfContext,\n      branchVisibility = true): AjfNodeInstance|null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      const nodeType = instance.node.nodeType;\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        this._explodeRepeatingNode(\n            allNodes, instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance, context);\n      } else if (nodeType === AjfNodeType.AjfSlide) {\n        const sInstance = instance as AjfSlideInstance;\n        sInstance.nodes = this._orderedNodesInstancesTree(\n            allNodes, sInstance.node.nodes, sInstance.node.id, prefix, context);\n      }\n      updateVisibility(instance, context, branchVisibility);\n      updateConditionalBranches(instance, context);\n      if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n\n        if (isCustomFieldWithChoices(fInstance.node) || isFieldWithChoices(fInstance.node)) {\n          updateFilteredChoices(fInstance as AjfFieldWithChoicesInstance<any>, context);\n        } else {\n          if (isTableFieldInstance(fInstance)) {\n            const tfInstance = fInstance as AjfTableFieldInstance;\n            const tNode = tfInstance.node;\n            tfInstance.context = context[nodeInstanceCompleteName(tfInstance)] || context;\n            if (!tNode.editable) {\n              const value: [string, string[]][] = [];\n              value.push([tNode.label, tNode.columnLabels]);\n              tNode.rows.forEach((row, rowIndex) => {\n                value.push([tNode.rowLabels[rowIndex], row.map(k => {\n                  tfInstance.context[k] = context[k];\n                  return context[k];\n                })]);\n              });\n              tfInstance.value = value;\n            } else {\n              const formGroup = this._formGroup.getValue();\n              let controlsWithLabels: [string, (string|FormControl)[]][] = [];\n              controlsWithLabels.push([node.label, tNode.columnLabels]);\n              tNode.rows.forEach((row, idx) => {\n                let r: FormControl[] = [];\n                row.forEach((k) => {\n                  const control = new FormControl();\n                  console.log(k);\n                  console.log(tfInstance.context[k]);\n                  control.setValue(tfInstance.context[k]);\n                  if (formGroup != null) {\n                    formGroup.registerControl(k, control);\n                  }\n                  r.push(control);\n                });\n                controlsWithLabels.push([tNode.rowLabels[idx], r]);\n              });\n              tfInstance.controls = controlsWithLabels;\n            }\n          } else {\n            fInstance.value = context[nodeInstanceCompleteName(instance)];\n          }\n          updateFieldInstanceState(fInstance, context);\n        }\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n      allNodes: AjfNode[]|AjfNodeInstance[], instance: AjfRepeatingContainerNodeInstance,\n      oldReps: number,\n      context: AjfContext): {added: AjfNodeInstance[]|null, removed: AjfNodeInstance[]|null} {\n    const newReps = instance.reps;\n    const result: { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } = {\n      added: null,\n      removed: null\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        const node = createField({\n                       id: 999,\n                       name: '',\n                       parent: -1,\n                       fieldType: AjfFieldType.Empty,\n                       label: instance.node.label\n                     }) as AjfEmptyField;\n        const newInstance = this._initNodeInstance(\n          allNodes, node, instance.prefix.slice(0), context);\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps ; i < newReps ; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance.node;\n        prefix.push(i);\n        orderedNodes(group.nodes, instance.node.id)\n          .forEach((n) => {\n            const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n            if (newInstance != null) {\n              newNodes.push(newInstance);\n              instance.nodes.push(newInstance);\n            }\n          });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        nodesNum ++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach((n => {\n        this._removeNodeInstance(n);\n      }));\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      const completeName = nodeInstanceCompleteName(instance);\n      if (fg != null && fg.contains(completeName)) {\n        fg.controls[completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      const rsInstance = instance as AjfRepeatingSlideInstance;\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide =\n          rsInstance.nodes != null ? rsInstance.nodes.length / rsInstance.reps : 0;\n      for (let i = 0 ; i < instance.reps ; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      rsInstance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates.asObservable()\n        .pipe(\n            withLatestFrom(this._formGroup),\n            filter((values: [AjfNodesInstancesOperation, FormGroup|null]) => values[1] !== null))\n        .subscribe((values: [AjfNodesInstancesOperation, FormGroup|null]) => {\n          const form: FormGroup = <FormGroup>values[1];\n          form.updateValueAndValidity();\n        });\n  }\n\n  private _explodeRepeatingNode(\n      allNodes: AjfNode[]|AjfNodeInstance[],\n      instance: AjfNodeGroupInstance|AjfRepeatingSlideInstance, context: AjfContext) {\n    const oldReps = updateRepsNum(instance, context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n      allNodes: AjfNode[]|AjfNodeInstance[], nodes: AjfNode[], parent: number|null = null,\n      prefix: number[] = [], context: AjfContext): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent).forEach((node: AjfNode) => {\n      const parentNodeInstance = nodesInstances.find(\n          ni => ni.node.id == node.parent && nodeInstanceSuffix(ni) == curSuffix);\n      const branchVisibility = parentNodeInstance != null ?\n          parentNodeInstance.verifiedBranch != null &&\n              parentNodeInstance.verifiedBranch == node.parentNode :\n          true;\n      const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n      if (nni != null) {\n        nodesInstances.push(nni);\n      }\n    });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue)\n      .filter((k) => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription =\n        formGroup.valueChanges\n            .pipe(\n                startWith<any>({}), pairwise(), debounceTime(200),\n                withLatestFrom<\n                    [any, any],\n                    [\n                      [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfNodeInstance[]\n                    ]>(...(this._nodesMaps), this._flatNodes))\n            .subscribe((v: [\n                         [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfNodeInstance[]\n                       ]) => {\n              const oldFormValue = init && {} || v[0][0];\n              init = false;\n              const newFormValue = v[0][1];\n              const visibilityMap = v[1];\n              const repetitionMap = v[2];\n              const conditionalBranchesMap = v[3];\n              const formulaMap = v[4];\n              const validationMap = v[5];\n              const warningMap = v[6];\n              const nextSlideConditionsMap = v[7];\n              const filteredChoicesMap = v[8];\n              const triggerConditionsMap = v[9];\n              const nodes = v[10];\n\n              (window as any).nodes = nodes;\n              const delta = this._formValueDelta(oldFormValue, newFormValue);\n              const deltaLen = delta.length;\n              let updatedNodes: AjfNodeInstance[] = [];\n\n              delta.forEach((fieldName) => {\n                updatedNodes = updatedNodes.concat(\n                    nodes.filter(n => nodeInstanceCompleteName(n) === fieldName));\n                if (visibilityMap[fieldName] != null) {\n                  visibilityMap[fieldName].forEach(nodeInstance => {\n                    const completeName = nodeInstanceCompleteName(nodeInstance);\n                    const visibilityChanged = updateVisibility(nodeInstance, newFormValue);\n                    const isField = isFieldInstance(nodeInstance);\n                    if (visibilityChanged && !nodeInstance.visible) {\n                      const fg = this._formGroup.getValue();\n                      if (fg != null) {\n                        const s = timer(200).subscribe(() => {\n                          if (s && !s.closed) {\n                            s.unsubscribe();\n                          }\n                          fg.controls[completeName].setValue(null);\n                        });\n                      }\n                      if (isField) {\n                        (nodeInstance as AjfFieldInstance).value = null;\n                      }\n                    } else if (visibilityChanged && nodeInstance.visible && isField) {\n                      const fg = this._formGroup.getValue();\n                      const res = updateFormula(nodeInstance as AjfFieldInstance, newFormValue);\n                      if (fg != null && res.changed) {\n                        fg.controls[completeName].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (repetitionMap[fieldName] != null) {\n                  repetitionMap[fieldName].forEach(nodeInstance => {\n                    if (isRepeatingContainerNode(nodeInstance.node)) {\n                      const rnInstance = nodeInstance as AjfRepeatingContainerNodeInstance;\n                      const oldReps = updateRepsNum(rnInstance, newFormValue);\n                      if (oldReps !== rnInstance.reps) {\n                        this._adjustReps(nodes, rnInstance, oldReps, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (conditionalBranchesMap[fieldName] != null) {\n                  conditionalBranchesMap[fieldName].forEach((nodeInstance) => {\n                    // const branchChanged = nodeInstance.updateConditionalBranches(newFormValue);\n                    updateConditionalBranches(nodeInstance, newFormValue);\n                    // if (branchChanged) {\n                    const verifiedBranch = nodeInstance.verifiedBranch;\n                    nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                      if (idx == verifiedBranch) {\n                        this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                      } else {\n                        this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                      }\n                    });\n                    // }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (formulaMap[fieldName] != null) {\n                  formulaMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      const res = updateFormula(fInstance, newFormValue);\n                      const fg = this._formGroup.getValue();\n                      if (fg != null && res.changed) {\n                        updateValidation(fInstance, newFormValue);\n                        fg.controls[nodeInstanceCompleteName(nodeInstance)].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (validationMap[fieldName] != null) {\n                  validationMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      newFormValue.$value = newFormValue[nodeInstanceCompleteName(nodeInstance)];\n                      updateValidation(\n                          fInstance, newFormValue, this.currentSupplementaryInformations);\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (warningMap[fieldName] != null) {\n                  warningMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      updateWarning(fInstance, newFormValue);\n                      if (fInstance.warningResults != null &&\n                          fInstance.warningResults.filter(warning => warning.result).length > 0) {\n                        fInstance.warningTrigger.emit();\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n                  if (nextSlideConditionsMap[fieldName]\n                          .filter((nodeInstance) => {\n                            if (isFieldInstance(nodeInstance)) {\n                              const fInstance = nodeInstance as AjfFieldInstance;\n                              return updateNextSlideCondition(fInstance, newFormValue);\n                            }\n                            return false;\n                          })\n                          .length == 1) {\n                    this._nextSlideTrigger.emit();\n                  }\n                }\n\n                if (filteredChoicesMap[fieldName] != null) {\n                  filteredChoicesMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      if (isFieldWithChoices(fInstance.node)) {\n                        updateFilteredChoices(\n                            fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n                  const res = triggerConditionsMap[fieldName].filter((nodeInstance) => {\n                    if (!isFieldInstance(nodeInstance)) {\n                      return false;\n                    }\n                    const fInstance = nodeInstance as AjfFieldInstance;\n                    if (!isFieldWithChoices(fInstance.node)) {\n                      return false;\n                    }\n                    return updateTriggerConditions(\n                        fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                  });\n                  if (res.length == 1) {\n                    (res[0] as AjfFieldWithChoicesInstance<any>).selectionTrigger.emit();\n                  }\n                }\n              });\n              updatedNodes.forEach(n => {\n                const nodeIdx = nodes.indexOf(n);\n                let idx = nodeIdx - 1;\n                while (idx >= 0) {\n                  const curNode = nodes[idx];\n                  if (isSlidesInstance(curNode)) {\n                    const slide = curNode as (AjfRepeatingSlideInstance | AjfSlideInstance);\n                    const subNodesNum = slide.flatNodes.length;\n                    let valid = true;\n                    for (let i = 0 ; i < subNodesNum ; i++) {\n                      const subNode = slide.flatNodes[i];\n                      if (\n                        subNode.visible && isFieldInstance(subNode)\n                        && !(subNode as AjfFieldInstance).valid\n                      ) {\n                        valid = false;\n                        break;\n                      }\n                    }\n                    if (slide.valid !== valid) {\n                      slide.valid = valid;\n                    }\n                    slide.updatedEvt.emit();\n                  }\n                  idx--;\n                }\n                n.updatedEvt.emit();\n              });\n              if (initForm) {\n                initForm = false;\n                this._formInitEvent.emit(AjfFormInitStatus.Complete);\n              }\n              this._valueChanged.next();\n            });\n    return formGroup;\n  }\n\n  private _showSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, visible: boolean,\n      branch?: number) {\n    let subNodes: AjfNodeInstance[];\n    const nodeSuffix = nodeInstanceSuffix(node);\n    if (branch != null) {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id && n.node.parentNode == branch;\n      });\n    } else {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id;\n      });\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach((n) => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        updateVisibility(n, context, visible);\n        updateFormula(n as AjfFormulaFieldInstance, context);\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes =\n        this._nodesUpdates.pipe(scan((nodes: AjfNodeInstance[], op: AjfNodesInstancesOperation) => {\n                                  return op(nodes);\n                                }, []), share());\n    this._flatNodesTree = this._nodes.pipe(map(nodes => flattenNodesInstancesTree(nodes)), share());\n    this._flatNodes = this._flatNodesTree.pipe(\n        map(slides => {\n          let nodes: AjfNodeInstance[] = [];\n          slides.forEach(s => {\n            nodes.push(s);\n            nodes = nodes.concat(s.flatNodes);\n          });\n          return nodes;\n        }),\n        share());\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstanceCompleteName(nodeInstance);\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (isSlidesInstance(nodeInstance)) {\n      return this._removeSlideInstance(nodeInstance as AjfBaseSlideInstance);\n    } else if (isRepeatingContainerNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      this._removeFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfBaseSlideInstance): AjfBaseSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          delete vmap[fieldInstanceName];\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    // TODO: check this, probably is never verified\n    if (isRepeatingContainerNode(fieldInstance.node)) {\n      const rcInstance = (fieldInstance as AjfNodeInstance as AjfRepeatingContainerNodeInstance);\n      if (rcInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, rcInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isFieldWithChoices(fieldInstance.node)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._removeFromNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n        if (fwcInstance.triggerConditions != null) {\n          fwcInstance.triggerConditions.forEach((condition) => {\n            this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n          });\n        }\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (isRepeatingContainerNode(nodeInstance.node)) {\n      return this._addNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isSlideInstance(nodeInstance)) {\n      return this._addSlideInstance(nodeInstance as AjfSlideInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      return this._addFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          vmap[fieldInstanceName] = [];\n        }\n        if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n          vmap[fieldInstanceName].push(fieldInstance);\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (isNodeGroupInstance(fieldInstance)) {\n      const ngInstance = fieldInstance as AjfNodeInstance as AjfNodeGroupInstance;\n      if (ngInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, ngInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isCustomFieldWithChoices(fieldInstance.node) || isFieldWithChoicesInstance(fieldInstance)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n      }\n      if (fwcInstance.triggerConditions != null) {\n        fwcInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeInstanceCompleteName(nodeGroupInstance);\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<AjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] != null) {\n            const idx = vmap[tokenName].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[tokenName].splice(idx, 1);\n              if (vmap[tokenName].length == 0) {\n                delete vmap[tokenName];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] == null) {\n            vmap[tokenName] = [];\n          }\n          if (vmap[tokenName].indexOf(nodeInstance) === -1) {\n            vmap[tokenName].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseSlideInstance} from '../../interface/slides-instances/base-slide-instance';\n\nexport function validSlide(slide: AjfBaseSlideInstance, idx: number): boolean {\n  if (idx >= slide.slideNodes.length) {\n    return true;\n  }\n  return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      })\n      .reduce((v1, v2) => v1 && v2, true);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfFormulaFieldInstance} from '../../interface/fields-instances/formula-field-instance';\nimport {updateConditionalBranches} from '../nodes-instances/update-conditional-branches';\nimport {updateVisibility} from '../nodes-instances/update-visibility';\nimport {updateFormula} from './update-formula';\nimport {updateNextSlideCondition} from './update-next-slide-condition';\nimport {updateValidation} from './update-validation';\nimport {updateWarning} from './update-warning';\n\nexport function updateFieldInstanceState(\n    instance: AjfFieldInstance, context: AjfContext, branchVisibility = true): void {\n  updateVisibility(instance, context, branchVisibility);\n  updateConditionalBranches(instance, context);\n  updateFormula(instance as AjfFormulaFieldInstance, context);\n  updateValidation(instance, context);\n  updateWarning(instance, context);\n  updateNextSlideCondition(instance, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateTriggerConditions(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): boolean {\n  if (instance.triggerConditions == null) {\n    return false;\n  }\n  const completeName = nodeInstanceCompleteName(instance);\n  if (instance.firstTriggerConditionDone[completeName]) {\n    return false;\n  }\n  let found = false;\n  const conditionsNum = instance.triggerConditions.length;\n  for (let i = 0; i < conditionsNum; i++) {\n    if (evaluateExpression(instance.triggerConditions[i].condition, context)) {\n      found = true;\n      break;\n    }\n  }\n  instance.firstTriggerConditionDone[completeName] = found;\n  return found;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {flattenNodesInstances} from './flatten-nodes-instances';\nimport {isSlidesInstance} from './is-slides-instance';\n\nexport function flattenNodesInstancesTree(nodes: AjfNodeInstance[]): AjfSlideInstance[] {\n  let flatTree: AjfSlideInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isSlidesInstance(nodeInstance)) {\n      const ni = nodeInstance as AjfSlideInstance;\n      flatTree.push(ni);\n      ni.flatNodes = flattenNodesInstances(ni.nodes);\n    }\n  });\n  return flatTree;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {\n  AfterViewChecked, AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<AjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation>\n    = new EventEmitter<AjfPageSliderOrientation>();\n  readonly orientationChange: Observable<AjfPageSliderOrientation> =\n    this._orientationChange.asObservable();\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean { return this._saveDisabled; }\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean { return this._hasStartMessage; }\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean { return this._hasEndMessage; }\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean { return this._hideTopToolbar; }\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean { return this._hideBottomToolbar; }\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean { return this._hideNavigationButtons; }\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean { return this._fixedOrientation; }\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation { return this._orientation; }\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') { return; }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  formSlider: AjfPageSlider;\n  fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  readonly formAction: Observable<AjfFormActionEvent> = this._formAction.asObservable();\n\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete)\n    );\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void { this._errorMoveEvent.emit(true); }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void { this._errorMoveEvent.emit(false); }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.addGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'down'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.removeGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'up'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue()\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent).pipe(\n        withLatestFrom(this._errorPositions)\n      ).subscribe((v: [boolean, number[]]) => {\n          const move = v[0];\n          const currentPosition = this.formSlider.currentPage - (+this.hasStartMessage) + 1;\n          const errors = v[1];\n          if (errors == null) { return; }\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return nodeInstanceCompleteName(node);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfBoolToInt'})\nexport class AjfBoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\n\n@Pipe({name: 'ajfExpandFieldWithChoices'})\nexport class AjfExpandFieldWithChoicesPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, threshold: number) {\n    return !instance.node.forceNarrow && (\n      instance.node.forceExpanded\n      || (instance.filteredChoices && instance.filteredChoices.length <= threshold)\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfIncrement'})\nexport class AjfIncrementPipe implements PipeTransform {\n  transform(value: number, increment: number = 1): number {\n    return value + increment;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\n\n@Pipe({name: 'ajfIsRepeatingSlideInstance'})\nexport class AjfIsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isRepeatingSlideInstance(instance);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\n@Pipe({name: 'ajfNodeCompleteName'})\nexport class AjfNodeCompleteNamePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string {\n    return instance ? nodeInstanceCompleteName(instance) : '';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfRange'})\nexport class AjfRangePipe implements PipeTransform {\n  transform(size: number = 0, start: number = 1, step: number = 1): number[] {\n    const range: number[] = [];\n    for (let length = 0; length < size; ++length) {\n      range.push(start);\n      start += step;\n    }\n    return range;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfTableRowClass'})\nexport class AjfTableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\n\n@Pipe({name: 'ajfTableVisibleColumns'})\nexport class AjfTableVisibleColumnsPipe implements PipeTransform {\n  transform(instance: AjfTableFieldInstance): (string|number|FormControl)[][] {\n    if (!instance.node.editable) {\n      return instance.hideEmptyRows\n        ? (instance.value || []).filter(col => col[1].reduce((prev: boolean, cur) => {\n          return prev || (cur != null && cur !== '' && cur !== 0 && cur !== '0');\n        }, false)).map(v => [v[0], ...v[1]])\n        : instance.value.map(v => [v[0], ...v[1]]);\n    }\n    return (instance.controls || []).map(v => [v[0], ...v[1]]);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\n\n@Pipe({name: 'ajfValidSlide', pure: false})\nexport class AjfValidSlidePipe implements PipeTransform {\n  transform (slide: AjfBaseSlideInstance, idx: number): boolean {\n    if (idx == null || typeof idx !== 'number') {\n      return false;\n    }\n    if (idx >= slide.slideNodes.length) {\n      return true;\n    }\n    return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      }).reduce((v1, v2) => v1 && v2, true);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfBoolToIntPipe} from './bool-to-int';\nimport {AjfDateValuePipe} from './date-value';\nimport {AjfDateValueStringPipe} from './date-value-string';\nimport {AjfExpandFieldWithChoicesPipe} from './expand-input-with-choices';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfIncrementPipe} from './increment';\nimport {AjfIsRepeatingSlideInstancePipe} from './is-repeating-slide';\nimport {AjfNodeCompleteNamePipe} from './node-complete-name';\nimport {AjfRangePipe} from './range';\nimport {AjfTableRowClass} from './table-row-class';\nimport {AjfTableVisibleColumnsPipe} from './table-visible-columns';\nimport {AjfValidationService} from './validation-service';\nimport {AjfValidSlidePipe} from './valid-slide';\n\n@NgModule({\n  declarations: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  exports: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  providers: [AjfDateValueStringPipe, AjfFormRendererService, AjfValidationService]\n})\nexport class AjfFormsModule {\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {AjfBaseFieldComponent} from './base-field';\n\nexport abstract class AjfInputFieldComponent extends AjfBaseFieldComponent {\n  type: 'text' | 'number' = 'text';\n\n  private _readonly = false;\n  get readonly(): boolean { return this._readonly; }\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport const AJF_SEARCH_ALERT_THRESHOLD = new InjectionToken<number>('AJF_SEARCH_ALERT_THRESHOLD');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {\n  AjfAttachmentsOriginCreate, createAttachmentsOrigin\n} from '../utils/attachments/create-attachments-origin';\n\nexport class AjfAttachmentsOriginSerializer {\n  static fromJson(origin: Partial<AjfAttachmentsOrigin<any>>): AjfAttachmentsOrigin<any> {\n    if (origin.name == null) {\n      throw new Error('Malformed attachments origin');\n    }\n    return createAttachmentsOrigin(origin as AjfAttachmentsOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../../interface/attachments/attachments-origin';\n\nexport type AjfAttachmentsOriginCreate<T> =\n    Pick<AjfAttachmentsOrigin<T>, 'name'>&Partial<AjfAttachmentsOrigin<T>>;\n\nexport function createAttachmentsOrigin<T>(origin: AjfAttachmentsOriginCreate<T>):\n    AjfAttachmentsOrigin<T> {\n  return {\n    ...origin,\n    attachments: origin.attachments || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n\nexport type AjfChoicesOriginCreate<T> =\n    Pick<AjfChoicesOrigin<any>, 'type'|'name'>&Partial<AjfChoicesOrigin<T>>;\n\nexport function createChoicesOrigin<T>(origin: AjfChoicesOriginCreate<T>): AjfChoicesOrigin<T> {\n  return {\n    ...origin,\n    type: origin.type,\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from '../utils/choices/create-choices-origin';\n\nexport class AjfChoicesOriginSerializer {\n  static fromJson(origin: Partial<AjfChoicesOrigin<any>>): AjfChoicesOrigin<any> {\n    return createChoicesOrigin<any>({\n      ...origin,\n      type: origin.type || 'fixed',\n      name: origin.name || '',\n    } as AjfChoicesOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfContainerNodeCreate = AjfNodeCreate&Partial<AjfContainerNode>;\n\nexport function createContainerNode(containerNode: AjfContainerNodeCreate): AjfContainerNode {\n  const node = createNode(containerNode);\n  return {\n    ...node,\n    nodes: containerNode.nodes || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfRepeatingNodeCreate = AjfNodeCreate&Partial<AjfRepeatingNode>;\n\nexport function createRepeatingNode(repeatingNode: AjfRepeatingNodeCreate): AjfRepeatingNode {\n  const node = createNode(repeatingNode);\n  return {\n    ...repeatingNode,\n    ...node,\n    minReps: repeatingNode.minReps != null ? repeatingNode.minReps : 1,\n    maxReps: repeatingNode.maxReps != null ? repeatingNode.maxReps : 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfContainerNodeCreate, createContainerNode} from './create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from './create-repeating-node';\n\nexport type AjfNodeGroupCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createNodeGroup(nodeGroup: AjfNodeGroupCreate): AjfNodeGroup {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfNodeGroup,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from '../nodes/create-repeating-node';\n\nexport type AjfRepeatingSlideCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createRepeatingSlide(nodeGroup: AjfRepeatingSlideCreate): AjfRepeatingSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfRepeatingSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\n\nexport type AjfSlideCreate = AjfContainerNodeCreate;\n\nexport function createSlide(nodeGroup: AjfSlideCreate): AjfSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    nodeType: AjfNodeType.AjfSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../interface/validation/validation-group';\nimport {createValidationGroup} from '../utils/validation/create-validation-group';\n\nexport class AjfValidationGroupSerializer {\n  static fromJson(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n    return createValidationGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../interface/warning/warning-group';\nimport {createWarningGroup} from '../utils/warning/create-warning-group';\n\nexport class AjfWarningGroupSerializer {\n  static fromJson(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n    return createWarningGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../interface/fields/field-with-choices';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfContainerNode} from '../interface/nodes/container-node';\nimport {AjfNode} from '../interface/nodes/node';\nimport {AjfNodeGroup} from '../interface/nodes/node-group';\nimport {AjfFieldNodeLink} from '../interface/nodes/node-link';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingNode} from '../interface/nodes/repeating-node';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {componentsMap} from '../utils/fields/fields-map';\nimport {AjfFieldCreate, createField} from '../utils/fields/create-field';\nimport {createFieldWithChoices} from '../utils/fields/create-field-with-choices';\nimport {createContainerNode} from '../utils/nodes/create-container-node';\nimport {AjfNodeCreate, createNode} from '../utils/nodes/create-node';\nimport {createNodeGroup} from '../utils/nodes/create-node-group';\nimport {createRepeatingNode} from '../utils/nodes/create-repeating-node';\nimport {createRepeatingSlide} from '../utils/slides/create-repeating-slide';\nimport {createSlide} from '../utils/slides/create-slide';\n\nimport {AjfValidationGroupSerializer} from './validation-group-serializer';\nimport {AjfWarningGroupSerializer} from './warning-group-serializer';\n\nexport class AjfNodeSerializer {\n  static fromJson(\n      json: Partial<AjfNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNode {\n    const err = 'Malformed node';\n    json.name = json.name || '';\n    if (json.id == null || json.parent == null || json.nodeType == null) {\n      throw new Error(err);\n    }\n    const obj = json as AjfNodeCreate;\n    if (obj.visibility) {\n      obj.visibility = AjfConditionSerializer.fromJson(obj.visibility);\n    }\n    obj.conditionalBranches =\n        (obj.conditionalBranches || []).map(c => AjfConditionSerializer.fromJson(c));\n    switch (obj.nodeType) {\n      case AjfNodeType.AjfField:\n        return AjfNodeSerializer._fieldFromJson(\n            obj as AjfNodeCreate & Partial<AjfField>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfFieldNodeLink:\n        return AjfNodeSerializer._fieldNodeLinkFromJson(\n            obj as AjfNodeCreate & Partial<AjfFieldNodeLink>);\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeSerializer._nodeGroupFromJson(\n            obj as AjfNodeCreate & Partial<AjfNodeGroup>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfNodeSerializer._repeatingSlideFromJson(\n            obj as AjfNodeCreate & Partial<AjfRepeatingSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfSlide:\n        return AjfNodeSerializer._slideFromJson(\n            obj as AjfNodeCreate & Partial<AjfSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n    }\n    throw new Error(err);\n  }\n\n  private static _containerNodeFromJson(\n      json: AjfNodeCreate&Partial<AjfContainerNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfContainerNode {\n    json.nodes = (json.nodes ||\n                  []).map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins));\n    return createContainerNode(json);\n  }\n\n  private static _fieldFromJson(\n      json: AjfNodeCreate&Partial<AjfField>&Partial<{attachmentsOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfField {\n    if (json.fieldType == null) {\n      throw new Error('Malformed field');\n    }\n    const obj = json as AjfFieldCreate;\n    if (obj.validation) {\n      obj.validation = AjfValidationGroupSerializer.fromJson(obj.validation);\n    }\n    if (obj.warning) {\n      obj.warning = AjfWarningGroupSerializer.fromJson(obj.warning);\n    }\n    if (json.attachmentsOriginRef) {\n      obj.attachmentOrigin =\n          (attachmentsOrigins || []).find(a => a.name === json.attachmentsOriginRef);\n    }\n    if (obj.nextSlideCondition) {\n      obj.nextSlideCondition = AjfConditionSerializer.fromJson(obj.nextSlideCondition);\n    }\n    const isCustomFieldWithChoice = obj.fieldType > 100\n      && componentsMap[obj.fieldType] != null\n      && componentsMap[obj.fieldType].isFieldWithChoice === true;\n    if (obj.fieldType > 100) {\n      console.log(obj);\n      console.log(componentsMap[obj.fieldType]);\n    }\n    if (isCustomFieldWithChoice) {\n      return AjfNodeSerializer._fieldWithChoicesFromJson(\n        json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n        choicesOrigins,\n    );\n    }\n\n    switch (obj.fieldType) {\n      case AjfFieldType.Formula:\n        return AjfNodeSerializer._formulaFieldFromJson(\n            json as AjfFieldCreate & Partial<AjfFormulaField>);\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return AjfNodeSerializer._fieldWithChoicesFromJson(\n            json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n            choicesOrigins,\n        );\n    }\n    return createField(obj);\n  }\n\n  private static _fieldNodeLinkFromJson(json: AjfNodeCreate&\n                                       Partial<AjfFieldNodeLink>): AjfFieldNodeLink {\n    return {...createNode(json), nodeType: AjfNodeType.AjfFieldNodeLink};\n  }\n\n  private static _fieldWithChoicesFromJson(\n      json: AjfFieldCreate&Partial<AjfFieldWithChoices<any>>&Partial<{choicesOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      ): AjfFieldWithChoices<any> {\n    const err = 'Malformed field with choices';\n    if (json.choicesOriginRef == null) {\n      throw new Error(err);\n    }\n    const choicesOrigin = (choicesOrigins || []).find(c => c.name === json.choicesOriginRef);\n    if (choicesOrigin == null) {\n      throw new Error(err);\n    }\n    if (json.choicesFilter) {\n      json.choicesFilter = AjfFormulaSerializer.fromJson(json.choicesFilter);\n    }\n    if (json.triggerConditions) {\n      json.triggerConditions = json.triggerConditions.map(t => AjfConditionSerializer.fromJson(t));\n    }\n    return createFieldWithChoices<any>({...json, choicesOrigin});\n  }\n\n  private static _formulaFieldFromJson(json: AjfFieldCreate&\n                                      Partial<AjfFormulaField>): AjfFormulaField {\n    if (json.formula) {\n      json.formula = AjfFormulaSerializer.fromJson(json.formula);\n    }\n    return {\n      ...createField(json),\n      fieldType: AjfFieldType.Formula,\n    };\n  }\n\n  private static _nodeGroupFromJson(\n      json: AjfNodeCreate&Partial<AjfNodeGroup>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNodeGroup {\n    return createNodeGroup({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _repeatingNodeFromJson(json: AjfNodeCreate&\n                                       Partial<AjfRepeatingNode>): AjfRepeatingNode {\n    if (json.formulaReps) {\n      json.formulaReps = AjfFormulaSerializer.fromJson(json.formulaReps);\n    }\n    return createRepeatingNode(json);\n  }\n\n  private static _repeatingSlideFromJson(\n      json: AjfNodeCreate&Partial<AjfRepeatingSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfRepeatingSlide {\n    return createRepeatingSlide({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _slideFromJson(\n      json: AjfNodeCreate&Partial<AjfSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfSlide {\n    return createSlide(\n        AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldCreate, createField} from './create-field';\n\nexport type AjfFieldWithChoicesCreate<T> = AjfFieldCreate&\n    Pick<AjfFieldWithChoices<T>, 'fieldType'|'choicesOrigin'>&Partial<AjfFieldWithChoices<T>>;\n\nexport function createFieldWithChoices<T>(field: AjfFieldWithChoicesCreate<T>):\n    AjfFieldWithChoices<T> {\n  const node = createField({...field});\n  return {\n    ...node,\n    ...field,\n    choices: field.choices || [],\n    forceExpanded: field.forceExpanded || false,\n    forceNarrow: field.forceNarrow || false,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfAttachmentsOriginSerializer} from './attachments-origin-serializer';\nimport {AjfChoicesOriginSerializer} from './choices-origin-serializer';\nimport {AjfNodeSerializer} from './node-serializer';\n\nexport class AjfFormSerializer {\n  static fromJson(form: Partial<AjfForm>, context?: AjfContext): AjfForm {\n    const choicesOrigins =\n        (form.choicesOrigins || []).map(c => AjfChoicesOriginSerializer.fromJson(c));\n    const attachmentsOrigins =\n        (form.attachmentsOrigins || []).map(a => AjfAttachmentsOriginSerializer.fromJson(a));\n    const nodes =\n        (form.nodes || [])\n            .map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins)) as (\n            AjfRepeatingSlide | AjfSlide)[];\n    return {\n      ...form,\n      choicesOrigins,\n      attachmentsOrigins,\n      nodes,\n      stringIdentifier: form.stringIdentifier || [],\n      initContext: deepCopy(context || {}),\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function isChoicesOrigin(co: any): boolean {\n  return co != null\n    && typeof co === 'object'\n    && co.name != null\n    && typeof co.name === 'string'\n    && co.label != null\n    && typeof co.label === 'string'\n    && ['fixed', 'promise', 'observable', 'observableArray', 'function'].indexOf(co.type) > -1\n    && co.choices instanceof Array;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from '../../interface/choices/choices-fixed-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from './create-choices-origin';\n\nexport type AjfChoicesFixedOriginCreate<T> =\n    Omit<AjfChoicesOriginCreate<T>, 'type'>&Partial<AjfChoicesFixedOrigin<T>>;\n\nexport function createChoicesFixedOrigin<T = string | number>(\n    origin: AjfChoicesFixedOriginCreate<T>): AjfChoicesFixedOrigin<T> {\n  const type = 'fixed';\n  return {...createChoicesOrigin({...origin, type}), type};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesFunctionOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesFunctionOrigin<T>, 'generator'>\n  &Partial<AjfChoicesFunctionOrigin<T>>;\n\nexport function createChoicesFunctionOrigin<T>(\n  origin: AjfChoicesFunctionOriginCreate<T>\n): AjfChoicesFunctionOrigin<T> {\n  return {\n    ...origin,\n    type: 'function',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableArrayOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableArrayOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableArrayOrigin<T>>;\n\nexport function createChoicesObservableArrayOrigin<T>(\n  origin: AjfChoicesObservableArrayOriginCreate<T>\n): AjfChoicesObservableArrayOrigin<T> {\n  return {\n    ...origin,\n    type: 'observableArray',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableOrigin<T>>;\n\nexport function createChoicesObservableOrigin<T>(\n  origin: AjfChoicesObservableOriginCreate<T>\n): AjfChoicesObservableOrigin<T> {\n  return {\n    ...origin,\n    type: 'observable',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesPromiseOrigin\n} from '../../interface/choices/choices-promise-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesPromiseOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesPromiseOrigin<T>, 'generator'>\n  &Partial<AjfChoicesPromiseOrigin<T>>;\n\nexport function createChoicesPromiseOrigin<T>(\n  origin: AjfChoicesPromiseOriginCreate<T>\n): AjfChoicesPromiseOrigin<T> {\n  return {\n    ...origin,\n    type: 'promise',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '../../interface/forms/form';\nimport {AjfFormStringIdentifier} from '../../interface/forms/form-string-identifier';\n\nexport type AjfFormCreate = Partial<AjfForm>;\n\nexport function createForm(form: AjfFormCreate = {}): AjfForm {\n  return {\n    nodes: form.nodes || [],\n    choicesOrigins: form.choicesOrigins || [],\n    attachmentsOrigins: form.attachmentsOrigins || [],\n    initContext: form.initContext || {},\n    stringIdentifier: form.stringIdentifier || [] as AjfFormStringIdentifier[],\n    supplementaryInformations: form.supplementaryInformations,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function getTypeName(v: any): string {\n  let typeStr = typeof v;\n  return typeStr === 'object'\n    ? v.constructor.toString().match(/\\w+/g)[1]\n    : typeStr;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\n\nexport function initChoicesOrigin(origin: AjfChoicesOrigin<any>): Promise<void> {\n  if (origin.type === 'fixed') {\n    return Promise.resolve();\n  }\n  if (origin.type === 'function') {\n    const fo = origin as AjfChoicesFunctionOrigin<any>;\n    fo.choices = fo.generator();\n    return Promise.resolve();\n  }\n  if (origin.type === 'promise') {\n    const po = origin as AjfChoicesPromiseOrigin<any>;\n    return po.generator.then(choices => po.choices = choices).then();\n  }\n  if (origin.type === 'observable') {\n    const obso = origin as AjfChoicesObservableOrigin<any>;\n    if (obso.generator != null) {\n      obso.choices = [];\n      return new Promise<void>(res => {\n        obso.generator.subscribe(\n          c => obso.choices.push(c),\n          () => {},\n          () => res(),\n        );\n      });\n    }\n  }\n  if (origin.type === 'observableArray') {\n    const aoo = origin as AjfChoicesObservableArrayOrigin<any>;\n    if (aoo.generator != null) {\n      aoo.choices = [];\n      return new Promise<void>(res => {\n        aoo.generator.subscribe(\n          choices => {\n            aoo.choices = choices;\n            res();\n          }\n        );\n      });\n    }\n  }\n  return Promise.resolve();\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {isChoicesOrigin} from './is-choices-origin';\n\nexport function isChoicesFixedOrigin(origin: AjfChoicesOrigin<any>): boolean {\n  return isChoicesOrigin(origin) && origin.type === 'fixed';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isNumberField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxDigitsValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${maxValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + maxValue.toString(),\n    errorMessage: 'Value must be >= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minDigitsValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + minValue.toString(),\n    errorMessage: 'Value must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function notEmptyValidation(): AjfValidation {\n  return createValidation({condition: `notEmpty($value)`, errorMessage: `Value must not be empty`});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from './create-warning';\n\nexport function notEmptyWarning(): AjfWarning {\n  return createWarning({condition: 'notEmpty($value)', warningMessage: 'Value must not be empty'});\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","defineProperty","AjfBaseFieldComponent","_instance","instance","_setUpInstanceUpdate","_onInstanceChange","_control","ngOnInit","_this","_warningTriggerSub","warningTrigger","pipe","withLatestFrom","control","filter","v","subscribe","warningResults","_warningAlertService","showWarningAlertPrompt","w","result","map","warning","r","setValue","_e","unsubscribe","ngOnDestroy","_instanceUpdateSub","updated","_changeDetectorRef","detectChanges","e","Subscription","EMPTY","_service","defer","getControl","ctrl","FormControl","AjfDateValuePipe","transform","date","Date","type","Pipe","args","name","AjfDateValueStringPipe","dateObj","format","Injectable","tslib_1.__extends","AjfInvalidFieldDefinitionError","AjfError","message","_super","String","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Empty","DateInput","Time","Table","Geolocation","Barcode","LENGTH","fieldIconName","AjfFieldType","toLowerCase","AjfFieldIconPipe","field","fieldType","AjfFieldIsValidPipe","fieldInstance","validationResults","AjfFormField","_loadComponent","fieldHost","vcr","viewContainerRef","clear","componentDef","componentsMap","node","component","componentFactory","_cfr","resolveComponentFactory","componentInstance_1","createComponent","inputs","keys","forEach","key","AjfFieldHost","Directive","selector","ViewContainerRef","AjfFieldService","registerCustomField","Error","AjfFieldWithChoicesComponent","_searchThreshold","cdr","service","warningAlertService","searchThreshold","AjfField","AjfFieldNodeLink","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","isCustomFieldWithChoices","isFieldWithChoice","isFieldWithChoices","isField","nodeType","AjfNodeType","isFieldInstance","nodeInstance","isFieldWithChoicesInstance","isTableFieldInstance","isTableField","updateConditionalBranches","context","conditionalBranches","oldBranch","verifiedBranch","idx","found","evaluateExpression","condition","updateVisibility","branchVisibility","visibility","visible","oldVisibility","newVisibility","nodeInstanceSuffix","prefix","join","nodeInstanceCompleteName","updateFormula","formula","editable","value","newValue","oldValue","$value","changed","updateNextSlideCondition","nextSlideCondition","evaluateValidation","validation","forceFormula","error","errorMessage","clientValidation","evaluateValidationGroup","res","ctx","deepCopy","conditions","cond","push","evaluateValidationConditions","maxValue","minValue","evaluateValidationMaxValue","evaluateValidationMinValue","notEmpty","evaluateValidationNotEmpty","maxDigits","evaluateValidationMaxDigits","minDigits","evaluateValidationMinDigits","updateValidation","supplementaryInformations","completeName","forceValue","valid","reduce","prev","x","evaluateWarningConditions","warningMessage","evaluateWarning","updateWarning","evaluateWarningGroup","updateFilteredChoices","choicesFilter","filteredChoices","choicesOrigin","choices","c","$choiceValue","createNode","alwaysCondition","tslib_1.__assign","parentNode","label","createField","defaultValue","size","isSlidesNode","isContainerNode","flattenNodesInstances","nodes","includeGroups","flatNodes","isContainerNodeInstance","concat","isSlidesInstance","isNodeGroupInstance","isNodeGroup","isSlideInstance","isSlideNode","createNodeInstance","slice","updatedEvt","EventEmitter","createFieldInstance","createFieldWithChoicesInstance","firstTriggerConditionDone","selectionTrigger","createSlideInstance","slideNodes","position","createValidationGroup","group","createWarningGroup","isRepeatingContainerNode","getAncestorRepeatingNodesNames","allNodes","names","nodeGroups","curParent","parent","curNode","find","id","sn","getInstanceCondition","ancestorsNames","oldCondition","newCondition","normalizeExpression","getInstanceConditions","newConditions","getInstanceFormula","oldFormula","newFormula","createValidation","getInstanceValidations","validations","newValidations","newValidation","oldValidation","getInstanceValidation","createWarning","getInstanceWarnings","warnings","newWarnings","newWarning","oldWarning","getInstanceWarning","isRepeatingSlideInstance","isRepeatingSlide","nodeToNodeInstance","createInstance","hideEmptyRows","controls","createTableFieldInstance","formulaReps","reps","createNodeGroupInstance","slideInstance","createRepeatingSlideInstance","createCondition","ngInstance","createFormula","fNode","fInstance","fwcNode","fwcInstance","triggerConditions","rgInstance","flattenNodes","orderedNodes","newNodes","sort","n1","n2","updateRepsNum","oldReps","ctxReps","newReps","canAdd","maxReps","canRemove","minReps","AjfValidationService","addFunction","f","_functions","_initFunctions","addFunctionHandler","fn","undefined","AjfExpressionUtils","utils","functionsStr","toString","_functionsStr","_baseUtilFunctions","UTIL_FUNCTIONS","tokenize","((/** @type {?} */ (esprima))).default","esprima","Initializing","Complete","AjfFormRendererService","_flatNodesTree","_errorPositions","_errors","form","_form","getValue","setForm","_initUpdateMapStreams","initContext","currentForm","next","getFormValue","formGroup","_formGroup","addGroup","Observable","subscriber","complete","_nodesUpdates","_adjustReps","removeGroup","fieldName","contains","_initErrorsStreams","_valueChanged","_nodes","currentPosition","errors","rsNode","slide","indexOf","v1","v2","sNode","_slidesNum","publishReplay","refCount","startWith","_visibilityNodesMap","scan","rmap","op","share","_repetitionNodesMap","_conditionalBranchNodesMap","_formulaNodesMap","_validationNodesMap","_warningNodesMap","_filteredChoicesNodesMap","_triggerConditionsNodesMap","_nextSlideConditionsNodesMap","_nodesMaps","_initFormStreams","formObs","_initFormGroupStreams","FormGroup","_nodesInstances","_orderedNodesInstancesTree","_initNodeInstance","_explodeRepeatingNode","sInstance","tfInstance_1","tNode_1","formGroup_1","controlsWithLabels_1","columnLabels","rows","row","k","console","log","registerControl","rowLabels","value_1","rowIndex","updateFieldInstanceState","_addNodeInstance","added","removed","newNodes_1","newInstance","_loop_1","this_1","nodesNum","splice","_removeNodeInstance","fg","rsInstance","nodesPerSlide","startNode","_updateFormValueAndValidity","asObservable","values","updateValueAndValidity","nodesInstances","curSuffix","parentNodeInstance","ni","nni","_formValueDelta","_formGroupSubscription","init","initForm","_formInitEvent","emit","AjfFormInitStatus","valueChanges","pairwise","debounceTime","_flatNodes","oldFormValue","newFormValue","visibilityMap","repetitionMap","conditionalBranchesMap","formulaMap","validationMap","warningMap","nextSlideConditionsMap","filteredChoicesMap","triggerConditionsMap","delta","deltaLen","updatedNodes","visibilityChanged","fg_1","s_1","timer","closed","rnInstance","_condition","_showSubtree","_hideSubtree","currentSupplementaryInformations","_nextSlideTrigger","conditionsNum","updateTriggerConditions","subNodesNum","subNode","branch","_updateSubtreeVisibility","subNodes","nodeSuffix","isContainer","cn","_initNodesStreams","flatTree","flattenNodesInstancesTree","slides","nodeName","_removeNodesVisibilityMapIndex","_removeNodesRepetitionMapIndex","_removeNodesConditionalBranchMapIndex","_removeNodesFormulaMapIndex","_removeNodesValidationMapIndex","_removeNodesWarningMapIndex","_removeNodesNextSlideConditionsMapIndex","_removeNodesFilteredChoicesMapIndex","_removeNodesTriggerConditionsMapIndex","_removeSlideInstance","_removeNodeGroupInstance","_removeFieldInstance","_removeFromNodesVisibilityMap","conditionalBranch","_removeFromNodesConditionalBranchMap","nodeGroupInstance","nodeGroup","_removeFromNodesRepetitionMap","fieldInstanceName","removeControl","_validationNodesMapUpdates","vmap","_removeFromNodesFormulaMap","rcInstance","_removeFromNodesValidationMap","_removeFromNodesWarningMap","_removeFromNodesNextSlideConditionsMap","_removeFromNodesFilteredChoicesMap","_removeFromNodesTriggerConditionsMap","_addNodeGroupInstance","_addSlideInstance","_addFieldInstance","_addToNodesVisibilityMap","_addToNodesConditionalBranchMap","_addToNodesFormulaMap","_addToNodesRepetitionMap","_addToNodesValidationMap","_addToNodesWarningMap","_addToNodesNextSlideConditionsMap","_addToNodesFilteredChoicesMap","_addToNodesTriggerConditionsMap","nodeGroupInstanceName","index","_removeNodesMapIndex","_visibilityNodesMapUpdates","_repetitionNodesMapUpdates","_conditionalBranchNodesMapUpdates","_formulaNodesMapUpdates","_warningNodesMapUpdates","_filteredChoicesNodesMapUpdates","_triggerConditionsNodesMapUpdates","_nextSlideConditionsNodesMapUpdates","nodesMap","_removeFromNodesMap","tokens","token","tokenName","_addToNodesMap","_","Subject","formInitEvent","BehaviorSubject","nextSlideTrigger","slidesNum","AjfFormActionEvent","AjfFormRenderer","_saveDisabled","saveDisabled","coerceBooleanProperty","markForCheck","_hasStartMessage","hasStartMessage","_hasEndMessage","hasEndMessage","_hideTopToolbar","hideTopToolbar","_hideBottomToolbar","hideBottomToolbar","_hideNavigationButtons","hideNavigationButtons","_fixedOrientation","fixedOrientation","_orientation","orientation","_orientationChange","_init","_rendererService","goToNextError","_errorMoveEvent","goToPrevError","delayWhen","formSlider","pageScrollFinish","dir","onSave","_evt","_formAction","source","action","onFormAction","ngAfterViewInit","ngAfterViewChecked","_errorMoveSubscription","move","currentPage","prevIdx","nextIdx","errorsLen","to","_nextSlideSubscription","orientationChangeHandler","trackNodeById","ajfFieldTypes","orientationChange","formAction","nodesTree","errorPositions","formIsInit","AjfBoolToIntPipe","AjfExpandFieldWithChoicesPipe","threshold","forceNarrow","forceExpanded","AjfIncrementPipe","increment","AjfIsRepeatingSlideInstancePipe","AjfNodeCompleteNamePipe","AjfRangePipe","start","step","range","length_1","AjfTableRowClass","AjfTableVisibleColumnsPipe","col","cur","AjfValidSlidePipe","pure","AjfFormsModule","NgModule","declarations","exports","providers","AjfInputFieldComponent","_readonly","readonly","AJF_SEARCH_ALERT_THRESHOLD","InjectionToken","AjfAttachmentsOriginSerializer","fromJson","origin","attachments","createAttachmentsOrigin","createChoicesOrigin","AjfChoicesOriginSerializer","createContainerNode","containerNode","createRepeatingNode","repeatingNode","createNodeGroup","createRepeatingSlide","createSlide","AjfValidationGroupSerializer","AjfWarningGroupSerializer","AjfNodeSerializer","json","choicesOrigins","attachmentsOrigins","err","obj","AjfConditionSerializer","_fieldFromJson","_fieldNodeLinkFromJson","_nodeGroupFromJson","_repeatingSlideFromJson","_slideFromJson","_containerNodeFromJson","attachmentsOriginRef","attachmentOrigin","a","isCustomFieldWithChoice","_fieldWithChoicesFromJson","_formulaFieldFromJson","choicesOriginRef","AjfFormulaSerializer","createFieldWithChoices","_repeatingNodeFromJson","AjfFormSerializer","stringIdentifier","Link","Pdf","isChoicesOrigin","co","typeStr","match","Promise","resolve","fo","generator","po_1","then","obso_1","aoo_1"],"mappings":"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"}