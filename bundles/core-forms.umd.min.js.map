{"version":3,"file":"core-forms.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/core/forms/base-field.ts","../../src/core/forms/date-value.ts","../../src/core/forms/date-value-string.ts","../../src/core/forms/errors.ts","../../src/core/forms/interface/fields/field-type.ts","../../src/core/forms/field-utils.ts","../../src/core/forms/field-icon.ts","../../src/core/forms/field-is-valid.ts","../../src/core/forms/field.ts","../../src/core/forms/field-host.ts","../../src/core/forms/field-service.ts","../../src/core/forms/field-with-choices.ts","../../src/core/forms/interface/nodes/node-type.ts","../../src/core/forms/utils/fields/is-field-with-choices.ts","../../src/core/forms/utils/nodes/is-field.ts","../../src/core/forms/utils/nodes-instances/is-field-instance.ts","../../src/core/forms/utils/fields-instances/is-field-with-choices-instance.ts","../../src/core/forms/utils/fields-instances/is-table-field-instance.ts","../../src/core/forms/utils/fields/is-table-field.ts","../../src/core/forms/utils/nodes-instances/update-conditional-branches.ts","../../src/core/forms/utils/nodes-instances/update-visibility.ts","../../src/core/forms/utils/nodes-instances/node-instance-suffix.ts","../../src/core/forms/utils/nodes-instances/node-instance-complete-name.ts","../../src/core/forms/utils/fields-instances/update-formula.ts","../../src/core/forms/utils/fields-instances/update-next-slide-condition.ts","../../src/core/forms/utils/validation/evaluate-validation.ts","../../src/core/forms/utils/validation/evaluate-validation-group.ts","../../src/core/forms/utils/validation/evaluate-validation-conditions.ts","../../src/core/forms/utils/validation/evaluate-validation-max-value.ts","../../src/core/forms/utils/validation/evaluate-validation-min-value.ts","../../src/core/forms/utils/validation/evaluate-validation-not-empty.ts","../../src/core/forms/utils/validation/evaluate-validation-max-digits.ts","../../src/core/forms/utils/validation/evaluate-validation-min-digits.ts","../../src/core/forms/utils/fields-instances/update-validation.ts","../../src/core/forms/utils/warning/evaluate-warning-conditions.ts","../../src/core/forms/utils/warning/evaluate-warning.ts","../../src/core/forms/utils/fields-instances/update-warning.ts","../../src/core/forms/utils/warning/evaluate-warning-group.ts","../../src/core/forms/utils/fields-instances/update-filtered-choices.ts","../../src/core/forms/utils/nodes/create-node.ts","../../src/core/forms/utils/fields/create-field.ts","../../src/core/forms/utils/nodes/is-slides-node.ts","../../src/core/forms/utils/nodes/is-container-node.ts","../../src/core/forms/utils/nodes-instances/flatten-nodes-instances.ts","../../src/core/forms/utils/nodes-instances/is-container-node-instance.ts","../../src/core/forms/utils/nodes-instances/is-slides-instance.ts","../../src/core/forms/utils/nodes-instances/is-node-group-instance.ts","../../src/core/forms/utils/nodes/is-node-group.ts","../../src/core/forms/utils/nodes-instances/is-slide-instance.ts","../../src/core/forms/utils/nodes/is-slide-node.ts","../../src/core/forms/utils/nodes-instances/create-node-instance.ts","../../src/core/forms/utils/fields-instances/create-field-instance.ts","../../src/core/forms/utils/slides-instances/create-slide-instance.ts","../../src/core/forms/utils/validation/create-validation-group.ts","../../src/core/forms/utils/warning/create-warning-group.ts","../../src/core/forms/utils/nodes/is-repeating-container-node.ts","../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes-names.ts","../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes.ts","../../src/core/forms/utils/nodes-instances/get-instance-condition.ts","../../src/core/forms/utils/nodes-instances/get-instance-conditions.ts","../../src/core/forms/utils/nodes-instances/get-instance-formula.ts","../../src/core/forms/utils/validation/create-validation.ts","../../src/core/forms/utils/nodes-instances/get-instance-validations.ts","../../src/core/forms/utils/nodes-instances/get-instance-validation.ts","../../src/core/forms/utils/warning/create-warning.ts","../../src/core/forms/utils/nodes-instances/get-instance-warnings.ts","../../src/core/forms/utils/nodes-instances/get-instance-warning.ts","../../src/core/forms/utils/nodes-instances/is-repeating-slide-instance.ts","../../src/core/forms/utils/nodes/is-repeating-slide.ts","../../src/core/forms/utils/nodes-instances/node-to-node-instance.ts","../../src/core/forms/utils/fields-instances/create-field-with-choices-instance.ts","../../src/core/forms/utils/fields-instances/create-table-field-instance.ts","../../src/core/forms/utils/nodes-instances/create-node-group-instance.ts","../../src/core/forms/utils/slides-instances/create-repeating-slide-instance.ts","../../src/core/forms/utils/nodes/flatten-nodes.ts","../../src/core/forms/utils/nodes/ordered-nodes.ts","../../src/core/forms/utils/slides-instances/update-reps-num.ts","../../src/core/forms/validation-service.ts","../../src/core/forms/form-renderer.ts","../../src/core/forms/utils/slides-instances/valid-slide.ts","../../src/core/forms/utils/fields-instances/update-field-instance-state.ts","../../src/core/forms/utils/fields-instances/update-trigger-conditions.ts","../../src/core/forms/utils/nodes-instances/flatten-nodes-instances-tree.ts","../../src/core/forms/form.ts","../../src/core/forms/bool-to-int.ts","../../src/core/forms/expand-input-with-choices.ts","../../src/core/forms/increment.ts","../../src/core/forms/is-repeating-slide.ts","../../src/core/forms/node-complete-name.ts","../../src/core/forms/range.ts","../../src/core/forms/table-row-class.ts","../../src/core/forms/table-visible-columns.ts","../../src/core/forms/valid-slide.ts","../../src/core/forms/forms-module.ts","../../src/core/forms/input-field.ts","../../src/core/forms/search-alert-threshold.ts","../../src/core/forms/serializers/attachments-origin-serializer.ts","../../src/core/forms/utils/attachments/create-attachments-origin.ts","../../src/core/forms/utils/choices/create-choices-origin.ts","../../src/core/forms/serializers/choices-origin-serializer.ts","../../src/core/forms/utils/nodes/create-container-node.ts","../../src/core/forms/utils/nodes/create-repeating-node.ts","../../src/core/forms/utils/nodes/create-node-group.ts","../../src/core/forms/utils/slides/create-repeating-slide.ts","../../src/core/forms/utils/slides/create-slide.ts","../../src/core/forms/serializers/validation-group-serializer.ts","../../src/core/forms/serializers/warning-group-serializer.ts","../../src/core/forms/serializers/node-serializer.ts","../../src/core/forms/utils/fields/create-field-with-choices.ts","../../src/core/forms/serializers/form-serializer.ts","../../src/core/forms/interface/attachments/attachments-type.ts","../../src/core/forms/interface/choices/choices-type.ts","../../src/core/forms/utils/choices/is-choices-origin.ts","../../src/core/forms/utils/choices/create-choices-fixed-origin.ts","../../src/core/forms/utils/choices/create-choices-function-origin.ts","../../src/core/forms/utils/choices/create-choices-observable-array-origin.ts","../../src/core/forms/utils/choices/create-choices-observable-origin.ts","../../src/core/forms/utils/choices/create-choices-promise-origin.ts","../../src/core/forms/utils/forms/create-form.ts","../../src/core/forms/get-type-name.ts","../../src/core/forms/utils/choices/init-choices-origin.ts","../../src/core/forms/utils/choices/is-choices-fixed-origin.ts","../../src/core/forms/utils/fields/is-number-field.ts","../../src/core/forms/utils/validation/max-digits-validation.ts","../../src/core/forms/utils/validation/max-validation.ts","../../src/core/forms/utils/validation/min-digits-validation.ts","../../src/core/forms/utils/validation/min-validation.ts","../../src/core/forms/utils/validation/not-empty-validation.ts","../../src/core/forms/utils/warning/not-empty-warning.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, OnDestroy, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfBaseFieldComponent<T extends AjfFieldInstance = AjfFieldInstance>\n    implements OnDestroy, OnInit {\n  private _instance: T;\n  get instance(): T { return this._instance; }\n  set instance(instance: T) {\n    if (instance !== this._instance) {\n      this._instance = instance;\n      this._setUpInstanceUpdate();\n      this._onInstanceChange();\n    }\n  }\n\n  private _control: Observable<AbstractControl | null>;\n  get control(): Observable<AbstractControl | null> { return this._control; }\n\n  private _warningTriggerSub: Subscription = Subscription.EMPTY;\n  private _instanceUpdateSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    protected _changeDetectorRef: ChangeDetectorRef,\n    private _service: AjfFormRendererService,\n    private _warningAlertService: AjfWarningAlertService,\n  ) {\n    this._control = defer(() => this._service.getControl(this.instance).pipe(\n      map(ctrl => ctrl || new FormControl()),\n    ));\n  }\n\n  ngOnInit(): void {\n    this._warningTriggerSub = this.instance.warningTrigger.pipe(\n      withLatestFrom(this.control),\n      filter(v => v[1] != null)\n    ).subscribe((v: [void, AbstractControl | null]) => {\n      if (this.instance.warningResults == null) { return; }\n      const control = v[1];\n      const s = this._warningAlertService.showWarningAlertPrompt(\n        this.instance.warningResults.filter(w => w.result).map(w => w.warning)\n      ).subscribe(\n        (r: AjfFieldWarningAlertResult) => {\n          if (r.result) { control!.setValue(null); }\n        },\n        (_e: any) => { if (s) { s.unsubscribe(); }},\n        () => { if (s) { s.unsubscribe(); }}\n      );\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._warningTriggerSub.unsubscribe();\n    this._instanceUpdateSub.unsubscribe();\n  }\n\n  protected _onInstanceChange(): void { }\n\n  private _setUpInstanceUpdate(): void {\n    this._instanceUpdateSub.unsubscribe();\n    if (this._instance != null) {\n      this._instanceUpdateSub = this._instance.updated.subscribe(() => {\n        if (this._changeDetectorRef) {\n          try {\n            this._changeDetectorRef.detectChanges();\n          } catch (e) { }\n        }\n      });\n    } else {\n      this._instanceUpdateSub = Subscription.EMPTY;\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfDateValue'})\nexport class AjfDateValuePipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): Date|undefined {\n    if (date == null) { return undefined; }\n    return date === 'today' ? new Date() : date as Date;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport {format} from 'date-fns';\n\n@Injectable()\n@Pipe({name: 'ajfDateValueString'})\nexport class AjfDateValueStringPipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): string|undefined {\n    if (date == null) { return undefined; }\n    const dateObj = date === 'today' ? new Date() : date;\n    return format(dateObj, 'YYYY-MM-DD');\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  get name(): string { return 'AjfInvalidFieldDefinitionError'; }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  Geolocation,\n  Barcode,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './interface/fields/field-type';\n\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${AjfFieldType[type].toLowerCase()}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\n\n@Pipe({name: 'ajfFieldIcon'})\nexport class AjfFieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(\n        (field as AjfField).fieldType ? (field as AjfField).fieldType : field as AjfFieldType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\n\n@Pipe({ name: 'ajfFieldIsValid' })\nexport class AjfFieldIsValidPipe {\n    transform(fieldInstance: AjfFieldInstance): boolean {\n        if (\n            fieldInstance &&\n            fieldInstance.validationResults &&\n            fieldInstance.validationResults.length === 0\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ComponentFactoryResolver, OnInit} from '@angular/core';\n\nimport {AjfFieldComponentsMap} from './field-components-map';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\n\nexport abstract class AjfFormField implements OnInit {\n  fieldHost: AjfFieldHost;\n\n  private _instance: AjfFieldInstance;\n  get instance(): AjfFieldInstance { return this._instance; }\n  set instance(instance: AjfFieldInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._loadComponent();\n    }\n  }\n\n  protected abstract componentsMap: AjfFieldComponentsMap;\n\n  constructor(private _cfr: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    if (this._instance == null || this.fieldHost == null) { return; }\n\n    const vcr = this.fieldHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.componentsMap[this._instance.node.fieldType];\n    if (componentDef == null) { return; }\n    const component = componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      const componentInstance = componentRef.instance;\n      componentInstance.instance = this._instance;\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            (componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n    } catch (e) { }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({selector: '[ajf-field-host]'})\nexport class AjfFieldHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldComponentsMap} from './field-components-map';\n\nexport abstract class AjfFieldService {\n  readonly componentsMap: AjfFieldComponentsMap;\n\n  registerCustomField(fieldType: number, component: Type<AjfBaseFieldComponent>): void {\n    if (fieldType < 100) {\n      throw new Error('Invalid custom field type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom field component');\n    }\n    this.componentsMap[fieldType] = {component};\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfFieldWithChoicesComponent<T>\n    extends AjfBaseFieldComponent<AjfFieldWithChoicesInstance<T>> {\n  private _searchThreshold: number = 6;\n  get searchThreshold(): number { return this._searchThreshold; }\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    warningAlertService: AjfWarningAlertService,\n    searchThreshold: number\n  ) {\n    super(cdr, service, warningAlertService);\n    if (searchThreshold != null) {\n      this._searchThreshold = searchThreshold;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isFieldWithChoices(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.SingleChoice ||\n      field.fieldType === AjfFieldType.MultipleChoice;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isField(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfField;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isField} from '../nodes/is-field';\n\nexport function isFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isField(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isFieldWithChoicesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isFieldWithChoices((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isTableField} from '../fields/is-table-field';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isTableFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isTableField((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isTableField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Table;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateConditionalBranches(instance: AjfNodeInstance, context: AjfContext): boolean {\n  const conditionalBranches = instance.conditionalBranches;\n\n  if (conditionalBranches != null) {\n    const oldBranch = instance.verifiedBranch;\n    let idx = 0;\n    let found = false;\n    while (idx < conditionalBranches.length && !found) {\n      let verified: boolean = evaluateExpression(conditionalBranches[idx].condition, context);\n      if (verified) {\n        found = true;\n        if (idx !== instance.verifiedBranch) {\n          instance.verifiedBranch = idx;\n        }\n      }\n      idx++;\n    }\n\n    if (oldBranch !== instance.verifiedBranch) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateVisibility(\n    instance: AjfNodeInstance, context: AjfContext, branchVisibility = true): boolean {\n  if (instance.visibility == null) {\n    instance.visible = false;\n    return false;\n  }\n  const visibility: AjfCondition = instance.visibility;\n\n  const oldVisibility: boolean = instance.visible;\n  let newVisibility: boolean =\n      branchVisibility && evaluateExpression(visibility.condition, context);\n  if (newVisibility !== instance.visible) {\n    instance.visible = newVisibility;\n  }\n\n  return oldVisibility !== newVisibility;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function nodeInstanceSuffix(instance: AjfNodeInstance): string {\n  if (instance.prefix == null || instance.prefix.length == 0) {\n    return '';\n  }\n  return `__${instance.prefix.join('__')}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {nodeInstanceSuffix} from './node-instance-suffix';\n\nexport function nodeInstanceCompleteName(instance: AjfNodeInstance): string {\n  return `${instance.node.name}${nodeInstanceSuffix(instance)}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateFormula(\n    instance: AjfFieldInstance, context: AjfContext): {changed: boolean, value: any} {\n  const formula = instance.formula;\n  const editable = instance.node.editable;\n  if (formula != null && instance.visible && (!editable || (editable && instance.value == null))) {\n    let newValue: any = evaluateExpression(formula.formula, context);\n    const oldValue = instance.value;\n    if (newValue !== instance.value) {\n      instance.value = newValue;\n      context[nodeInstanceCompleteName(instance)] = instance.value;\n      context.$value = instance.value;\n    }\n    return {changed: newValue !== oldValue, value: newValue};\n  }\n  return {changed: false, value: instance.value};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\n\nexport function updateNextSlideCondition(instance: AjfFieldInstance, context: AjfContext): boolean {\n  if (instance.nextSlideCondition != null) {\n    return evaluateExpression(instance.nextSlideCondition.condition, context);\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nexport function evaluateValidation(\n    validation: AjfValidation, context?: AjfContext, forceFormula?: string): AjfValidationResult {\n  return {\n    result: evaluateExpression(validation.condition, context, forceFormula),\n    error: validation.errorMessage,\n    clientValidation: validation.clientValidation,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nimport {evaluateValidationConditions} from './evaluate-validation-conditions';\nimport {evaluateValidationMaxDigits} from './evaluate-validation-max-digits';\nimport {evaluateValidationMaxValue} from './evaluate-validation-max-value';\nimport {evaluateValidationMinDigits} from './evaluate-validation-min-digits';\nimport {evaluateValidationMinValue} from './evaluate-validation-min-value';\nimport {evaluateValidationNotEmpty} from './evaluate-validation-not-empty';\n\nexport function evaluateValidationGroup(\n    validation: AjfValidationGroup, value: any, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  let ctx = deepCopy(context);\n  ctx['$value'] = value;\n  res = evaluateValidationConditions(validation, ctx);\n  if (validation.maxValue) {\n    const maxValue = evaluateValidationMaxValue(validation, value);\n    if (maxValue != null) {\n      res.push(maxValue);\n    }\n  }\n  if (validation.minValue) {\n    const minValue = evaluateValidationMinValue(validation, value);\n    if (minValue != null) {\n      res.push(minValue);\n    }\n  }\n  if (validation.notEmpty) {\n    const notEmpty = evaluateValidationNotEmpty(validation, value);\n    if (notEmpty != null) {\n      res.push(notEmpty);\n    }\n  }\n  if (validation.maxDigits) {\n    const maxDigits = evaluateValidationMaxDigits(validation, value);\n    if (maxDigits != null) {\n      res.push(maxDigits);\n    }\n  }\n  if (validation.minDigits) {\n    const minDigits = evaluateValidationMinDigits(validation, value);\n    if (minDigits != null) {\n      res.push(minDigits);\n    }\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationConditions(\n    validation: AjfValidationGroup, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  validation.conditions.forEach((cond) => {\n    res.push(evaluateValidation(cond, context));\n  });\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.maxValue}`, ctx),\n      error: `Value must be <= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.minValue}`, ctx),\n      error: `Value must be >= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationNotEmpty(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.notEmpty == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.notEmpty === 'boolean') {\n    return {\n      result: evaluateExpression(`($value != null) === ${validation.notEmpty}`, ctx),\n      error: 'Value must not be empty',\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.notEmpty, );\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length <= ${validation.maxDigits}`, ctx),\n      error: `Digits count must be <= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length >= ${validation.minDigits}`, ctx),\n      error: `Digits count must be >= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateValidationGroup} from '../validation/evaluate-validation-group';\n\nexport function updateValidation(\n    instance: AjfFieldInstance, context: AjfContext, supplementaryInformations?: any): void {\n  const validation = instance.validation;\n  if (validation == null) {\n    return;\n  }\n\n  if (supplementaryInformations) {\n    Object.keys(supplementaryInformations).forEach((key) => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && validation && validation.forceValue) {\n    instance.value = evaluateExpression(validation.forceValue.condition, context);\n    context[completeName] = instance.value;\n    context.$value = instance.value;\n  }\n\n  if (validation != null) {\n    instance.validationResults =\n        evaluateValidationGroup(validation, context[completeName], context);\n    instance.valid = instance.validationResults.reduce(\n        (prev: boolean, x: AjfValidationResult) => prev && x.result, true);\n  } else {\n    instance.valid = true;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarning} from './evaluate-warning';\n\nexport function evaluateWarningConditions(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return warning.conditions.map(cond => evaluateWarning(cond, context));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\n\nexport function evaluateWarning(\n    warning: AjfWarning, context?: AjfContext, forceFormula?: string): AjfWarningResult {\n  return {\n    result: evaluateExpression(warning.condition, context, forceFormula),\n    warning: warning.warningMessage,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateWarningGroup} from '../warning/evaluate-warning-group';\n\nexport function updateWarning(instance: AjfFieldInstance, context: AjfContext): void {\n  const warning = instance.warning;\n  if (warning == null) {\n    return;\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && warning) {\n    instance.warningResults = evaluateWarningGroup(warning, context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarningConditions} from './evaluate-warning-conditions';\n\nexport function evaluateWarningGroup(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return evaluateWarningConditions(warning, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nexport function updateFilteredChoices(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): void {\n  if (instance.choicesFilter != null) {\n    instance.filteredChoices = instance.node.choicesOrigin.choices.filter(c => {\n      context.$choiceValue = c.value;\n      return evaluateExpression(instance.choicesFilter!.formula, context);\n    });\n  } else {\n    instance.filteredChoices = instance.node.choicesOrigin.choices;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport type AjfNodeCreate = Pick<AjfNode, 'nodeType'|'id'|'parent'|'name'>&Partial<AjfNode>;\n\nexport function createNode(node: AjfNodeCreate): AjfNode {\n  const conditionalBranches =\n      node.conditionalBranches != null && node.conditionalBranches.length > 0 ?\n      node.conditionalBranches :\n      [alwaysCondition()];\n  return {\n    ...node,\n    parentNode: node.parentNode != null ? node.parentNode : 0,\n    label: node.label || '',\n    visibility: node.visibility || alwaysCondition(),\n    conditionalBranches,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeCreate, createNode} from '../nodes/create-node';\n\nexport type AjfFieldCreate =\n    Omit<AjfNodeCreate, 'nodeType'>&Pick<AjfField, 'fieldType'>&Partial<AjfField>;\n\nexport function createField(field: AjfFieldCreate): AjfField {\n  const node = createNode({...field, nodeType: AjfNodeType.AjfField});\n  const editable = field.editable != null ?\n      field.editable :\n      field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;\n  return {\n    ...node,\n    ...field,\n    nodeType: AjfNodeType.AjfField,\n    editable,\n    defaultValue: field.defaultValue != null ? field.defaultValue : null,\n    size: field.size || 'normal',\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlidesNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfRepeatingSlide || node.nodeType === AjfNodeType.AjfSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {isSlidesNode} from './is-slides-node';\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (node.nodeType === AjfNodeType.AjfNodeGroup || isSlidesNode(node));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nimport {isContainerNodeInstance} from './is-container-node-instance';\nimport {isFieldInstance} from './is-field-instance';\n\nexport function flattenNodesInstances(\n    nodes: AjfNodeInstance[], includeGroups = false): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isFieldInstance(nodeInstance)) {\n      flatNodes.push(nodeInstance);\n    }\n    if (isContainerNodeInstance(nodeInstance)) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(\n          flattenNodesInstances((nodeInstance as AjfContainerNodeInstance).nodes, includeGroups));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isContainerNode} from '../nodes/is-container-node';\n\nexport function isContainerNodeInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isContainerNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesNode} from '../nodes/is-slides-node';\n\nexport function isSlidesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isNodeGroup} from '../nodes/is-node-group';\n\nexport function isNodeGroupInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isNodeGroup(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isNodeGroup(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlideNode} from '../nodes/is-slide-node';\n\nexport function isSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlideNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport type AjfNodeInstanceCreate = Pick<AjfNodeInstance, 'node'>&Partial<AjfNodeInstance>;\n\nexport function createNodeInstance(instance: AjfNodeInstanceCreate): AjfNodeInstance {\n  return {\n    node: instance.node,\n    prefix: instance.prefix ? [...instance.prefix] : [],\n    visible: instance.visible != null ? instance.visible : true,\n    conditionalBranches: [],\n    updatedEvt: new EventEmitter<void>()\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport type AjfFieldInstanceCreate = AjfNodeInstanceCreate&Partial<AjfFieldInstance>;\n\nexport function createFieldInstance(\n    instance: AjfFieldInstanceCreate, context: AjfContext): AjfFieldInstance {\n  const nodeInstance = createNodeInstance(instance);\n  let value: any = null;\n  if (nodeInstance.node != null && context != null) {\n    const completeName = nodeInstanceCompleteName(nodeInstance);\n    if (context[nodeInstance.node.name] != null) {\n      value = context[nodeInstance.node.name];\n    } else if (context[completeName] != null) {\n      value = context[completeName];\n    }\n  }\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    value,\n    valid: false,\n    defaultValue: instance.defaultValue != null ? instance.defaultValue : null,\n    validationResults: instance.validationResults || [],\n    warningResults: instance.warningResults || [],\n    warningTrigger: new EventEmitter<void>(),\n    updated: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {AjfBaseSlideInstanceCreate} from './base';\n\nexport type AjfSlideInstanceCreate = AjfBaseSlideInstanceCreate&Partial<AjfSlideInstance>;\n\nexport function createSlideInstance(instance: AjfSlideInstanceCreate): AjfSlideInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    nodes: [],\n    slideNodes: [],\n    flatNodes: [],\n    valid: false,\n    position: 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\n\nexport function createValidationGroup(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\n\nexport function createWarningGroup(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfNodeGroup ||\n       node.nodeType === AjfNodeType.AjfRepeatingSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {isField} from '../nodes/is-field';\n\nimport {getAncestorRepeatingNodes} from './get-ancestor-repeating-nodes';\n\nexport function getAncestorRepeatingNodesNames(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  const nodeGroups = getAncestorRepeatingNodes(allNodes, node) as AjfNodeGroup[];\n  nodeGroups.forEach((n, idx) => (n.nodes || []).forEach((sn) => {\n    if (isField(sn)) {\n      names[sn.name] = idx;\n    }\n  }));\n  return names;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\nexport function getAncestorRepeatingNodes(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number|null = node.parent;\n  while (curParent != null) {\n    const curNode =\n        allNodes.map((n: AjfNode|AjfNodeInstance) => (n as AjfNodeInstance).node || n as AjfNode)\n            .find(n => n.id == curParent);\n    if (curNode) {\n      if (isRepeatingContainerNode(curNode)) {\n        nodeGroups.push(curNode);\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return nodeGroups;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceCondition(\n    condition: AjfCondition, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeExpression(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return {condition: newCondition};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {getInstanceCondition} from './get-instance-condition';\n\nexport function getInstanceConditions(\n    conditions: AjfCondition[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map((condition) => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceFormula(\n    formula: AjfFormula, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return {formula: newFormula};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\n\nexport function createValidation(validation: Pick<AjfValidation, 'condition'>&\n                                 Partial<AjfValidation>): AjfValidation {\n  return {\n    ...validation,\n    clientValidation: validation.clientValidation || false,\n    errorMessage: validation.errorMessage || 'Undefined Error'\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {getInstanceValidation} from './get-instance-validation';\n\nexport function getInstanceValidations(\n    validations: AjfValidation[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation[] {\n  let changed = false;\n  const newValidations = validations.map((validation) => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from '../validation/create-validation';\n\nexport function getInstanceValidation(\n    validation: AjfValidation, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeExpression(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return createValidation({condition: newValidation});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\n\nexport function createWarning(warning: Pick<AjfWarning, 'condition'>&\n                              Partial<AjfWarning>): AjfWarning {\n  return {...warning, warningMessage: warning.warningMessage || 'Undefined Warning'};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {getInstanceWarning} from './get-instance-warning';\n\nexport function getInstanceWarnings(\n    warnings: AjfWarning[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map((warning) => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from '../warning/create-warning';\n\nexport function getInstanceWarning(\n    warning: AjfWarning, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeExpression(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return createWarning({condition: newWarning});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesInstance} from '../nodes-instances/is-slides-instance';\nimport {isRepeatingSlide} from '../nodes/is-repeating-slide';\n\nexport function isRepeatingSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesInstance(nodeInstance) &&\n      isRepeatingSlide(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingSlide(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext, createCondition, createFormula, normalizeExpression, alwaysCondition\n} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfTableField} from '../../interface/fields/table-field';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {createFieldInstance} from '../fields-instances/create-field-instance';\nimport {\n  createFieldWithChoicesInstance\n} from '../fields-instances/create-field-with-choices-instance';\nimport {createTableFieldInstance} from '../fields-instances/create-table-field-instance';\nimport {isFieldWithChoicesInstance} from '../fields-instances/is-field-with-choices-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {createNodeGroupInstance} from '../nodes-instances/create-node-group-instance';\nimport {createRepeatingSlideInstance} from '../slides-instances/create-repeating-slide-instance';\nimport {createSlideInstance} from '../slides-instances/create-slide-instance';\nimport {createValidationGroup} from '../validation/create-validation-group';\nimport {createWarningGroup} from '../warning/create-warning-group';\n\nimport {getAncestorRepeatingNodesNames} from './get-ancestor-repeating-nodes-names';\nimport {getInstanceCondition} from './get-instance-condition';\nimport {getInstanceConditions} from './get-instance-conditions';\nimport {getInstanceFormula} from './get-instance-formula';\nimport {getInstanceValidations} from './get-instance-validations';\nimport {getInstanceWarnings} from './get-instance-warnings';\nimport {isFieldInstance} from './is-field-instance';\nimport {isNodeGroupInstance} from './is-node-group-instance';\nimport {isRepeatingSlideInstance} from './is-repeating-slide-instance';\n\nexport function nodeToNodeInstance(\n    allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[],\n    context: AjfContext): AjfNodeInstance|null {\n  let instance: AjfNodeInstance|null = null;\n  const nodeType = node.nodeType;\n  switch (nodeType) {\n    case AjfNodeType.AjfField:\n      const field = node as AjfField;\n      switch (field.fieldType) {\n        case AjfFieldType.SingleChoice:\n        case AjfFieldType.MultipleChoice:\n          instance = createFieldWithChoicesInstance(\n              {node: node as AjfFieldWithChoices<any>, prefix}, context);\n          break;\n        case AjfFieldType.Table:\n          instance = createTableFieldInstance({node: node as AjfTableField, prefix}, context);\n          break;\n        default:\n          instance = createFieldInstance({node: node as AjfField, prefix}, context);\n          break;\n      }\n      break;\n    case AjfNodeType.AjfNodeGroup:\n      instance = createNodeGroupInstance({node: node as AjfNodeGroup, prefix});\n      break;\n    case AjfNodeType.AjfRepeatingSlide:\n      instance = createRepeatingSlideInstance({node: node as AjfRepeatingSlide, prefix});\n      break;\n    case AjfNodeType.AjfSlide:\n      instance = createSlideInstance({node: node as AjfSlide, prefix});\n      break;\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeExpression(oldVisibility, ancestorsNames, prefix);\n        instance.visibility = newVisibility !== oldVisibility ?\n            createCondition({condition: newVisibility}) :\n            node.visibility;\n      }\n\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = getInstanceConditions(\n        conditionalBranches, ancestorsNames, prefix);\n\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        const ngInstance = instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance;\n        const formulaReps = ngInstance.node.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n          ngInstance.formulaReps =\n              newFormula !== oldFormula ? createFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n        const fNode = fInstance.node;\n\n        if (fNode.formula) {\n          fInstance.formula = getInstanceFormula(fNode.formula, ancestorsNames, prefix);\n        }\n\n        if (fNode.validation != null) {\n          const newConditions =\n              getInstanceValidations(fNode.validation.conditions, ancestorsNames, prefix);\n          if (newConditions !== fNode.validation.conditions) {\n            fInstance.validation = createValidationGroup(fNode.validation);\n            fInstance.validation.conditions = newConditions;\n          } else {\n            fInstance.validation = fNode.validation;\n          }\n        }\n\n        if (fNode.warning != null) {\n          const newWarnings = getInstanceWarnings(fNode.warning.conditions, ancestorsNames, prefix);\n          if (newWarnings !== fNode.warning.conditions) {\n            fInstance.warning = createWarningGroup(fNode.warning);\n            fInstance.warning.conditions = newWarnings;\n          } else {\n            fInstance.warning = fNode.warning;\n          }\n        }\n\n        if (fNode.nextSlideCondition != null) {\n          fInstance.nextSlideCondition =\n              getInstanceCondition(fNode.nextSlideCondition, ancestorsNames, prefix);\n        }\n\n        if (isFieldWithChoices(fNode)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          const fwcNode = fwcInstance.node;\n          if (fwcNode.choicesFilter != null) {\n            fwcInstance.choicesFilter =\n                getInstanceFormula(fwcNode.choicesFilter, ancestorsNames, prefix);\n          }\n          if (fwcNode.triggerConditions != null) {\n            fwcInstance.triggerConditions =\n                getInstanceConditions(fwcNode.triggerConditions, ancestorsNames, prefix);\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = conditionalBranches;\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const rgInstance = instance as AjfRepeatingContainerNodeInstance;\n        rgInstance.formulaReps = rgInstance.node.formulaReps;\n      } else if (isFieldInstance(instance)) {\n        const fInstance = instance as AjfFieldInstance;\n        fInstance.validation = fInstance.node.validation;\n        fInstance.warning = fInstance.node.warning;\n        fInstance.nextSlideCondition = fInstance.node.nextSlideCondition;\n        if (isFieldWithChoicesInstance(instance)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          fwcInstance.choicesFilter = fwcInstance.node.choicesFilter;\n          fwcInstance.triggerConditions = fwcInstance.node.triggerConditions;\n        }\n        fInstance.formula = fInstance.node.formula;\n      }\n    }\n  }\n  return instance;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfFieldWithChoicesInstanceCreate<T> =\n    AjfFieldInstanceCreate&Partial<AjfFieldWithChoicesInstance<T>>;\n\nexport function createFieldWithChoicesInstance<T>(\n    instance: AjfFieldWithChoicesInstanceCreate<T>,\n    context: AjfContext): AjfFieldWithChoicesInstance<T> {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    filteredChoices: [...instance.node.choices],\n    firstTriggerConditionDone: {},\n    selectionTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfTableFieldInstanceCreate = AjfFieldInstanceCreate&Partial<AjfTableFieldInstance>;\n\nexport function createTableFieldInstance(\n    instance: AjfTableFieldInstanceCreate, context: AjfContext): AjfTableFieldInstance {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    context,\n    hideEmptyRows: instance.hideEmptyRows || false,\n    controls: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from './create-node-instance';\n\nexport type AjfNodeGroupInstanceCreate = AjfNodeInstanceCreate&Partial<AjfNodeGroupInstance>;\n\nexport function createNodeGroupInstance(instance: AjfNodeGroupInstanceCreate):\n    AjfNodeGroupInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstanceCreate, createSlideInstance} from './create-slide-instance';\n\nexport type AjfRepeatingSlideInstanceCreate = Omit<AjfSlideInstanceCreate, 'node'>&\n    Pick<AjfRepeatingSlideInstance, 'node'>&Partial<AjfRepeatingSlideInstance>;\n\nexport function createRepeatingSlideInstance(instance: AjfRepeatingSlideInstanceCreate):\n    AjfRepeatingSlideInstance {\n  const slideInstance = createSlideInstance(instance);\n  return {\n    ...slideInstance,\n    node: instance.node,\n    slideNodes: [],\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from './is-container-node';\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((node as AjfContainerNode).nodes));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport function orderedNodes(nodes: AjfNode[], parent: number|null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes\n      .filter(\n          (n: AjfNode) => parent != null ? n.parent == parent : n.parent == null || n.parent === 0)\n      .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n      .forEach((n: AjfNode) => {\n        newNodes.push(n);\n        newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n      });\n  return newNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfRepeatingNodeInstance} from '../../interface/nodes-instances/repeating-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateRepsNum(instance: AjfRepeatingNodeInstance, context?: AjfContext): number {\n  const oldReps: number = instance.reps || 0;\n  context = context || {};\n  if (instance.node.formulaReps == null) {\n    const ctxReps = context[nodeInstanceCompleteName(instance)];\n    if (ctxReps != null) {\n      instance.reps = ctxReps;\n    } else if (oldReps == 0) {\n      instance.reps = 1;\n    }\n  } else {\n    let newReps = evaluateExpression(instance.node.formulaReps.formula, context);\n    if (newReps !== oldReps) {\n      instance.reps = newReps;\n    }\n  }\n  instance.canAdd = instance.node.maxReps === 0 || instance.reps < instance.node.maxReps;\n  instance.canRemove = instance.node.minReps === 0 || instance.reps > instance.node.minReps;\n  return oldReps;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'MM/DD/YYYY';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n      `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, threshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(threshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"MM\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the threshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var threshold = (res/counter)*coefficient || 0;\n          return threshold;\n        }\n      }`,\n    `var alert = function(source, property, threshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > threshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeral(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'MM-DD-YYYY';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'MM';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfExpressionUtils.utils[name] === undefined) {\n      AjfExpressionUtils.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => typeof f === 'string' ? f : f.toString())\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfExpressionUtils.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\nimport * as esprima from 'esprima';\nimport {BehaviorSubject, Observable, Subject, Subscriber, Subscription, timer} from 'rxjs';\nimport {\n  debounceTime, filter, map, pairwise, publishReplay, refCount, scan, share, startWith,\n  withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFormulaFieldInstance} from './interface/fields-instances/formula-field-instance';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfEmptyField} from './interface/fields/empty-field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from './interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfNodeGroup} from './interface/nodes/node-group';\nimport {AjfNodeType} from './interface/nodes/node-type';\nimport {AjfNodesInstancesOperation} from './interface/operations/nodes-instances-operation';\nimport {AjfRendererUpdateMapOperation} from './interface/operations/renderer-update-map-operation';\nimport {AjfRendererUpdateMap} from './interface/renderer-maps/update-map';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {isFieldWithChoicesInstance} from './utils/fields-instances/is-field-with-choices-instance';\nimport {isTableFieldInstance} from './utils/fields-instances/is-table-field-instance';\nimport {updateFieldInstanceState} from './utils/fields-instances/update-field-instance-state';\nimport {updateFilteredChoices} from './utils/fields-instances/update-filtered-choices';\nimport {updateFormula} from './utils/fields-instances/update-formula';\nimport {updateNextSlideCondition} from './utils/fields-instances/update-next-slide-condition';\nimport {updateTriggerConditions} from './utils/fields-instances/update-trigger-conditions';\nimport {updateValidation} from './utils/fields-instances/update-validation';\nimport {updateWarning} from './utils/fields-instances/update-warning';\nimport {createField} from './utils/fields/create-field';\nimport {isFieldWithChoices} from './utils/fields/is-field-with-choices';\nimport {flattenNodesInstances} from './utils/nodes-instances/flatten-nodes-instances';\nimport {flattenNodesInstancesTree} from './utils/nodes-instances/flatten-nodes-instances-tree';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\nimport {isNodeGroupInstance} from './utils/nodes-instances/is-node-group-instance';\nimport {isSlideInstance} from './utils/nodes-instances/is-slide-instance';\nimport {isSlidesInstance} from './utils/nodes-instances/is-slides-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\nimport {nodeInstanceSuffix} from './utils/nodes-instances/node-instance-suffix';\nimport {nodeToNodeInstance} from './utils/nodes-instances/node-to-node-instance';\nimport {updateConditionalBranches} from './utils/nodes-instances/update-conditional-branches';\nimport {updateVisibility} from './utils/nodes-instances/update-visibility';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isContainerNode} from './utils/nodes/is-container-node';\nimport {isRepeatingContainerNode} from './utils/nodes/is-repeating-container-node';\nimport {orderedNodes} from './utils/nodes/ordered-nodes';\nimport {updateRepsNum} from './utils/slides-instances/update-reps-num';\nimport {validSlide} from './utils/slides-instances/valid-slide';\nimport {AjfValidationService} from './validation-service';\n\nconst esprimaMod: any = (esprima as any).default || esprima;\nconst {tokenize} = esprimaMod;\n\nexport enum AjfFormInitStatus {\n  Initializing,\n  Complete\n}\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _visibilityNodesMap: Observable<AjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<AjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<AjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<AjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<AjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<AjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<AjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this._formInitEvent.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup | null> =\n    new BehaviorSubject<FormGroup | null>(null);\n  readonly formGroup: Observable<FormGroup | null> = this._formGroup.asObservable();\n\n  private _form: BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null> =\n      new BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<AjfNodeInstance[]>;\n  private _flatNodesTree: Observable<AjfSlideInstance[]>;\n  private _nodesUpdates: Subject<AjfNodesInstancesOperation> =\n      new Subject<AjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<AjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this._nextSlideTrigger.asObservable();\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum.asObservable();\n\n  get nodesTree(): Observable<AjfSlideInstance[]> {\n    return this._flatNodesTree;\n  }\n  get errorPositions(): Observable<number[]> { return this._errorPositions; }\n  get errors(): Observable<number> { return this._errors; }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm|null, context: AjfContext = {}) {\n    this._initUpdateMapStreams();\n    if (form != null && Object.keys(context).length === 0 &&\n        Object.keys(form.initContext || {}).length > 0) {\n      context = form.initContext || {};\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) { return {}; }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group.node.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group.node.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(map((f) => {\n      const fieldName = nodeInstanceCompleteName(field);\n      return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n    }));\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n        withLatestFrom(this._nodes, this._form), filter(v => v[2] != null && v[2].form != null),\n        map((v: [void, AjfNodeInstance[], {form: AjfForm | null, context?: AjfContext}|null]) => {\n          const nodes = v[1];\n          const form = v[2]!.form!;\n          let currentPosition = 0;\n          const errors: number[] = [];\n          nodes.forEach((node) => {\n            if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n              const rsNode = node as AjfRepeatingSlideInstance;\n              for (let i = 0; i < rsNode.reps; i++) {\n                if (node.visible) {\n                  currentPosition++;\n                  if (i == 0) {\n                    rsNode.position = currentPosition;\n                  }\n                  if (!validSlide(rsNode, i)) {\n                    errors.push(currentPosition);\n                  }\n                }\n              }\n            } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n              const sNode = node as AjfSlideInstance;\n              if (sNode.visible) {\n                currentPosition++;\n                sNode.position = currentPosition;\n                if (!sNode.valid) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          });\n          form.valid = errors.length == 0;\n          this._slidesNum.next(currentPosition);\n          return errors;\n        }),\n        publishReplay(), refCount());\n    this._errors = this._errorPositions.pipe(\n      map(e => e != null ? e.length : 0),\n      startWith(0),\n      publishReplay(),\n      refCount()\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._visibilityNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._visibilityNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._repetitionNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._repetitionNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._conditionalBranchNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._conditionalBranchNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._formulaNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._formulaNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._validationNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._validationNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._warningNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._warningNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._filteredChoicesNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._filteredChoicesNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._triggerConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._triggerConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._nextSlideConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._nextSlideConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n\n    this._nodesMaps = [\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = <Observable<{form: AjfForm | null, context?: AjfContext}>>this._form;\n    formObs\n      .pipe(map((_form) => {\n        return this._initFormGroupStreams(new FormGroup({}));\n      }))\n      .subscribe(this._formGroup);\n    formObs\n        .pipe(map((form) => {\n          return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n            const nodes = form != null && form.form != null ?\n                this._orderedNodesInstancesTree(\n                    flattenNodes(form.form.nodes), form.form.nodes, undefined, [],\n                    form.context || {}) :\n                [];\n            let currentPosition = 0;\n            nodes.forEach((node) => {\n              if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n                const rsNode = node as AjfRepeatingSlideInstance;\n                for (let i = 0; i < rsNode.reps; i++) {\n                  if (node.visible) {\n                    currentPosition++;\n                    if (i == 0) {\n                      rsNode.position = currentPosition;\n                    }\n                  }\n                }\n              } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n                const sNode = node as AjfSlideInstance;\n                if (sNode.visible) {\n                  currentPosition++;\n                  sNode.position = currentPosition;\n                }\n              }\n            });\n            return nodes;\n          };\n        }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n      allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[], context: AjfContext,\n      branchVisibility = true): AjfNodeInstance|null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      const nodeType = instance.node.nodeType;\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        this._explodeRepeatingNode(\n            allNodes, instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance, context);\n      } else if (nodeType === AjfNodeType.AjfSlide) {\n        const sInstance = instance as AjfSlideInstance;\n        sInstance.nodes = this._orderedNodesInstancesTree(\n            allNodes, sInstance.node.nodes, sInstance.node.id, prefix, context);\n      }\n      updateVisibility(instance, context, branchVisibility);\n      updateConditionalBranches(instance, context);\n      if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n        if (isFieldWithChoices(fInstance.node)) {\n          updateFilteredChoices(fInstance as AjfFieldWithChoicesInstance<any>, context);\n        } else {\n          if (isTableFieldInstance(fInstance)) {\n            const tfInstance = fInstance as AjfTableFieldInstance;\n            const tNode = tfInstance.node;\n            tfInstance.context = context[nodeInstanceCompleteName(tfInstance)] || context;\n            if (!tNode.editable) {\n              const value: [string, string[]][] = [];\n              value.push([tNode.label, tNode.columnLabels]);\n              tNode.rows.forEach((row, rowIndex) => {\n                value.push([tNode.rowLabels[rowIndex], row.map(k => {\n                  tfInstance.context[k] = context[k];\n                  return context[k];\n                })]);\n              });\n              tfInstance.value = value;\n            } else {\n              const formGroup = this._formGroup.getValue();\n              let controlsWithLabels: [string, (string|FormControl)[]][] = [];\n              controlsWithLabels.push([node.label, tNode.columnLabels]);\n              tNode.rows.forEach((row, idx) => {\n                let r: FormControl[] = [];\n                row.forEach((k) => {\n                  const control = new FormControl();\n                  console.log(k);\n                  console.log(tfInstance.context[k]);\n                  control.setValue(tfInstance.context[k]);\n                  if (formGroup != null) {\n                    formGroup.registerControl(k, control);\n                  }\n                  r.push(control);\n                });\n                controlsWithLabels.push([tNode.rowLabels[idx], r]);\n              });\n              tfInstance.controls = controlsWithLabels;\n            }\n          } else {\n            fInstance.value = context[nodeInstanceCompleteName(instance)];\n          }\n          updateFieldInstanceState(fInstance, context);\n        }\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n      allNodes: AjfNode[]|AjfNodeInstance[], instance: AjfRepeatingContainerNodeInstance,\n      oldReps: number,\n      context: AjfContext): {added: AjfNodeInstance[]|null, removed: AjfNodeInstance[]|null} {\n    const newReps = instance.reps;\n    const result: { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } = {\n      added: null,\n      removed: null\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        const node = createField({\n                       id: 999,\n                       name: '',\n                       parent: -1,\n                       fieldType: AjfFieldType.Empty,\n                       label: instance.node.label\n                     }) as AjfEmptyField;\n        const newInstance = this._initNodeInstance(\n          allNodes, node, instance.prefix.slice(0), context);\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps ; i < newReps ; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance.node;\n        prefix.push(i);\n        orderedNodes(group.nodes, instance.node.id)\n          .forEach((n) => {\n            const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n            if (newInstance != null) {\n              newNodes.push(newInstance);\n              instance.nodes.push(newInstance);\n            }\n          });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        nodesNum ++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach((n => {\n        this._removeNodeInstance(n);\n      }));\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      const completeName = nodeInstanceCompleteName(instance);\n      if (fg != null && fg.contains(completeName)) {\n        fg.controls[completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      const rsInstance = instance as AjfRepeatingSlideInstance;\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide =\n          rsInstance.nodes != null ? rsInstance.nodes.length / rsInstance.reps : 0;\n      for (let i = 0 ; i < instance.reps ; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      rsInstance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates.asObservable()\n        .pipe(\n            withLatestFrom(this._formGroup),\n            filter((values: [AjfNodesInstancesOperation, FormGroup|null]) => values[1] !== null))\n        .subscribe((values: [AjfNodesInstancesOperation, FormGroup|null]) => {\n          const form: FormGroup = <FormGroup>values[1];\n          form.updateValueAndValidity();\n        });\n  }\n\n  private _explodeRepeatingNode(\n      allNodes: AjfNode[]|AjfNodeInstance[],\n      instance: AjfNodeGroupInstance|AjfRepeatingSlideInstance, context: AjfContext) {\n    const oldReps = updateRepsNum(instance, context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n      allNodes: AjfNode[]|AjfNodeInstance[], nodes: AjfNode[], parent: number|null = null,\n      prefix: number[] = [], context: AjfContext): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent).forEach((node: AjfNode) => {\n      const parentNodeInstance = nodesInstances.find(\n          ni => ni.node.id == node.parent && nodeInstanceSuffix(ni) == curSuffix);\n      const branchVisibility = parentNodeInstance != null ?\n          parentNodeInstance.verifiedBranch != null &&\n              parentNodeInstance.verifiedBranch == node.parentNode :\n          true;\n      const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n      if (nni != null) {\n        nodesInstances.push(nni);\n      }\n    });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue)\n      .filter((k) => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription =\n        formGroup.valueChanges\n            .pipe(\n                startWith<any>({}), pairwise(), debounceTime(200),\n                withLatestFrom<\n                    [any, any],\n                    [\n                      [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfNodeInstance[]\n                    ]>(...(this._nodesMaps), this._flatNodes))\n            .subscribe((v: [\n                         [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfNodeInstance[]\n                       ]) => {\n              const oldFormValue = init && {} || v[0][0];\n              init = false;\n              const newFormValue = v[0][1];\n              const visibilityMap = v[1];\n              const repetitionMap = v[2];\n              const conditionalBranchesMap = v[3];\n              const formulaMap = v[4];\n              const validationMap = v[5];\n              const warningMap = v[6];\n              const nextSlideConditionsMap = v[7];\n              const filteredChoicesMap = v[8];\n              const triggerConditionsMap = v[9];\n              const nodes = v[10];\n\n              (window as any).nodes = nodes;\n              const delta = this._formValueDelta(oldFormValue, newFormValue);\n              const deltaLen = delta.length;\n              let updatedNodes: AjfNodeInstance[] = [];\n\n              delta.forEach((fieldName) => {\n                updatedNodes = updatedNodes.concat(\n                    nodes.filter(n => nodeInstanceCompleteName(n) === fieldName));\n                if (visibilityMap[fieldName] != null) {\n                  visibilityMap[fieldName].forEach(nodeInstance => {\n                    const completeName = nodeInstanceCompleteName(nodeInstance);\n                    const visibilityChanged = updateVisibility(nodeInstance, newFormValue);\n                    const isField = isFieldInstance(nodeInstance);\n                    if (visibilityChanged && !nodeInstance.visible) {\n                      const fg = this._formGroup.getValue();\n                      if (fg != null) {\n                        const s = timer(200).subscribe(() => {\n                          if (s && !s.closed) {\n                            s.unsubscribe();\n                          }\n                          fg.controls[completeName].setValue(null);\n                        });\n                      }\n                      if (isField) {\n                        (nodeInstance as AjfFieldInstance).value = null;\n                      }\n                    } else if (visibilityChanged && nodeInstance.visible && isField) {\n                      const fg = this._formGroup.getValue();\n                      const res = updateFormula(nodeInstance as AjfFieldInstance, newFormValue);\n                      if (fg != null && res.changed) {\n                        fg.controls[completeName].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (repetitionMap[fieldName] != null) {\n                  repetitionMap[fieldName].forEach(nodeInstance => {\n                    if (isRepeatingContainerNode(nodeInstance.node)) {\n                      const rnInstance = nodeInstance as AjfRepeatingContainerNodeInstance;\n                      const oldReps = updateRepsNum(rnInstance, newFormValue);\n                      if (oldReps !== rnInstance.reps) {\n                        this._adjustReps(nodes, rnInstance, oldReps, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (conditionalBranchesMap[fieldName] != null) {\n                  conditionalBranchesMap[fieldName].forEach((nodeInstance) => {\n                    // const branchChanged = nodeInstance.updateConditionalBranches(newFormValue);\n                    updateConditionalBranches(nodeInstance, newFormValue);\n                    // if (branchChanged) {\n                    const verifiedBranch = nodeInstance.verifiedBranch;\n                    nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                      if (idx == verifiedBranch) {\n                        this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                      } else {\n                        this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                      }\n                    });\n                    // }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (formulaMap[fieldName] != null) {\n                  formulaMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      const res = updateFormula(fInstance, newFormValue);\n                      const fg = this._formGroup.getValue();\n                      if (fg != null && res.changed) {\n                        updateValidation(fInstance, newFormValue);\n                        fg.controls[nodeInstanceCompleteName(nodeInstance)].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (validationMap[fieldName] != null) {\n                  validationMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      newFormValue.$value = newFormValue[nodeInstanceCompleteName(nodeInstance)];\n                      updateValidation(\n                          fInstance, newFormValue, this.currentSupplementaryInformations);\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (warningMap[fieldName] != null) {\n                  warningMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      updateWarning(fInstance, newFormValue);\n                      if (fInstance.warningResults != null &&\n                          fInstance.warningResults.filter(warning => warning.result).length > 0) {\n                        fInstance.warningTrigger.emit();\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n                  if (nextSlideConditionsMap[fieldName]\n                          .filter((nodeInstance) => {\n                            if (isFieldInstance(nodeInstance)) {\n                              const fInstance = nodeInstance as AjfFieldInstance;\n                              return updateNextSlideCondition(fInstance, newFormValue);\n                            }\n                            return false;\n                          })\n                          .length == 1) {\n                    this._nextSlideTrigger.emit();\n                  }\n                }\n\n                if (filteredChoicesMap[fieldName] != null) {\n                  filteredChoicesMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      if (isFieldWithChoices(fInstance.node)) {\n                        updateFilteredChoices(\n                            fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n                  const res = triggerConditionsMap[fieldName].filter((nodeInstance) => {\n                    if (!isFieldInstance(nodeInstance)) {\n                      return false;\n                    }\n                    const fInstance = nodeInstance as AjfFieldInstance;\n                    if (!isFieldWithChoices(fInstance.node)) {\n                      return false;\n                    }\n                    return updateTriggerConditions(\n                        fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                  });\n                  if (res.length == 1) {\n                    (res[0] as AjfFieldWithChoicesInstance<any>).selectionTrigger.emit();\n                  }\n                }\n              });\n              updatedNodes.forEach(n => {\n                const nodeIdx = nodes.indexOf(n);\n                let idx = nodeIdx - 1;\n                while (idx >= 0) {\n                  const curNode = nodes[idx];\n                  if (isSlidesInstance(curNode)) {\n                    const slide = curNode as (AjfRepeatingSlideInstance | AjfSlideInstance);\n                    const subNodesNum = slide.flatNodes.length;\n                    let valid = true;\n                    for (let i = 0 ; i < subNodesNum ; i++) {\n                      const subNode = slide.flatNodes[i];\n                      if (\n                        subNode.visible && isFieldInstance(subNode)\n                        && !(subNode as AjfFieldInstance).valid\n                      ) {\n                        valid = false;\n                        break;\n                      }\n                    }\n                    if (slide.valid !== valid) {\n                      slide.valid = valid;\n                    }\n                    slide.updatedEvt.emit();\n                  }\n                  idx--;\n                }\n                n.updatedEvt.emit();\n              });\n              if (initForm) {\n                initForm = false;\n                this._formInitEvent.emit(AjfFormInitStatus.Complete);\n              }\n              this._valueChanged.next();\n            });\n    return formGroup;\n  }\n\n  private _showSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, visible: boolean,\n      branch?: number) {\n    let subNodes: AjfNodeInstance[];\n    const nodeSuffix = nodeInstanceSuffix(node);\n    if (branch != null) {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id && n.node.parentNode == branch;\n      });\n    } else {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id;\n      });\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach((n) => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        updateVisibility(n, context, visible);\n        updateFormula(n as AjfFormulaFieldInstance, context);\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes =\n        this._nodesUpdates.pipe(scan((nodes: AjfNodeInstance[], op: AjfNodesInstancesOperation) => {\n                                  return op(nodes);\n                                }, []), share());\n    this._flatNodesTree = this._nodes.pipe(map(nodes => flattenNodesInstancesTree(nodes)), share());\n    this._flatNodes = this._flatNodesTree.pipe(\n        map(slides => {\n          let nodes: AjfNodeInstance[] = [];\n          slides.forEach(s => {\n            nodes.push(s);\n            nodes = nodes.concat(s.flatNodes);\n          });\n          return nodes;\n        }),\n        share());\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstanceCompleteName(nodeInstance);\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (isSlidesInstance(nodeInstance)) {\n      return this._removeSlideInstance(nodeInstance as AjfBaseSlideInstance);\n    } else if (isRepeatingContainerNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      this._removeFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfBaseSlideInstance): AjfBaseSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          delete vmap[fieldInstanceName];\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    // TODO: check this, probably is never verified\n    if (isRepeatingContainerNode(fieldInstance.node)) {\n      const rcInstance = (fieldInstance as AjfNodeInstance as AjfRepeatingContainerNodeInstance);\n      if (rcInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, rcInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isFieldWithChoices(fieldInstance.node)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._removeFromNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n        if (fwcInstance.triggerConditions != null) {\n          fwcInstance.triggerConditions.forEach((condition) => {\n            this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n          });\n        }\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (isRepeatingContainerNode(nodeInstance.node)) {\n      return this._addNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isSlideInstance(nodeInstance)) {\n      return this._addSlideInstance(nodeInstance as AjfSlideInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      return this._addFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          vmap[fieldInstanceName] = [];\n        }\n        if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n          vmap[fieldInstanceName].push(fieldInstance);\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (isNodeGroupInstance(fieldInstance)) {\n      const ngInstance = fieldInstance as AjfNodeInstance as AjfNodeGroupInstance;\n      if (ngInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, ngInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isFieldWithChoicesInstance(fieldInstance)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n      }\n      if (fwcInstance.triggerConditions != null) {\n        fwcInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeInstanceCompleteName(nodeGroupInstance);\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<AjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] != null) {\n            const idx = vmap[tokenName].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[tokenName].splice(idx, 1);\n              if (vmap[tokenName].length == 0) {\n                delete vmap[tokenName];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] == null) {\n            vmap[tokenName] = [];\n          }\n          if (vmap[tokenName].indexOf(nodeInstance) === -1) {\n            vmap[tokenName].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseSlideInstance} from '../../interface/slides-instances/base-slide-instance';\n\nexport function validSlide(slide: AjfBaseSlideInstance, idx: number): boolean {\n  if (idx >= slide.slideNodes.length) {\n    return true;\n  }\n  return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      })\n      .reduce((v1, v2) => v1 && v2, true);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfFormulaFieldInstance} from '../../interface/fields-instances/formula-field-instance';\nimport {updateConditionalBranches} from '../nodes-instances/update-conditional-branches';\nimport {updateVisibility} from '../nodes-instances/update-visibility';\nimport {updateFormula} from './update-formula';\nimport {updateNextSlideCondition} from './update-next-slide-condition';\nimport {updateValidation} from './update-validation';\nimport {updateWarning} from './update-warning';\n\nexport function updateFieldInstanceState(\n    instance: AjfFieldInstance, context: AjfContext, branchVisibility = true): void {\n  updateVisibility(instance, context, branchVisibility);\n  updateConditionalBranches(instance, context);\n  updateFormula(instance as AjfFormulaFieldInstance, context);\n  updateValidation(instance, context);\n  updateWarning(instance, context);\n  updateNextSlideCondition(instance, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateTriggerConditions(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): boolean {\n  if (instance.triggerConditions == null) {\n    return false;\n  }\n  const completeName = nodeInstanceCompleteName(instance);\n  if (instance.firstTriggerConditionDone[completeName]) {\n    return false;\n  }\n  let found = false;\n  const conditionsNum = instance.triggerConditions.length;\n  for (let i = 0; i < conditionsNum; i++) {\n    if (evaluateExpression(instance.triggerConditions[i].condition, context)) {\n      found = true;\n      break;\n    }\n  }\n  instance.firstTriggerConditionDone[completeName] = found;\n  return found;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {flattenNodesInstances} from './flatten-nodes-instances';\nimport {isSlidesInstance} from './is-slides-instance';\n\nexport function flattenNodesInstancesTree(nodes: AjfNodeInstance[]): AjfSlideInstance[] {\n  let flatTree: AjfSlideInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isSlidesInstance(nodeInstance)) {\n      const ni = nodeInstance as AjfSlideInstance;\n      flatTree.push(ni);\n      ni.flatNodes = flattenNodesInstances(ni.nodes);\n    }\n  });\n  return flatTree;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {\n  AfterViewChecked, AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<AjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation>\n    = new EventEmitter<AjfPageSliderOrientation>();\n  readonly orientationChange: Observable<AjfPageSliderOrientation> =\n    this._orientationChange.asObservable();\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean { return this._saveDisabled; }\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean { return this._hasStartMessage; }\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean { return this._hasEndMessage; }\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean { return this._hideTopToolbar; }\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean { return this._hideBottomToolbar; }\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean { return this._hideNavigationButtons; }\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean { return this._fixedOrientation; }\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation { return this._orientation; }\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') { return; }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  formSlider: AjfPageSlider;\n  fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  readonly formAction: Observable<AjfFormActionEvent> = this._formAction.asObservable();\n\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete)\n    );\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void { this._errorMoveEvent.emit(true); }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void { this._errorMoveEvent.emit(false); }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.addGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'down'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.removeGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'up'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue()\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent).pipe(\n        withLatestFrom(this._errorPositions)\n      ).subscribe((v: [boolean, number[]]) => {\n          const move = v[0];\n          const currentPosition = this.formSlider.currentPage - (+this.hasStartMessage) + 1;\n          const errors = v[1];\n          if (errors == null) { return; }\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return nodeInstanceCompleteName(node);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfBoolToInt'})\nexport class AjfBoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\n\n@Pipe({name: 'ajfExpandFieldWithChoices'})\nexport class AjfExpandFieldWithChoicesPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, threshold: number) {\n    return !instance.node.forceNarrow && (\n      instance.node.forceExpanded\n      || (instance.filteredChoices && instance.filteredChoices.length <= threshold)\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfIncrement'})\nexport class AjfIncrementPipe implements PipeTransform {\n  transform(value: number, increment: number = 1): number {\n    return value + increment;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\n\n@Pipe({name: 'ajfIsRepeatingSlideInstance'})\nexport class AjfIsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isRepeatingSlideInstance(instance);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\n@Pipe({name: 'ajfNodeCompleteName'})\nexport class AjfNodeCompleteNamePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string {\n    return instance ? nodeInstanceCompleteName(instance) : '';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfRange'})\nexport class AjfRangePipe implements PipeTransform {\n  transform(size: number = 0, start: number = 1, step: number = 1): number[] {\n    const range: number[] = [];\n    for (let length = 0; length < size; ++length) {\n      range.push(start);\n      start += step;\n    }\n    return range;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfTableRowClass'})\nexport class AjfTableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\n\n@Pipe({name: 'ajfTableVisibleColumns'})\nexport class AjfTableVisibleColumnsPipe implements PipeTransform {\n  transform(instance: AjfTableFieldInstance): (string|number|FormControl)[][] {\n    if (!instance.node.editable) {\n      return instance.hideEmptyRows\n        ? (instance.value || []).filter(col => col[1].reduce((prev: boolean, cur) => {\n          return prev || (cur != null && cur !== '' && cur !== 0 && cur !== '0');\n        }, false)).map(v => [v[0], ...v[1]])\n        : instance.value.map(v => [v[0], ...v[1]]);\n    }\n    return (instance.controls || []).map(v => [v[0], ...v[1]]);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\n\n@Pipe({name: 'ajfValidSlide', pure: false})\nexport class AjfValidSlidePipe implements PipeTransform {\n  transform (slide: AjfBaseSlideInstance, idx: number): boolean {\n    if (idx == null || typeof idx !== 'number') {\n      return false;\n    }\n    if (idx >= slide.slideNodes.length) {\n      return true;\n    }\n    return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      }).reduce((v1, v2) => v1 && v2, true);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfBoolToIntPipe} from './bool-to-int';\nimport {AjfDateValuePipe} from './date-value';\nimport {AjfDateValueStringPipe} from './date-value-string';\nimport {AjfExpandFieldWithChoicesPipe} from './expand-input-with-choices';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfIncrementPipe} from './increment';\nimport {AjfIsRepeatingSlideInstancePipe} from './is-repeating-slide';\nimport {AjfNodeCompleteNamePipe} from './node-complete-name';\nimport {AjfRangePipe} from './range';\nimport {AjfTableRowClass} from './table-row-class';\nimport {AjfTableVisibleColumnsPipe} from './table-visible-columns';\nimport {AjfValidationService} from './validation-service';\nimport {AjfValidSlidePipe} from './valid-slide';\n\n@NgModule({\n  declarations: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  exports: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  providers: [AjfDateValueStringPipe, AjfFormRendererService, AjfValidationService]\n})\nexport class AjfFormsModule {\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {AjfBaseFieldComponent} from './base-field';\n\nexport abstract class AjfInputFieldComponent extends AjfBaseFieldComponent {\n  type: 'text' | 'number' = 'text';\n\n  private _readonly = false;\n  get readonly(): boolean { return this._readonly; }\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport const AJF_SEARCH_ALERT_THRESHOLD = new InjectionToken<number>('AJF_SEARCH_ALERT_THRESHOLD');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {\n  AjfAttachmentsOriginCreate, createAttachmentsOrigin\n} from '../utils/attachments/create-attachments-origin';\n\nexport class AjfAttachmentsOriginSerializer {\n  static fromJson(origin: Partial<AjfAttachmentsOrigin<any>>): AjfAttachmentsOrigin<any> {\n    if (origin.name == null) {\n      throw new Error('Malformed attachments origin');\n    }\n    return createAttachmentsOrigin(origin as AjfAttachmentsOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../../interface/attachments/attachments-origin';\n\nexport type AjfAttachmentsOriginCreate<T> =\n    Pick<AjfAttachmentsOrigin<T>, 'name'>&Partial<AjfAttachmentsOrigin<T>>;\n\nexport function createAttachmentsOrigin<T>(origin: AjfAttachmentsOriginCreate<T>):\n    AjfAttachmentsOrigin<T> {\n  return {\n    ...origin,\n    attachments: origin.attachments || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n\nexport type AjfChoicesOriginCreate<T> =\n    Pick<AjfChoicesOrigin<any>, 'type'|'name'>&Partial<AjfChoicesOrigin<T>>;\n\nexport function createChoicesOrigin<T>(origin: AjfChoicesOriginCreate<T>): AjfChoicesOrigin<T> {\n  return {\n    ...origin,\n    type: origin.type,\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from '../utils/choices/create-choices-origin';\n\nexport class AjfChoicesOriginSerializer {\n  static fromJson(origin: Partial<AjfChoicesOrigin<any>>): AjfChoicesOrigin<any> {\n    return createChoicesOrigin<any>({\n      ...origin,\n      type: origin.type || 'fixed',\n      name: origin.name || '',\n    } as AjfChoicesOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfContainerNodeCreate = AjfNodeCreate&Partial<AjfContainerNode>;\n\nexport function createContainerNode(containerNode: AjfContainerNodeCreate): AjfContainerNode {\n  const node = createNode(containerNode);\n  return {\n    ...node,\n    nodes: containerNode.nodes || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfRepeatingNodeCreate = AjfNodeCreate&Partial<AjfRepeatingNode>;\n\nexport function createRepeatingNode(repeatingNode: AjfRepeatingNodeCreate): AjfRepeatingNode {\n  const node = createNode(repeatingNode);\n  return {\n    ...repeatingNode,\n    ...node,\n    minReps: repeatingNode.minReps != null ? repeatingNode.minReps : 1,\n    maxReps: repeatingNode.maxReps != null ? repeatingNode.maxReps : 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfContainerNodeCreate, createContainerNode} from './create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from './create-repeating-node';\n\nexport type AjfNodeGroupCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createNodeGroup(nodeGroup: AjfNodeGroupCreate): AjfNodeGroup {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfNodeGroup,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from '../nodes/create-repeating-node';\n\nexport type AjfRepeatingSlideCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createRepeatingSlide(nodeGroup: AjfRepeatingSlideCreate): AjfRepeatingSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfRepeatingSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\n\nexport type AjfSlideCreate = AjfContainerNodeCreate;\n\nexport function createSlide(nodeGroup: AjfSlideCreate): AjfSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    nodeType: AjfNodeType.AjfSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../interface/validation/validation-group';\nimport {createValidationGroup} from '../utils/validation/create-validation-group';\n\nexport class AjfValidationGroupSerializer {\n  static fromJson(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n    return createValidationGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../interface/warning/warning-group';\nimport {createWarningGroup} from '../utils/warning/create-warning-group';\n\nexport class AjfWarningGroupSerializer {\n  static fromJson(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n    return createWarningGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../interface/fields/field-with-choices';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfContainerNode} from '../interface/nodes/container-node';\nimport {AjfNode} from '../interface/nodes/node';\nimport {AjfNodeGroup} from '../interface/nodes/node-group';\nimport {AjfFieldNodeLink} from '../interface/nodes/node-link';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingNode} from '../interface/nodes/repeating-node';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfFieldCreate, createField} from '../utils/fields/create-field';\nimport {createFieldWithChoices} from '../utils/fields/create-field-with-choices';\nimport {createContainerNode} from '../utils/nodes/create-container-node';\nimport {AjfNodeCreate, createNode} from '../utils/nodes/create-node';\nimport {createNodeGroup} from '../utils/nodes/create-node-group';\nimport {createRepeatingNode} from '../utils/nodes/create-repeating-node';\nimport {createRepeatingSlide} from '../utils/slides/create-repeating-slide';\nimport {createSlide} from '../utils/slides/create-slide';\n\nimport {AjfValidationGroupSerializer} from './validation-group-serializer';\nimport {AjfWarningGroupSerializer} from './warning-group-serializer';\n\nexport class AjfNodeSerializer {\n  static fromJson(\n      json: Partial<AjfNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNode {\n    const err = 'Malformed node';\n    json.name = json.name || '';\n    if (json.id == null || json.parent == null || json.nodeType == null) {\n      throw new Error(err);\n    }\n    const obj = json as AjfNodeCreate;\n    if (obj.visibility) {\n      obj.visibility = AjfConditionSerializer.fromJson(obj.visibility);\n    }\n    obj.conditionalBranches =\n        (obj.conditionalBranches || []).map(c => AjfConditionSerializer.fromJson(c));\n    switch (obj.nodeType) {\n      case AjfNodeType.AjfField:\n        return AjfNodeSerializer._fieldFromJson(\n            obj as AjfNodeCreate & Partial<AjfField>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfFieldNodeLink:\n        return AjfNodeSerializer._fieldNodeLinkFromJson(\n            obj as AjfNodeCreate & Partial<AjfFieldNodeLink>);\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeSerializer._nodeGroupFromJson(\n            obj as AjfNodeCreate & Partial<AjfNodeGroup>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfNodeSerializer._repeatingSlideFromJson(\n            obj as AjfNodeCreate & Partial<AjfRepeatingSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfSlide:\n        return AjfNodeSerializer._slideFromJson(\n            obj as AjfNodeCreate & Partial<AjfSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n    }\n    throw new Error(err);\n  }\n\n  private static _containerNodeFromJson(\n      json: AjfNodeCreate&Partial<AjfContainerNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfContainerNode {\n    json.nodes = (json.nodes ||\n                  []).map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins));\n    return createContainerNode(json);\n  }\n\n  private static _fieldFromJson(\n      json: AjfNodeCreate&Partial<AjfField>&Partial<{attachmentsOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfField {\n    if (json.fieldType == null) {\n      throw new Error('Malformed field');\n    }\n    const obj = json as AjfFieldCreate;\n    if (obj.validation) {\n      obj.validation = AjfValidationGroupSerializer.fromJson(obj.validation);\n    }\n    if (obj.warning) {\n      obj.warning = AjfWarningGroupSerializer.fromJson(obj.warning);\n    }\n    if (json.attachmentsOriginRef) {\n      obj.attachmentOrigin =\n          (attachmentsOrigins || []).find(a => a.name === json.attachmentsOriginRef);\n    }\n    if (obj.nextSlideCondition) {\n      obj.nextSlideCondition = AjfConditionSerializer.fromJson(obj.nextSlideCondition);\n    }\n    switch (obj.fieldType) {\n      case AjfFieldType.Formula:\n        return AjfNodeSerializer._formulaFieldFromJson(\n            json as AjfFieldCreate & Partial<AjfFormulaField>);\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return AjfNodeSerializer._fieldWithChoicesFromJson(\n            json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n            choicesOrigins,\n        );\n    }\n    return createField(obj);\n  }\n\n  private static _fieldNodeLinkFromJson(json: AjfNodeCreate&\n                                       Partial<AjfFieldNodeLink>): AjfFieldNodeLink {\n    return {...createNode(json), nodeType: AjfNodeType.AjfFieldNodeLink};\n  }\n\n  private static _fieldWithChoicesFromJson(\n      json: AjfFieldCreate&Partial<AjfFieldWithChoices<any>>&Partial<{choicesOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      ): AjfFieldWithChoices<any> {\n    const err = 'Malformed field with choices';\n    if (json.choicesOriginRef == null) {\n      throw new Error(err);\n    }\n    const choicesOrigin = (choicesOrigins || []).find(c => c.name === json.choicesOriginRef);\n    if (choicesOrigin == null) {\n      throw new Error(err);\n    }\n    if (json.choicesFilter) {\n      json.choicesFilter = AjfFormulaSerializer.fromJson(json.choicesFilter);\n    }\n    if (json.triggerConditions) {\n      json.triggerConditions = json.triggerConditions.map(t => AjfConditionSerializer.fromJson(t));\n    }\n    return createFieldWithChoices<any>({...json, choicesOrigin});\n  }\n\n  private static _formulaFieldFromJson(json: AjfFieldCreate&\n                                      Partial<AjfFormulaField>): AjfFormulaField {\n    if (json.formula) {\n      json.formula = AjfFormulaSerializer.fromJson(json.formula);\n    }\n    return {\n      ...createField(json),\n      fieldType: AjfFieldType.Formula,\n    };\n  }\n\n  private static _nodeGroupFromJson(\n      json: AjfNodeCreate&Partial<AjfNodeGroup>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNodeGroup {\n    return createNodeGroup({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _repeatingNodeFromJson(json: AjfNodeCreate&\n                                       Partial<AjfRepeatingNode>): AjfRepeatingNode {\n    if (json.formulaReps) {\n      json.formulaReps = AjfFormulaSerializer.fromJson(json.formulaReps);\n    }\n    return createRepeatingNode(json);\n  }\n\n  private static _repeatingSlideFromJson(\n      json: AjfNodeCreate&Partial<AjfRepeatingSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfRepeatingSlide {\n    return createRepeatingSlide({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _slideFromJson(\n      json: AjfNodeCreate&Partial<AjfSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfSlide {\n    return createSlide(\n        AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldCreate, createField} from './create-field';\n\nexport type AjfFieldWithChoicesCreate<T> = AjfFieldCreate&\n    Pick<AjfFieldWithChoices<T>, 'fieldType'|'choicesOrigin'>&Partial<AjfFieldWithChoices<T>>;\n\nexport function createFieldWithChoices<T>(field: AjfFieldWithChoicesCreate<T>):\n    AjfFieldWithChoices<T> {\n  const node = createField({...field});\n  return {\n    ...node,\n    ...field,\n    choices: field.choices || [],\n    forceExpanded: field.forceExpanded || false,\n    forceNarrow: field.forceNarrow || false,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfAttachmentsOriginSerializer} from './attachments-origin-serializer';\nimport {AjfChoicesOriginSerializer} from './choices-origin-serializer';\nimport {AjfNodeSerializer} from './node-serializer';\n\nexport class AjfFormSerializer {\n  static fromJson(form: Partial<AjfForm>, context?: AjfContext): AjfForm {\n    const choicesOrigins =\n        (form.choicesOrigins || []).map(c => AjfChoicesOriginSerializer.fromJson(c));\n    const attachmentsOrigins =\n        (form.attachmentsOrigins || []).map(a => AjfAttachmentsOriginSerializer.fromJson(a));\n    const nodes =\n        (form.nodes || [])\n            .map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins)) as (\n            AjfRepeatingSlide | AjfSlide)[];\n    return {\n      ...form,\n      choicesOrigins,\n      attachmentsOrigins,\n      nodes,\n      stringIdentifier: form.stringIdentifier || [],\n      initContext: deepCopy(context || {}),\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function isChoicesOrigin(co: any): boolean {\n  return co != null\n    && typeof co === 'object'\n    && co.name != null\n    && typeof co.name === 'string'\n    && co.label != null\n    && typeof co.label === 'string'\n    && ['fixed', 'promise', 'observable', 'observableArray', 'function'].indexOf(co.type) > -1\n    && co.choices instanceof Array;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from '../../interface/choices/choices-fixed-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from './create-choices-origin';\n\nexport type AjfChoicesFixedOriginCreate<T> =\n    Omit<AjfChoicesOriginCreate<T>, 'type'>&Partial<AjfChoicesFixedOrigin<T>>;\n\nexport function createChoicesFixedOrigin<T = string | number>(\n    origin: AjfChoicesFixedOriginCreate<T>): AjfChoicesFixedOrigin<T> {\n  const type = 'fixed';\n  return {...createChoicesOrigin({...origin, type}), type};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesFunctionOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesFunctionOrigin<T>, 'generator'>\n  &Partial<AjfChoicesFunctionOrigin<T>>;\n\nexport function createChoicesFunctionOrigin<T>(\n  origin: AjfChoicesFunctionOriginCreate<T>\n): AjfChoicesFunctionOrigin<T> {\n  return {\n    ...origin,\n    type: 'function',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableArrayOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableArrayOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableArrayOrigin<T>>;\n\nexport function createChoicesObservableArrayOrigin<T>(\n  origin: AjfChoicesObservableArrayOriginCreate<T>\n): AjfChoicesObservableArrayOrigin<T> {\n  return {\n    ...origin,\n    type: 'observableArray',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableOrigin<T>>;\n\nexport function createChoicesObservableOrigin<T>(\n  origin: AjfChoicesObservableOriginCreate<T>\n): AjfChoicesObservableOrigin<T> {\n  return {\n    ...origin,\n    type: 'observable',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesPromiseOrigin\n} from '../../interface/choices/choices-promise-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesPromiseOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesPromiseOrigin<T>, 'generator'>\n  &Partial<AjfChoicesPromiseOrigin<T>>;\n\nexport function createChoicesPromiseOrigin<T>(\n  origin: AjfChoicesPromiseOriginCreate<T>\n): AjfChoicesPromiseOrigin<T> {\n  return {\n    ...origin,\n    type: 'promise',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '../../interface/forms/form';\nimport {AjfFormStringIdentifier} from '../../interface/forms/form-string-identifier';\n\nexport type AjfFormCreate = Partial<AjfForm>;\n\nexport function createForm(form: AjfFormCreate = {}): AjfForm {\n  return {\n    nodes: form.nodes || [],\n    choicesOrigins: form.choicesOrigins || [],\n    attachmentsOrigins: form.attachmentsOrigins || [],\n    initContext: form.initContext || {},\n    stringIdentifier: form.stringIdentifier || [] as AjfFormStringIdentifier[],\n    supplementaryInformations: form.supplementaryInformations,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function getTypeName(v: any): string {\n  let typeStr = typeof v;\n  return typeStr === 'object'\n    ? v.constructor.toString().match(/\\w+/g)[1]\n    : typeStr;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\n\nexport function initChoicesOrigin(origin: AjfChoicesOrigin<any>): Promise<void> {\n  if (origin.type === 'fixed') {\n    return Promise.resolve();\n  }\n  if (origin.type === 'function') {\n    const fo = origin as AjfChoicesFunctionOrigin<any>;\n    fo.choices = fo.generator();\n    return Promise.resolve();\n  }\n  if (origin.type === 'promise') {\n    const po = origin as AjfChoicesPromiseOrigin<any>;\n    return po.generator.then(choices => po.choices = choices).then();\n  }\n  if (origin.type === 'observable') {\n    const obso = origin as AjfChoicesObservableOrigin<any>;\n    if (obso.generator != null) {\n      obso.choices = [];\n      return new Promise<void>(res => {\n        obso.generator.subscribe(\n          c => obso.choices.push(c),\n          () => {},\n          () => res(),\n        );\n      });\n    }\n  }\n  if (origin.type === 'observableArray') {\n    const aoo = origin as AjfChoicesObservableArrayOrigin<any>;\n    if (aoo.generator != null) {\n      aoo.choices = [];\n      return new Promise<void>(res => {\n        aoo.generator.subscribe(\n          choices => {\n            aoo.choices = choices;\n            res();\n          }\n        );\n      });\n    }\n  }\n  return Promise.resolve();\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {isChoicesOrigin} from './is-choices-origin';\n\nexport function isChoicesFixedOrigin(origin: AjfChoicesOrigin<any>): boolean {\n  return isChoicesOrigin(origin) && origin.type === 'fixed';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isNumberField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxDigitsValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${maxValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + maxValue.toString(),\n    errorMessage: 'Value must be >= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minDigitsValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + minValue.toString(),\n    errorMessage: 'Value must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function notEmptyValidation(): AjfValidation {\n  return createValidation({condition: `notEmpty($value)`, errorMessage: `Value must not be empty`});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from './create-warning';\n\nexport function notEmptyWarning(): AjfWarning {\n  return createWarning({condition: 'notEmpty($value)', warningMessage: 'Value must not be empty'});\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","defineProperty","AjfBaseFieldComponent","_instance","instance","_setUpInstanceUpdate","_onInstanceChange","_control","ngOnInit","_this","_warningTriggerSub","warningTrigger","pipe","withLatestFrom","control","filter","v","subscribe","warningResults","_warningAlertService","showWarningAlertPrompt","w","result","map","warning","r","setValue","_e","unsubscribe","ngOnDestroy","_instanceUpdateSub","updated","_changeDetectorRef","detectChanges","e","Subscription","EMPTY","_service","defer","getControl","ctrl","FormControl","AjfDateValuePipe","transform","date","Date","type","Pipe","args","name","AjfDateValueStringPipe","dateObj","format","Injectable","tslib_1.__extends","AjfInvalidFieldDefinitionError","AjfError","message","_super","String","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Empty","DateInput","Time","Table","Geolocation","Barcode","LENGTH","fieldIconName","AjfFieldType","toLowerCase","AjfFieldIconPipe","field","fieldType","AjfFieldIsValidPipe","fieldInstance","validationResults","AjfFormField","_loadComponent","fieldHost","vcr","viewContainerRef","clear","componentDef","componentsMap","node","component","componentFactory","_cfr","resolveComponentFactory","componentInstance_1","createComponent","inputs","keys","forEach","key","AjfFieldHost","Directive","selector","ViewContainerRef","AjfFieldService","registerCustomField","Error","AjfFieldWithChoicesComponent","_searchThreshold","cdr","service","warningAlertService","searchThreshold","AjfField","AjfFieldNodeLink","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","isFieldWithChoices","isField","nodeType","AjfNodeType","isFieldInstance","nodeInstance","isFieldWithChoicesInstance","isTableFieldInstance","isTableField","updateConditionalBranches","context","conditionalBranches","oldBranch","verifiedBranch","idx","found","evaluateExpression","condition","updateVisibility","branchVisibility","visibility","visible","oldVisibility","newVisibility","nodeInstanceSuffix","prefix","join","nodeInstanceCompleteName","updateFormula","formula","editable","value","newValue","oldValue","$value","changed","updateNextSlideCondition","nextSlideCondition","evaluateValidation","validation","forceFormula","error","errorMessage","clientValidation","evaluateValidationGroup","res","ctx","deepCopy","conditions","cond","push","evaluateValidationConditions","maxValue","minValue","evaluateValidationMaxValue","evaluateValidationMinValue","notEmpty","evaluateValidationNotEmpty","maxDigits","evaluateValidationMaxDigits","minDigits","evaluateValidationMinDigits","updateValidation","supplementaryInformations","completeName","forceValue","valid","reduce","prev","x","evaluateWarningConditions","warningMessage","evaluateWarning","updateWarning","evaluateWarningGroup","updateFilteredChoices","choicesFilter","filteredChoices","choicesOrigin","choices","c","$choiceValue","createNode","alwaysCondition","tslib_1.__assign","parentNode","label","createField","defaultValue","size","isSlidesNode","isContainerNode","flattenNodesInstances","nodes","includeGroups","flatNodes","isContainerNodeInstance","concat","isSlidesInstance","isNodeGroupInstance","isNodeGroup","isSlideInstance","isSlideNode","createNodeInstance","slice","updatedEvt","EventEmitter","createFieldInstance","createSlideInstance","slideNodes","position","createValidationGroup","group","createWarningGroup","isRepeatingContainerNode","getAncestorRepeatingNodesNames","allNodes","names","nodeGroups","curParent","parent","curNode","find","id","sn","getInstanceCondition","ancestorsNames","oldCondition","newCondition","normalizeExpression","getInstanceConditions","newConditions","getInstanceFormula","oldFormula","newFormula","createValidation","getInstanceValidations","validations","newValidations","newValidation","oldValidation","getInstanceValidation","createWarning","getInstanceWarnings","warnings","newWarnings","newWarning","oldWarning","getInstanceWarning","isRepeatingSlideInstance","isRepeatingSlide","nodeToNodeInstance","firstTriggerConditionDone","selectionTrigger","createFieldWithChoicesInstance","hideEmptyRows","controls","createTableFieldInstance","formulaReps","reps","createNodeGroupInstance","slideInstance","createRepeatingSlideInstance","createCondition","ngInstance","createFormula","fNode","fInstance","fwcNode","fwcInstance","triggerConditions","rgInstance","flattenNodes","orderedNodes","newNodes","sort","n1","n2","updateRepsNum","oldReps","ctxReps","newReps","canAdd","maxReps","canRemove","minReps","AjfValidationService","addFunction","f","_functions","_initFunctions","addFunctionHandler","fn","undefined","AjfExpressionUtils","utils","functionsStr","toString","_functionsStr","_baseUtilFunctions","UTIL_FUNCTIONS","tokenize","((/** @type {?} */ (esprima))).default","esprima","Initializing","Complete","AjfFormRendererService","_flatNodesTree","_errorPositions","_errors","form","_form","getValue","setForm","_initUpdateMapStreams","initContext","currentForm","next","getFormValue","formGroup","_formGroup","addGroup","Observable","subscriber","complete","_nodesUpdates","_adjustReps","removeGroup","fieldName","contains","_initErrorsStreams","_valueChanged","_nodes","currentPosition","errors","rsNode","slide","indexOf","v1","v2","sNode","_slidesNum","publishReplay","refCount","startWith","_visibilityNodesMap","scan","rmap","op","share","_repetitionNodesMap","_conditionalBranchNodesMap","_formulaNodesMap","_validationNodesMap","_warningNodesMap","_filteredChoicesNodesMap","_triggerConditionsNodesMap","_nextSlideConditionsNodesMap","_nodesMaps","_initFormStreams","formObs","_initFormGroupStreams","FormGroup","_nodesInstances","_orderedNodesInstancesTree","_initNodeInstance","_explodeRepeatingNode","sInstance","tfInstance_1","tNode_1","formGroup_1","controlsWithLabels_1","columnLabels","rows","row","k","console","log","registerControl","rowLabels","value_1","rowIndex","updateFieldInstanceState","_addNodeInstance","added","removed","newNodes_1","newInstance","_loop_1","this_1","nodesNum","splice","_removeNodeInstance","fg","rsInstance","nodesPerSlide","startNode","_updateFormValueAndValidity","asObservable","values","updateValueAndValidity","nodesInstances","curSuffix","parentNodeInstance","ni","nni","_formValueDelta","_formGroupSubscription","init","initForm","_formInitEvent","emit","AjfFormInitStatus","valueChanges","pairwise","debounceTime","_flatNodes","oldFormValue","newFormValue","visibilityMap","repetitionMap","conditionalBranchesMap","formulaMap","validationMap","warningMap","nextSlideConditionsMap","filteredChoicesMap","triggerConditionsMap","delta","deltaLen","updatedNodes","visibilityChanged","fg_1","s_1","timer","closed","rnInstance","_condition","_showSubtree","_hideSubtree","currentSupplementaryInformations","_nextSlideTrigger","conditionsNum","updateTriggerConditions","subNodesNum","subNode","branch","_updateSubtreeVisibility","subNodes","nodeSuffix","isContainer","cn","_initNodesStreams","flatTree","flattenNodesInstancesTree","slides","nodeName","_removeNodesVisibilityMapIndex","_removeNodesRepetitionMapIndex","_removeNodesConditionalBranchMapIndex","_removeNodesFormulaMapIndex","_removeNodesValidationMapIndex","_removeNodesWarningMapIndex","_removeNodesNextSlideConditionsMapIndex","_removeNodesFilteredChoicesMapIndex","_removeNodesTriggerConditionsMapIndex","_removeSlideInstance","_removeNodeGroupInstance","_removeFieldInstance","_removeFromNodesVisibilityMap","conditionalBranch","_removeFromNodesConditionalBranchMap","nodeGroupInstance","nodeGroup","_removeFromNodesRepetitionMap","fieldInstanceName","removeControl","_validationNodesMapUpdates","vmap","_removeFromNodesFormulaMap","rcInstance","_removeFromNodesValidationMap","_removeFromNodesWarningMap","_removeFromNodesNextSlideConditionsMap","_removeFromNodesFilteredChoicesMap","_removeFromNodesTriggerConditionsMap","_addNodeGroupInstance","_addSlideInstance","_addFieldInstance","_addToNodesVisibilityMap","_addToNodesConditionalBranchMap","_addToNodesFormulaMap","_addToNodesRepetitionMap","_addToNodesValidationMap","_addToNodesWarningMap","_addToNodesNextSlideConditionsMap","_addToNodesFilteredChoicesMap","_addToNodesTriggerConditionsMap","nodeGroupInstanceName","index","_removeNodesMapIndex","_visibilityNodesMapUpdates","_repetitionNodesMapUpdates","_conditionalBranchNodesMapUpdates","_formulaNodesMapUpdates","_warningNodesMapUpdates","_filteredChoicesNodesMapUpdates","_triggerConditionsNodesMapUpdates","_nextSlideConditionsNodesMapUpdates","nodesMap","_removeFromNodesMap","tokens","token","tokenName","_addToNodesMap","_","Subject","formInitEvent","BehaviorSubject","nextSlideTrigger","slidesNum","AjfFormActionEvent","AjfFormRenderer","_saveDisabled","saveDisabled","coerceBooleanProperty","markForCheck","_hasStartMessage","hasStartMessage","_hasEndMessage","hasEndMessage","_hideTopToolbar","hideTopToolbar","_hideBottomToolbar","hideBottomToolbar","_hideNavigationButtons","hideNavigationButtons","_fixedOrientation","fixedOrientation","_orientation","orientation","_orientationChange","_init","_rendererService","goToNextError","_errorMoveEvent","goToPrevError","delayWhen","formSlider","pageScrollFinish","dir","onSave","_evt","_formAction","source","action","onFormAction","ngAfterViewInit","ngAfterViewChecked","_errorMoveSubscription","move","currentPage","prevIdx","nextIdx","errorsLen","to","_nextSlideSubscription","orientationChangeHandler","trackNodeById","ajfFieldTypes","orientationChange","formAction","nodesTree","errorPositions","formIsInit","AjfBoolToIntPipe","AjfExpandFieldWithChoicesPipe","threshold","forceNarrow","forceExpanded","AjfIncrementPipe","increment","AjfIsRepeatingSlideInstancePipe","AjfNodeCompleteNamePipe","AjfRangePipe","start","step","range","length_1","AjfTableRowClass","AjfTableVisibleColumnsPipe","col","cur","AjfValidSlidePipe","pure","AjfFormsModule","NgModule","declarations","exports","providers","AjfInputFieldComponent","_readonly","readonly","AJF_SEARCH_ALERT_THRESHOLD","InjectionToken","AjfAttachmentsOriginSerializer","fromJson","origin","attachments","createAttachmentsOrigin","createChoicesOrigin","AjfChoicesOriginSerializer","createContainerNode","containerNode","createRepeatingNode","repeatingNode","createNodeGroup","createRepeatingSlide","createSlide","AjfValidationGroupSerializer","AjfWarningGroupSerializer","AjfNodeSerializer","json","choicesOrigins","attachmentsOrigins","err","obj","AjfConditionSerializer","_fieldFromJson","_fieldNodeLinkFromJson","_nodeGroupFromJson","_repeatingSlideFromJson","_slideFromJson","_containerNodeFromJson","attachmentsOriginRef","attachmentOrigin","a","_formulaFieldFromJson","_fieldWithChoicesFromJson","choicesOriginRef","AjfFormulaSerializer","createFieldWithChoices","_repeatingNodeFromJson","AjfFormSerializer","stringIdentifier","Link","Pdf","isChoicesOrigin","co","typeStr","match","Promise","resolve","fo","generator","po_1","then","obso_1","aoo_1"],"mappings":"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"}