{"version":3,"sources":["src/core/core-image.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","image","ng","platformBrowser","rxjs","this","AjfImageType","AjfImage","_el","_renderer","_domSanitizer","_this","imageTypes","_imageType","BehaviorSubject","imageType","asObservable","_url","url","_iconObj","iconObj","_flagName","flagName","_iconSub","Subscription","EMPTY","subscribe","_updateIconSize","Object","defineProperty","prototype","set","type","next","enumerable","configurable","imageUrl","startsWith","bypassSecurityTrustResourceUrl","icon","flag","ngOnDestroy","closed","unsubscribe","ngOnInit","getValue","styles","nativeElement","style","iconComponent","fontSize","match","el","setStyle","RendererStyleFlags2","Important","decorators","Directive","ctorParameters","ElementRef","Renderer2","DomSanitizer","propDecorators","Input","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/image', ['exports', '@angular/core', '@angular/platform-browser', 'rxjs'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.image = {}), global.ng.core, global.ng.platformBrowser, global.rxjs));\n}(this, (function (exports, core, platformBrowser, rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    (function (AjfImageType) {\n        AjfImageType[AjfImageType[\"Image\"] = 0] = \"Image\";\n        AjfImageType[AjfImageType[\"Flag\"] = 1] = \"Flag\";\n        AjfImageType[AjfImageType[\"Icon\"] = 2] = \"Icon\";\n        AjfImageType[AjfImageType[\"LENGTH\"] = 3] = \"LENGTH\";\n    })(exports.AjfImageType || (exports.AjfImageType = {}));\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfImage = /** @class */ (function () {\n        function AjfImage(_el, _renderer, _domSanitizer) {\n            var _this = this;\n            this._el = _el;\n            this._renderer = _renderer;\n            this._domSanitizer = _domSanitizer;\n            this.imageTypes = exports.AjfImageType;\n            this._imageType = new rxjs.BehaviorSubject(null);\n            this.imageType = this._imageType.asObservable();\n            this._url = new rxjs.BehaviorSubject(null);\n            this.url = this._url.asObservable();\n            this._iconObj = new rxjs.BehaviorSubject(null);\n            this.iconObj = this._iconObj.asObservable();\n            this._flagName = new rxjs.BehaviorSubject(null);\n            this.flagName = this._flagName.asObservable();\n            this._iconSub = rxjs.Subscription.EMPTY;\n            this._iconSub = this.iconObj.subscribe(function () { return _this._updateIconSize(); });\n        }\n        Object.defineProperty(AjfImage.prototype, \"type\", {\n            /**\n             * if 0 take image by url\n             * if 1 take image by icon\n             * if 2 take image by class\n             *\n             */\n            set: function (type) {\n                this._imageType.next(type);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfImage.prototype, \"imageUrl\", {\n            set: function (imageUrl) {\n                imageUrl = typeof imageUrl === 'string' ? imageUrl : '';\n                this._url.next(imageUrl.startsWith('data:image/svg+xml;base64,') ?\n                    this._domSanitizer.bypassSecurityTrustResourceUrl(imageUrl) :\n                    imageUrl);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfImage.prototype, \"icon\", {\n            set: function (icon) {\n                this._iconObj.next(icon);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfImage.prototype, \"flag\", {\n            set: function (flag) {\n                this._flagName.next(flag);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfImage.prototype.ngOnDestroy = function () {\n            if (this._iconSub && !this._iconSub.closed) {\n                this._iconSub.unsubscribe();\n            }\n        };\n        AjfImage.prototype.ngOnInit = function () {\n            this._updateIconSize();\n        };\n        AjfImage.prototype._updateIconSize = function () {\n            var icon = this._iconObj.getValue();\n            if (icon == null) {\n                return;\n            }\n            var styles = this._el.nativeElement.style;\n            if (this.iconComponent == null || styles == null || styles.fontSize == null) {\n                return;\n            }\n            var fontSize = styles.fontSize;\n            if (fontSize.match(/^[0-9]+px$/) != null) {\n                var el = this.iconComponent.nativeElement;\n                this._renderer.setStyle(el, 'width', fontSize, core.RendererStyleFlags2.Important);\n                this._renderer.setStyle(el, 'height', fontSize, core.RendererStyleFlags2.Important);\n            }\n        };\n        return AjfImage;\n    }());\n    AjfImage.decorators = [\n        { type: core.Directive }\n    ];\n    AjfImage.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.Renderer2 },\n        { type: platformBrowser.DomSanitizer }\n    ]; };\n    AjfImage.propDecorators = {\n        type: [{ type: core.Input }],\n        imageUrl: [{ type: core.Input }],\n        icon: [{ type: core.Input }],\n        flag: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfImage = AjfImage;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-image.umd.js.map\n"]}