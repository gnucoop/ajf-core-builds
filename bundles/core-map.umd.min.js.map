{"version":3,"file":"core-map.umd.min.js","sources":["../../src/core/map/map-container-directive.ts","../../src/core/map/map.ts","../../src/core/map/map-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ElementRef, Directive} from '@angular/core';\n\n@Directive({\n  selector: '[mapContainer]'\n})\nexport class AjfMapContainerDirective {\n  get htmlElement(): HTMLElement { return this._el.nativeElement; }\n\n  constructor(private _el: ElementRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, Input,\n  OnDestroy, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs';\n\nimport * as L from 'leaflet';\nconst leafletLib = (L as any).default || L;\n\nimport {AjfMapContainerDirective} from './map-container-directive';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-map',\n  templateUrl: 'map.html',\n  styleUrls: ['map.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfMapComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(AjfMapContainerDirective, {static: true}) mapContainer: AjfMapContainerDirective;\n\n  private _coordinate: number[];\n  @Input() set coordinate(coordinate: number[]) {\n    this._coordinate = coordinate.slice(0);\n    this._setMapView();\n  }\n\n  private _tileLayer: string;\n  @Input() set tileLayer(tileLayer: string) {\n    this._tileLayer = tileLayer;\n    this._addTileLayerToMap();\n  }\n\n  private _attribution: string;\n  @Input() set attribution(attribution: string) {\n    this._attribution = attribution;\n    this._addTileLayerToMap();\n  }\n\n  private _disabled: boolean;\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this._disableMap();\n  }\n\n\n  private _map: L.Map;\n  get map(): L.Map { return this._map; }\n\n  private _columnWidthChanged: Subscription = Subscription.EMPTY;\n\n  ngAfterViewInit(): void {\n    if (this.mapContainer) {\n      this._initMap();\n      this._setMapView();\n      this._addTileLayerToMap();\n      this._disableMap();\n    }\n  }\n\n  redraw() {\n    if (this.mapContainer && this._map) {\n      this._map.invalidateSize();\n    }\n  }\n\n  ngOnDestroy() {\n    this._columnWidthChanged.unsubscribe();\n  }\n\n  private _initMap(): void {\n    const options = {\n      zoomControl: false,\n      attributionControl: false\n    };\n\n    this._map = leafletLib.map(this.mapContainer.htmlElement, options);\n  }\n\n  private _setMapView(): void {\n    if (this._map == null) { return; }\n\n    let x, y, z;\n    if (this._coordinate != null && this._coordinate.length === 3) {\n      x = this._coordinate[0];\n      y = this._coordinate[1];\n      z = this._coordinate[2];\n    } else {\n      x = 0;\n      y = 0;\n      z = 14;\n    }\n    this._map.setView([x, y], z);\n  }\n\n  private _addTileLayerToMap(): void {\n    if (this._map == null || this._tileLayer == null) { return; }\n    this._map.eachLayer((l) => this._map.removeLayer(l));\n    leafletLib.tileLayer(this._tileLayer, {\n      attribution: this._attribution\n    }).addTo(this._map);\n  }\n\n  private _disableMap(): void {\n    if (this._map == null) { return; }\n\n    if (this._disabled) {\n      this._map.dragging.disable();\n      this._map.touchZoom.disable();\n      this._map.doubleClickZoom.disable();\n      this._map.scrollWheelZoom.disable();\n      this._map.boxZoom.disable();\n      this._map.keyboard.disable();\n      if (this._map.tap) {\n        this._map.tap.disable();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfMapContainerDirective} from './map-container-directive';\nimport {AjfMapComponent} from './map';\n\n@NgModule({\n  declarations: [\n    AjfMapComponent,\n    AjfMapContainerDirective\n  ],\n  exports: [\n    AjfMapComponent\n  ]\n})\nexport class AjfMapModule { }\n"],"names":["AjfMapContainerDirective","Object","defineProperty","prototype","this","_el","nativeElement","type","Directive","args","selector","ElementRef","leafletLib","((/** @type {?} */ (L))).default","L","AjfMapComponent","coordinate","_coordinate","slice","_setMapView","tileLayer","_tileLayer","_addTileLayerToMap","attribution","_attribution","disabled","_disabled","_disableMap","_map","ngAfterViewInit","mapContainer","_initMap","redraw","invalidateSize","ngOnDestroy","_columnWidthChanged","unsubscribe","map","htmlElement","zoomControl","attributionControl","x","y","z","length","setView","_this","eachLayer","l","removeLayer","addTo","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","tap","Component","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","propDecorators","Input","Subscription","EMPTY","AjfMapModule","NgModule","declarations","exports"],"mappings":"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"}