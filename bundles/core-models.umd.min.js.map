{"version":3,"sources":["src/core/core-models.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","models","tslib","debug","esprima","dateFns","numeral","this","debug__default","esprima__default","numeral__default","AjfError","_super","message","_this","call","Object","setPrototypeOf","prototype","_message","__extends","defineProperty","get","enumerable","configurable","Error","createCondition","condition","AjfConditionSerializer","fromJson","json","createFormula","formula","AjfFormulaSerializer","dbg","numeralConstructor","dateUtils","addDays","addMonths","addYears","endOfISOWeek","format","getDay","parse","parseISO","startOfMonth","startOfISOWeek","digitCount","x","isNaN","isFinite","toString","replace","length","Infinity","decimalCount","parseFloat","parts","split","isInt","test","Math","round","notEmpty","valueInChoice","array","indexOf","scanGroupField","reps","acc","callback","i","sum","reduce","a","b","dateOperations","dString","period","operation","v","dateOp","d","Date","num","digits","f","e","m","pow","extractArray","source","property","property2","l","slice","res","push","Number","extractSum","properties","sumVal","leng","j","extractArraySum","arrays","weekI","propI","drawThreshold","threshold","Array","count","extractDates","fmt","formatDate","isoMonth","lastProperty","sumLastProperties","val","calculateTrendProperty","last","lastLast","lastProp","lastLastProp","calculateTrendByProperties","arraysum","calculateAvgProperty","range","coefficient","counter","noZero","calculateAvgPropertyArray","resArr","sourceArr","len","r","reverse","alert","formatNumber","date","getCoordinate","zoom","AjfExpressionUtils","UTIL_FUNCTIONS","utils","fn","parseInt","parseDate","tokenize","execContext","getContextString","context","fstr","keys","forEach","JSON","stringify","tokenize$1","cachedContext","cachedContextString","alwaysCondition","evaluateExpression","expression","forceFormula","undefined","identifiers","filter","t","type","map","value","ctx","key","enabled","Function","bind","apply","__spread","console","log","neverCondition","normalizeExpression","ancestorsNames","prefix","ancestorsNameStrings","token","RegExp","join","validateExpression","str"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('debug'), require('esprima'), require('date-fns'), require('numeral')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/models', ['exports', 'tslib', 'debug', 'esprima', 'date-fns', 'numeral'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.models = {}), global.tslib, global.debug, global.esprima, global.dateFns, global.numeral));\n}(this, (function (exports, tslib, debug, esprima, dateFns, numeral) { 'use strict';\n\n    var debug__default = 'default' in debug ? debug['default'] : debug;\n    var esprima__default = 'default' in esprima ? esprima['default'] : esprima;\n    var numeral__default = 'default' in numeral ? numeral['default'] : numeral;\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfError = /** @class */ (function (_super) {\n        tslib.__extends(AjfError, _super);\n        /**\n         * this constructor will init the message error\n         */\n        function AjfError(message) {\n            var _this = _super.call(this, message) || this;\n            // Set the prototype explicitly. Workaround needed in TS >= 2.1 when extending built-ins\n            // See: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n            Object.setPrototypeOf(_this, AjfError.prototype);\n            _this._message = message || '';\n            return _this;\n        }\n        Object.defineProperty(AjfError.prototype, \"name\", {\n            get: function () { return 'AjfError'; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfError.prototype, \"message\", {\n            get: function () { return this._message; },\n            enumerable: true,\n            configurable: true\n        });\n        return AjfError;\n    }(Error));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function createCondition(condition) {\n        if (condition === void 0) { condition = {}; }\n        return { condition: condition.condition || '' };\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfConditionSerializer = /** @class */ (function () {\n        function AjfConditionSerializer() {\n        }\n        AjfConditionSerializer.fromJson = function (json) {\n            return createCondition(json);\n        };\n        return AjfConditionSerializer;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function createFormula(formula) {\n        if (formula === void 0) { formula = {}; }\n        return { formula: formula.formula || '' };\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormulaSerializer = /** @class */ (function () {\n        function AjfFormulaSerializer() {\n        }\n        AjfFormulaSerializer.fromJson = function (json) {\n            return createFormula(json);\n        };\n        return AjfFormulaSerializer;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function alwaysCondition() {\n        return createCondition({ condition: 'true' });\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var debugConstructor = debug__default || debug;\n    var dbg = debugConstructor('ajf:models:validated-property');\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var numeralConstructor = numeral__default || numeral;\n    var dateUtils = {\n        addDays: dateFns.addDays,\n        addMonths: dateFns.addMonths,\n        addYears: dateFns.addYears,\n        endOfISOWeek: dateFns.endOfISOWeek,\n        format: dateFns.format,\n        getDay: dateFns.getDay,\n        parse: dateFns.parseISO,\n        startOfMonth: dateFns.startOfMonth,\n        startOfISOWeek: dateFns.startOfISOWeek\n    };\n    function digitCount(x) {\n        if (isNaN(x) || typeof (x) !== 'number') {\n            return 0;\n        }\n        if (!isFinite(x)) {\n            return Infinity;\n        }\n        return x.toString().replace(/[^0-9]/g, '').length;\n    }\n    function decimalCount(x) {\n        if (typeof x === 'string') {\n            x = parseFloat(x);\n        }\n        if (typeof x !== 'number' || isNaN(x)) {\n            return 0;\n        }\n        var parts = x.toString().split('.');\n        return parts.length > 1 ? parts[1].length : 0;\n    }\n    function isInt(x) {\n        if (typeof (x) === 'string') {\n            return /^-?\\d+$/.test(x);\n        }\n        if (typeof (x) === 'number') {\n            return Math.round(x) === x;\n        }\n        return false;\n    }\n    function notEmpty(x) {\n        return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }\n    function valueInChoice(array, x) {\n        return (array || []).indexOf(x) > -1 || array === x;\n    }\n    function scanGroupField(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }\n    function sum(array) {\n        return array.reduce(function (a, b) { return a + b; }, 0);\n    }\n    function dateOperations(dString, period, operation, v) {\n        var fmt = 'mm/dd/yyyy';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n            v = -v;\n        }\n        var dateOp;\n        switch (period) {\n            case 'day':\n                dateOp = dateUtils.addDays;\n                break;\n            case 'month':\n                dateOp = dateUtils.addMonths;\n                break;\n            case 'year':\n                dateOp = dateUtils.addYears;\n                break;\n            default:\n                return '';\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n    }\n    function round(num, digits) {\n        digits = digits || 0;\n        var f;\n        if (typeof num !== 'number') {\n            try {\n                f = parseFloat(num);\n            }\n            catch (e) {\n            }\n        }\n        else {\n            f = num;\n        }\n        if (f == null || isNaN(f)) {\n            f = 0;\n        }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n    }\n    function extractArray(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l; i++) {\n            if (source[i][property] != null && property2 != null && source[i][property2] != null) {\n                res.push(Number(source[i][property]) + Number(source[i][property2]));\n            }\n            else if (source[i][property] != null) {\n                res.push(source[i][property]);\n            }\n        }\n        return res;\n    }\n    function extractSum(source, properties) {\n        var sumVal = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n        for (var i = 0; i < l; i++) {\n            var array = extractArray(source, properties[i]);\n            var leng = array.length;\n            for (var j = 0; j < leng; j++) {\n                if (!isNaN(Number(array[j]))) {\n                    sumVal += Number(array[j]);\n                }\n            }\n        }\n        return sumVal;\n    }\n    function extractArraySum(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n        for (var i = 0; i < properties.length; i++) {\n            var array = extractArray(source, properties[i]);\n            arrays.push(array);\n        }\n        var res = [];\n        if (arrays.length > 0) {\n            for (var weekI = 0; weekI < arrays[0].length; weekI++) {\n                var sumVal = 0;\n                for (var propI = 0; propI < properties.length; propI++) {\n                    sumVal = sumVal + Number(arrays[propI][weekI]);\n                }\n                res.push(sumVal);\n            }\n        }\n        return res;\n    }\n    function drawThreshold(source, property, threshold) {\n        source = (source || []).slice(0);\n        threshold = threshold || [0];\n        if (!(threshold instanceof Array)) {\n            threshold = [threshold];\n        }\n        var l = source.length;\n        var res = [];\n        var count = 0;\n        for (var i = 0; i < l; i++) {\n            if (source[i][property] != null) {\n                if (threshold.length > count) {\n                    res.push(threshold[count]);\n                }\n                else {\n                    res.push(threshold[0]);\n                }\n                count++;\n            }\n        }\n        return res;\n    }\n    function extractDates(source, property, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l; i++) {\n            if (source[i][property] != null) {\n                switch (fmt) {\n                    case 'WW':\n                    case 'ww':\n                        prefix = 'W';\n                        res.push(prefix + formatDate(source[i]['date_start'], fmt));\n                        break;\n                    case 'MM':\n                    case 'mm':\n                        prefix = 'M';\n                        res.push(prefix + isoMonth(source[i]['date_start'], fmt));\n                        break;\n                    default:\n                        prefix = '';\n                        res.push(prefix + formatDate(source[i]['date_start'], fmt));\n                }\n            }\n        }\n        return res;\n    }\n    function lastProperty(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length - 1;\n        while (l >= 0 && source[l][property] == null) {\n            l--;\n            if (l < 0) {\n                return '';\n            }\n        }\n        return l >= 0 ? source[l][property] : '';\n    }\n    function sumLastProperties(source, properties) {\n        source = (source || []).slice(0);\n        var sumVal = 0;\n        var val = 0;\n        for (var i = 0; i < properties.length; i++) {\n            val = Number(lastProperty(source, properties[i]));\n            if (!isNaN(val)) {\n                sumVal += val;\n            }\n        }\n        return sumVal;\n    }\n    function calculateTrendProperty(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n            if (last == 0) {\n                break;\n            }\n            last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n            lastLast = last;\n        }\n        else {\n            while (source[lastLast][property] == null) {\n                if (lastLast == 0) {\n                    lastLast = last;\n                    break;\n                }\n                lastLast--;\n            }\n        }\n        var lastProp = source[last] ? (source[last][property] || 0) : 0;\n        var lastLastProp = source[lastLast] ? (source[lastLast][property] || 0) : 0;\n        if (lastProp == lastLastProp) {\n            return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        }\n        else if (lastProp > lastLastProp) {\n            return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        }\n        else {\n            return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n    }\n    function calculateTrendByProperties(source, properties) {\n        var arraysum = extractArraySum(source, properties);\n        var lastProp = arraysum.length > 0 ? (arraysum[arraysum.length - 1] || 0) : 0;\n        var lastLastProp = arraysum.length > 1 ? (arraysum[arraysum.length - 2] || 0) : lastProp;\n        if (lastProp == lastLastProp) {\n            return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        }\n        else if (lastProp > lastLastProp) {\n            return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        }\n        else {\n            return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n    }\n    function calculateAvgProperty(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n        coefficient = coefficient || 1;\n        range = range || 12;\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n        if (l < range) {\n            range = l;\n        }\n        while (range != 0) {\n            if (source[l - 1][property] != null) {\n                counter++;\n                res += Number(source[l - 1][property]);\n                if (source[l - 1][property] > 0) {\n                    noZero++;\n                }\n            }\n            l--;\n            range--;\n        }\n        if (coefficient == 0) {\n            return noZero;\n        }\n        else {\n            return round((res / counter) * coefficient, 2) || 0;\n        }\n    }\n    function calculateAvgPropertyArray(source, properties, range, coefficient) {\n        source = (source || []).slice(0);\n        var resArr = [];\n        if (properties && properties.length > 0) {\n            var avg = 0;\n            coefficient = coefficient || 1;\n            range = range || 12;\n            var sourceArr = properties.length > 1 ? extractArraySum(source, properties) :\n                extractArray(source, properties[0]);\n            var l = sourceArr.length;\n            for (var len = l; len > 0; len--) {\n                var res = 0;\n                var counter = 0;\n                var noZero = 0;\n                if (len < range) {\n                    range = len;\n                }\n                for (var r = 1; r <= range; r++) {\n                    var val = sourceArr[len - r];\n                    if (val != null) {\n                        counter++;\n                        res += Number(val);\n                        if (val > 0) {\n                            noZero++;\n                        }\n                    }\n                }\n                if (counter > 0) {\n                    if (coefficient == 0) {\n                        avg = noZero;\n                    }\n                    else {\n                        avg = (res / counter) * coefficient || 0;\n                    }\n                    resArr.push(round(avg, 2));\n                }\n            }\n        }\n        return resArr.reverse();\n    }\n    function alert(source, property, threshold) {\n        source = (source || []).slice(0);\n        if (lastProperty(source, property) > threshold) {\n            return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n        }\n        else {\n            return '<p></p>';\n        }\n    }\n    function formatNumber(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeralConstructor(num).format(fmt);\n    }\n    function formatDate(date, fmt) {\n        fmt = fmt || 'mm-dd-yyyy';\n        return dateUtils.format(date, fmt);\n    }\n    function isoMonth(date, fmt) {\n        fmt = fmt || 'mm';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfISOWeek(date), 3), fmt);\n    }\n    function getCoordinate(source, zoom) {\n        zoom = zoom || 6;\n        if (source == null) {\n            return [51.505, -0.09, zoom];\n        }\n        else {\n            return [source[0], source[1], zoom];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfExpressionUtils = /** @class */ (function () {\n        function AjfExpressionUtils() {\n        }\n        AjfExpressionUtils.UTIL_FUNCTIONS = '';\n        AjfExpressionUtils.utils = {\n            digitCount: { fn: digitCount },\n            decimalCount: { fn: decimalCount },\n            isInt: { fn: isInt },\n            notEmpty: { fn: notEmpty },\n            valueInChoice: { fn: valueInChoice },\n            scanGroupField: { fn: scanGroupField },\n            sum: { fn: sum },\n            dateOperations: { fn: dateOperations },\n            round: { fn: round },\n            extractArray: { fn: extractArray },\n            extractSum: { fn: extractSum },\n            extractArraySum: { fn: extractArraySum },\n            drawThreshold: { fn: drawThreshold },\n            extractDates: { fn: extractDates },\n            lastProperty: { fn: lastProperty },\n            sumLastProperties: { fn: sumLastProperties },\n            calculateTrendProperty: { fn: calculateTrendProperty },\n            calculateTrendByProperties: { fn: calculateTrendByProperties },\n            calculateAvgProperty: { fn: calculateAvgProperty },\n            calculateAvgPropertyArray: { fn: calculateAvgPropertyArray },\n            alert: { fn: alert },\n            formatNumber: { fn: formatNumber },\n            formatDate: { fn: formatDate },\n            isoMonth: { fn: isoMonth },\n            getCoordinate: { fn: getCoordinate },\n            Math: { fn: Math },\n            parseInt: { fn: parseInt },\n            parseFloat: { fn: parseFloat },\n            parseDate: { fn: dateUtils.parse },\n            Date: { fn: Date }\n        };\n        return AjfExpressionUtils;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var esprimaMod = esprima__default || esprima;\n    var tokenize = esprimaMod.tokenize;\n    var execContext = {};\n    function evaluateExpression(expression, context, forceFormula) {\n        var formula = forceFormula || expression || '';\n        if (formula === '') {\n            return '';\n        }\n        if (formula === 'true') {\n            return true;\n        }\n        if (formula === 'false') {\n            return false;\n        }\n        if (context != null && context[formula] !== undefined) {\n            return context[formula];\n        }\n        if (/^\"[^\"]*\"$/.test(formula)) {\n            return formula.replace(/^\"+|\"+$/g, '');\n        }\n        var identifiers = tokenize(formula).filter(function (t) { return t.type === 'Identifier'; }).map(function (t) { return t.value; });\n        var ctx = [];\n        identifiers.forEach(function (key) {\n            var val = null;\n            if (context != null && context[key] !== undefined) {\n                val = context[key];\n            }\n            else if (AjfExpressionUtils.utils[key] !== undefined) {\n                var util = AjfExpressionUtils.utils[key];\n                val = util.fn;\n            }\n            ctx.push(val);\n        });\n        identifiers.push('execContext');\n        ctx.push(execContext);\n        try {\n            if (dbg.enabled) {\n                dbg(\"evaluating formula %s using context %j\", formula, ctx);\n            }\n            var f = new (Function.bind.apply(Function, tslib.__spread([void 0], identifiers, [\"return \" + formula])))();\n            var res = f.apply(void 0, tslib.__spread(ctx));\n            if (dbg.enabled) {\n                dbg(\"formula %s evaluated: result %s\", formula, res);\n            }\n            f = null;\n            return res;\n        }\n        catch (e) {\n            console.log(e);\n            if (dbg.enabled) {\n                dbg(\"formula %s not evaluated: error %j\", formula, e.message);\n            }\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function getContextString(context) {\n        var fstr = AjfExpressionUtils.UTIL_FUNCTIONS;\n        if (context instanceof Array) {\n            for (var i = 0; i < context.length; i++) {\n                fstr = fstr + \"var \" + context[i] + \" = true;\";\n            }\n        }\n        else if (context != null) {\n            Object.keys(context).forEach(function (x) {\n                var val = context[x];\n                if (val == null || isNaN(Number(val)) || val === '' || val instanceof Array) {\n                    if (val instanceof Array) {\n                        for (var i = 0; i < val.length; i++) {\n                            val[i] =\n                                (val == null || isNaN(Number(val[i])) || val[i] === '') && val[i] || Number(val[i]);\n                        }\n                    }\n                    val = JSON.stringify(val);\n                }\n                else {\n                    val = Number(val);\n                }\n                fstr = fstr + \"var \" + x + \" = \" + val + \"; \";\n            });\n        }\n        return fstr;\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function neverCondition() {\n        return createCondition({ condition: 'false' });\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var esprimaMod$1 = esprima__default || esprima;\n    var tokenize$1 = esprimaMod$1.tokenize;\n    function normalizeExpression(formula, ancestorsNames, prefix) {\n        var ancestorsNameStrings = Object.keys(ancestorsNames);\n        var tokens = tokenize$1(formula)\n            .filter(function (token) { return token.type == 'Identifier' && token.value != '$value'; })\n            .map(function (token) { return token.value; });\n        tokens.forEach(function (t) {\n            if (ancestorsNameStrings.indexOf(t) > -1) {\n                formula = formula.replace(new RegExp(\"\\\\b\" + t + \"\\\\b\", 'g'), t + \"__\" + prefix.slice(ancestorsNames[t]).join('__'));\n            }\n        });\n        return formula;\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var cachedContext = {};\n    var cachedContextString = '{}';\n    function validateExpression(str, context) {\n        if (context === cachedContext) {\n            console.log('cache hit');\n        }\n        else {\n            cachedContext = context;\n            cachedContextString = getContextString(context);\n        }\n        var ctx = cachedContextString;\n        try {\n            var f = new Function(\"\" + ctx + str);\n            dbg(\"validating formula %s using context %j\", str, ctx);\n            f();\n            dbg(\"formula %s validated\", str);\n            f = null;\n            return true;\n        }\n        catch (e) {\n            dbg(\"formula %s not validated: error %j\", str, e);\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfConditionSerializer = AjfConditionSerializer;\n    exports.AjfError = AjfError;\n    exports.AjfExpressionUtils = AjfExpressionUtils;\n    exports.AjfFormulaSerializer = AjfFormulaSerializer;\n    exports.alert = alert;\n    exports.alwaysCondition = alwaysCondition;\n    exports.calculateAvgProperty = calculateAvgProperty;\n    exports.calculateAvgPropertyArray = calculateAvgPropertyArray;\n    exports.calculateTrendByProperties = calculateTrendByProperties;\n    exports.calculateTrendProperty = calculateTrendProperty;\n    exports.createCondition = createCondition;\n    exports.createFormula = createFormula;\n    exports.dateOperations = dateOperations;\n    exports.dateUtils = dateUtils;\n    exports.dbg = dbg;\n    exports.decimalCount = decimalCount;\n    exports.digitCount = digitCount;\n    exports.drawThreshold = drawThreshold;\n    exports.evaluateExpression = evaluateExpression;\n    exports.extractArray = extractArray;\n    exports.extractArraySum = extractArraySum;\n    exports.extractDates = extractDates;\n    exports.extractSum = extractSum;\n    exports.formatDate = formatDate;\n    exports.formatNumber = formatNumber;\n    exports.getContextString = getContextString;\n    exports.getCoordinate = getCoordinate;\n    exports.isInt = isInt;\n    exports.isoMonth = isoMonth;\n    exports.lastProperty = lastProperty;\n    exports.neverCondition = neverCondition;\n    exports.normalizeExpression = normalizeExpression;\n    exports.notEmpty = notEmpty;\n    exports.round = round;\n    exports.scanGroupField = scanGroupField;\n    exports.sum = sum;\n    exports.sumLastProperties = sumLastProperties;\n    exports.validateExpression = validateExpression;\n    exports.valueInChoice = valueInChoice;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-models.umd.js.map\n"]}