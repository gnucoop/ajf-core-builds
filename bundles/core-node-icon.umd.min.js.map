{"version":3,"sources":["src/core/core-node-icon.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","nodeIcon","ng","forms","this","AjfNodeIcon","Object","defineProperty","prototype","get","_fontSet","enumerable","configurable","_fontIcon","_node","set","node","_getFontIcon","nodeType","AjfNodeType","AjfField","fieldType","AjfFieldType","toLowerCase","replace","decorators","type","Directive","propDecorators","Input","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,kBAClG,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,sBAAuB,CAAC,UAAW,kBAAmB,iBAAkBJ,GAClGA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,KAAOT,EAAOQ,IAAIC,MAAQ,GAAIT,EAAOQ,IAAIC,KAAKC,SAAW,IAAKV,EAAOW,GAAGF,KAAKG,MAAOZ,EAAOW,GAAGF,MAH/K,CAIEI,MAAM,SAAWX,EAASU,EAAOH,GAAQ;;;;;;;;;;;;;;;;;;;;;OAuBvC,IAAIK,EAA6B,WAC7B,SAASA,KA4CT,OA1CAC,OAAOC,eAAeF,EAAYG,UAAW,UAAW,CACpDC,IAAK,WACD,OAAOL,KAAKM,UAEhBC,YAAY,EACZC,cAAc,IAElBN,OAAOC,eAAeF,EAAYG,UAAW,WAAY,CACrDC,IAAK,WACD,OAAOL,KAAKS,WAEhBF,YAAY,EACZC,cAAc,IAElBN,OAAOC,eAAeF,EAAYG,UAAW,OAAQ,CACjDC,IAAK,WACD,OAAOL,KAAKU,OAEhBC,IAAK,SAAUC,GACXZ,KAAKU,MAAQE,EACbZ,KAAKM,SAAW,WAChBN,KAAKS,UAAYT,KAAKa,aAAaD,IAEvCL,YAAY,EACZC,cAAc,IAElBP,EAAYG,UAAUS,aAAe,SAAUD,GAC3C,OAAQA,EAAKE,UACT,KAAKf,EAAMgB,YAAYC,SACnB,IAAIC,EAAYlB,EAAMmB,aAAaN,EAAKK,WACxC,OAAoB,MAAbA,EAAoB,SAAWA,EAAUE,cAAgB,GACpE,QACI,IAAIL,EAAWf,EAAMgB,YAAYH,EAAKE,UACtC,OAAmB,MAAZA,EAAmB,QAAUA,EAASK,cAAcC,QAAQ,MAAO,IAAM,KAG5FnB,EAAYoB,WAAa,CACrB,CAAEC,KAAM1B,EAAK2B,YAEjBtB,EAAYuB,eAAiB,CACzBZ,KAAM,CAAC,CAAEU,KAAM1B,EAAK6B,SAEjBxB,EA7CqB;;;;;;;;;;;;;;;;;;;;;OA0EhCZ,EAAQY,YAAcA,EAEtBC,OAAOC,eAAed,EAAS,aAAc,CAAEqC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ajf/core/forms'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/node-icon', ['exports', '@ajf/core/forms', '@angular/core'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.nodeIcon = {}), global.ng.core.forms, global.ng.core));\n}(this, (function (exports, forms, core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfNodeIcon = /** @class */ (function () {\n        function AjfNodeIcon() {\n        }\n        Object.defineProperty(AjfNodeIcon.prototype, \"fontSet\", {\n            get: function () {\n                return this._fontSet;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfNodeIcon.prototype, \"fontIcon\", {\n            get: function () {\n                return this._fontIcon;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfNodeIcon.prototype, \"node\", {\n            get: function () {\n                return this._node;\n            },\n            set: function (node) {\n                this._node = node;\n                this._fontSet = 'ajf-icon';\n                this._fontIcon = this._getFontIcon(node);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfNodeIcon.prototype._getFontIcon = function (node) {\n            switch (node.nodeType) {\n                case forms.AjfNodeType.AjfField:\n                    var fieldType = forms.AjfFieldType[node.fieldType];\n                    return fieldType != null ? \"field-\" + fieldType.toLowerCase() : '';\n                default:\n                    var nodeType = forms.AjfNodeType[node.nodeType];\n                    return nodeType != null ? \"node-\" + nodeType.toLowerCase().replace('ajf', '') : '';\n            }\n        };\n        AjfNodeIcon.decorators = [\n            { type: core.Directive }\n        ];\n        AjfNodeIcon.propDecorators = {\n            node: [{ type: core.Input }]\n        };\n        return AjfNodeIcon;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfNodeIcon = AjfNodeIcon;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-node-icon.umd.js.map\n"]}