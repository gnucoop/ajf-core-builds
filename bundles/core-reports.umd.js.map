{"version":3,"file":"core-reports.umd.js","sources":["../../src/core/reports/widget.ts","../../src/core/reports/reports.ts","../../src/core/reports/reports-instances.ts","../../src/core/reports/widgets-instances.ts","../../src/core/reports/widgets.ts","../../src/core/reports/report.ts","../../src/core/reports/dataset.ts","../../src/core/reports/chart-utils.ts","../../src/core/reports/charts.ts","../../src/core/reports/aggregation.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfReportChartWidgetInstance,\n  AjfReportFormulaWidgetInstance,\n  AjfReportImageContainerWidgetInstance,\n  AjfReportImageWidgetInstance,\n  AjfReportLayoutWidgetInstance,\n  AjfReportMapWidgetInstance,\n  AjfReportTableWidgetInstance,\n  AjfReportTextWidgetInstance,\n  AjfReportWidgetInstance,\n} from './widgets-instances';\nimport {\n  AjfReportChartWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from './widgets';\n\nexport abstract class AjfReportWidgetRenderer {\n  readonly widgetTypes = AjfReportWidgetType;\n\n  private _widget: AjfReportWidget | null;\n  get widget(): AjfReportWidget | null { return this._widget; }\n\n  private _imageTypes = AjfImageType;\n  get imageTypes() { return this._imageTypes; }\n\n  private _widgetInstance: AjfReportWidgetInstance;\n  get widgetInstance(): AjfReportWidgetInstance { return this._widgetInstance; }\n  set widgetInstance(widgetInstance: AjfReportWidgetInstance) {\n    if (this._widgetInstance !== widgetInstance) {\n      this._widgetInstance = widgetInstance;\n      this._widget = this._widgetInstance != null ? this._widgetInstance.widget : null;\n      this._cdr.markForCheck();\n    }\n  }\n\n  get imgwInst(): AjfReportImageWidgetInstance {\n    return this._widgetInstance as AjfReportImageWidgetInstance;\n  }\n  get imgw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get imgcwInst(): AjfReportImageContainerWidgetInstance {\n    return this._widgetInstance as AjfReportImageContainerWidgetInstance;\n  }\n  get imgcw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get layoutwInst(): AjfReportLayoutWidgetInstance {\n    return this._widgetInstance as AjfReportLayoutWidgetInstance;\n  }\n  get layoutw(): AjfReportLayoutWidget {\n    return this._widget as AjfReportLayoutWidget;\n  }\n  get chartwInst(): AjfReportChartWidgetInstance {\n    return this._widgetInstance as AjfReportChartWidgetInstance;\n  }\n  get chartw(): AjfReportChartWidget {\n    return this._widget as AjfReportChartWidget;\n  }\n  get tablewInst(): AjfReportTableWidgetInstance {\n    return this._widgetInstance as AjfReportTableWidgetInstance;\n  }\n  get textwInst(): AjfReportTextWidgetInstance {\n    return this._widgetInstance as AjfReportTextWidgetInstance;\n  }\n  get mapwInst(): AjfReportMapWidgetInstance {\n    return this._widgetInstance as AjfReportMapWidgetInstance;\n  }\n  get mapw(): AjfReportMapWidget {\n    return this._widget as AjfReportMapWidget;\n  }\n  get formulawInst(): AjfReportFormulaWidgetInstance {\n    return this._widgetInstance as AjfReportFormulaWidgetInstance;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidget} from './widgets';\n\n\nexport class AjfReportContainer extends AjfJsonSerializable {\n  private _content: AjfReportWidget[];\n  get content(): AjfReportWidget[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  static fromJson(obj: any): AjfReportContainer {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('content') > -1 && obj['content'] instanceof Array) {\n      obj['content'] = obj['content'].map((cw: any) => AjfReportWidget.fromJson(cw));\n    }\n\n    return new AjfReportContainer(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['content', 'styles']);\n\n    this._content = obj && obj.content || [];\n    this._styles = obj && obj.styles || {};\n  }\n}\n/**\n * Class that represents a report.\n * A report is defined as three trees of report widgets (@see AjfReportWidget),\n * displayed each in the header / content / footer of the report.\n *\n */\nexport class AjfReport extends AjfJsonSerializable {\n  /**\n   * Collection of widgets that compose the report header\n   */\n  private _header: AjfReportContainer;\n  get header(): AjfReportContainer { return this._header; }\n\n  /**\n   * Collection of widgets that compose the report footer\n   */\n  private _footer: AjfReportContainer;\n  get footer(): AjfReportContainer { return this._footer; }\n\n  /**\n   * Collection of widgets that compose the report content\n   */\n  private _content: AjfReportContainer;\n  get content(): AjfReportContainer { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  set styles(styles: AjfReportStyles) {\n    this._styles = styles;\n  }\n\n  /**\n   * collection of forms that generate the report variables\n   *\n   * @memberOf AjfReport\n   */\n  private _forms: AjfForm[];\n  get forms(): AjfForm[] { return this._forms; }\n  set forms(forms: AjfForm[]) {\n    this._forms = forms;\n  }\n\n  /**\n   * Creates a report starting from a JSON representation.\n   * The form definition can be nested in the report JSON.\n   * @param obj : any The JSON representation of the report\n   * @param form : AjfForm The form that defines the data structure\n   * @return AjfReport The report\n   */\n  static fromJson(obj: any, forms?: AjfForm[]): AjfReport {\n    obj = deepCopy(obj);\n    const keys: string[] = Object.keys(obj);\n\n    const containers: string[] = ['header', 'footer', 'content'];\n    containers.forEach((c) => {\n      if (keys.indexOf(c) > -1) {\n        obj[c] = AjfReportContainer.fromJson(obj[c]);\n      }\n    });\n\n    return new AjfReport(forms || [], obj);\n  }\n\n  /**\n   * Creates a report.\n   * @param form : AjfForm The form that defines the data structure\n   * @param obj : any Report initial data\n   */\n  constructor(forms: AjfForm[], obj?: any) {\n    super(obj);\n\n    this._forms = forms.slice(0);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['header', 'footer', 'content', 'styles']);\n\n    this._header = obj && obj.header || null;\n    this._footer = obj && obj.footer || null;\n    this._content = obj && obj.content || null;\n    this._styles = obj && obj.styles || null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfTableDataset} from './dataset';\nimport {AjfReport, AjfReportContainer} from './reports';\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidgetInstance} from './widgets-instances';\nimport {\n  AjfReportChartWidget, AjfReportTextWidget, AjfReportTableWidget, AjfReportWidget\n} from './widgets';\n\n\nexport class AjfReportContainerInstance {\n  private _container: AjfReportContainer;\n  get container(): AjfReportContainer { return this._container; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles = {};\n  get styles(): AjfReportStyles { return this._styles; }\n\n  private _context: any;\n\n  constructor(container: AjfReportContainer, context: any, private _ts: TranslateService) {\n    this._container = container;\n    this._styles = this._container != null ? this._container.styles : {};\n    this._context = context;\n\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    this._container.content.forEach(c => {\n      this._translate(c);\n      content.push(AjfReportWidgetInstance.create(c, this._context, this._ts));\n    });\n    this._content = content;\n  }\n\n  private _translate(reportWidget: AjfReportWidget): void {\n    if (reportWidget.hasContent) {\n      reportWidget.content.forEach((subReportWidget: AjfReportWidget) => {\n        this._translate(subReportWidget);\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTextWidget && reportWidget.htmlText) {\n      reportWidget.htmlText = this._ts.instant(reportWidget.htmlText);\n    }\n\n    if (reportWidget instanceof AjfReportChartWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach(element => {\n        element.label = element.label ? this._ts.instant(element.label) : '';\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTableWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach((row: AjfTableDataset[]) => {\n        row.forEach((element: AjfTableDataset) => {\n          if (element.formula && element.formula.formula) {\n            try {\n              let formulaToBeTranslate = element.formula.formula;\n              if (formulaToBeTranslate[0] === '\"') {\n                formulaToBeTranslate = formulaToBeTranslate.slice(1, -1);\n                element.formula.formula = formulaToBeTranslate.length > 0\n                  ? `\"${this._ts.instant(formulaToBeTranslate)}\"` : element.formula.formula;\n              } else {\n                element.formula.formula = this._ts.instant(formulaToBeTranslate);\n              }\n            } catch (e) { }\n          }\n        });\n      });\n\n    }\n\n  }\n}\n\n\n/**\n * A report instance. Report + data\n */\nexport class AjfReportInstance {\n  /**\n   * The report\n   */\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n\n  private _header: AjfReportContainerInstance;\n  get header(): AjfReportContainerInstance { return this._header; }\n\n  private _content: AjfReportContainerInstance;\n  get content(): AjfReportContainerInstance { return this._content; }\n\n  private _footer: AjfReportContainerInstance;\n  get footer(): AjfReportContainerInstance { return this._footer; }\n\n  private _data: any;\n  get data(): any { return this._data; }\n\n  get styles(): AjfReportStyles {\n    return this._report != null ? this._report.styles : {};\n  }\n\n  private _context: any;\n  get context(): any { return this._context; }\n\n  constructor(report: AjfReport, context: any, private _ts: TranslateService) {\n    this._report = report;\n    this._context = context;\n\n    this._populateReport();\n  }\n\n  private _populateReport(): void {\n    this._header = this._populateContainer(this._report.header);\n    this._content = this._populateContainer(this._report.content);\n    this._footer = this._populateContainer(this._report.footer);\n  }\n\n  private _populateContainer(container: AjfReportContainer): AjfReportContainerInstance {\n    return new AjfReportContainerInstance(container, this._context, this._ts);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\nimport {ChartData, ChartDataSets} from 'chart.js';\n\nimport {Observable, Subject} from 'rxjs';\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\nimport {chartToChartJsType} from './chart-utils';\nimport {AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\nimport {\n  AjfReportChartWidget, AjfReportDataWidget, AjfReportFormulaWidget, AjfReportImageContainerWidget,\n  AjfReportImageWidget, AjfReportLayoutWidget, AjfReportMapWidget, AjfReportTableWidget,\n  AjfReportTextWidget, AjfReportWidget, AjfReportWidgetType\n} from './widgets';\n\nexport class AjfReportWidgetInstance {\n  protected _widget: AjfReportWidget;\n  get widget(): AjfReportWidget { return this._widget; }\n\n  private _visible = true;\n  get visible(): boolean { return this._visible; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles {\n    return this._styles;\n  }\n\n  private _widgetType: AjfReportWidgetType;\n  get widgetType(): AjfReportWidgetType | null {\n    return this._widgetType;\n  }\n\n  protected _context: any;\n\n  static create(\n    widget: AjfReportWidget, context: any, ts: TranslateService): AjfReportWidgetInstance {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return new AjfReportLayoutWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageWidget) {\n      return new AjfReportImageWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTextWidget) {\n      return new AjfReportTextWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTableWidget) {\n      return new AjfReportTableWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportChartWidget) {\n      return new AjfReportChartWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportMapWidget) {\n      return new AjfReportMapWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportDataWidget) {\n      return new AjfReportDataWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportFormulaWidget) {\n      return new AjfReportFormulaWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageContainerWidget) {\n      return new AjfReportImageContainerWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportWidget) {\n      return new AjfReportWidgetInstance(widget, context, ts);\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(widget: AjfReportWidget, context: any, public ts: TranslateService) {\n    this._widget = widget;\n    if (widget != null) {\n      this._styles = widget.styles;\n      this._widgetType = widget.widgetType;\n    }\n    this._context = context;\n\n    this._initInstance();\n    this.initContext(context);\n  }\n\n  initContext(context: any): void {\n    this._evaluateVisibility(context);\n  }\n\n  protected _initInstance(): void {\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    if (this._widget.hasContent) {\n      this._widget.content.forEach(w => {\n        content.push(AjfReportWidgetInstance.create(w, this._context, this.ts));\n      });\n    }\n    this._content = content;\n  }\n\n  private _evaluateVisibility(context: any): void {\n    if (this._widget.visibility != null) {\n      this._visible = this._widget.visibility.evaluate(context);\n    }\n  }\n}\n\n\nexport class AjfReportDataWidgetInstance extends AjfReportWidgetInstance {\n  get widget(): AjfReportDataWidget {\n    return <AjfReportDataWidget>this._widget;\n  }\n\n  private _dataset: any;\n  get dataset(): any { return this._dataset; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    this._populateData(context);\n  }\n\n  protected _initInstance(): void {\n    super._initInstance();\n  }\n\n  private _populateData(context: any): void {\n    this._dataset = (<any[]>(this.widget.dataset || []))\n      .map(row => {\n        if (row instanceof Array) {\n          return (<AjfDataset[]>row).map((cell) => {\n            return cell.formula instanceof Array ?\n              cell.formula.map((f) => f.evaluate(context)) :\n              cell.formula.evaluate(context);\n          });\n        } else {\n          const formula = (<AjfDataset>row).formula;\n          return formula instanceof Array ?\n            formula.map((f) => f.evaluate(context)) :\n            formula.evaluate(context);\n        }\n      });\n  }\n}\n\n\nexport class AjfReportLayoutWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  getColumnContent(column: number): AjfReportWidgetInstance | null {\n    return column >= 0 && column < this.content.length ? this.content[column] : null;\n  }\n}\n\nexport class AjfReportColumnWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportPageBreakWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportImageWidgetInstance extends AjfReportWidgetInstance {\n  private _icon: string;\n  get icon(): string { return this._icon; }\n\n  private _flag: string;\n  get flag(): string { return this._flag; }\n\n  private _url: string;\n  get url(): string { return this._url; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageWidget>this.widget);\n    const icon = widget.icon;\n    const flag = widget.flag;\n    const url = widget.url;\n    this._icon = icon ? icon.evaluate(context) : '';\n    this._flag = flag ? flag.evaluate(context) : '';\n    this._url = url ? url.evaluate(context) : '';\n  }\n}\n\nexport class AjfReportImageContainerWidgetInstance extends AjfReportWidgetInstance {\n  private _icons: string[];\n  get icons(): string[] { return this._icons; }\n\n  private _flags: string[];\n  get flags(): string[] { return this._flags; }\n\n  private _urls: string[];\n  get urls(): string[] { return this._urls; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageContainerWidget>this.widget);\n\n    // TODO: check! perche' evaluate torna una lista di liste?\n    // this._urls[0][0] contiene la lista di url..\n    this._urls = widget.urls ?\n      (widget.urls instanceof Array ? widget.urls :\n        (widget.urls instanceof AjfFormula ? widget.urls.evaluate(context) : []))\n      : [];\n\n    this._flags = widget.flags ?\n      (widget.flags instanceof Array ? widget.flags :\n        (widget.flags instanceof AjfFormula ? widget.flags.evaluate(context) : []))\n      : [];\n\n    this._icons = widget.icons ?\n      (widget.icons instanceof Array ? widget.icons.map((l) => l.evaluate(context)) :\n        (widget.icons instanceof AjfFormula ? widget.icons.evaluate(context) : []))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidgetInstance extends AjfReportWidgetInstance {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const formulaRegEx: RegExp = /\\[\\[(.+?)\\]\\]/g;\n    const widget = (<AjfReportTextWidget>this.widget);\n    let htmlText = widget.htmlText;\n    const matches: { idx: number, len: number, formula: AjfFormula }[] = [];\n    let match;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match['index'];\n      const len = match[0].length;\n      const formula = new AjfFormula({ formula: match[1] });\n      matches.push({ idx, len, formula });\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = m.formula.evaluate(context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    this._htmlText = htmlText;\n  }\n}\n\nexport class AjfReportTableWidgetInstance extends AjfReportWidgetInstance {\n  private _data: AjfTableCell[][];\n  get data(): AjfTableCell[][] { return this._data; }\n\n  private _recalcEvt: Subject<boolean> = new Subject<boolean>();\n  private _recalc: Observable<boolean>;\n  get recalc(): Observable<boolean> { return this._recalc; }\n\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n    this._recalc = this._recalcEvt.asObservable();\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportTableWidget>this.widget;\n    this._data = [];\n\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      this._data.push([]);\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        const value = cell.formula.evaluate(context);\n        const style = {...widget.cellStyles, ...cell.style};\n        this._data[i].push(<AjfTableCell>{\n          value,\n          style,\n          rowspan: cell.rowspan,\n          colspan: cell.colspan\n        });\n      }\n    }\n    // this._data = (widget.dataset || []).map((row: AjfDataset[]) => {\n    //   return row.map((cell: AjfTableDataset) => {\n    //     return <AjfTableCell>{\n    //       value: cell.formula.evaluate(context),\n    //       style: {...widget.cellStyles, ...cell.style},\n    //       rowspan: cell.rowspan,\n    //       colspan: cell.colspan\n    //     };\n    //   });\n    // });\n  }\n\n  calcValues(context: any): void {\n    if (context === undefined) { return; }\n    const widget = <AjfReportTableWidget>this.widget;\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        this._data[i][j].value = cell.formula.evaluate(context);\n      }\n    }\n    this._data = this._data.slice(0);\n    this._recalcEvt.next(true);\n  }\n}\n\nexport class AjfReportChartWidgetInstance extends AjfReportDataWidgetInstance {\n  private _datasets: ChartDataSets[];\n  private _labels: string[];\n\n  private _data: ChartData;\n  get data(): ChartData {\n    return this._data;\n  }\n\n  private _chartType: ExtendedChartType;\n  get chartType(): ExtendedChartType { return this._chartType; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  private _translate(formula: AjfFormula, context: any): string[] {\n    const evaluatedfunction: any = formula.evaluate(context);\n    try {\n      if (Array.isArray(evaluatedfunction)) {\n        evaluatedfunction.forEach((rowValue, index) => {\n          if (Array.isArray(rowValue)) {\n            rowValue.forEach((value, rowIndex) => {\n              evaluatedfunction[index][rowIndex] = this.ts.instant(value);\n            });\n          } else {\n            evaluatedfunction[index] = this.ts.instant(rowValue);\n          }\n        });\n      }\n      return evaluatedfunction;\n    } catch (e) {\n      return evaluatedfunction;\n    }\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportChartWidget>this.widget;\n    this._chartType = chartToChartJsType(widget.chartType);\n    if (widget.labels instanceof Array) {\n      widget.labels.map((l: AjfFormula) => {\n        this._labels.concat(this._translate(l, context));\n      });\n    } else {\n      this._labels = this._translate(widget.labels, context);\n    }\n\n    this._datasets = widget.dataset.map((d => {\n      let ds = <any>{...d.options || {},\n        data: d.aggregation.evaluate(d.formula, context)\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds,\n          chartType: ct,\n          type: ct\n        };\n      }\n      if (d.options != null) {\n        ds = {...ds,\n          options: d.options\n        };\n      }\n      if (d.label != null) {\n        ds = {...ds,\n          label: d.label\n        };\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    }));\n    this._data = { labels: this._labels, datasets: this._datasets };\n  }\n}\n\nexport class AjfReportMapWidgetInstance extends AjfReportDataWidgetInstance {\n  coordinate: number[];\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportMapWidget>this.widget;\n    this.coordinate = widget.coordinate.evaluate(context);\n  }\n}\n\nexport class AjfReportFormulaWidgetInstance extends AjfReportWidgetInstance {\n  private _formula: string;\n  get formula(): string { return this._formula; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportFormulaWidget>this.widget;\n    this._formula = widget.formula.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon, AjfImageType} from '@ajf/core/image';\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfChartType} from './charts';\nimport {AjfChartDataset, AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\n\nimport {ChartOptions} from 'chart.js';\n\n/**\n * Report widget types. They are mainly divided in layout and data widgets.\n * Layout widgets (Layout, PageBreak, Image, Text) are used to display static\n * content or for layout purposes.\n * Data widgets (Chart, Table, Map) are used to display the data of a report\n * instance (@see AjfReportInstance).\n * All data widgets and the PageBreak widget can have no content\n */\nexport enum AjfReportWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  LENGTH\n}\n\nexport enum AjfReportDataType {\n  EPI,\n  Month,\n  Year,\n  LENGTH\n}\nexport interface AjfReportCustomWidget {\n  json: string;\n  type: string;\n}\n\n/**\n * Base abstract class that represent a report widget.\n *\n */\nexport abstract class AjfReportWidget extends AjfJsonSerializable {\n  /**\n   * The sub-widgets contained inside this widget\n   */\n  content: AjfReportWidget[];\n\n  /**\n   * A dictionary of CSS-styles applied to the widget\n   */\n  styles: AjfReportStyles;\n\n  /**\n   * The condition under which the widget is visible\n   *\n   * @memberOf AjfReportWidget\n   */\n  visibility: AjfCondition;\n\n  /**\n   * True if the current widget can contain sub-widgets\n   */\n  abstract get hasContent(): boolean;\n\n  /**\n   * Creates a report widget from its JSON representation\n   *\n   * @param obj: any The JSON representation\n   * @throws 'Widget type missing' when the JSON representation lacks of a widget type\n   * @throws 'Invalid widget type' when the JSON representation contains an invalid widget type\n   * @return AjfReportWidget The report widget\n   */\n  static fromJson(obj: any): AjfReportWidget {\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('widgetType') === -1) {\n      throw new Error('Widget type missing');\n    }\n\n    let widgetType = obj.widgetType;\n    if (AjfReportWidgetType[widgetType] == null) {\n      throw new Error('Invalid widget type');\n    }\n\n    obj = this.parseJsonObject(obj);\n\n    delete obj.widgetType;\n\n    return AjfReportWidget.createWidget(widgetType, obj);\n  }\n\n  protected static parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    } else {\n      obj.visibility = AjfCondition.alwaysCondition();\n    }\n\n    if (keys.indexOf('content') > -1 && obj.content instanceof Array) {\n      obj.content = obj.content.map((w: any) => AjfReportWidget.fromJson(w));\n    }\n\n    if (keys.indexOf('dataset') > -1 && obj['dataset'] instanceof Array) {\n      if (obj.widgetType == AjfReportWidgetType.Table) {\n        const data: AjfTableDataset[][] = obj.dataset\n          .map((row: AjfTableDataset[]) => row.map(cell => AjfTableDataset.fromJson(cell)));\n        obj.dataset = data;\n      } else if (obj.widgetType == AjfReportWidgetType.Chart) {\n        const data: AjfChartDataset[] = obj.dataset\n          .map((row: any) => AjfChartDataset.fromJson(row));\n        obj.dataset = data;\n      }\n    }\n\n    if (keys.indexOf('labels') > -1) {\n      if (obj['labels'] instanceof Array) {\n        obj.labels = obj.labels.map((l: string) => AjfFormula.fromJson(l));\n      } else {\n        obj.labels = AjfFormula.fromJson(obj.labels);\n      }\n    }\n\n    if (keys.indexOf('coordinate') > -1) {\n        obj.coordinate = AjfFormula.fromJson(obj.coordinate);\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a report widget given a widget type (@see AjfReportWidgetType)\n   */\n  static createWidget(widgetType: AjfReportWidgetType, obj?: any): AjfReportWidget {\n    switch (widgetType) {\n      case AjfReportWidgetType.Layout:\n        return new AjfReportLayoutWidget(obj);\n      case AjfReportWidgetType.PageBreak:\n        return new AjfReportPageBreakWidget(obj);\n      case AjfReportWidgetType.Image:\n        return new AjfReportImageWidget(obj);\n      case AjfReportWidgetType.Text:\n        return new AjfReportTextWidget(obj);\n      case AjfReportWidgetType.Chart:\n        return new AjfReportChartWidget(obj);\n      case AjfReportWidgetType.Table:\n        return new AjfReportTableWidget(obj);\n      case AjfReportWidgetType.Map:\n        return new AjfReportMapWidget(obj);\n      case AjfReportWidgetType.Column:\n        return new AjfReportColumnWidget(obj);\n      case AjfReportWidgetType.Formula:\n        return new AjfReportFormulaWidget(obj);\n      case AjfReportWidgetType.ImageContainer:\n        return new AjfReportImageContainerWidget(obj);\n      default:\n        throw new Error('Invalid widget type');\n    }\n\n  }\n\n  /**\n   * The widget type (@see AjfReportWidgetType)\n   */\n  get widgetType(): AjfReportWidgetType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfReportLayoutWidget) {\n      return AjfReportWidgetType.Layout;\n    }\n    if (thisObj instanceof AjfReportColumnWidget) {\n      return AjfReportWidgetType.Column;\n    }\n    if (thisObj instanceof AjfReportPageBreakWidget) {\n      return AjfReportWidgetType.PageBreak;\n    }\n    if (thisObj instanceof AjfReportImageWidget) {\n      return AjfReportWidgetType.Image;\n    }\n    if (thisObj instanceof AjfReportTextWidget) {\n      return AjfReportWidgetType.Text;\n    }\n    if (thisObj instanceof AjfReportChartWidget) {\n      return AjfReportWidgetType.Chart;\n    }\n    if (thisObj instanceof AjfReportTableWidget) {\n      return AjfReportWidgetType.Table;\n    }\n    if (thisObj instanceof AjfReportMapWidget) {\n      return AjfReportWidgetType.Map;\n    }\n    if (thisObj instanceof AjfReportFormulaWidget) {\n      return AjfReportWidgetType.Formula;\n    }\n    if (thisObj instanceof AjfReportImageContainerWidget) {\n      return AjfReportWidgetType.ImageContainer;\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['widgetType', 'content', 'styles', 'visibility']);\n\n    this.content = obj && obj.content || [];\n    this.styles = obj && obj.styles || {};\n    this.visibility = obj && obj.visibility || AjfCondition.alwaysCondition();\n  }\n}\n\n\nexport class AjfReportLayoutWidget extends AjfReportWidget {\n  columns: number[];\n\n  get hasContent(): boolean { return true; }\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['columns']);\n\n    if (obj && obj.columns) {\n      this.columns = obj.columns;\n    } else {\n      this.content = [new AjfReportColumnWidget()];\n      this.columns = [1];\n    }\n  }\n}\n\nexport class AjfReportColumnWidget extends AjfReportWidget {\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\nexport class AjfReportPageBreakWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\n\nexport class AjfReportImageWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this._icon = null;\n    this._flag = null;\n    this._url = null;\n  }\n\n  private _icon: AjfFormula | null;\n  get icon(): AjfFormula | null { return this._icon; }\n  set icon(icon: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Icon) {\n      this._icon = icon;\n    }\n  }\n\n  private _flag: AjfFormula | null;\n  get flag(): AjfFormula | null { return this._flag; }\n  set flag(flag: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Flag) {\n      this._flag = flag;\n    }\n  }\n\n  private _url: AjfFormula | null;\n  get url(): AjfFormula | null { return this._url; }\n  set url(url: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Image) {\n      this._url = url;\n    }\n  }\n\n  setUrl(imageUrl: string) {\n    this.imageType = AjfImageType.Image;\n    this._url = new AjfFormula({formula: `\"${imageUrl}\"`});\n  }\n\n  setIcon(icon: AjfImageIcon) {\n    this.imageType = AjfImageType.Icon;\n    this._icon = new AjfFormula({\n      formula: `{fontSet: \"${icon.fontSet}\", fontIcon: \"${icon.fontIcon}\"}`\n    });\n  }\n\n  setFlag(flag: string) {\n    this.imageType = AjfImageType.Flag;\n    this._flag = new AjfFormula({formula: `\"${flag}\"`});\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'url', 'icon', 'flag'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n    this._url = obj && obj.url ?\n      (obj.url instanceof AjfFormula ? obj.url : AjfFormula.fromJson(obj.url)) :\n      null;\n    this._icon = obj && obj.icon ?\n      (obj.icon instanceof AjfFormula ? obj.icon : AjfFormula.fromJson(obj.icon)) :\n      null;\n    this._flag = obj && obj.flag ?\n      (obj.flag instanceof AjfFormula ? obj.flag : AjfFormula.fromJson(obj.flag)) :\n      null;\n  }\n}\n\nexport class AjfReportImageContainerWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this.urls = [];\n    this.flags = [];\n    this.icons = [];\n  }\n\n  urls: AjfFormula | string[];\n  flags: AjfFormula | string[];\n  icons: AjfFormula | AjfFormula[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'urls', 'icons', 'flags'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n\n    this.urls = obj && obj.urls ?\n      (obj.urls instanceof AjfFormula ? obj.urls :\n        (obj.urls instanceof Array ? obj.urls : AjfFormula.fromJson(obj.urls))\n      ) : [];\n\n    this.flags = obj && obj.flags ?\n      (obj.flags instanceof AjfFormula ? obj.flags :\n        (obj.flags instanceof Array ? obj.flags : AjfFormula.fromJson(obj.flags))\n      ) : [];\n\n    this.icons = obj && obj.icons\n      ? (\n        obj.icons instanceof AjfFormula\n        ? obj.icons\n        : obj.icons.map((l: string) => AjfFormula.fromJson(l)))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidget extends AjfReportWidget {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n  set htmlText(htmlText: string) {\n    this._htmlText = htmlText;\n  }\n\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['htmlText']);\n\n    this._htmlText = obj && obj.htmlText || '';\n  }\n\n}\n\nexport class AjfReportFormulaWidget extends AjfReportWidget {\n  private _formula: AjfFormula;\n  get formula(): AjfFormula { return this._formula; }\n  set formula(formula: AjfFormula) { this._formula = formula; }\n\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['content', 'formula']);\n\n    this.content = obj && obj.content || [];\n    this.formula = obj && obj.formula ?\n      (obj.formula instanceof AjfFormula ? obj.formula : AjfFormula.fromJson(obj.formula)) : null;\n  }\n\n}\n\nexport abstract class AjfReportDataWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n  dataset: AjfDataset[] | AjfDataset[][];\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['dataset']);\n\n    this.dataset = obj && obj.dataset || [];\n  }\n}\n\n\n/**\n * Concrete class for manage chart.\n *\n *\n *\n * @throws 'labels or data or backgroundColor or borderColor missed'\n *         if the length of arrays passed by obj are not the same\n */\nexport class AjfReportChartWidget extends AjfReportDataWidget {\n  chartType: AjfChartType;\n  labels: AjfFormula | AjfFormula[];\n  dataset: AjfChartDataset[];\n  options: ChartOptions;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['chartType', 'labels', 'options']);\n\n    this.chartType = obj && obj.type || AjfChartType.Line;\n    this.dataset = obj && obj.dataset || [];\n    this.labels = obj && obj.labels || [];\n    this.options = obj && obj.options || null;\n  }\n}\n\n\nexport class AjfReportTableWidget extends AjfReportDataWidget {\n  cellStyles: any;\n  dataset: AjfTableDataset[][];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['cellStyles']);\n\n    this.cellStyles = obj && obj.cellStyles || null;\n  }\n}\n\nexport class AjfReportMapWidget extends AjfReportDataWidget {\n  coordinate: AjfFormula;\n  tileLayer: string;\n  attribution: string;\n  disabled: boolean;\n\n  get coordinateMap():  AjfFormula | null { return this.coordinate; }\n  get tileLayerMap(): string { return this.tileLayer; }\n  get attributionMap(): string { return this.attribution; }\n  get disabledMap():  boolean { return this.disabled; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['coordinate', 'tileLayer', 'attribution', 'disabled']);\n\n    this.coordinate = obj && obj.coordinate || '';\n    this.tileLayer = obj && obj.tileLayer || '';\n    this.attribution = obj && obj.attribution || '';\n    this.disabled = obj && obj.disabled || false;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfReport} from './reports';\nimport {AjfReportInstance} from './reports-instances';\n\nexport abstract class AjfReportRenderer {\n  private _reportInstance: AjfReportInstance;\n  get reportInstance(): AjfReportInstance { return this._reportInstance; }\n  set reportInstance(reportInstance: AjfReportInstance) {\n    this._reportInstance = reportInstance;\n    this._report = reportInstance != null ? reportInstance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {AjfAggregation, AjfAggregationType} from './aggregation';\nimport {AjfChartDatasetOptions, AjfChartType} from './charts';\n\n/**\n * This class will define an ajf dataset\n */\nexport class AjfDataset extends AjfJsonSerializable {\n  formula: AjfFormula | AjfFormula[];\n  aggregation: AjfAggregation;\n  label: string;\n\n  /**\n   * this static method will load an AjfDataset from json\n   * @param obj : any - object formula\n   * @return AjfFormula\n   */\n\n  static fromJson(obj: any): AjfDataset {\n    return new AjfDataset(AjfDataset._parseJsonObject(obj));\n  }\n\n  protected static _parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('formula') === -1) {\n      throw new Error('dataset formula missing');\n    }\n    if (keys.indexOf('aggregation') === -1) {\n      throw new Error('dataset aggregation missing');\n    }\n    if (keys.indexOf('label') === -1) {\n      throw new Error('dataset label missing');\n    }\n\n    let formula: AjfFormula | AjfFormula[];\n    if (obj.formula instanceof Array) {\n      formula = (obj.formula as string[]).map(f => AjfFormula.fromJson(f));\n    } else {\n      formula =  AjfFormula.fromJson(obj.formula);\n    }\n    let aggregation: AjfAggregation = AjfAggregation.fromJson(obj.aggregation);\n\n    obj.formula = formula;\n    obj.aggregation = aggregation;\n\n    return obj;\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['formula', 'aggregation', 'label']);\n\n    this.formula     = obj && obj.formula     || null;\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n    this.label       = obj && obj.label       || null;\n  }\n\n}\n\nexport class AjfTableDataset extends AjfDataset {\n  formula: AjfFormula;\n  colspan: number;\n  rowspan: number;\n  style: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['rowspan', 'colspan', 'style']);\n\n    this.rowspan     = obj && obj.rowspan     || null;\n    this.colspan     = obj && obj.colspan     || null;\n    this.style       = obj && obj.style       || null;\n  }\n\n  static fromJson(obj: any): AjfTableDataset {\n    return new AjfTableDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n\n\nexport class AjfChartDataset extends AjfDataset {\n  formula: AjfFormula[];\n  chartType?: AjfChartType;\n  options?: AjfChartDatasetOptions;\n  datalabels?: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['chartType', 'options']);\n\n    if (obj.chartType != null) { this.chartType = obj.chartType; }\n    if (obj.options != null) { this.options = obj.options; }\n    if (obj.datalabels != null) { this.datalabels = obj.datalabels; }\n  }\n\n  static fromJson(obj: any): AjfChartDataset {\n    return new AjfChartDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './charts';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n    switch (chartType) {\n      case AjfChartType.Line:\n      return 'line';\n      case AjfChartType.Bar:\n      return 'bar';\n      case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n      case AjfChartType.Radar:\n      return 'radar';\n      case AjfChartType.Scatter:\n      return 'scatter';\n      case AjfChartType.Doughnut:\n      return 'doughnut';\n      case AjfChartType.Pie:\n      return 'pie';\n      case AjfChartType.PolarArea:\n      return 'polarArea';\n      case AjfChartType.Bubble:\n      return 'bubble';\n      default:\n      return 'line';\n    }\n  }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChartColor} from 'chart.js';\n\n\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n\n\nexport interface AjfChartDatasetOptions {\n  backgroundColor?: ChartColor | ChartColor[];\n  borderWidth?: number;\n  borderColor?: ChartColor;\n  borderCapStyle?: string;\n  borderDash?: number[];\n  borderDashOffset?: number;\n  borderJoinStyle?: string;\n  fill?: boolean;\n  label?: string;\n  lineTension?: number;\n  pointBorderColor?: ChartColor | ChartColor[];\n  pointBackgroundColor?: ChartColor | ChartColor[];\n  pointBorderWidth?: number | number[];\n  pointRadius?: number | number[];\n  pointHoverRadius?: number | number[];\n  pointHitRadius?: number | number[];\n  pointHoverBackgroundColor?: ChartColor | ChartColor[];\n  pointHoverBorderColor?: ChartColor | ChartColor[];\n  pointHoverBorderWidth?: number | number[];\n  pointStyle?: string | string[] | HTMLImageElement | HTMLImageElement[];\n  xAxisID?: string;\n  yAxisID?: string;\n  type?: string;\n  hidden?: boolean;\n  hideInLegendAndTooltip?: boolean;\n  stack?: string;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n\n/**\n * This class will define an ajf aggregator\n */\nexport class AjfAggregation extends AjfJsonSerializable {\n  aggregation: AjfAggregationType;\n  /**\n   * this static method will load an AjfAggregator from json\n   * @param obj : any - object aggregator\n   * @return AjfFormula\n   */\n  static fromJson(obj: any): AjfAggregation {\n    obj = deepCopy(obj);\n    return new AjfAggregation(obj);\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = [ 'aggregation' ];\n\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n  }\n\n  evaluate(formulas: AjfFormula[], context: any): number[] {\n    const data: any[] = formulas.map(f => f.evaluate(context));\n    switch (this.aggregation) {\n      case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n      case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n      case AjfAggregationType.Average:\n      case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n      default:\n      return [];\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["AjfImageType","AjfJsonSerializable","deepCopy","tslib_1.__extends","tslib_1.__assign","Subject","AjfFormula","AjfCondition"],"mappings":"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"}