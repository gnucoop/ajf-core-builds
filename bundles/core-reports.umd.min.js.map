{"version":3,"file":"core-reports.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/core/reports/aggregation.ts","../../src/core/reports/charts.ts","../../src/core/reports/chart-utils.ts","../../src/core/reports/dataset.ts","../../src/core/reports/report.ts","../../src/core/reports/widgets.ts","../../src/core/reports/widgets-instances.ts","../../src/core/reports/reports-instances.ts","../../src/core/reports/reports.ts","../../src/core/reports/widget.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n\n/**\n * This class will define an ajf aggregator\n */\nexport class AjfAggregation extends AjfJsonSerializable {\n  aggregation: AjfAggregationType;\n  /**\n   * this static method will load an AjfAggregator from json\n   * @param obj : any - object aggregator\n   * @return AjfFormula\n   */\n  static fromJson(obj: any): AjfAggregation {\n    obj = deepCopy(obj);\n    return new AjfAggregation(obj);\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = [ 'aggregation' ];\n\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n  }\n\n  evaluate(formulas: AjfFormula[], context: any): number[] {\n    const data: any[] = formulas.map(f => f.evaluate(context));\n    switch (this.aggregation) {\n      case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n      case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n      case AjfAggregationType.Average:\n      case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n      default:\n      return [];\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChartColor} from 'chart.js';\n\n\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n\n\nexport interface AjfChartDatasetOptions {\n  backgroundColor?: ChartColor | ChartColor[];\n  borderWidth?: number;\n  borderColor?: ChartColor;\n  borderCapStyle?: string;\n  borderDash?: number[];\n  borderDashOffset?: number;\n  borderJoinStyle?: string;\n  fill?: boolean;\n  label?: string;\n  lineTension?: number;\n  pointBorderColor?: ChartColor | ChartColor[];\n  pointBackgroundColor?: ChartColor | ChartColor[];\n  pointBorderWidth?: number | number[];\n  pointRadius?: number | number[];\n  pointHoverRadius?: number | number[];\n  pointHitRadius?: number | number[];\n  pointHoverBackgroundColor?: ChartColor | ChartColor[];\n  pointHoverBorderColor?: ChartColor | ChartColor[];\n  pointHoverBorderWidth?: number | number[];\n  pointStyle?: string | string[] | HTMLImageElement | HTMLImageElement[];\n  xAxisID?: string;\n  yAxisID?: string;\n  type?: string;\n  hidden?: boolean;\n  hideInLegendAndTooltip?: boolean;\n  stack?: string;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './charts';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n    switch (chartType) {\n      case AjfChartType.Line:\n      return 'line';\n      case AjfChartType.Bar:\n      return 'bar';\n      case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n      case AjfChartType.Radar:\n      return 'radar';\n      case AjfChartType.Scatter:\n      return 'scatter';\n      case AjfChartType.Doughnut:\n      return 'doughnut';\n      case AjfChartType.Pie:\n      return 'pie';\n      case AjfChartType.PolarArea:\n      return 'polarArea';\n      case AjfChartType.Bubble:\n      return 'bubble';\n      default:\n      return 'line';\n    }\n  }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {AjfAggregation, AjfAggregationType} from './aggregation';\nimport {AjfChartDatasetOptions, AjfChartType} from './charts';\n\n/**\n * This class will define an ajf dataset\n */\nexport class AjfDataset extends AjfJsonSerializable {\n  formula: AjfFormula | AjfFormula[];\n  aggregation: AjfAggregation;\n  label: string;\n\n  /**\n   * this static method will load an AjfDataset from json\n   * @param obj : any - object formula\n   * @return AjfFormula\n   */\n\n  static fromJson(obj: any): AjfDataset {\n    return new AjfDataset(AjfDataset._parseJsonObject(obj));\n  }\n\n  protected static _parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('formula') === -1) {\n      throw new Error('dataset formula missing');\n    }\n    if (keys.indexOf('aggregation') === -1) {\n      throw new Error('dataset aggregation missing');\n    }\n    if (keys.indexOf('label') === -1) {\n      throw new Error('dataset label missing');\n    }\n\n    let formula: AjfFormula | AjfFormula[];\n    if (obj.formula instanceof Array) {\n      formula = (obj.formula as string[]).map(f => AjfFormula.fromJson(f));\n    } else {\n      formula =  AjfFormula.fromJson(obj.formula);\n    }\n    let aggregation: AjfAggregation = AjfAggregation.fromJson(obj.aggregation);\n\n    obj.formula = formula;\n    obj.aggregation = aggregation;\n\n    return obj;\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['formula', 'aggregation', 'label']);\n\n    this.formula     = obj && obj.formula     || null;\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n    this.label       = obj && obj.label       || null;\n  }\n\n}\n\nexport class AjfTableDataset extends AjfDataset {\n  formula: AjfFormula;\n  colspan: number;\n  rowspan: number;\n  style: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['rowspan', 'colspan', 'style']);\n\n    this.rowspan     = obj && obj.rowspan     || null;\n    this.colspan     = obj && obj.colspan     || null;\n    this.style       = obj && obj.style       || null;\n  }\n\n  static fromJson(obj: any): AjfTableDataset {\n    return new AjfTableDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n\n\nexport class AjfChartDataset extends AjfDataset {\n  formula: AjfFormula[];\n  chartType?: AjfChartType;\n  options?: AjfChartDatasetOptions;\n  datalabels?: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['chartType', 'options']);\n\n    if (obj.chartType != null) { this.chartType = obj.chartType; }\n    if (obj.options != null) { this.options = obj.options; }\n    if (obj.datalabels != null) { this.datalabels = obj.datalabels; }\n  }\n\n  static fromJson(obj: any): AjfChartDataset {\n    return new AjfChartDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfReport} from './reports';\nimport {AjfReportInstance} from './reports-instances';\n\nexport abstract class AjfReportRenderer {\n  private _reportInstance: AjfReportInstance;\n  get reportInstance(): AjfReportInstance { return this._reportInstance; }\n  set reportInstance(reportInstance: AjfReportInstance) {\n    this._reportInstance = reportInstance;\n    this._report = reportInstance != null ? reportInstance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon, AjfImageType} from '@ajf/core/image';\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfChartType} from './charts';\nimport {AjfChartDataset, AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\n\nimport {ChartOptions} from 'chart.js';\n\n/**\n * Report widget types. They are mainly divided in layout and data widgets.\n * Layout widgets (Layout, PageBreak, Image, Text) are used to display static\n * content or for layout purposes.\n * Data widgets (Chart, Table, Map) are used to display the data of a report\n * instance (@see AjfReportInstance).\n * All data widgets and the PageBreak widget can have no content\n */\nexport enum AjfReportWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  LENGTH\n}\n\nexport enum AjfReportDataType {\n  EPI,\n  Month,\n  Year,\n  LENGTH\n}\nexport interface AjfReportCustomWidget {\n  json: string;\n  type: string;\n}\n\n/**\n * Base abstract class that represent a report widget.\n *\n */\nexport abstract class AjfReportWidget extends AjfJsonSerializable {\n  /**\n   * The sub-widgets contained inside this widget\n   */\n  content: AjfReportWidget[];\n\n  /**\n   * A dictionary of CSS-styles applied to the widget\n   */\n  styles: AjfReportStyles;\n\n  /**\n   * The condition under which the widget is visible\n   *\n   * @memberOf AjfReportWidget\n   */\n  visibility: AjfCondition;\n\n  /**\n   * True if the current widget can contain sub-widgets\n   */\n  abstract get hasContent(): boolean;\n\n  /**\n   * Creates a report widget from its JSON representation\n   *\n   * @param obj: any The JSON representation\n   * @throws 'Widget type missing' when the JSON representation lacks of a widget type\n   * @throws 'Invalid widget type' when the JSON representation contains an invalid widget type\n   * @return AjfReportWidget The report widget\n   */\n  static fromJson(obj: any): AjfReportWidget {\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('widgetType') === -1) {\n      throw new Error('Widget type missing');\n    }\n\n    let widgetType = obj.widgetType;\n    if (AjfReportWidgetType[widgetType] == null) {\n      throw new Error('Invalid widget type');\n    }\n\n    obj = this.parseJsonObject(obj);\n\n    delete obj.widgetType;\n\n    return AjfReportWidget.createWidget(widgetType, obj);\n  }\n\n  protected static parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    } else {\n      obj.visibility = AjfCondition.alwaysCondition();\n    }\n\n    if (keys.indexOf('content') > -1 && obj.content instanceof Array) {\n      obj.content = obj.content.map((w: any) => AjfReportWidget.fromJson(w));\n    }\n\n    if (keys.indexOf('dataset') > -1 && obj['dataset'] instanceof Array) {\n      if (obj.widgetType == AjfReportWidgetType.Table) {\n        const data: AjfTableDataset[][] = obj.dataset\n          .map((row: AjfTableDataset[]) => row.map(cell => AjfTableDataset.fromJson(cell)));\n        obj.dataset = data;\n      } else if (obj.widgetType == AjfReportWidgetType.Chart) {\n        const data: AjfChartDataset[] = obj.dataset\n          .map((row: any) => AjfChartDataset.fromJson(row));\n        obj.dataset = data;\n      }\n    }\n\n    if (keys.indexOf('labels') > -1) {\n      if (obj['labels'] instanceof Array) {\n        obj.labels = obj.labels.map((l: string) => AjfFormula.fromJson(l));\n      } else {\n        obj.labels = AjfFormula.fromJson(obj.labels);\n      }\n    }\n\n    if (keys.indexOf('coordinate') > -1) {\n        obj.coordinate = AjfFormula.fromJson(obj.coordinate);\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a report widget given a widget type (@see AjfReportWidgetType)\n   */\n  static createWidget(widgetType: AjfReportWidgetType, obj?: any): AjfReportWidget {\n    switch (widgetType) {\n      case AjfReportWidgetType.Layout:\n        return new AjfReportLayoutWidget(obj);\n      case AjfReportWidgetType.PageBreak:\n        return new AjfReportPageBreakWidget(obj);\n      case AjfReportWidgetType.Image:\n        return new AjfReportImageWidget(obj);\n      case AjfReportWidgetType.Text:\n        return new AjfReportTextWidget(obj);\n      case AjfReportWidgetType.Chart:\n        return new AjfReportChartWidget(obj);\n      case AjfReportWidgetType.Table:\n        return new AjfReportTableWidget(obj);\n      case AjfReportWidgetType.Map:\n        return new AjfReportMapWidget(obj);\n      case AjfReportWidgetType.Column:\n        return new AjfReportColumnWidget(obj);\n      case AjfReportWidgetType.Formula:\n        return new AjfReportFormulaWidget(obj);\n      case AjfReportWidgetType.ImageContainer:\n        return new AjfReportImageContainerWidget(obj);\n      default:\n        throw new Error('Invalid widget type');\n    }\n\n  }\n\n  /**\n   * The widget type (@see AjfReportWidgetType)\n   */\n  get widgetType(): AjfReportWidgetType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfReportLayoutWidget) {\n      return AjfReportWidgetType.Layout;\n    }\n    if (thisObj instanceof AjfReportColumnWidget) {\n      return AjfReportWidgetType.Column;\n    }\n    if (thisObj instanceof AjfReportPageBreakWidget) {\n      return AjfReportWidgetType.PageBreak;\n    }\n    if (thisObj instanceof AjfReportImageWidget) {\n      return AjfReportWidgetType.Image;\n    }\n    if (thisObj instanceof AjfReportTextWidget) {\n      return AjfReportWidgetType.Text;\n    }\n    if (thisObj instanceof AjfReportChartWidget) {\n      return AjfReportWidgetType.Chart;\n    }\n    if (thisObj instanceof AjfReportTableWidget) {\n      return AjfReportWidgetType.Table;\n    }\n    if (thisObj instanceof AjfReportMapWidget) {\n      return AjfReportWidgetType.Map;\n    }\n    if (thisObj instanceof AjfReportFormulaWidget) {\n      return AjfReportWidgetType.Formula;\n    }\n    if (thisObj instanceof AjfReportImageContainerWidget) {\n      return AjfReportWidgetType.ImageContainer;\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['widgetType', 'content', 'styles', 'visibility']);\n\n    this.content = obj && obj.content || [];\n    this.styles = obj && obj.styles || {};\n    this.visibility = obj && obj.visibility || AjfCondition.alwaysCondition();\n  }\n}\n\n\nexport class AjfReportLayoutWidget extends AjfReportWidget {\n  columns: number[];\n\n  get hasContent(): boolean { return true; }\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['columns']);\n\n    if (obj && obj.columns) {\n      this.columns = obj.columns;\n    } else {\n      this.content = [new AjfReportColumnWidget()];\n      this.columns = [1];\n    }\n  }\n}\n\nexport class AjfReportColumnWidget extends AjfReportWidget {\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\nexport class AjfReportPageBreakWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\n\nexport class AjfReportImageWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this._icon = null;\n    this._flag = null;\n    this._url = null;\n  }\n\n  private _icon: AjfFormula | null;\n  get icon(): AjfFormula | null { return this._icon; }\n  set icon(icon: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Icon) {\n      this._icon = icon;\n    }\n  }\n\n  private _flag: AjfFormula | null;\n  get flag(): AjfFormula | null { return this._flag; }\n  set flag(flag: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Flag) {\n      this._flag = flag;\n    }\n  }\n\n  private _url: AjfFormula | null;\n  get url(): AjfFormula | null { return this._url; }\n  set url(url: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Image) {\n      this._url = url;\n    }\n  }\n\n  setUrl(imageUrl: string) {\n    this.imageType = AjfImageType.Image;\n    this._url = new AjfFormula({formula: `\"${imageUrl}\"`});\n  }\n\n  setIcon(icon: AjfImageIcon) {\n    this.imageType = AjfImageType.Icon;\n    this._icon = new AjfFormula({\n      formula: `{fontSet: \"${icon.fontSet}\", fontIcon: \"${icon.fontIcon}\"}`\n    });\n  }\n\n  setFlag(flag: string) {\n    this.imageType = AjfImageType.Flag;\n    this._flag = new AjfFormula({formula: `\"${flag}\"`});\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'url', 'icon', 'flag'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n    this._url = obj && obj.url ?\n      (obj.url instanceof AjfFormula ? obj.url : AjfFormula.fromJson(obj.url)) :\n      null;\n    this._icon = obj && obj.icon ?\n      (obj.icon instanceof AjfFormula ? obj.icon : AjfFormula.fromJson(obj.icon)) :\n      null;\n    this._flag = obj && obj.flag ?\n      (obj.flag instanceof AjfFormula ? obj.flag : AjfFormula.fromJson(obj.flag)) :\n      null;\n  }\n}\n\nexport class AjfReportImageContainerWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this.urls = [];\n    this.flags = [];\n    this.icons = [];\n  }\n\n  urls: AjfFormula | string[];\n  flags: AjfFormula | string[];\n  icons: AjfFormula | AjfFormula[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'urls', 'icons', 'flags'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n\n    this.urls = obj && obj.urls ?\n      (obj.urls instanceof AjfFormula ? obj.urls :\n        (obj.urls instanceof Array ? obj.urls : AjfFormula.fromJson(obj.urls))\n      ) : [];\n\n    this.flags = obj && obj.flags ?\n      (obj.flags instanceof AjfFormula ? obj.flags :\n        (obj.flags instanceof Array ? obj.flags : AjfFormula.fromJson(obj.flags))\n      ) : [];\n\n    this.icons = obj && obj.icons\n      ? (\n        obj.icons instanceof AjfFormula\n        ? obj.icons\n        : obj.icons.map((l: string) => AjfFormula.fromJson(l)))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidget extends AjfReportWidget {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n  set htmlText(htmlText: string) {\n    this._htmlText = htmlText;\n  }\n\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['htmlText']);\n\n    this._htmlText = obj && obj.htmlText || '';\n  }\n\n}\n\nexport class AjfReportFormulaWidget extends AjfReportWidget {\n  private _formula: AjfFormula;\n  get formula(): AjfFormula { return this._formula; }\n  set formula(formula: AjfFormula) { this._formula = formula; }\n\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['content', 'formula']);\n\n    this.content = obj && obj.content || [];\n    this.formula = obj && obj.formula ?\n      (obj.formula instanceof AjfFormula ? obj.formula : AjfFormula.fromJson(obj.formula)) : null;\n  }\n\n}\n\nexport abstract class AjfReportDataWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n  dataset: AjfDataset[] | AjfDataset[][];\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['dataset']);\n\n    this.dataset = obj && obj.dataset || [];\n  }\n}\n\n\n/**\n * Concrete class for manage chart.\n *\n *\n *\n * @throws 'labels or data or backgroundColor or borderColor missed'\n *         if the length of arrays passed by obj are not the same\n */\nexport class AjfReportChartWidget extends AjfReportDataWidget {\n  chartType: AjfChartType;\n  labels: AjfFormula | AjfFormula[];\n  dataset: AjfChartDataset[];\n  options: ChartOptions;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['chartType', 'labels', 'options']);\n\n    this.chartType = obj && obj.type || AjfChartType.Line;\n    this.dataset = obj && obj.dataset || [];\n    this.labels = obj && obj.labels || [];\n    this.options = obj && obj.options || null;\n  }\n}\n\n\nexport class AjfReportTableWidget extends AjfReportDataWidget {\n  cellStyles: any;\n  dataset: AjfTableDataset[][];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['cellStyles']);\n\n    this.cellStyles = obj && obj.cellStyles || null;\n  }\n}\n\nexport class AjfReportMapWidget extends AjfReportDataWidget {\n  coordinate: AjfFormula;\n  tileLayer: string;\n  attribution: string;\n  disabled: boolean;\n\n  get coordinateMap():  AjfFormula | null { return this.coordinate; }\n  get tileLayerMap(): string { return this.tileLayer; }\n  get attributionMap(): string { return this.attribution; }\n  get disabledMap():  boolean { return this.disabled; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['coordinate', 'tileLayer', 'attribution', 'disabled']);\n\n    this.coordinate = obj && obj.coordinate || '';\n    this.tileLayer = obj && obj.tileLayer || '';\n    this.attribution = obj && obj.attribution || '';\n    this.disabled = obj && obj.disabled || false;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\nimport {ChartData, ChartDataSets} from 'chart.js';\n\nimport {Observable, Subject} from 'rxjs';\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\nimport {chartToChartJsType} from './chart-utils';\nimport {AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\nimport {\n  AjfReportChartWidget, AjfReportDataWidget, AjfReportFormulaWidget, AjfReportImageContainerWidget,\n  AjfReportImageWidget, AjfReportLayoutWidget, AjfReportMapWidget, AjfReportTableWidget,\n  AjfReportTextWidget, AjfReportWidget, AjfReportWidgetType\n} from './widgets';\n\nexport class AjfReportWidgetInstance {\n  protected _widget: AjfReportWidget;\n  get widget(): AjfReportWidget { return this._widget; }\n\n  private _visible = true;\n  get visible(): boolean { return this._visible; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles {\n    return this._styles;\n  }\n\n  private _widgetType: AjfReportWidgetType;\n  get widgetType(): AjfReportWidgetType | null {\n    return this._widgetType;\n  }\n\n  protected _context: any;\n\n  static create(\n    widget: AjfReportWidget, context: any, ts: TranslateService): AjfReportWidgetInstance {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return new AjfReportLayoutWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageWidget) {\n      return new AjfReportImageWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTextWidget) {\n      return new AjfReportTextWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTableWidget) {\n      return new AjfReportTableWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportChartWidget) {\n      return new AjfReportChartWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportMapWidget) {\n      return new AjfReportMapWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportDataWidget) {\n      return new AjfReportDataWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportFormulaWidget) {\n      return new AjfReportFormulaWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageContainerWidget) {\n      return new AjfReportImageContainerWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportWidget) {\n      return new AjfReportWidgetInstance(widget, context, ts);\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(widget: AjfReportWidget, context: any, public ts: TranslateService) {\n    this._widget = widget;\n    if (widget != null) {\n      this._styles = widget.styles;\n      this._widgetType = widget.widgetType;\n    }\n    this._context = context;\n\n    this._initInstance();\n    this.initContext(context);\n  }\n\n  initContext(context: any): void {\n    this._evaluateVisibility(context);\n  }\n\n  protected _initInstance(): void {\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    if (this._widget.hasContent) {\n      this._widget.content.forEach(w => {\n        content.push(AjfReportWidgetInstance.create(w, this._context, this.ts));\n      });\n    }\n    this._content = content;\n  }\n\n  private _evaluateVisibility(context: any): void {\n    if (this._widget.visibility != null) {\n      this._visible = this._widget.visibility.evaluate(context);\n    }\n  }\n}\n\n\nexport class AjfReportDataWidgetInstance extends AjfReportWidgetInstance {\n  get widget(): AjfReportDataWidget {\n    return <AjfReportDataWidget>this._widget;\n  }\n\n  private _dataset: any;\n  get dataset(): any { return this._dataset; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    this._populateData(context);\n  }\n\n  protected _initInstance(): void {\n    super._initInstance();\n  }\n\n  private _populateData(context: any): void {\n    this._dataset = (<any[]>(this.widget.dataset || []))\n      .map(row => {\n        if (row instanceof Array) {\n          return (<AjfDataset[]>row).map((cell) => {\n            return cell.formula instanceof Array ?\n              cell.formula.map((f) => f.evaluate(context)) :\n              cell.formula.evaluate(context);\n          });\n        } else {\n          const formula = (<AjfDataset>row).formula;\n          return formula instanceof Array ?\n            formula.map((f) => f.evaluate(context)) :\n            formula.evaluate(context);\n        }\n      });\n  }\n}\n\n\nexport class AjfReportLayoutWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  getColumnContent(column: number): AjfReportWidgetInstance | null {\n    return column >= 0 && column < this.content.length ? this.content[column] : null;\n  }\n}\n\nexport class AjfReportColumnWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportPageBreakWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportImageWidgetInstance extends AjfReportWidgetInstance {\n  private _icon: string;\n  get icon(): string { return this._icon; }\n\n  private _flag: string;\n  get flag(): string { return this._flag; }\n\n  private _url: string;\n  get url(): string { return this._url; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageWidget>this.widget);\n    const icon = widget.icon;\n    const flag = widget.flag;\n    const url = widget.url;\n    this._icon = icon ? icon.evaluate(context) : '';\n    this._flag = flag ? flag.evaluate(context) : '';\n    this._url = url ? url.evaluate(context) : '';\n  }\n}\n\nexport class AjfReportImageContainerWidgetInstance extends AjfReportWidgetInstance {\n  private _icons: string[];\n  get icons(): string[] { return this._icons; }\n\n  private _flags: string[];\n  get flags(): string[] { return this._flags; }\n\n  private _urls: string[];\n  get urls(): string[] { return this._urls; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageContainerWidget>this.widget);\n\n    // TODO: check! perche' evaluate torna una lista di liste?\n    // this._urls[0][0] contiene la lista di url..\n    this._urls = widget.urls ?\n      (widget.urls instanceof Array ? widget.urls :\n        (widget.urls instanceof AjfFormula ? widget.urls.evaluate(context) : []))\n      : [];\n\n    this._flags = widget.flags ?\n      (widget.flags instanceof Array ? widget.flags :\n        (widget.flags instanceof AjfFormula ? widget.flags.evaluate(context) : []))\n      : [];\n\n    this._icons = widget.icons ?\n      (widget.icons instanceof Array ? widget.icons.map((l) => l.evaluate(context)) :\n        (widget.icons instanceof AjfFormula ? widget.icons.evaluate(context) : []))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidgetInstance extends AjfReportWidgetInstance {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const formulaRegEx: RegExp = /\\[\\[(.+?)\\]\\]/g;\n    const widget = (<AjfReportTextWidget>this.widget);\n    let htmlText = widget.htmlText;\n    const matches: { idx: number, len: number, formula: AjfFormula }[] = [];\n    let match;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match['index'];\n      const len = match[0].length;\n      const formula = new AjfFormula({ formula: match[1] });\n      matches.push({ idx, len, formula });\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = m.formula.evaluate(context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    this._htmlText = htmlText;\n  }\n}\n\nexport class AjfReportTableWidgetInstance extends AjfReportWidgetInstance {\n  private _data: AjfTableCell[][];\n  get data(): AjfTableCell[][] { return this._data; }\n\n  private _recalcEvt: Subject<boolean> = new Subject<boolean>();\n  private _recalc: Observable<boolean>;\n  get recalc(): Observable<boolean> { return this._recalc; }\n\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n    this._recalc = this._recalcEvt.asObservable();\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportTableWidget>this.widget;\n    this._data = [];\n\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      this._data.push([]);\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        const value = cell.formula.evaluate(context);\n        const style = {...widget.cellStyles, ...cell.style};\n        this._data[i].push(<AjfTableCell>{\n          value,\n          style,\n          rowspan: cell.rowspan,\n          colspan: cell.colspan\n        });\n      }\n    }\n    // this._data = (widget.dataset || []).map((row: AjfDataset[]) => {\n    //   return row.map((cell: AjfTableDataset) => {\n    //     return <AjfTableCell>{\n    //       value: cell.formula.evaluate(context),\n    //       style: {...widget.cellStyles, ...cell.style},\n    //       rowspan: cell.rowspan,\n    //       colspan: cell.colspan\n    //     };\n    //   });\n    // });\n  }\n\n  calcValues(context: any): void {\n    if (context === undefined) { return; }\n    const widget = <AjfReportTableWidget>this.widget;\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        this._data[i][j].value = cell.formula.evaluate(context);\n      }\n    }\n    this._data = this._data.slice(0);\n    this._recalcEvt.next(true);\n  }\n}\n\nexport class AjfReportChartWidgetInstance extends AjfReportDataWidgetInstance {\n  private _datasets: ChartDataSets[];\n  private _labels: string[];\n\n  private _data: ChartData;\n  get data(): ChartData {\n    return this._data;\n  }\n\n  private _chartType: ExtendedChartType;\n  get chartType(): ExtendedChartType { return this._chartType; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  private _translate(formula: AjfFormula, context: any): string[] {\n    const evaluatedfunction: any = formula.evaluate(context);\n    try {\n      if (Array.isArray(evaluatedfunction)) {\n        evaluatedfunction.forEach((rowValue, index) => {\n          if (Array.isArray(rowValue)) {\n            rowValue.forEach((value, rowIndex) => {\n              evaluatedfunction[index][rowIndex] = this.ts.instant(value);\n            });\n          } else {\n            evaluatedfunction[index] = this.ts.instant(rowValue);\n          }\n        });\n      }\n      return evaluatedfunction;\n    } catch (e) {\n      return evaluatedfunction;\n    }\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportChartWidget>this.widget;\n    this._chartType = chartToChartJsType(widget.chartType);\n    if (widget.labels instanceof Array) {\n      widget.labels.map((l: AjfFormula) => {\n        this._labels.concat(this._translate(l, context));\n      });\n    } else {\n      this._labels = this._translate(widget.labels, context);\n    }\n\n    this._datasets = widget.dataset.map((d => {\n      let ds = <any>{...d.options || {},\n        data: d.aggregation.evaluate(d.formula, context)\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds,\n          chartType: ct,\n          type: ct\n        };\n      }\n      if (d.options != null) {\n        ds = {...ds,\n          options: d.options\n        };\n      }\n      if (d.label != null) {\n        ds = {...ds,\n          label: d.label\n        };\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    }));\n    this._data = { labels: this._labels, datasets: this._datasets };\n  }\n}\n\nexport class AjfReportMapWidgetInstance extends AjfReportDataWidgetInstance {\n  coordinate: number[];\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportMapWidget>this.widget;\n    this.coordinate = widget.coordinate.evaluate(context);\n  }\n}\n\nexport class AjfReportFormulaWidgetInstance extends AjfReportWidgetInstance {\n  private _formula: string;\n  get formula(): string { return this._formula; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportFormulaWidget>this.widget;\n    this._formula = widget.formula.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfTableDataset} from './dataset';\nimport {AjfReport, AjfReportContainer} from './reports';\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidgetInstance} from './widgets-instances';\nimport {\n  AjfReportChartWidget, AjfReportTextWidget, AjfReportTableWidget, AjfReportWidget\n} from './widgets';\n\n\nexport class AjfReportContainerInstance {\n  private _container: AjfReportContainer;\n  get container(): AjfReportContainer { return this._container; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles = {};\n  get styles(): AjfReportStyles { return this._styles; }\n\n  private _context: any;\n\n  constructor(container: AjfReportContainer, context: any, private _ts: TranslateService) {\n    this._container = container;\n    this._styles = this._container != null ? this._container.styles : {};\n    this._context = context;\n\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    this._container.content.forEach(c => {\n      this._translate(c);\n      content.push(AjfReportWidgetInstance.create(c, this._context, this._ts));\n    });\n    this._content = content;\n  }\n\n  private _translate(reportWidget: AjfReportWidget): void {\n    if (reportWidget.hasContent) {\n      reportWidget.content.forEach((subReportWidget: AjfReportWidget) => {\n        this._translate(subReportWidget);\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTextWidget && reportWidget.htmlText) {\n      reportWidget.htmlText = this._ts.instant(reportWidget.htmlText);\n    }\n\n    if (reportWidget instanceof AjfReportChartWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach(element => {\n        element.label = element.label ? this._ts.instant(element.label) : '';\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTableWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach((row: AjfTableDataset[]) => {\n        row.forEach((element: AjfTableDataset) => {\n          if (element.formula && element.formula.formula) {\n            try {\n              let formulaToBeTranslate = element.formula.formula;\n              if (formulaToBeTranslate[0] === '\"') {\n                formulaToBeTranslate = formulaToBeTranslate.slice(1, -1);\n                element.formula.formula = formulaToBeTranslate.length > 0\n                  ? `\"${this._ts.instant(formulaToBeTranslate)}\"` : element.formula.formula;\n              } else {\n                element.formula.formula = this._ts.instant(formulaToBeTranslate);\n              }\n            } catch (e) { }\n          }\n        });\n      });\n\n    }\n\n  }\n}\n\n\n/**\n * A report instance. Report + data\n */\nexport class AjfReportInstance {\n  /**\n   * The report\n   */\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n\n  private _header: AjfReportContainerInstance;\n  get header(): AjfReportContainerInstance { return this._header; }\n\n  private _content: AjfReportContainerInstance;\n  get content(): AjfReportContainerInstance { return this._content; }\n\n  private _footer: AjfReportContainerInstance;\n  get footer(): AjfReportContainerInstance { return this._footer; }\n\n  private _data: any;\n  get data(): any { return this._data; }\n\n  get styles(): AjfReportStyles {\n    return this._report != null ? this._report.styles : {};\n  }\n\n  private _context: any;\n  get context(): any { return this._context; }\n\n  constructor(report: AjfReport, context: any, private _ts: TranslateService) {\n    this._report = report;\n    this._context = context;\n\n    this._populateReport();\n  }\n\n  private _populateReport(): void {\n    this._header = this._populateContainer(this._report.header);\n    this._content = this._populateContainer(this._report.content);\n    this._footer = this._populateContainer(this._report.footer);\n  }\n\n  private _populateContainer(container: AjfReportContainer): AjfReportContainerInstance {\n    return new AjfReportContainerInstance(container, this._context, this._ts);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidget} from './widgets';\n\n\nexport class AjfReportContainer extends AjfJsonSerializable {\n  private _content: AjfReportWidget[];\n  get content(): AjfReportWidget[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  static fromJson(obj: any): AjfReportContainer {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('content') > -1 && obj['content'] instanceof Array) {\n      obj['content'] = obj['content'].map((cw: any) => AjfReportWidget.fromJson(cw));\n    }\n\n    return new AjfReportContainer(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['content', 'styles']);\n\n    this._content = obj && obj.content || [];\n    this._styles = obj && obj.styles || {};\n  }\n}\n/**\n * Class that represents a report.\n * A report is defined as three trees of report widgets (@see AjfReportWidget),\n * displayed each in the header / content / footer of the report.\n *\n */\nexport class AjfReport extends AjfJsonSerializable {\n  /**\n   * Collection of widgets that compose the report header\n   */\n  private _header: AjfReportContainer;\n  get header(): AjfReportContainer { return this._header; }\n\n  /**\n   * Collection of widgets that compose the report footer\n   */\n  private _footer: AjfReportContainer;\n  get footer(): AjfReportContainer { return this._footer; }\n\n  /**\n   * Collection of widgets that compose the report content\n   */\n  private _content: AjfReportContainer;\n  get content(): AjfReportContainer { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  set styles(styles: AjfReportStyles) {\n    this._styles = styles;\n  }\n\n  /**\n   * collection of forms that generate the report variables\n   *\n   * @memberOf AjfReport\n   */\n  private _forms: AjfForm[];\n  get forms(): AjfForm[] { return this._forms; }\n  set forms(forms: AjfForm[]) {\n    this._forms = forms;\n  }\n\n  /**\n   * Creates a report starting from a JSON representation.\n   * The form definition can be nested in the report JSON.\n   * @param obj : any The JSON representation of the report\n   * @param form : AjfForm The form that defines the data structure\n   * @return AjfReport The report\n   */\n  static fromJson(obj: any, forms?: AjfForm[]): AjfReport {\n    obj = deepCopy(obj);\n    const keys: string[] = Object.keys(obj);\n\n    const containers: string[] = ['header', 'footer', 'content'];\n    containers.forEach((c) => {\n      if (keys.indexOf(c) > -1) {\n        obj[c] = AjfReportContainer.fromJson(obj[c]);\n      }\n    });\n\n    return new AjfReport(forms || [], obj);\n  }\n\n  /**\n   * Creates a report.\n   * @param form : AjfForm The form that defines the data structure\n   * @param obj : any Report initial data\n   */\n  constructor(forms: AjfForm[], obj?: any) {\n    super(obj);\n\n    this._forms = forms.slice(0);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['header', 'footer', 'content', 'styles']);\n\n    this._header = obj && obj.header || null;\n    this._footer = obj && obj.footer || null;\n    this._content = obj && obj.content || null;\n    this._styles = obj && obj.styles || null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfReportChartWidgetInstance,\n  AjfReportFormulaWidgetInstance,\n  AjfReportImageContainerWidgetInstance,\n  AjfReportImageWidgetInstance,\n  AjfReportLayoutWidgetInstance,\n  AjfReportMapWidgetInstance,\n  AjfReportTableWidgetInstance,\n  AjfReportTextWidgetInstance,\n  AjfReportWidgetInstance,\n} from './widgets-instances';\nimport {\n  AjfReportChartWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from './widgets';\n\nexport abstract class AjfReportWidgetRenderer {\n  readonly widgetTypes = AjfReportWidgetType;\n\n  private _widget: AjfReportWidget | null;\n  get widget(): AjfReportWidget | null { return this._widget; }\n\n  private _imageTypes = AjfImageType;\n  get imageTypes() { return this._imageTypes; }\n\n  private _widgetInstance: AjfReportWidgetInstance;\n  get widgetInstance(): AjfReportWidgetInstance { return this._widgetInstance; }\n  set widgetInstance(widgetInstance: AjfReportWidgetInstance) {\n    if (this._widgetInstance !== widgetInstance) {\n      this._widgetInstance = widgetInstance;\n      this._widget = this._widgetInstance != null ? this._widgetInstance.widget : null;\n      this._cdr.markForCheck();\n    }\n  }\n\n  get imgwInst(): AjfReportImageWidgetInstance {\n    return this._widgetInstance as AjfReportImageWidgetInstance;\n  }\n  get imgw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get imgcwInst(): AjfReportImageContainerWidgetInstance {\n    return this._widgetInstance as AjfReportImageContainerWidgetInstance;\n  }\n  get imgcw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get layoutwInst(): AjfReportLayoutWidgetInstance {\n    return this._widgetInstance as AjfReportLayoutWidgetInstance;\n  }\n  get layoutw(): AjfReportLayoutWidget {\n    return this._widget as AjfReportLayoutWidget;\n  }\n  get chartwInst(): AjfReportChartWidgetInstance {\n    return this._widgetInstance as AjfReportChartWidgetInstance;\n  }\n  get chartw(): AjfReportChartWidget {\n    return this._widget as AjfReportChartWidget;\n  }\n  get tablewInst(): AjfReportTableWidgetInstance {\n    return this._widgetInstance as AjfReportTableWidgetInstance;\n  }\n  get textwInst(): AjfReportTextWidgetInstance {\n    return this._widgetInstance as AjfReportTextWidgetInstance;\n  }\n  get mapwInst(): AjfReportMapWidgetInstance {\n    return this._widgetInstance as AjfReportMapWidgetInstance;\n  }\n  get mapw(): AjfReportMapWidget {\n    return this._widget as AjfReportMapWidget;\n  }\n  get formulawInst(): AjfReportFormulaWidgetInstance {\n    return this._widgetInstance as AjfReportFormulaWidgetInstance;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","None","Sum","Average","WeightedAverage","LENGTH","AjfAggregation","obj","_this","_super","jsonExportedMembers","aggregation","AjfAggregationType","tslib_1.__extends","fromJson","deepCopy","evaluate","formulas","context","data","map","f","Error","r","reduce","AjfJsonSerializable","Line","Bar","HorizontalBar","Radar","Scatter","Doughnut","Pie","PolarArea","Bubble","chartToChartJsType","chartType","AjfChartType","AjfDataset","concat","formula","label","_parseJsonObject","keys","indexOf","AjfFormula","AjfTableDataset","rowspan","colspan","style","AjfChartDataset","options","datalabels","AjfReportRenderer","_cdr","defineProperty","_reportInstance","reportInstance","_report","report","markForCheck","Layout","PageBreak","Image","Text","Chart","Table","Map","Column","Formula","ImageContainer","EPI","Month","Year","AjfReportWidget","content","styles","visibility","AjfCondition","alwaysCondition","widgetType","AjfReportWidgetType","parseJsonObject","createWidget","w","dataset","row","cell","labels","l","coordinate","AjfReportLayoutWidget","AjfReportPageBreakWidget","AjfReportImageWidget","AjfReportTextWidget","AjfReportChartWidget","AjfReportTableWidget","AjfReportMapWidget","AjfReportColumnWidget","AjfReportFormulaWidget","AjfReportImageContainerWidget","thisObj","columns","_imageType","AjfImageType","imageType","_url","url","_icon","icon","_flag","flag","Icon","Flag","setUrl","imageUrl","setIcon","fontSet","fontIcon","setFlag","urls","flags","icons","_htmlText","htmlText","_formula","AjfReportDataWidget","type","cellStyles","tileLayer","attribution","disabled","AjfReportWidgetInstance","widget","ts","_visible","_widget","_styles","_widgetType","_context","_initInstance","initContext","_content","AjfReportLayoutWidgetInstance","AjfReportImageWidgetInstance","AjfReportTextWidgetInstance","AjfReportTableWidgetInstance","AjfReportChartWidgetInstance","AjfReportMapWidgetInstance","AjfReportDataWidgetInstance","AjfReportFormulaWidgetInstance","AjfReportImageContainerWidgetInstance","_evaluateVisibility","_populateContent","hasContent","forEach","push","_dataset","_populateData","getColumnContent","column","AjfReportColumnWidgetInstance","AjfReportPageBreakWidgetInstance","_icons","_flags","_urls","match","formulaRegEx","matches","exec","idx","len","reverse","m","calcValue","e","substr","_recalcEvt","Subject","_recalc","asObservable","_data","rows","rowsNum","cellsNum","j","value","tslib_1.__assign","calcValues","undefined","slice","next","_chartType","_translate","evaluatedfunction","isArray","rowValue","index","rowIndex","instant","_labels","_datasets","ds","ct","datasets","AjfReportContainerInstance","container","_ts","_container","c","reportWidget","subReportWidget","element","formulaToBeTranslate","AjfReportInstance","_populateReport","_header","_footer","_populateContainer","header","footer","AjfReportContainer","cw","AjfReport","forms","_forms","AjfReportWidgetRenderer","widgetTypes","_imageTypes","_widgetInstance","widgetInstance"],"mappings":"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"}