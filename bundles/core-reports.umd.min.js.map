{"version":3,"file":"core-reports.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/core/reports/aggregation.ts","../../src/core/reports/charts.ts","../../src/core/reports/chart-utils.ts","../../src/core/reports/dataset.ts","../../src/core/reports/report.ts","../../src/core/reports/widgets.ts","../../src/core/reports/widgets-instances.ts","../../src/core/reports/reports-instances.ts","../../src/core/reports/reports.ts","../../src/core/reports/widget.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n\n/**\n * This class will define an ajf aggregator\n */\nexport class AjfAggregation extends AjfJsonSerializable {\n  aggregation: AjfAggregationType;\n  /**\n   * this static method will load an AjfAggregator from json\n   * @param obj : any - object aggregator\n   * @return AjfFormula\n   */\n  static fromJson(obj: any): AjfAggregation {\n    obj = deepCopy(obj);\n    return new AjfAggregation(obj);\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = [ 'aggregation' ];\n\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n  }\n\n  evaluate(formulas: AjfFormula[], context: any): number[] {\n    const data: any[] = formulas.map(f => f.evaluate(context));\n    switch (this.aggregation) {\n      case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n      case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n      case AjfAggregationType.Average:\n      case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n      default:\n      return [];\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChartColor} from 'chart.js';\n\n\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n\n\nexport interface AjfChartDatasetOptions {\n  backgroundColor?: ChartColor | ChartColor[];\n  borderWidth?: number;\n  borderColor?: ChartColor;\n  borderCapStyle?: string;\n  borderDash?: number[];\n  borderDashOffset?: number;\n  borderJoinStyle?: string;\n  fill?: boolean;\n  label?: string;\n  lineTension?: number;\n  pointBorderColor?: ChartColor | ChartColor[];\n  pointBackgroundColor?: ChartColor | ChartColor[];\n  pointBorderWidth?: number | number[];\n  pointRadius?: number | number[];\n  pointHoverRadius?: number | number[];\n  pointHitRadius?: number | number[];\n  pointHoverBackgroundColor?: ChartColor | ChartColor[];\n  pointHoverBorderColor?: ChartColor | ChartColor[];\n  pointHoverBorderWidth?: number | number[];\n  pointStyle?: string | string[] | HTMLImageElement | HTMLImageElement[];\n  xAxisID?: string;\n  yAxisID?: string;\n  type?: string;\n  hidden?: boolean;\n  hideInLegendAndTooltip?: boolean;\n  stack?: string;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './charts';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n    switch (chartType) {\n      case AjfChartType.Line:\n      return 'line';\n      case AjfChartType.Bar:\n      return 'bar';\n      case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n      case AjfChartType.Radar:\n      return 'radar';\n      case AjfChartType.Scatter:\n      return 'scatter';\n      case AjfChartType.Doughnut:\n      return 'doughnut';\n      case AjfChartType.Pie:\n      return 'pie';\n      case AjfChartType.PolarArea:\n      return 'polarArea';\n      case AjfChartType.Bubble:\n      return 'bubble';\n      default:\n      return 'line';\n    }\n  }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {AjfAggregation, AjfAggregationType} from './aggregation';\nimport {AjfChartDatasetOptions, AjfChartType} from './charts';\n\n/**\n * This class will define an ajf dataset\n */\nexport class AjfDataset extends AjfJsonSerializable {\n  formula: AjfFormula | AjfFormula[];\n  aggregation: AjfAggregation;\n  label: string;\n\n  /**\n   * this static method will load an AjfDataset from json\n   * @param obj : any - object formula\n   * @return AjfFormula\n   */\n\n  static fromJson(obj: any): AjfDataset {\n    return new AjfDataset(AjfDataset._parseJsonObject(obj));\n  }\n\n  protected static _parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('formula') === -1) {\n      throw new Error('dataset formula missing');\n    }\n    if (keys.indexOf('aggregation') === -1) {\n      throw new Error('dataset aggregation missing');\n    }\n    if (keys.indexOf('label') === -1) {\n      throw new Error('dataset label missing');\n    }\n\n    let formula: AjfFormula | AjfFormula[];\n    if (obj.formula instanceof Array) {\n      formula = (obj.formula as string[]).map(f => AjfFormula.fromJson(f));\n    } else {\n      formula =  AjfFormula.fromJson(obj.formula);\n    }\n    let aggregation: AjfAggregation = AjfAggregation.fromJson(obj.aggregation);\n\n    obj.formula = formula;\n    obj.aggregation = aggregation;\n\n    return obj;\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['formula', 'aggregation', 'label']);\n\n    this.formula     = obj && obj.formula     || null;\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n    this.label       = obj && obj.label       || null;\n  }\n\n}\n\nexport class AjfTableDataset extends AjfDataset {\n  formula: AjfFormula;\n  colspan: number;\n  rowspan: number;\n  style: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['rowspan', 'colspan', 'style']);\n\n    this.rowspan     = obj && obj.rowspan     || null;\n    this.colspan     = obj && obj.colspan     || null;\n    this.style       = obj && obj.style       || null;\n  }\n\n  static fromJson(obj: any): AjfTableDataset {\n    return new AjfTableDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n\n\nexport class AjfChartDataset extends AjfDataset {\n  formula: AjfFormula[];\n  chartType?: AjfChartType;\n  options?: AjfChartDatasetOptions;\n  datalabels?: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['chartType', 'options']);\n\n    if (obj.chartType != null) { this.chartType = obj.chartType; }\n    if (obj.options != null) { this.options = obj.options; }\n    if (obj.datalabels != null) { this.datalabels = obj.datalabels; }\n  }\n\n  static fromJson(obj: any): AjfChartDataset {\n    return new AjfChartDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfReport} from './reports';\nimport {AjfReportInstance} from './reports-instances';\n\nexport abstract class AjfReportRenderer {\n  private _reportInstance: AjfReportInstance;\n  get reportInstance(): AjfReportInstance { return this._reportInstance; }\n  set reportInstance(reportInstance: AjfReportInstance) {\n    this._reportInstance = reportInstance;\n    this._report = reportInstance != null ? reportInstance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon, AjfImageType} from '@ajf/core/image';\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfChartType} from './charts';\nimport {AjfChartDataset, AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\n\nimport {ChartOptions} from 'chart.js';\n\n/**\n * Report widget types. They are mainly divided in layout and data widgets.\n * Layout widgets (Layout, PageBreak, Image, Text) are used to display static\n * content or for layout purposes.\n * Data widgets (Chart, Table, Map) are used to display the data of a report\n * instance (@see AjfReportInstance).\n * All data widgets and the PageBreak widget can have no content\n */\nexport enum AjfReportWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  LENGTH\n}\n\nexport enum AjfReportDataType {\n  EPI,\n  Month,\n  Year,\n  LENGTH\n}\nexport interface AjfReportCustomWidget {\n  json: string;\n  type: string;\n}\n\n/**\n * Base abstract class that represent a report widget.\n *\n */\nexport abstract class AjfReportWidget extends AjfJsonSerializable {\n  /**\n   * The sub-widgets contained inside this widget\n   */\n  content: AjfReportWidget[];\n\n  /**\n   * A dictionary of CSS-styles applied to the widget\n   */\n  styles: AjfReportStyles;\n\n  /**\n   * The condition under which the widget is visible\n   *\n   * @memberOf AjfReportWidget\n   */\n  visibility: AjfCondition;\n\n  /**\n   * True if the current widget can contain sub-widgets\n   */\n  abstract get hasContent(): boolean;\n\n  /**\n   * Creates a report widget from its JSON representation\n   *\n   * @param obj: any The JSON representation\n   * @throws 'Widget type missing' when the JSON representation lacks of a widget type\n   * @throws 'Invalid widget type' when the JSON representation contains an invalid widget type\n   * @return AjfReportWidget The report widget\n   */\n  static fromJson(obj: any): AjfReportWidget {\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('widgetType') === -1) {\n      throw new Error('Widget type missing');\n    }\n\n    let widgetType = obj.widgetType;\n    if (AjfReportWidgetType[widgetType] == null) {\n      throw new Error('Invalid widget type');\n    }\n\n    obj = this.parseJsonObject(obj);\n\n    delete obj.widgetType;\n\n    return AjfReportWidget.createWidget(widgetType, obj);\n  }\n\n  protected static parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    } else {\n      obj.visibility = AjfCondition.alwaysCondition();\n    }\n\n    if (keys.indexOf('content') > -1 && obj.content instanceof Array) {\n      obj.content = obj.content.map((w: any) => AjfReportWidget.fromJson(w));\n    }\n\n    if (keys.indexOf('dataset') > -1 && obj['dataset'] instanceof Array) {\n      if (obj.widgetType == AjfReportWidgetType.Table) {\n        const data: AjfTableDataset[][] = obj.dataset\n          .map((row: AjfTableDataset[]) => row.map(cell => AjfTableDataset.fromJson(cell)));\n        obj.dataset = data;\n      } else if (obj.widgetType == AjfReportWidgetType.Chart) {\n        const data: AjfChartDataset[] = obj.dataset\n          .map((row: any) => AjfChartDataset.fromJson(row));\n        obj.dataset = data;\n      }\n    }\n\n    if (keys.indexOf('labels') > -1) {\n      if (obj['labels'] instanceof Array) {\n        obj.labels = obj.labels.map((l: string) => AjfFormula.fromJson(l));\n      } else {\n        obj.labels = AjfFormula.fromJson(obj.labels);\n      }\n    }\n\n    if (keys.indexOf('coordinate') > -1) {\n        obj.coordinate = AjfFormula.fromJson(obj.coordinate);\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a report widget given a widget type (@see AjfReportWidgetType)\n   */\n  static createWidget(widgetType: AjfReportWidgetType, obj?: any): AjfReportWidget {\n    switch (widgetType) {\n      case AjfReportWidgetType.Layout:\n        return new AjfReportLayoutWidget(obj);\n      case AjfReportWidgetType.PageBreak:\n        return new AjfReportPageBreakWidget(obj);\n      case AjfReportWidgetType.Image:\n        return new AjfReportImageWidget(obj);\n      case AjfReportWidgetType.Text:\n        return new AjfReportTextWidget(obj);\n      case AjfReportWidgetType.Chart:\n        return new AjfReportChartWidget(obj);\n      case AjfReportWidgetType.Table:\n        return new AjfReportTableWidget(obj);\n      case AjfReportWidgetType.Map:\n        return new AjfReportMapWidget(obj);\n      case AjfReportWidgetType.Column:\n        return new AjfReportColumnWidget(obj);\n      case AjfReportWidgetType.Formula:\n        return new AjfReportFormulaWidget(obj);\n      case AjfReportWidgetType.ImageContainer:\n        return new AjfReportImageContainerWidget(obj);\n      default:\n        throw new Error('Invalid widget type');\n    }\n\n  }\n\n  /**\n   * The widget type (@see AjfReportWidgetType)\n   */\n  get widgetType(): AjfReportWidgetType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfReportLayoutWidget) {\n      return AjfReportWidgetType.Layout;\n    }\n    if (thisObj instanceof AjfReportColumnWidget) {\n      return AjfReportWidgetType.Column;\n    }\n    if (thisObj instanceof AjfReportPageBreakWidget) {\n      return AjfReportWidgetType.PageBreak;\n    }\n    if (thisObj instanceof AjfReportImageWidget) {\n      return AjfReportWidgetType.Image;\n    }\n    if (thisObj instanceof AjfReportTextWidget) {\n      return AjfReportWidgetType.Text;\n    }\n    if (thisObj instanceof AjfReportChartWidget) {\n      return AjfReportWidgetType.Chart;\n    }\n    if (thisObj instanceof AjfReportTableWidget) {\n      return AjfReportWidgetType.Table;\n    }\n    if (thisObj instanceof AjfReportMapWidget) {\n      return AjfReportWidgetType.Map;\n    }\n    if (thisObj instanceof AjfReportFormulaWidget) {\n      return AjfReportWidgetType.Formula;\n    }\n    if (thisObj instanceof AjfReportImageContainerWidget) {\n      return AjfReportWidgetType.ImageContainer;\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['widgetType', 'content', 'styles', 'visibility']);\n\n    this.content = obj && obj.content || [];\n    this.styles = obj && obj.styles || {};\n    this.visibility = obj && obj.visibility || AjfCondition.alwaysCondition();\n  }\n}\n\n\nexport class AjfReportLayoutWidget extends AjfReportWidget {\n  columns: number[];\n\n  get hasContent(): boolean { return true; }\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['columns']);\n\n    if (obj && obj.columns) {\n      this.columns = obj.columns;\n    } else {\n      this.content = [new AjfReportColumnWidget()];\n      this.columns = [1];\n    }\n  }\n}\n\nexport class AjfReportColumnWidget extends AjfReportWidget {\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\nexport class AjfReportPageBreakWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\n\nexport class AjfReportImageWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this._icon = null;\n    this._flag = null;\n    this._url = null;\n  }\n\n  private _icon: AjfFormula | null;\n  get icon(): AjfFormula | null { return this._icon; }\n  set icon(icon: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Icon) {\n      this._icon = icon;\n    }\n  }\n\n  private _flag: AjfFormula | null;\n  get flag(): AjfFormula | null { return this._flag; }\n  set flag(flag: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Flag) {\n      this._flag = flag;\n    }\n  }\n\n  private _url: AjfFormula | null;\n  get url(): AjfFormula | null { return this._url; }\n  set url(url: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Image) {\n      this._url = url;\n    }\n  }\n\n  setUrl(imageUrl: string) {\n    this.imageType = AjfImageType.Image;\n    this._url = new AjfFormula({formula: `\"${imageUrl}\"`});\n  }\n\n  setIcon(icon: AjfImageIcon) {\n    this.imageType = AjfImageType.Icon;\n    this._icon = new AjfFormula({\n      formula: `{fontSet: \"${icon.fontSet}\", fontIcon: \"${icon.fontIcon}\"}`\n    });\n  }\n\n  setFlag(flag: string) {\n    this.imageType = AjfImageType.Flag;\n    this._flag = new AjfFormula({formula: `\"${flag}\"`});\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'url', 'icon', 'flag'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n    this._url = obj && obj.url ?\n      (obj.url instanceof AjfFormula ? obj.url : AjfFormula.fromJson(obj.url)) :\n      null;\n    this._icon = obj && obj.icon ?\n      (obj.icon instanceof AjfFormula ? obj.icon : AjfFormula.fromJson(obj.icon)) :\n      null;\n    this._flag = obj && obj.flag ?\n      (obj.flag instanceof AjfFormula ? obj.flag : AjfFormula.fromJson(obj.flag)) :\n      null;\n  }\n}\n\nexport class AjfReportImageContainerWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this.urls = [];\n    this.flags = [];\n    this.icons = [];\n  }\n\n  urls: AjfFormula | string[];\n  flags: AjfFormula | string[];\n  icons: AjfFormula | AjfFormula[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'urls', 'icons', 'flags'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n\n    this.urls = obj && obj.urls ?\n      (obj.urls instanceof AjfFormula ? obj.urls :\n        (obj.urls instanceof Array ? obj.urls : AjfFormula.fromJson(obj.urls))\n      ) : [];\n\n    this.flags = obj && obj.flags ?\n      (obj.flags instanceof AjfFormula ? obj.flags :\n        (obj.flags instanceof Array ? obj.flags : AjfFormula.fromJson(obj.flags))\n      ) : [];\n\n    this.icons = obj && obj.icons\n      ? (\n        obj.icons instanceof AjfFormula\n        ? obj.icons\n        : obj.icons.map((l: string) => AjfFormula.fromJson(l)))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidget extends AjfReportWidget {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n  set htmlText(htmlText: string) {\n    this._htmlText = htmlText;\n  }\n\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['htmlText']);\n\n    this._htmlText = obj && obj.htmlText || '';\n  }\n\n}\n\nexport class AjfReportFormulaWidget extends AjfReportWidget {\n  private _formula: AjfFormula;\n  get formula(): AjfFormula { return this._formula; }\n  set formula(formula: AjfFormula) { this._formula = formula; }\n\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['content', 'formula']);\n\n    this.content = obj && obj.content || [];\n    this.formula = obj && obj.formula ?\n      (obj.formula instanceof AjfFormula ? obj.formula : AjfFormula.fromJson(obj.formula)) : null;\n  }\n\n}\n\nexport abstract class AjfReportDataWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n  dataset: AjfDataset[] | AjfDataset[][];\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['dataset']);\n\n    this.dataset = obj && obj.dataset || [];\n  }\n}\n\n\n/**\n * Concrete class for manage chart.\n *\n *\n *\n * @throws 'labels or data or backgroundColor or borderColor missed'\n *         if the length of arrays passed by obj are not the same\n */\nexport class AjfReportChartWidget extends AjfReportDataWidget {\n  chartType: AjfChartType;\n  labels: AjfFormula | AjfFormula[];\n  dataset: AjfChartDataset[];\n  options: ChartOptions;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['chartType', 'labels', 'options']);\n\n    this.chartType = obj && obj.type || AjfChartType.Line;\n    this.dataset = obj && obj.dataset || [];\n    this.labels = obj && obj.labels || [];\n    this.options = obj && obj.options || null;\n  }\n}\n\n\nexport class AjfReportTableWidget extends AjfReportDataWidget {\n  cellStyles: any;\n  dataset: AjfTableDataset[][];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['cellStyles']);\n\n    this.cellStyles = obj && obj.cellStyles || null;\n  }\n}\n\nexport class AjfReportMapWidget extends AjfReportDataWidget {\n  coordinate: AjfFormula;\n  tileLayer: string;\n  attribution: string;\n  disabled: boolean;\n\n  get coordinateMap():  AjfFormula | null { return this.coordinate; }\n  get tileLayerMap(): string { return this.tileLayer; }\n  get attributionMap(): string { return this.attribution; }\n  get disabledMap():  boolean { return this.disabled; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['coordinate', 'tileLayer', 'attribution', 'disabled']);\n\n    this.coordinate = obj && obj.coordinate || '';\n    this.tileLayer = obj && obj.tileLayer || '';\n    this.attribution = obj && obj.attribution || '';\n    this.disabled = obj && obj.disabled || false;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\nimport {ChartData, ChartDataSets} from 'chart.js';\n\nimport {Observable, Subject} from 'rxjs';\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\nimport {chartToChartJsType} from './chart-utils';\nimport {AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\nimport {\n  AjfReportChartWidget, AjfReportDataWidget, AjfReportFormulaWidget, AjfReportImageContainerWidget,\n  AjfReportImageWidget, AjfReportLayoutWidget, AjfReportMapWidget, AjfReportTableWidget,\n  AjfReportTextWidget, AjfReportWidget, AjfReportWidgetType\n} from './widgets';\n\nexport class AjfReportWidgetInstance {\n  protected _widget: AjfReportWidget;\n  get widget(): AjfReportWidget { return this._widget; }\n\n  private _visible = true;\n  get visible(): boolean { return this._visible; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles {\n    return this._styles;\n  }\n\n  private _widgetType: AjfReportWidgetType;\n  get widgetType(): AjfReportWidgetType | null {\n    return this._widgetType;\n  }\n\n  protected _context: any;\n\n  static create(\n    widget: AjfReportWidget, context: any, ts: TranslateService): AjfReportWidgetInstance {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return new AjfReportLayoutWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageWidget) {\n      return new AjfReportImageWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTextWidget) {\n      return new AjfReportTextWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTableWidget) {\n      return new AjfReportTableWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportChartWidget) {\n      return new AjfReportChartWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportMapWidget) {\n      return new AjfReportMapWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportDataWidget) {\n      return new AjfReportDataWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportFormulaWidget) {\n      return new AjfReportFormulaWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageContainerWidget) {\n      return new AjfReportImageContainerWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportWidget) {\n      return new AjfReportWidgetInstance(widget, context, ts);\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(widget: AjfReportWidget, context: any, public ts: TranslateService) {\n    this._widget = widget;\n    if (widget != null) {\n      this._styles = widget.styles;\n      this._widgetType = widget.widgetType;\n    }\n    this._context = context;\n\n    this._initInstance();\n    this.initContext(context);\n  }\n\n  initContext(context: any): void {\n    this._evaluateVisibility(context);\n  }\n\n  protected _initInstance(): void {\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    if (this._widget.hasContent) {\n      this._widget.content.forEach(w => {\n        content.push(AjfReportWidgetInstance.create(w, this._context, this.ts));\n      });\n    }\n    this._content = content;\n  }\n\n  private _evaluateVisibility(context: any): void {\n    if (this._widget.visibility != null) {\n      this._visible = this._widget.visibility.evaluate(context);\n    }\n  }\n}\n\n\nexport class AjfReportDataWidgetInstance extends AjfReportWidgetInstance {\n  get widget(): AjfReportDataWidget {\n    return <AjfReportDataWidget>this._widget;\n  }\n\n  private _dataset: any;\n  get dataset(): any { return this._dataset; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    this._populateData(context);\n  }\n\n  protected _initInstance(): void {\n    super._initInstance();\n  }\n\n  private _populateData(context: any): void {\n    this._dataset = (<any[]>(this.widget.dataset || []))\n      .map(row => {\n        if (row instanceof Array) {\n          return (<AjfDataset[]>row).map((cell) => {\n            return cell.formula instanceof Array ?\n              cell.formula.map((f) => f.evaluate(context)) :\n              cell.formula.evaluate(context);\n          });\n        } else {\n          const formula = (<AjfDataset>row).formula;\n          return formula instanceof Array ?\n            formula.map((f) => f.evaluate(context)) :\n            formula.evaluate(context);\n        }\n      });\n  }\n}\n\n\nexport class AjfReportLayoutWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  getColumnContent(column: number): AjfReportWidgetInstance | null {\n    return column >= 0 && column < this.content.length ? this.content[column] : null;\n  }\n}\n\nexport class AjfReportColumnWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportPageBreakWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportImageWidgetInstance extends AjfReportWidgetInstance {\n  private _icon: string;\n  get icon(): string { return this._icon; }\n\n  private _flag: string;\n  get flag(): string { return this._flag; }\n\n  private _url: string;\n  get url(): string { return this._url; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageWidget>this.widget);\n    const icon = widget.icon;\n    const flag = widget.flag;\n    const url = widget.url;\n    this._icon = icon ? icon.evaluate(context) : '';\n    this._flag = flag ? flag.evaluate(context) : '';\n    this._url = url ? url.evaluate(context) : '';\n  }\n}\n\nexport class AjfReportImageContainerWidgetInstance extends AjfReportWidgetInstance {\n  private _icons: string[];\n  get icons(): string[] { return this._icons; }\n\n  private _flags: string[];\n  get flags(): string[] { return this._flags; }\n\n  private _urls: string[];\n  get urls(): string[] { return this._urls; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageContainerWidget>this.widget);\n\n    // TODO: check! perche' evaluate torna una lista di liste?\n    // this._urls[0][0] contiene la lista di url..\n    this._urls = widget.urls ?\n      (widget.urls instanceof Array ? widget.urls :\n        (widget.urls instanceof AjfFormula ? widget.urls.evaluate(context) : []))\n      : [];\n\n    this._flags = widget.flags ?\n      (widget.flags instanceof Array ? widget.flags :\n        (widget.flags instanceof AjfFormula ? widget.flags.evaluate(context) : []))\n      : [];\n\n    this._icons = widget.icons ?\n      (widget.icons instanceof Array ? widget.icons.map((l) => l.evaluate(context)) :\n        (widget.icons instanceof AjfFormula ? widget.icons.evaluate(context) : []))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidgetInstance extends AjfReportWidgetInstance {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const formulaRegEx: RegExp = /\\[\\[(.+?)\\]\\]/g;\n    const widget = (<AjfReportTextWidget>this.widget);\n    let htmlText = widget.htmlText;\n    const matches: { idx: number, len: number, formula: AjfFormula }[] = [];\n    let match;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match['index'];\n      const len = match[0].length;\n      const formula = new AjfFormula({ formula: match[1] });\n      matches.push({ idx, len, formula });\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = m.formula.evaluate(context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    this._htmlText = htmlText;\n  }\n}\n\nexport class AjfReportTableWidgetInstance extends AjfReportWidgetInstance {\n  private _data: AjfTableCell[][];\n  get data(): AjfTableCell[][] { return this._data; }\n\n  private _recalcEvt: Subject<boolean> = new Subject<boolean>();\n  private _recalc: Observable<boolean>;\n  get recalc(): Observable<boolean> { return this._recalc; }\n\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n    this._recalc = this._recalcEvt.asObservable();\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportTableWidget>this.widget;\n    this._data = [];\n\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      this._data.push([]);\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        const value = cell.formula.evaluate(context);\n        const style = {...widget.cellStyles, ...cell.style};\n        this._data[i].push(<AjfTableCell>{\n          value,\n          style,\n          rowspan: cell.rowspan,\n          colspan: cell.colspan\n        });\n      }\n    }\n    // this._data = (widget.dataset || []).map((row: AjfDataset[]) => {\n    //   return row.map((cell: AjfTableDataset) => {\n    //     return <AjfTableCell>{\n    //       value: cell.formula.evaluate(context),\n    //       style: {...widget.cellStyles, ...cell.style},\n    //       rowspan: cell.rowspan,\n    //       colspan: cell.colspan\n    //     };\n    //   });\n    // });\n  }\n\n  calcValues(context: any): void {\n    if (context === undefined) { return; }\n    const widget = <AjfReportTableWidget>this.widget;\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        this._data[i][j].value = cell.formula.evaluate(context);\n      }\n    }\n    this._data = this._data.slice(0);\n    this._recalcEvt.next(true);\n  }\n}\n\nexport class AjfReportChartWidgetInstance extends AjfReportDataWidgetInstance {\n  private _datasets: ChartDataSets[];\n  private _labels: string[];\n\n  private _data: ChartData;\n  get data(): ChartData {\n    return this._data;\n  }\n\n  private _chartType: ExtendedChartType;\n  get chartType(): ExtendedChartType { return this._chartType; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  private _translate(formula: AjfFormula, context: any): string[] {\n    const evaluatedfunction: any = formula.evaluate(context);\n    try {\n      if (Array.isArray(evaluatedfunction)) {\n        evaluatedfunction.forEach((rowValue, index) => {\n          if (Array.isArray(rowValue)) {\n            rowValue.forEach((value, rowIndex) => {\n              evaluatedfunction[index][rowIndex] = this.ts.instant(value);\n            });\n          } else {\n            evaluatedfunction[index] = this.ts.instant(rowValue);\n          }\n        });\n      }\n      return evaluatedfunction;\n    } catch (e) {\n      return evaluatedfunction;\n    }\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportChartWidget>this.widget;\n    this._chartType = chartToChartJsType(widget.chartType);\n    if (widget.labels instanceof Array) {\n      widget.labels.map((l: AjfFormula) => {\n        this._labels.concat(this._translate(l, context));\n      });\n    } else {\n      this._labels = this._translate(widget.labels, context);\n    }\n\n    this._datasets = widget.dataset.map((d => {\n      let ds = <any>{...d.options || {},\n        data: d.aggregation.evaluate(d.formula, context)\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds,\n          chartType: ct,\n          type: ct\n        };\n      }\n      if (d.options != null) {\n        ds = {...ds,\n          options: d.options\n        };\n      }\n      if (d.label != null) {\n        ds = {...ds,\n          label: d.label\n        };\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    }));\n    this._data = { labels: this._labels, datasets: this._datasets };\n  }\n}\n\nexport class AjfReportMapWidgetInstance extends AjfReportDataWidgetInstance {\n  coordinate: number[];\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportMapWidget>this.widget;\n    this.coordinate = widget.coordinate.evaluate(context);\n  }\n}\n\nexport class AjfReportFormulaWidgetInstance extends AjfReportWidgetInstance {\n  private _formula: string;\n  get formula(): string { return this._formula; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportFormulaWidget>this.widget;\n    this._formula = widget.formula.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfTableDataset} from './dataset';\nimport {AjfReport, AjfReportContainer} from './reports';\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidgetInstance} from './widgets-instances';\nimport {\n  AjfReportChartWidget, AjfReportTextWidget, AjfReportTableWidget, AjfReportWidget\n} from './widgets';\n\n\nexport class AjfReportContainerInstance {\n  private _container: AjfReportContainer;\n  get container(): AjfReportContainer { return this._container; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles = {};\n  get styles(): AjfReportStyles { return this._styles; }\n\n  private _context: any;\n\n  constructor(container: AjfReportContainer, context: any, private _ts: TranslateService) {\n    this._container = container;\n    this._styles = this._container != null ? this._container.styles : {};\n    this._context = context;\n\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    this._container.content.forEach(c => {\n      this._translate(c);\n      content.push(AjfReportWidgetInstance.create(c, this._context, this._ts));\n    });\n    this._content = content;\n  }\n\n  private _translate(reportWidget: AjfReportWidget): void {\n    if (reportWidget.hasContent) {\n      reportWidget.content.forEach((subReportWidget: AjfReportWidget) => {\n        this._translate(subReportWidget);\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTextWidget && reportWidget.htmlText) {\n      reportWidget.htmlText = this._ts.instant(reportWidget.htmlText);\n    }\n\n    if (reportWidget instanceof AjfReportChartWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach(element => {\n        element.label = element.label ? this._ts.instant(element.label) : '';\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTableWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach((row: AjfTableDataset[]) => {\n        row.forEach((element: AjfTableDataset) => {\n          if (element.formula && element.formula.formula) {\n            try {\n              let formulaToBeTranslate = element.formula.formula;\n              if (formulaToBeTranslate[0] === '\"') {\n                formulaToBeTranslate = formulaToBeTranslate.slice(1, -1);\n                element.formula.formula = formulaToBeTranslate.length > 0\n                  ? `\"${this._ts.instant(formulaToBeTranslate)}\"` : element.formula.formula;\n              } else {\n                element.formula.formula = this._ts.instant(formulaToBeTranslate);\n              }\n            } catch (e) { }\n          }\n        });\n      });\n\n    }\n\n  }\n}\n\n\n/**\n * A report instance. Report + data\n */\nexport class AjfReportInstance {\n  /**\n   * The report\n   */\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n\n  private _header: AjfReportContainerInstance;\n  get header(): AjfReportContainerInstance { return this._header; }\n\n  private _content: AjfReportContainerInstance;\n  get content(): AjfReportContainerInstance { return this._content; }\n\n  private _footer: AjfReportContainerInstance;\n  get footer(): AjfReportContainerInstance { return this._footer; }\n\n  private _data: any;\n  get data(): any { return this._data; }\n\n  get styles(): AjfReportStyles {\n    return this._report != null ? this._report.styles : {};\n  }\n\n  private _context: any;\n  get context(): any { return this._context; }\n\n  constructor(report: AjfReport, context: any, private _ts: TranslateService) {\n    this._report = report;\n    this._context = context;\n\n    this._populateReport();\n  }\n\n  private _populateReport(): void {\n    this._header = this._populateContainer(this._report.header);\n    this._content = this._populateContainer(this._report.content);\n    this._footer = this._populateContainer(this._report.footer);\n  }\n\n  private _populateContainer(container: AjfReportContainer): AjfReportContainerInstance {\n    return new AjfReportContainerInstance(container, this._context, this._ts);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidget} from './widgets';\n\n\nexport class AjfReportContainer extends AjfJsonSerializable {\n  private _content: AjfReportWidget[];\n  get content(): AjfReportWidget[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  static fromJson(obj: any): AjfReportContainer {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('content') > -1 && obj['content'] instanceof Array) {\n      obj['content'] = obj['content'].map((cw: any) => AjfReportWidget.fromJson(cw));\n    }\n\n    return new AjfReportContainer(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['content', 'styles']);\n\n    this._content = obj && obj.content || [];\n    this._styles = obj && obj.styles || {};\n  }\n}\n/**\n * Class that represents a report.\n * A report is defined as three trees of report widgets (@see AjfReportWidget),\n * displayed each in the header / content / footer of the report.\n *\n */\nexport class AjfReport extends AjfJsonSerializable {\n  /**\n   * Collection of widgets that compose the report header\n   */\n  private _header: AjfReportContainer;\n  get header(): AjfReportContainer { return this._header; }\n\n  /**\n   * Collection of widgets that compose the report footer\n   */\n  private _footer: AjfReportContainer;\n  get footer(): AjfReportContainer { return this._footer; }\n\n  /**\n   * Collection of widgets that compose the report content\n   */\n  private _content: AjfReportContainer;\n  get content(): AjfReportContainer { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  set styles(styles: AjfReportStyles) {\n    this._styles = styles;\n  }\n\n  /**\n   * collection of forms that generate the report variables\n   *\n   * @memberOf AjfReport\n   */\n  private _forms: AjfForm[];\n  get forms(): AjfForm[] { return this._forms; }\n  set forms(forms: AjfForm[]) {\n    this._forms = forms;\n  }\n\n  /**\n   * Creates a report starting from a JSON representation.\n   * The form definition can be nested in the report JSON.\n   * @param obj : any The JSON representation of the report\n   * @param form : AjfForm The form that defines the data structure\n   * @return AjfReport The report\n   */\n  static fromJson(obj: any, forms?: AjfForm[]): AjfReport {\n    obj = deepCopy(obj);\n    const keys: string[] = Object.keys(obj);\n\n    const containers: string[] = ['header', 'footer', 'content'];\n    containers.forEach((c) => {\n      if (keys.indexOf(c) > -1) {\n        obj[c] = AjfReportContainer.fromJson(obj[c]);\n      }\n    });\n\n    return new AjfReport(forms || [], obj);\n  }\n\n  /**\n   * Creates a report.\n   * @param form : AjfForm The form that defines the data structure\n   * @param obj : any Report initial data\n   */\n  constructor(forms: AjfForm[], obj?: any) {\n    super(obj);\n\n    this._forms = forms.slice(0);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['header', 'footer', 'content', 'styles']);\n\n    this._header = obj && obj.header || null;\n    this._footer = obj && obj.footer || null;\n    this._content = obj && obj.content || null;\n    this._styles = obj && obj.styles || null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfReportChartWidgetInstance,\n  AjfReportFormulaWidgetInstance,\n  AjfReportImageContainerWidgetInstance,\n  AjfReportImageWidgetInstance,\n  AjfReportLayoutWidgetInstance,\n  AjfReportMapWidgetInstance,\n  AjfReportTableWidgetInstance,\n  AjfReportTextWidgetInstance,\n  AjfReportWidgetInstance,\n} from './widgets-instances';\nimport {\n  AjfReportChartWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from './widgets';\n\nexport abstract class AjfReportWidgetRenderer {\n  readonly widgetTypes = AjfReportWidgetType;\n\n  private _widget: AjfReportWidget | null;\n  get widget(): AjfReportWidget | null { return this._widget; }\n\n  private _imageTypes = AjfImageType;\n  get imageTypes() { return this._imageTypes; }\n\n  private _widgetInstance: AjfReportWidgetInstance;\n  get widgetInstance(): AjfReportWidgetInstance { return this._widgetInstance; }\n  set widgetInstance(widgetInstance: AjfReportWidgetInstance) {\n    if (this._widgetInstance !== widgetInstance) {\n      this._widgetInstance = widgetInstance;\n      this._widget = this._widgetInstance != null ? this._widgetInstance.widget : null;\n      this._cdr.markForCheck();\n    }\n  }\n\n  get imgwInst(): AjfReportImageWidgetInstance {\n    return this._widgetInstance as AjfReportImageWidgetInstance;\n  }\n  get imgw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get imgcwInst(): AjfReportImageContainerWidgetInstance {\n    return this._widgetInstance as AjfReportImageContainerWidgetInstance;\n  }\n  get imgcw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get layoutwInst(): AjfReportLayoutWidgetInstance {\n    return this._widgetInstance as AjfReportLayoutWidgetInstance;\n  }\n  get layoutw(): AjfReportLayoutWidget {\n    return this._widget as AjfReportLayoutWidget;\n  }\n  get chartwInst(): AjfReportChartWidgetInstance {\n    return this._widgetInstance as AjfReportChartWidgetInstance;\n  }\n  get chartw(): AjfReportChartWidget {\n    return this._widget as AjfReportChartWidget;\n  }\n  get tablewInst(): AjfReportTableWidgetInstance {\n    return this._widgetInstance as AjfReportTableWidgetInstance;\n  }\n  get textwInst(): AjfReportTextWidgetInstance {\n    return this._widgetInstance as AjfReportTextWidgetInstance;\n  }\n  get mapwInst(): AjfReportMapWidgetInstance {\n    return this._widgetInstance as AjfReportMapWidgetInstance;\n  }\n  get mapw(): AjfReportMapWidget {\n    return this._widget as AjfReportMapWidget;\n  }\n  get formulawInst(): AjfReportFormulaWidgetInstance {\n    return this._widgetInstance as AjfReportFormulaWidgetInstance;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","None","Sum","Average","WeightedAverage","LENGTH","tslib_1.__extends","AjfAggregation","AjfJsonSerializable","fromJson","obj","deepCopy","evaluate","formulas","context","data","map","f","aggregation","AjfAggregationType","Error","r","reduce","_this","_super","jsonExportedMembers","Line","Bar","HorizontalBar","Radar","Scatter","Doughnut","Pie","PolarArea","Bubble","chartToChartJsType","chartType","AjfChartType","AjfDataset","_parseJsonObject","formula","keys","indexOf","AjfFormula","concat","label","AjfTableDataset","rowspan","colspan","style","AjfChartDataset","options","datalabels","defineProperty","AjfReportRenderer","_reportInstance","reportInstance","_report","report","_cdr","markForCheck","Layout","PageBreak","Image","Text","Chart","Table","Map","Column","Formula","ImageContainer","EPI","Month","Year","AjfReportWidget","widgetType","AjfReportWidgetType","parseJsonObject","createWidget","visibility","AjfCondition","alwaysCondition","content","w","dataset","row","cell","labels","l","coordinate","AjfReportLayoutWidget","AjfReportPageBreakWidget","AjfReportImageWidget","AjfReportTextWidget","AjfReportChartWidget","AjfReportTableWidget","AjfReportMapWidget","AjfReportColumnWidget","AjfReportFormulaWidget","AjfReportImageContainerWidget","thisObj","styles","columns","_imageType","imageType","_icon","_flag","_url","icon","AjfImageType","Icon","flag","Flag","url","setUrl","imageUrl","setIcon","fontSet","fontIcon","setFlag","urls","flags","icons","_htmlText","htmlText","_formula","AjfReportDataWidget","type","cellStyles","tileLayer","attribution","disabled","AjfReportWidgetInstance","_widget","_visible","_content","_styles","_widgetType","widget","ts","AjfReportLayoutWidgetInstance","AjfReportImageWidgetInstance","AjfReportTextWidgetInstance","AjfReportTableWidgetInstance","AjfReportChartWidgetInstance","AjfReportMapWidgetInstance","AjfReportDataWidgetInstance","AjfReportFormulaWidgetInstance","AjfReportImageContainerWidgetInstance","initContext","_evaluateVisibility","_initInstance","_populateContent","hasContent","forEach","push","_context","_dataset","_populateData","getColumnContent","column","AjfReportColumnWidgetInstance","AjfReportPageBreakWidgetInstance","_icons","_flags","_urls","match","formulaRegEx","matches","exec","idx","len","reverse","m","calcValue","e","substr","_data","_recalc","rows","rowsNum","cellsNum","j","value","tslib_1.__assign","calcValues","undefined","slice","_recalcEvt","next","Subject","asObservable","_chartType","_translate","evaluatedfunction","isArray","rowValue","index","rowIndex","instant","_labels","_datasets","ds","ct","datasets","AjfReportContainerInstance","_container","c","_ts","reportWidget","subReportWidget","element","formulaToBeTranslate","container","AjfReportInstance","_header","_footer","_populateReport","_populateContainer","header","footer","AjfReportContainer","cw","AjfReport","_forms","forms","AjfReportWidgetRenderer","_imageTypes","_widgetInstance","widgetInstance","widgetTypes"],"mappings":"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"}