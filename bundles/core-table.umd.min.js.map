{"version":3,"sources":["src/core/core-table.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","table","ng","common","platformBrowser","this","common$1","AjfTable","_cdr","_domSanitizer","Object","defineProperty","prototype","get","_data","set","data","_fixData","markForCheck","enumerable","configurable","_cellpadding","cellpadding","_this","forEach","elem","subElem","value","bypassSecurityTrustHtml","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","styles","ctorParameters","ChangeDetectorRef","DomSanitizer","propDecorators","Input","AjfTableModule","NgModule","imports","AjfCommonModule","CommonModule","declarations"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,oBAAqBA,QAAQ,8BACzJ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,kBAAmB,CAAC,UAAW,kBAAmB,gBAAiB,mBAAoB,6BAA8BJ,GAC/IA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,KAAOT,EAAOQ,IAAIC,MAAQ,GAAIT,EAAOQ,IAAIC,KAAKC,MAAQ,IAAKV,EAAOW,GAAGC,OAAQZ,EAAOW,GAAGF,KAAMT,EAAOW,GAAGF,KAAKG,OAAQZ,EAAOW,GAAGE,iBAH/M,CAIEC,MAAM,SAAWZ,EAASU,EAAQH,EAAMM,EAAUF,GAAmB;;;;;;;;;;;;;;;;;;;;;OAuBnE,IAAIG,EAA0B,WAO1B,SAASA,EAASC,EAAMC,GACpBJ,KAAKG,KAAOA,EACZH,KAAKI,cAAgBA,EA+CzB,OA7CAC,OAAOC,eAAeJ,EAASK,UAAW,OAAQ,CAC9CC,IAAK,WAAc,OAAOR,KAAKS,OAC/BC,IAAK,SAAUC,GACXX,KAAKS,MAAQT,KAAKY,SAASD,GAC3BX,KAAKG,KAAKU,gBAEdC,YAAY,EACZC,cAAc,IAElBV,OAAOC,eAAeJ,EAASK,UAAW,cAAe,CACrDC,IAAK,WAAc,OAAOR,KAAKgB,cAC/BN,IAAK,SAAUO,GACXjB,KAAKgB,aAAeC,EACpBjB,KAAKG,KAAKU,gBAEdC,YAAY,EACZC,cAAc,IAElBb,EAASK,UAAUK,SAAW,SAAUD,GACpC,IAAIO,EAAQlB,KAMZ,OALCW,GAAQ,IAAIQ,SAAQ,SAAUC,IAC1BA,GAAQ,IAAID,SAAQ,SAAUE,GAC3BA,EAAQC,MAAQJ,EAAMd,cAAcmB,wBAAwBF,EAAQC,aAGrEX,GAEXT,EAASsB,WAAa,CAClB,CAAEC,KAAM9B,EAAK+B,UAAWC,KAAM,CAAC,CACnBC,SAAU,YACVC,SAAU,+TACVC,gBAAiBnC,EAAKoC,wBAAwBC,OAC9CC,cAAetC,EAAKuC,kBAAkBC,KACtCC,OAAQ,CAAC,UAIzBlC,EAASmC,eAAiB,WAAc,MAAO,CAC3C,CAAEZ,KAAM9B,EAAK2C,mBACb,CAAEb,KAAM1B,EAAgBwC,gBAE5BrC,EAASsC,eAAiB,CACtB7B,KAAM,CAAC,CAAEc,KAAM9B,EAAK8C,QACpBxB,YAAa,CAAC,CAAEQ,KAAM9B,EAAK8C,SAExBvC,EAxDkB,GAgFzBwC,EAAgC,WAChC,SAASA,KAgBT,OAdAA,EAAelB,WAAa,CACxB,CAAEC,KAAM9B,EAAKgD,SAAUhB,KAAM,CAAC,CAClBiB,QAAS,CACL3C,EAAS4C,gBACT/C,EAAOgD,cAEXC,aAAc,CACV7C,GAEJd,QAAS,CACLc,OAIbwC,EAjBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CnCtD,EAAQc,SAAWA,EACnBd,EAAQsD,eAAiBA,EAEzBrC,OAAOC,eAAelB,EAAS,aAAc,CAAEkC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@ajf/core/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/table', ['exports', '@angular/common', '@angular/core', '@ajf/core/common', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.table = {}), global.ng.common, global.ng.core, global.ng.core.common, global.ng.platformBrowser));\n}(this, (function (exports, common, core, common$1, platformBrowser) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTable = /** @class */ (function () {\n        /**\n         * Creates an instance of TableComponent.\n         *\n         *\n         * @memberOf TableComponent\n         */\n        function AjfTable(_cdr, _domSanitizer) {\n            this._cdr = _cdr;\n            this._domSanitizer = _domSanitizer;\n        }\n        Object.defineProperty(AjfTable.prototype, \"data\", {\n            get: function () { return this._data; },\n            set: function (data) {\n                this._data = this._fixData(data);\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfTable.prototype, \"cellpadding\", {\n            get: function () { return this._cellpadding; },\n            set: function (cellpadding) {\n                this._cellpadding = cellpadding;\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfTable.prototype._fixData = function (data) {\n            var _this = this;\n            (data || []).forEach(function (elem) {\n                (elem || []).forEach(function (subElem) {\n                    subElem.value = _this._domSanitizer.bypassSecurityTrustHtml(subElem.value);\n                });\n            });\n            return data;\n        };\n        AjfTable.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-table',\n                        template: \"<table *ngIf=\\\"data\\\">\\n  <tr *ngFor=\\\"let row of data\\\">\\n    <td *ngFor=\\\"let cell of row\\\"\\n        [applyStyles]=\\\"cell.style\\\"\\n        [ngStyle]=\\\"{'padding': cellpadding}\\\"\\n        [attr.colspan]=\\\"cell.colspan\\\"\\n        [attr.rowspan]=\\\"cell.rowspan\\\"\\n        [innerHTML]=\\\"cell.value\\\">\\n    </td>\\n  </tr>\\n</table>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTable.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef },\n            { type: platformBrowser.DomSanitizer }\n        ]; };\n        AjfTable.propDecorators = {\n            data: [{ type: core.Input }],\n            cellpadding: [{ type: core.Input }]\n        };\n        return AjfTable;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTableModule = /** @class */ (function () {\n        function AjfTableModule() {\n        }\n        AjfTableModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common$1.AjfCommonModule,\n                            common.CommonModule,\n                        ],\n                        declarations: [\n                            AjfTable,\n                        ],\n                        exports: [\n                            AjfTable,\n                        ]\n                    },] }\n        ];\n        return AjfTableModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfTable = AjfTable;\n    exports.AjfTableModule = AjfTableModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-table.umd.js.map\n"]}