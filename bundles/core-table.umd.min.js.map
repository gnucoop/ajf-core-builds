{"version":3,"sources":["src/core/core-table.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","table","common","ng","platformBrowser","this","common$1","AjfTableModule","AjfTable","_cdr","_domSanitizer","Object","defineProperty","prototype","get","_data","set","data","_fixData","markForCheck","enumerable","configurable","_cellpadding","cellpadding","_this","forEach","elem","subElem","value","bypassSecurityTrustHtml","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","styles","ctorParameters","ChangeDetectorRef","DomSanitizer","propDecorators","Input","NgModule","imports","AjfCommonModule","CommonModule","declarations"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,oBAAqBA,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,8BACzJ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,kBAAmB,CAAC,UAAW,mBAAoB,kBAAmB,gBAAiB,6BAA8BJ,GAC/IA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,KAAOT,EAAOQ,IAAIC,MAAQ,GAAIT,EAAOQ,IAAIC,KAAKC,MAAQ,IAAKV,EAAOQ,IAAIC,KAAKE,OAAQX,EAAOY,GAAGD,OAAQX,EAAOY,GAAGH,KAAMT,EAAOY,GAAGC,iBAHhN,CAIEC,MAAM,SAAWZ,EAASS,EAAQI,EAAUN,EAAMI,GAAmB;;;;;;;;;;;;;;;;;;;;;OAuBnE,IAmFIG,EAnFAC,EAA0B,WAO1B,SAASA,EAASC,EAAMC,GACpBL,KAAKI,KAAOA,EACZJ,KAAKK,cAAgBA,EAiCzB,OA/BAC,OAAOC,eAAeJ,EAASK,UAAW,OAAQ,CAC9CC,IAAK,WACD,OAAOT,KAAKU,OAEhBC,IAAK,SAAUC,GACXZ,KAAKU,MAAQV,KAAKa,SAASD,GAC3BZ,KAAKI,KAAKU,gBAEdC,YAAY,EACZC,cAAc,IAElBV,OAAOC,eAAeJ,EAASK,UAAW,cAAe,CACrDC,IAAK,WACD,OAAOT,KAAKiB,cAEhBN,IAAK,SAAUO,GACXlB,KAAKiB,aAAeC,EACpBlB,KAAKI,KAAKU,gBAEdC,YAAY,EACZC,cAAc,IAElBb,EAASK,UAAUK,SAAW,SAAUD,GACpC,IAAIO,EAAQnB,KAMZ,OALCY,GAAQ,IAAIQ,SAAQ,SAAUC,IAC1BA,GAAQ,IAAID,SAAQ,SAAUE,GAC3BA,EAAQC,MAAQJ,EAAMd,cAAcmB,wBAAwBF,EAAQC,aAGrEX,GAEJT,EA1CkB,GA4C7BA,EAASsB,WAAa,CAClB,CAAEC,KAAM/B,EAAKgC,UAAWC,KAAM,CAAC,CACnBC,SAAU,YACVC,SAAU,+TACVC,gBAAiBpC,EAAKqC,wBAAwBC,OAC9CC,cAAevC,EAAKwC,kBAAkBC,KACtCC,OAAQ,CAAC,UAGzBlC,EAASmC,eAAiB,WAAc,MAAO,CAC3C,CAAEZ,KAAM/B,EAAK4C,mBACb,CAAEb,KAAM3B,EAAgByC,gBAE5BrC,EAASsC,eAAiB,CACtB7B,KAAM,CAAC,CAAEc,KAAM/B,EAAK+C,QACpBxB,YAAa,CAAC,CAAEQ,KAAM/B,EAAK+C,UAwB3BxC,EACA,SAASA,OAIEuB,WAAa,CACxB,CAAEC,KAAM/B,EAAKgD,SAAUf,KAAM,CAAC,CAClBgB,QAAS,CACL/C,EAAOgD,gBACP5C,EAAS6C,cAEbC,aAAc,CACV5C,GAEJf,QAAS,CACLe;;;;;;;;;;;;;;;;;;;;;;AA+BpBf,EAAQe,SAAWA,EACnBf,EAAQc,eAAiBA,EAEzBI,OAAOC,eAAenB,EAAS,aAAc,CAAEmC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ajf/core/common'), require('@angular/common'), require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/table', ['exports', '@ajf/core/common', '@angular/common', '@angular/core', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.table = {}), global.ajf.core.common, global.ng.common, global.ng.core, global.ng.platformBrowser));\n}(this, (function (exports, common, common$1, core, platformBrowser) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTable = /** @class */ (function () {\n        /**\n         * Creates an instance of TableComponent.\n         *\n         *\n         * @memberOf TableComponent\n         */\n        function AjfTable(_cdr, _domSanitizer) {\n            this._cdr = _cdr;\n            this._domSanitizer = _domSanitizer;\n        }\n        Object.defineProperty(AjfTable.prototype, \"data\", {\n            get: function () {\n                return this._data;\n            },\n            set: function (data) {\n                this._data = this._fixData(data);\n                this._cdr.markForCheck();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTable.prototype, \"cellpadding\", {\n            get: function () {\n                return this._cellpadding;\n            },\n            set: function (cellpadding) {\n                this._cellpadding = cellpadding;\n                this._cdr.markForCheck();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfTable.prototype._fixData = function (data) {\n            var _this = this;\n            (data || []).forEach(function (elem) {\n                (elem || []).forEach(function (subElem) {\n                    subElem.value = _this._domSanitizer.bypassSecurityTrustHtml(subElem.value);\n                });\n            });\n            return data;\n        };\n        return AjfTable;\n    }());\n    AjfTable.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-table',\n                    template: \"<table *ngIf=\\\"data\\\">\\n  <tr *ngFor=\\\"let row of data\\\">\\n    <td *ngFor=\\\"let cell of row\\\"\\n        [applyStyles]=\\\"cell.style\\\"\\n        [ngStyle]=\\\"{'padding': cellpadding}\\\"\\n        [attr.colspan]=\\\"cell.colspan\\\"\\n        [attr.rowspan]=\\\"cell.rowspan\\\"\\n        [innerHTML]=\\\"cell.value\\\">\\n    </td>\\n  </tr>\\n</table>\\n\",\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    encapsulation: core.ViewEncapsulation.None,\n                    styles: [\"\\n\"]\n                },] }\n    ];\n    AjfTable.ctorParameters = function () { return [\n        { type: core.ChangeDetectorRef },\n        { type: platformBrowser.DomSanitizer }\n    ]; };\n    AjfTable.propDecorators = {\n        data: [{ type: core.Input }],\n        cellpadding: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTableModule = /** @class */ (function () {\n        function AjfTableModule() {\n        }\n        return AjfTableModule;\n    }());\n    AjfTableModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        common.AjfCommonModule,\n                        common$1.CommonModule,\n                    ],\n                    declarations: [\n                        AjfTable,\n                    ],\n                    exports: [\n                        AjfTable,\n                    ]\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfTable = AjfTable;\n    exports.AjfTableModule = AjfTableModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-table.umd.js.map\n"]}