{"version":3,"sources":["src/core/core-text.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","text","ng","common","ngxTranslate","platformBrowser","this","core$1","AjfTextModule","AjfTextComponent","_cdr","_domSanitizer","_ts","Object","defineProperty","prototype","set","htmlText","htmlTextToBeTranslate","trim","length","instant","_htmlText","bypassSecurityTrustHtml","markForCheck","enumerable","configurable","get","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","ctorParameters","ChangeDetectorRef","DomSanitizer","TranslateService","propDecorators","Input","NgModule","imports","CommonModule","TranslateModule","declarations","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,uBAAwBA,QAAQ,8BAC5J,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,CAAC,UAAW,kBAAmB,gBAAiB,sBAAuB,6BAA8BJ,GACjJA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,KAAOT,EAAOQ,IAAIC,MAAQ,GAAIT,EAAOQ,IAAIC,KAAKC,KAAO,IAAKV,EAAOW,GAAGC,OAAQZ,EAAOW,GAAGF,KAAMT,EAAOa,aAAaJ,KAAMT,EAAOW,GAAGG,iBAHjN,CAIEC,MAAM,SAAWb,EAASU,EAAQH,EAAMO,EAAQF,GAAmB;;;;;;;;;;;;;;;;;;;;;OA4BjE,IAkEIG,EAlEAC,EAAkC,WAClC,SAASA,EAAiBC,EAAMC,EAAeC,GAC3CN,KAAKI,KAAOA,EACZJ,KAAKK,cAAgBA,EACrBL,KAAKM,IAAMA,EAqBf,OAnBAC,OAAOC,eAAeL,EAAiBM,UAAW,WAAY,CAC1DC,IAAK,SAAUC,GAEX,IAAIC,EAAoC,MAAZD,GAAwC,iBAAbA,GAAyBA,EAASE,OAAOC,OAAS,EACrGd,KAAKM,IAAIS,QAAQJ,GACjBA,EACJX,KAAKgB,UAAYhB,KAAKK,cAAcY,wBAAwBL,GAC5DZ,KAAKI,KAAKc,gBAEdC,YAAY,EACZC,cAAc,IAElBb,OAAOC,eAAeL,EAAiBM,UAAW,YAAa,CAC3DY,IAAK,WACD,OAAOrB,KAAKgB,WAEhBG,YAAY,EACZC,cAAc,IAEXjB,EAzB0B,GA2BrCA,EAAiBmB,WAAa,CAC1B,CAAEC,KAAM7B,EAAK8B,UAAWC,KAAM,CAAC,CACnBC,SAAU,WACVC,SAAU,qFACVC,cAAelC,EAAKmC,kBAAkBC,KACtCC,gBAAiBrC,EAAKsC,wBAAwBC,OAC9CC,OAAQ,CAAC,ysBAGzB/B,EAAiBgC,eAAiB,WAAc,MAAO,CACnD,CAAEZ,KAAM7B,EAAK0C,mBACb,CAAEb,KAAMxB,EAAgBsC,cACxB,CAAEd,KAAMtB,EAAOqC,oBAEnBnC,EAAiBoC,eAAiB,CAC9B5B,SAAU,CAAC,CAAEY,KAAM7B,EAAK8C,UAwBxBtC,EACA,SAASA,OAICoB,WAAa,CACvB,CAAEC,KAAM7B,EAAK+C,SAAUhB,KAAM,CAAC,CAClBiB,QAAS,CACL7C,EAAO8C,aACP1C,EAAO2C,iBAEXC,aAAc,CACV1C,GAEJhB,QAAS,CACLgB;;;;;;;;;;;;;;;;;;;;;;AA+BpBhB,EAAQgB,iBAAmBA,EAC3BhB,EAAQe,cAAgBA,EAExBK,OAAOC,eAAerB,EAAS,aAAc,CAAE2D,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@ngx-translate/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/text', ['exports', '@angular/common', '@angular/core', '@ngx-translate/core', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.text = {}), global.ng.common, global.ng.core, global.ngxTranslate.core, global.ng.platformBrowser));\n}(this, (function (exports, common, core, core$1, platformBrowser) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * this component manages the report text\n     *\n     * @export\n     */\n    var AjfTextComponent = /** @class */ (function () {\n        function AjfTextComponent(_cdr, _domSanitizer, _ts) {\n            this._cdr = _cdr;\n            this._domSanitizer = _domSanitizer;\n            this._ts = _ts;\n        }\n        Object.defineProperty(AjfTextComponent.prototype, \"htmlText\", {\n            set: function (htmlText) {\n                // type checking and length checking for instant method\n                var htmlTextToBeTranslate = htmlText != null && typeof htmlText === 'string' && htmlText.trim().length > 0 ?\n                    this._ts.instant(htmlText) :\n                    htmlText;\n                this._htmlText = this._domSanitizer.bypassSecurityTrustHtml(htmlTextToBeTranslate);\n                this._cdr.markForCheck();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTextComponent.prototype, \"innerHTML\", {\n            get: function () {\n                return this._htmlText;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return AjfTextComponent;\n    }());\n    AjfTextComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-text',\n                    template: \"<div class=\\\"ajf-text-container\\\" *ngIf=\\\"innerHTML\\\" [innerHTML]=\\\"innerHTML\\\"></div>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-text .ajf-text-container{width:100%}ajf-text .ajf-text-container .ajf-ql-size-small{font-size:.75em}ajf-text .ajf-text-container .ajf-ql-size-large{font-size:1.5em}ajf-text .ajf-text-container .ajf-ql-size-huge{font-size:2.5em}ajf-text .ajf-text-container .ajf-ql-size-veryhuge{font-size:3.5em}ajf-text .ajf-text-container .ajf-ql-align-right{text-align:right}ajf-text .ajf-text-container .ajf-ql-align-center{text-align:center}ajf-text .ajf-text-container .ajf-ql-align-justify{text-align:justify}ajf-text .ajf-text-container h1,ajf-text .ajf-text-container h2,ajf-text .ajf-text-container h3,ajf-text .ajf-text-container h4,ajf-text .ajf-text-container h5,ajf-text .ajf-text-container h6{margin:0}\\n\"]\n                },] }\n    ];\n    AjfTextComponent.ctorParameters = function () { return [\n        { type: core.ChangeDetectorRef },\n        { type: platformBrowser.DomSanitizer },\n        { type: core$1.TranslateService }\n    ]; };\n    AjfTextComponent.propDecorators = {\n        htmlText: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTextModule = /** @class */ (function () {\n        function AjfTextModule() {\n        }\n        return AjfTextModule;\n    }());\n    AjfTextModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        common.CommonModule,\n                        core$1.TranslateModule,\n                    ],\n                    declarations: [\n                        AjfTextComponent,\n                    ],\n                    exports: [\n                        AjfTextComponent,\n                    ]\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfTextComponent = AjfTextComponent;\n    exports.AjfTextModule = AjfTextModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-text.umd.js.map\n"]}