{"version":3,"sources":["src/core/core-time.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","core","time","ng","rxjs","this","AjfTimeModel","_changed","EventEmitter","changed","_hours","_minutes","Object","defineProperty","prototype","get","set","value","emit","toString","enumerable","configurable","minutes","length","hours","fromString","splitted","split","parseInt","e","AjfTime","_this","_value","_onChangeCallback","_","_onTouchedCallback","_valueChangeSub","Subscription","EMPTY","subscribe","x","ngOnDestroy","unsubscribe","writeValue","registerOnChange","fn","registerOnTouched","focusHandler","decorators","type","Directive","ctorParameters","propDecorators","readonly","Input"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,SAChG,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,CAAC,UAAW,gBAAiB,QAASJ,GAClFA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,KAAOT,EAAOQ,IAAIC,MAAQ,GAAIT,EAAOQ,IAAIC,KAAKC,KAAO,IAAKV,EAAOW,GAAGF,KAAMT,EAAOY,MAHlK,CAIEC,MAAM,SAAWX,EAASO,EAAMG,GAAQ;;;;;;;;;;;;;;;;;;;;;OAuBtC,IAAIE,EAA8B,WAC9B,SAASA,IACLD,KAAKE,SAAW,IAAIN,EAAKO,aACzBH,KAAKI,QAAUJ,KAAKE,SACpBF,KAAKK,OAAS,EACdL,KAAKM,SAAW,EA4CpB,OA1CAC,OAAOC,eAAeP,EAAaQ,UAAW,UAAW,CACrDC,IAAK,WACD,OAAOV,KAAKM,UAEhBK,IAAK,SAAUC,GACPA,GAAS,GAAKA,EAAQ,KACtBZ,KAAKM,SAAWM,EAChBZ,KAAKE,SAASW,KAAKb,KAAKc,cAGhCC,YAAY,EACZC,cAAc,IAElBT,OAAOC,eAAeP,EAAaQ,UAAW,QAAS,CACnDC,IAAK,WACD,OAAOV,KAAKK,QAEhBM,IAAK,SAAUC,GACPA,GAAS,GAAKA,EAAQ,KACtBZ,KAAKK,OAASO,EACdZ,KAAKE,SAASW,KAAKb,KAAKc,cAGhCC,YAAY,EACZC,cAAc,IAElBf,EAAaQ,UAAUK,SAAW,WAC9B,IAAIG,EAAUjB,KAAKiB,QAAQH,WAAWI,OAAS,GAAKlB,KAAKiB,SAAW,IAAMjB,KAAKiB,QAE/E,OADYjB,KAAKmB,MAAML,WAAWI,OAAS,GAAKlB,KAAKmB,OAAS,IAAMnB,KAAKmB,OAC1D,IAAMF,GAEzBhB,EAAaQ,UAAUW,WAAa,SAAUR,GAC1C,IACI,IAAIS,EAAWT,EAAMU,MAAM,KACJ,GAAnBD,EAASH,SACTlB,KAAKmB,MAAQI,SAASF,EAAS,IAC/BrB,KAAKiB,QAAUM,SAASF,EAAS,KAGzC,MAAOG,MAGJvB,EAjDsB,GAyE7BwB,EAAyB,WACzB,SAASA,IACL,IAAIC,EAAQ1B,KACZA,KAAK2B,OAAS,IAAI1B,EAClBD,KAAK4B,kBAAoB,SAAUC,KACnC7B,KAAK8B,mBAAqB,aAC1B9B,KAAK+B,gBAAkBhC,EAAKiC,aAAaC,MACzCjC,KAAK+B,gBAAkB/B,KAAK2B,OAAOvB,QAAQ8B,WAAU,SAAUC,GAC3DT,EAAME,kBAAkBO,MA4DhC,OAzDA5B,OAAOC,eAAeiB,EAAQhB,UAAW,OAAQ,CAC7CC,IAAK,WACD,OAAOV,KAAK2B,QAEhBZ,YAAY,EACZC,cAAc,IAElBT,OAAOC,eAAeiB,EAAQhB,UAAW,QAAS,CAC9CC,IAAK,WACD,OAAOV,KAAK2B,OAAOb,YAEvBH,IAAK,SAAUC,GACPA,IAAUZ,KAAK2B,OAAOb,aACtBd,KAAK2B,OAAOP,WAAWR,GACvBZ,KAAK4B,kBAAkBhB,KAG/BG,YAAY,EACZC,cAAc,IAElBT,OAAOC,eAAeiB,EAAQhB,UAAW,QAAS,CAC9CC,IAAK,WACD,OAAOV,KAAK2B,OAAOR,OAEvBR,IAAK,SAAUQ,GACXnB,KAAK2B,OAAOR,MAAQA,EACpBnB,KAAK4B,kBAAkB5B,KAAK2B,OAAOb,aAEvCC,YAAY,EACZC,cAAc,IAElBT,OAAOC,eAAeiB,EAAQhB,UAAW,UAAW,CAChDC,IAAK,WACD,OAAOV,KAAK2B,OAAOV,SAEvBN,IAAK,SAAUM,GACXjB,KAAK2B,OAAOV,QAAUA,EACtBjB,KAAK4B,kBAAkB5B,KAAK2B,OAAOb,aAEvCC,YAAY,EACZC,cAAc,IAElBS,EAAQhB,UAAU2B,YAAc,WAC5BpC,KAAK+B,gBAAgBM,eAEzBZ,EAAQhB,UAAU6B,WAAa,SAAU1B,GACrCZ,KAAK2B,OAAOP,WAAWR,IAE3Ba,EAAQhB,UAAU8B,iBAAmB,SAAUC,GAC3CxC,KAAK4B,kBAAoBY,GAE7Bf,EAAQhB,UAAUgC,kBAAoB,SAAUD,GAC5CxC,KAAK8B,mBAAqBU,GAE9Bf,EAAQhB,UAAUiC,aAAe,WAC7B1C,KAAK8B,sBAEFL,EApEiB;;;;;;;;;;;;;;;;;;;;;OAsE5BA,EAAQkB,WAAa,CACjB,CAAEC,KAAMhD,EAAKiD,YAEjBpB,EAAQqB,eAAiB,WAAc,MAAO,IAC9CrB,EAAQsB,eAAiB,CACrBC,SAAU,CAAC,CAAEJ,KAAMhD,EAAKqD;;;;;;;;;;;;;;;;;;;;;;AA6B5B5D,EAAQoC,QAAUA,EAClBpC,EAAQY,aAAeA,EAEvBM,OAAOC,eAAenB,EAAS,aAAc,CAAEuB,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/time', ['exports', '@angular/core', 'rxjs'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.time = {}), global.ng.core, global.rxjs));\n}(this, (function (exports, core, rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTimeModel = /** @class */ (function () {\n        function AjfTimeModel() {\n            this._changed = new core.EventEmitter();\n            this.changed = this._changed;\n            this._hours = 0;\n            this._minutes = 0;\n        }\n        Object.defineProperty(AjfTimeModel.prototype, \"minutes\", {\n            get: function () {\n                return this._minutes;\n            },\n            set: function (value) {\n                if (value > -1 && value < 61) {\n                    this._minutes = value;\n                    this._changed.emit(this.toString());\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTimeModel.prototype, \"hours\", {\n            get: function () {\n                return this._hours;\n            },\n            set: function (value) {\n                if (value > -1 && value < 24) {\n                    this._hours = value;\n                    this._changed.emit(this.toString());\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfTimeModel.prototype.toString = function () {\n            var minutes = this.minutes.toString().length > 1 && this.minutes || \"0\" + this.minutes;\n            var hours = this.hours.toString().length > 1 && this.hours || \"0\" + this.hours;\n            return hours + \":\" + minutes;\n        };\n        AjfTimeModel.prototype.fromString = function (value) {\n            try {\n                var splitted = value.split(':');\n                if (splitted.length == 2) {\n                    this.hours = parseInt(splitted[0]);\n                    this.minutes = parseInt(splitted[1]);\n                }\n            }\n            catch (e) {\n            }\n        };\n        return AjfTimeModel;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTime = /** @class */ (function () {\n        function AjfTime() {\n            var _this = this;\n            this._value = new AjfTimeModel();\n            this._onChangeCallback = function (_) { };\n            this._onTouchedCallback = function () { };\n            this._valueChangeSub = rxjs.Subscription.EMPTY;\n            this._valueChangeSub = this._value.changed.subscribe(function (x) {\n                _this._onChangeCallback(x);\n            });\n        }\n        Object.defineProperty(AjfTime.prototype, \"time\", {\n            get: function () {\n                return this._value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTime.prototype, \"value\", {\n            get: function () {\n                return this._value.toString();\n            },\n            set: function (value) {\n                if (value !== this._value.toString()) {\n                    this._value.fromString(value);\n                    this._onChangeCallback(value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTime.prototype, \"hours\", {\n            get: function () {\n                return this._value.hours;\n            },\n            set: function (hours) {\n                this._value.hours = hours;\n                this._onChangeCallback(this._value.toString());\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfTime.prototype, \"minutes\", {\n            get: function () {\n                return this._value.minutes;\n            },\n            set: function (minutes) {\n                this._value.minutes = minutes;\n                this._onChangeCallback(this._value.toString());\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfTime.prototype.ngOnDestroy = function () {\n            this._valueChangeSub.unsubscribe();\n        };\n        AjfTime.prototype.writeValue = function (value) {\n            this._value.fromString(value);\n        };\n        AjfTime.prototype.registerOnChange = function (fn) {\n            this._onChangeCallback = fn;\n        };\n        AjfTime.prototype.registerOnTouched = function (fn) {\n            this._onTouchedCallback = fn;\n        };\n        AjfTime.prototype.focusHandler = function () {\n            this._onTouchedCallback();\n        };\n        return AjfTime;\n    }());\n    AjfTime.decorators = [\n        { type: core.Directive }\n    ];\n    AjfTime.ctorParameters = function () { return []; };\n    AjfTime.propDecorators = {\n        readonly: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfTime = AjfTime;\n    exports.AjfTimeModel = AjfTimeModel;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-time.umd.js.map\n"]}