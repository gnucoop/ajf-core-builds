{"version":3,"file":"core-utils.umd.min.js","sources":["../../src/core/utils/deep-copy.ts","../../src/core/utils/coerce-boolean-property.ts","../../src/core/utils/sized-enum-to-string-array.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nfunction functionSerializer(_: any, v: any): any {\n  if (typeof v === 'function') {\n    return v.toString().replace(/[\\r\\n]+/g, ' ');\n  }\n  return v;\n}\n\nfunction functionDeserializer(_: any, v: any): any {\n  if (typeof v === 'string' && /^function.*?\\([^\\0]*?\\)\\s*\\{.*\\}$/.test(v)) {\n    const argsMatch = v\n      .replace(/\\/\\/.*$|\\/\\*[\\s\\S]*?\\*\\//mg, '')\n      .match(/\\(.*?\\)/m);\n    if (argsMatch != null && argsMatch.length > 0) {\n      const args = argsMatch[0]\n        .replace(/^\\(|\\)$/, '')\n        .match(/[^\\s(),]+/g) || [];\n      const bodyMatch = v.match(/\\{(.*)\\}/);\n      if (bodyMatch != null && bodyMatch.length > 1) {\n        const body = bodyMatch[1];\n        const fx = args.concat(body);\n        return Function.apply(null, fx);\n      }\n    }\n  }\n  return v;\n}\n\nexport function deepCopy(oldObj: any): any {\n  return JSON.parse(\n    JSON.stringify(oldObj, functionSerializer),\n    functionDeserializer\n  );\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function sizedEnumToStringArray(x: any): string[] {\n  let options: string[] = [];\n  let optsNum = x.LENGTH;\n  for (let i = 0; i < optsNum; i++) {\n    options.push(x[i]);\n  }\n  return options;\n}\n"],"names":["functionSerializer","_","v","toString","replace","functionDeserializer","test","argsMatch","match","length","args","bodyMatch","body","fx","concat","Function","apply","value","oldObj","JSON","parse","stringify","x","options","optsNum","LENGTH","i","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;yQAsBA,SAASA,EAAmBC,EAAQC,GAClC,MAAiB,mBAANA,EACFA,EAAEC,WAAWC,QAAQ,WAAY,KAEnCF,EAGT,SAASG,EAAqBJ,EAAQC,GACpC,GAAiB,iBAANA,GAAkB,oCAAoCI,KAAKJ,GAAI,CAC5E,IAAUK,EAAYL,EACfE,QAAQ,6BAA8B,IACtCI,MAAM,YACT,GAAiB,MAAbD,GAAwC,EAAnBA,EAAUE,OAAY,CACnD,IAAYC,EAAOH,EAAU,GACpBH,QAAQ,UAAW,IACnBI,MAAM,eAAiB,GACpBG,EAAYT,EAAEM,MAAM,YAC1B,GAAiB,MAAbG,GAAwC,EAAnBA,EAAUF,OAAY,CACrD,IAAcG,EAAOD,EAAU,GACjBE,EAAKH,EAAKI,OAAOF,GACvB,OAAOG,SAASC,MAAM,KAAMH,KAIlC,OAAOX,0BCxBT,SAAsCe,GACpC,OAAgB,MAATA,GAAiB,GAAGA,GAAY,oBD0BzC,SAAyBC,GACvB,OAAOC,KAAKC,MACVD,KAAKE,UAAUH,EAAQlB,GACvBK,6BE9BJ,SAAuCiB,GAGrC,IAFF,IAAMC,EAAoB,GACpBC,EAAUF,EAAEG,OACPC,EAAI,EAAGA,EAAIF,EAASE,IAC3BH,EAAQI,KAAKL,EAAEI,IAEjB,OAAOH"}