{"version":3,"sources":["src/core/core-utils.umd.js"],"names":["global","factory","exports","module","define","amd","self","ajf","core","utils","this","functionSerializer","_","v","toString","replace","functionDeserializer","test","argsMatch","match","length","args","bodyMatch","fx","concat","Function","apply","deepCopy","oldObj","JSON","parse","stringify","sizedEnumToStringArray","x","options","optsNum","LENGTH","i","push","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,SACrD,mBAAXE,QAAyBA,OAAOC,IAAMD,OAAO,kBAAmB,CAAC,WAAYH,GAC1DA,IAAzBD,EAASA,GAAUM,MAAsBC,IAAMP,EAAOO,KAAO,GAAIP,EAAOO,IAAIC,KAAOR,EAAOO,IAAIC,MAAQ,GAAIR,EAAOO,IAAIC,KAAKC,MAAQ,KAHvI,CAIEC,MAAM,SAAWR,GAAW;;;;;;;;;;;;;;;;;;;;;OAuB1B,SAASS,EAAmBC,EAAGC,GAC3B,MAAiB,mBAANA,EACAA,EAAEC,WAAWC,QAAQ,WAAY,KAErCF,EAEX,SAASG,EAAqBJ,EAAGC,GAC7B,GAAiB,iBAANA,GAAkB,oCAAoCI,KAAKJ,GAAI,CACtE,IAAIK,EAAYL,EACXE,QAAQ,6BAA8B,IACtCI,MAAM,YACX,GAAiB,MAAbD,GAAqBA,EAAUE,OAAS,EAAG,CAC3C,IAAIC,EAAOH,EAAU,GAChBH,QAAQ,UAAW,IACnBI,MAAM,eAAiB,GACxBG,EAAYT,EAAEM,MAAM,YACxB,GAAiB,MAAbG,GAAqBA,EAAUF,OAAS,EAAG,CAC3C,IACIG,EAAKF,EAAKG,OADHF,EAAU,IAErB,OAAOG,SAASC,MAAM,KAAMH,KAIxC,OAAOV;;;;;;;;;;;;;;;;;;;;;;AA8DXX,EAAQyB,SA5DR,SAASA,EAASC,GACd,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,EAAQjB,GAAqBK;;;;;;;;;;;;;;;;;;;;;QA4DlEd,EAAQ8B,uBApCR,SAASA,EAAuBC,GAG5B,IAFA,IAAIC,EAAU,GACVC,EAAUF,EAAEG,OACPC,EAAI,EAAGA,EAAIF,EAASE,IACzBH,EAAQI,KAAKL,EAAEI,IAEnB,OAAOH,GAgCXK,OAAOC,eAAetC,EAAS,aAAc,CAAEuC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define('@ajf/core/utils', ['exports'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.core = global.ajf.core || {}, global.ajf.core.utils = {})));\n}(this, (function (exports) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function functionSerializer(_, v) {\n        if (typeof v === 'function') {\n            return v.toString().replace(/[\\r\\n]+/g, ' ');\n        }\n        return v;\n    }\n    function functionDeserializer(_, v) {\n        if (typeof v === 'string' && /^function.*?\\([^\\0]*?\\)\\s*\\{.*\\}$/.test(v)) {\n            var argsMatch = v\n                .replace(/\\/\\/.*$|\\/\\*[\\s\\S]*?\\*\\//mg, '')\n                .match(/\\(.*?\\)/m);\n            if (argsMatch != null && argsMatch.length > 0) {\n                var args = argsMatch[0]\n                    .replace(/^\\(|\\)$/, '')\n                    .match(/[^\\s(),]+/g) || [];\n                var bodyMatch = v.match(/\\{(.*)\\}/);\n                if (bodyMatch != null && bodyMatch.length > 1) {\n                    var body = bodyMatch[1];\n                    var fx = args.concat(body);\n                    return Function.apply(null, fx);\n                }\n            }\n        }\n        return v;\n    }\n    function deepCopy(oldObj) {\n        return JSON.parse(JSON.stringify(oldObj, functionSerializer), functionDeserializer);\n    }\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function sizedEnumToStringArray(x) {\n        var options = [];\n        var optsNum = x.LENGTH;\n        for (var i = 0; i < optsNum; i++) {\n            options.push(x[i]);\n        }\n        return options;\n    }\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.deepCopy = deepCopy;\n    exports.sizedEnumToStringArray = sizedEnumToStringArray;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-utils.umd.js.map\n"]}