{"version":3,"file":"calendar.js","sources":["../../../src/core/calendar/calendar.ts","../../../src/core/calendar/calendar-period.ts","../../../src/core/calendar/calendar-entry.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectorRef, EventEmitter, OnInit\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\nimport {Observable} from 'rxjs';\n\nimport {\n  addDays, addMonths, addWeeks, addYears, endOfDay, endOfISOWeek, endOfMonth, endOfWeek, endOfYear,\n  format, isAfter, isBefore, isSameDay, parse, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears\n} from 'date-fns';\n\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod | null;\n}\n\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  set viewDate(viewDate: Date) { this._setViewDate(viewDate); }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode { return this._viewMode; }\n  set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType { return this._selectionMode; }\n  set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  set isoMode(isoMode: boolean) { this._isoMode = isoMode; }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  get change(): Observable<AjfCalendarChange> {\n    return this._change.asObservable();\n  }\n\n  private _selectedPeriod: AjfCalendarPeriod | null;\n  private set selectedPeriod(period: AjfCalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n  }\n\n  get value(): AjfCalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  set value(period: AjfCalendarPeriod | Date | null) {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      if (period instanceof Date &&\n        (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)) {\n        this.selectedPeriod = {\n          type: 'day',\n          startDate: period,\n          endDate: period\n        };\n        this._onChangeCallback(period);\n      }\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n  }\n\n  get calendarRows(): AjfCalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n  get weekDays(): string[] { return this._weekDays; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _weekDays: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n\n  prevPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = subMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = subYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    if (this._viewMode == 'month') {\n      this.viewDate = addMonths(this.viewDate, 1);\n    } else if (this._viewMode == 'year') {\n      this.viewDate = addYears(this.viewDate, 1);\n    }\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod | null = null;\n    if (this._isEntrySelected(entry) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._getMonthStartEnd(entry.date);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  // tslint:disable-next-line\n  private _onTouchedCallback: (_: any) => void = (_: any) => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _getMonthStartEnd(date: Date): { start: Date, end: Date } {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n    if (this._isoMode) {\n      const startWeekDay = startDate.getDay();\n      const endWeekDay = endDate.getDay();\n      if (startWeekDay == 0 || startWeekDay > 4) {\n        startDate = addWeeks(startDate, 1);\n      }\n      if (endWeekDay > 0 && endWeekDay < 4) {\n        endDate = subWeeks(endDate, 1);\n      }\n      startDate = startOfISOWeek(startDate);\n      endDate = endOfISOWeek(endDate);\n    }\n    return { start: startDate, end: endDate };\n  }\n\n  private _buildCalendar(): void {\n    if (this._viewMode == 'month') {\n      this._buildMonthView();\n    } else if (this._viewMode == 'year') {\n      this._buildYearView();\n    } else if (this._viewMode == 'decade') {\n      this._buildDecadeView();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _buildDecadeView(): void {\n    let curYear: number = this._viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let lastYear = firstYear + 11;\n\n    this._viewHeader = `${firstYear} - ${lastYear}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new AjfCalendarEntry({\n          type: 'year',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildYearView(): void {\n    this._viewHeader = `${this._viewDate.getFullYear()}`;\n\n    let curDate: Date = startOfYear(this._viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry = new AjfCalendarEntry({\n          type: 'month',\n          date: date,\n          selected: 'none'\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthView(): void {\n    this._viewHeader = format(this._viewDate, 'MMM YYYY');\n\n    this._buildMonthViewWeekDays();\n    const monthBounds = this._getMonthStartEnd(this._viewDate);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!this._isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    let minDate = this.minDate == null ? null : new Date(this.minDate);\n    let maxDate = this.maxDate == null ? null : new Date(this.maxDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = new AjfCalendarEntry({\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'YYYY-MM-DD') === format(curDate, 'YYYY-MM-DD'),\n          disabled: disabled\n        });\n        newEntry.selected = this._isEntrySelected(newEntry);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    this._calendarRows = rows;\n  }\n\n  private _buildMonthViewWeekDays(): void {\n    let curDate: Date;\n    if (this._isoMode) {\n      curDate = setISODay(startOfWeek(this._viewDate), 1);\n    } else {\n      curDate = startOfWeek(this._viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'dddd'));\n      curDate = addDays(curDate, 1);\n    }\n    this._weekDays = weekDayNames;\n    this._cdr.markForCheck();\n  }\n\n  private _periodOrder(entryType: AjfCalendarPeriodType): number {\n    return ['day', 'week', 'month', 'year'].indexOf(entryType);\n  }\n\n  private _isEntrySelected(entry: AjfCalendarEntry): AjfCalendarEntrySelectedState {\n    if (\n      this._selectedPeriod != null && this._selectedPeriod.startDate != null &&\n      this._selectedPeriod.endDate != null\n    ) {\n      let selectionStart: Date = startOfDay(this._selectedPeriod.startDate);\n      let selectionEnd: Date = endOfDay(this._selectedPeriod.endDate);\n      let selectionPeriodOrder: number = this._periodOrder(this._selectedPeriod.type);\n\n      let entryPeriodOrder: number = this._periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = entry.getRange();\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        this._isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        this._isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        this._isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        this._isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  private _isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n    return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._isEntrySelected(entry);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {format, endOfMonth, endOfYear, startOfMonth, startOfYear} from 'date-fns';\n\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarEntryType} from './calendar-entry-type';\n\nexport class AjfCalendarEntry {\n  type: AjfCalendarEntryType;\n  date: Date;\n  selected: AjfCalendarEntrySelectedState;\n  disabled = false;\n  highlight = false;\n\n  constructor(params: {\n    type: AjfCalendarEntryType,\n    date: Date,\n    selected: AjfCalendarEntrySelectedState,\n    highlight?: boolean,\n    disabled?: boolean\n  }) {\n    let keys = Object.keys(params);\n\n    this.type = params.type;\n    this.date = params.date;\n    this.selected = params.selected;\n    if (keys.indexOf('disabled') > -1) {\n      this.disabled = params.disabled!;\n    }\n    if (keys.indexOf('highlight') > -1) {\n      this.highlight = params.highlight!;\n    }\n  }\n\n  toString(): string {\n    if (this.type === 'day') {\n      return `${this.date.getDate()}`;\n    }\n    if (this.type === 'month') {\n      return format(this.date, 'MMM');\n    }\n    return `${this.date.getFullYear()}`;\n  }\n\n  getRange(): { start: Date, end: Date } {\n    if (this.type === 'day') {\n      return { start: new Date(this.date), end: new Date(this.date) };\n    } else {\n      let curDate: Date = new Date(this.date);\n      return {\n        start: this.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: this.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n}\n"],"names":[],"mappings":"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"}