{"version":3,"file":"checkbox-group.js","sources":["../../../src/core/checkbox-group/checkbox-group-module.ts","../../../src/core/checkbox-group/checkbox-group.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AjfCheckboxGroup} from './checkbox-group';\n\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  declarations: [\n    AjfCheckboxGroup\n  ],\n  exports: [\n    AjfCheckboxGroup\n  ]\n})\nexport class AjfCheckboxGroupModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, Directive, EventEmitter, Input, forwardRef, OnInit, Output, QueryList\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {combineLatest, BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\n\n\nexport const AJF_CHECKBOX_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AjfCheckboxGroup),\n  multi: true\n};\n\nexport class AjfCheckboxGroupItemChange<T> {\n  source: AjfCheckboxGroupItem<T>;\n  value: any;\n}\n\nexport class AjfCheckboxGroupChange<T> {\n  source: AjfCheckboxGroup<T>;\n  value: any;\n}\n\nlet _uniqueIdCounter = 0;\n\n\n@Directive({\n  selector: 'ajf-checkbox-group,[ajf-checkbox-group]',\n  providers: [AJF_CHECKBOX_GROUP_VALUE_ACCESSOR]\n})\nexport class AjfCheckboxGroup<T> implements AfterContentInit, ControlValueAccessor {\n  /** Child button toggle buttons. */\n  checkboxes: QueryList<AjfCheckboxGroupItem<T>>;\n\n  /** The value for the button toggle group. Should match currently selected button toggle. */\n  private _value: T[] = [];\n  get value(): T[] { return this._value; }\n  @Input() set value(newValue: T[]) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n      this._updateSelectedCheckboxesFromValue();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** The HTML name attribute applied to toggles in this group. */\n  private _name: string;\n  get name(): string { return this._name; }\n  @Input() set name(value: string) {\n    this._name = value;\n    this._updateCheckboxesNames();\n  }\n\n  /** Disables all toggles in the group. */\n  private _disabled:  boolean = false;\n  get disabled(): boolean { return this._disabled; }\n  @Input() set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** The currently selected button toggle, should match the value. */\n  private _selected: AjfCheckboxGroupItem<T>[] = [];\n  get selected() { return this._selected; }\n  set selected(selected: AjfCheckboxGroupItem<T>[]) {\n    this._selected = selected;\n    let values: T[] = [];\n    if (selected) {\n      selected.forEach(c => {\n        values.push(c.value);\n        if (!c.checked) {\n          c.checked = true;\n        }\n      });\n    }\n    this._value = values;\n  }\n\n  /** Event emitted when the group's value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupChange<T>> =\n    new EventEmitter<AjfCheckboxGroupChange<T>>();\n    @Output() readonly change: Observable<AjfCheckboxGroupChange<T>> = this._change.asObservable();\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: T[]) {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: T[]) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  addValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    if (curValue.indexOf(value) === -1) {\n      curValue.push(value);\n      this.value = curValue;\n    }\n  }\n\n  removeValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    let idx = curValue.indexOf(value);\n    if (idx > -1) {\n      curValue.splice(idx, 1);\n      this.value = curValue;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._updateCheckboxesNames();\n    this._updateSelectedCheckboxesFromValue();\n  }\n\n  /** The method to be called in order to update ngModel. */\n  private _controlValueAccessorChangeFn: (value: any) => void = (_) => {};\n\n  private _updateCheckboxesNames(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach((checkbox) => {\n      checkbox.name = this._name;\n    });\n  }\n\n  private _updateSelectedCheckboxesFromValue(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach(checkbox => {\n      if ((this._value || []).indexOf(checkbox.value) > -1) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    });\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  private _emitChangeEvent(): void {\n    let event = new AjfCheckboxGroupChange<T>();\n    event.source = this;\n    event.value = this._value;\n    this._controlValueAccessorChangeFn(event.value);\n    this._change.emit(event);\n  }\n}\n\nexport class AjfCheckboxGroupItem<T> implements OnInit {\n  /** The unique ID for this button toggle. */\n  private _checkboxId: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  readonly checkboxId: Observable<string> = this._checkboxId.asObservable();\n\n  set id(id: string) { this._checkboxId.next(id); }\n\n  name: string;\n\n  /** The parent button toggle group (exclusive selection). Optional. */\n  readonly checkboxGroup: AjfCheckboxGroup<T>;\n\n  /** Whether or not this button toggle is checked. */\n  private _checkedState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly checkedState: Observable<boolean> = this._checkedState.asObservable();\n  get checked(): boolean { return this._checkedState.getValue(); }\n  set checked(checked: boolean) { this._checkedState.next(checked); }\n\n  /** Whether or not this button toggle is disabled. */\n  private _disabledState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly disabledState: Observable<boolean> = this._disabledState.asObservable();\n  get disabled(): boolean {\n    const disabled = this._disabledState.getValue();\n    return disabled || (this.checkboxGroup != null && this.checkboxGroup.disabled);\n  }\n  set disabled(disabled: boolean) {\n    this._disabledState.next(disabled != null && disabled !== false);\n  }\n\n  /** Value assigned to this button toggle. */\n  private _value: T;\n  get value(): T { return this._value; }\n  set value(value: T) {\n    if (this._value !== value) {\n      this._value = value;\n    }\n  }\n\n  private _checkedIconVal: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  get checkedIcon(): string { return this._checkedIconVal.getValue(); }\n  set checkedIcon(icon: string) { this._checkedIconVal.next(icon); }\n\n  private _notCheckedIconVal: BehaviorSubject<string> =\n      new BehaviorSubject<string>('');\n  get notCheckedIcon(): string { return this._notCheckedIconVal.getValue(); }\n  set notCheckedIcon(icon: string) { this._notCheckedIconVal.next(icon); }\n\n  readonly icon: Observable<string>;\n\n  /** Event emitted when the group value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupItemChange<T>>\n    = new EventEmitter<AjfCheckboxGroupItemChange<T>>();\n  readonly change: Observable<AjfCheckboxGroupItemChange<T>> = this._change.asObservable();\n\n  constructor(checkboxGroup?: AjfCheckboxGroup<T>) {\n    this.icon = combineLatest(\n      this._checkedState, this._checkedIconVal, this._notCheckedIconVal\n    ).pipe(\n      map(r => r[0] ? r[1] : r[2])\n    );\n\n    if (checkboxGroup) {\n      this.checkboxGroup = checkboxGroup;\n    }\n  }\n\n  ngOnInit() {\n    if (this.id == null) {\n      this.id = `ajf-checkbox-group-item-${_uniqueIdCounter++}`;\n    }\n\n    if (\n      this.checkboxGroup && this.checkboxGroup.value &&\n      this.checkboxGroup.value.indexOf(this._value) > -1\n    ) {\n      this.checked = true;\n    }\n  }\n\n  /** Checks the button toggle due to an interaction with the underlying native input. */\n  onInputChange(event: Event) {\n    event.stopPropagation();\n\n    this._toggle();\n  }\n\n  /** Toggle the state of the current button toggle. */\n  private _toggle(): void {\n    this.checked = !this.checked;\n\n    if (this.checkboxGroup != null) {\n      if (this.checked) {\n        this.checkboxGroup.addValue(this._value);\n      } else {\n        this.checkboxGroup.removeValue(this._value);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}