{"version":3,"file":"forms.js","sources":["../../../src/core/forms/utils/warning/not-empty-warning.ts","../../../src/core/forms/utils/validation/not-empty-validation.ts","../../../src/core/forms/utils/validation/min-validation.ts","../../../src/core/forms/utils/validation/min-digits-validation.ts","../../../src/core/forms/utils/validation/max-validation.ts","../../../src/core/forms/utils/validation/max-digits-validation.ts","../../../src/core/forms/utils/forms/create-form.ts","../../../src/core/forms/utils/fields/is-number-field.ts","../../../src/core/forms/utils/choices/is-choices-fixed-origin.ts","../../../src/core/forms/utils/choices/is-choices-origin.ts","../../../src/core/forms/utils/choices/init-choices-origin.ts","../../../src/core/forms/utils/choices/create-choices-promise-origin.ts","../../../src/core/forms/utils/choices/create-choices-observable-origin.ts","../../../src/core/forms/utils/choices/create-choices-observable-array-origin.ts","../../../src/core/forms/utils/choices/create-choices-function-origin.ts","../../../src/core/forms/utils/choices/create-choices-fixed-origin.ts","../../../src/core/forms/interface/choices/choices-type.ts","../../../src/core/forms/interface/attachments/attachments-type.ts","../../../src/core/forms/serializers/form-serializer.ts","../../../src/core/forms/serializers/node-serializer.ts","../../../src/core/forms/serializers/warning-group-serializer.ts","../../../src/core/forms/serializers/validation-group-serializer.ts","../../../src/core/forms/utils/slides/create-slide.ts","../../../src/core/forms/utils/slides/create-repeating-slide.ts","../../../src/core/forms/utils/nodes/create-node-group.ts","../../../src/core/forms/utils/nodes/create-repeating-node.ts","../../../src/core/forms/utils/nodes/create-container-node.ts","../../../src/core/forms/utils/fields/create-field-with-choices.ts","../../../src/core/forms/serializers/choices-origin-serializer.ts","../../../src/core/forms/utils/choices/create-choices-origin.ts","../../../src/core/forms/serializers/attachments-origin-serializer.ts","../../../src/core/forms/utils/attachments/create-attachments-origin.ts","../../../src/core/forms/search-alert-threshold.ts","../../../src/core/forms/input-field.ts","../../../src/core/forms/get-type-name.ts","../../../src/core/forms/forms-module.ts","../../../src/core/forms/valid-slide.ts","../../../src/core/forms/table-visible-columns.ts","../../../src/core/forms/table-row-class.ts","../../../src/core/forms/range.ts","../../../src/core/forms/node-complete-name.ts","../../../src/core/forms/is-repeating-slide.ts","../../../src/core/forms/increment.ts","../../../src/core/forms/expand-input-with-choices.ts","../../../src/core/forms/bool-to-int.ts","../../../src/core/forms/form.ts","../../../src/core/forms/form-renderer.ts","../../../src/core/forms/validation-service.ts","../../../src/core/forms/utils/slides-instances/valid-slide.ts","../../../src/core/forms/utils/slides-instances/update-reps-num.ts","../../../src/core/forms/utils/nodes/ordered-nodes.ts","../../../src/core/forms/utils/nodes/flatten-nodes.ts","../../../src/core/forms/utils/nodes-instances/node-to-node-instance.ts","../../../src/core/forms/utils/nodes-instances/is-repeating-slide-instance.ts","../../../src/core/forms/utils/nodes/is-repeating-slide.ts","../../../src/core/forms/utils/nodes-instances/get-instance-warnings.ts","../../../src/core/forms/utils/nodes-instances/get-instance-warning.ts","../../../src/core/forms/utils/warning/create-warning.ts","../../../src/core/forms/utils/nodes-instances/get-instance-validations.ts","../../../src/core/forms/utils/nodes-instances/get-instance-validation.ts","../../../src/core/forms/utils/validation/create-validation.ts","../../../src/core/forms/utils/nodes-instances/get-instance-formula.ts","../../../src/core/forms/utils/nodes-instances/get-instance-conditions.ts","../../../src/core/forms/utils/nodes-instances/get-instance-condition.ts","../../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes-names.ts","../../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes.ts","../../../src/core/forms/utils/nodes/is-repeating-container-node.ts","../../../src/core/forms/utils/warning/create-warning-group.ts","../../../src/core/forms/utils/validation/create-validation-group.ts","../../../src/core/forms/utils/slides-instances/create-repeating-slide-instance.ts","../../../src/core/forms/utils/slides-instances/create-slide-instance.ts","../../../src/core/forms/utils/nodes-instances/create-node-group-instance.ts","../../../src/core/forms/utils/fields-instances/create-table-field-instance.ts","../../../src/core/forms/utils/fields-instances/create-field-with-choices-instance.ts","../../../src/core/forms/utils/fields-instances/create-field-instance.ts","../../../src/core/forms/utils/nodes-instances/create-node-instance.ts","../../../src/core/forms/utils/nodes-instances/is-slide-instance.ts","../../../src/core/forms/utils/nodes/is-slide-node.ts","../../../src/core/forms/utils/nodes-instances/is-node-group-instance.ts","../../../src/core/forms/utils/nodes/is-node-group.ts","../../../src/core/forms/utils/nodes-instances/flatten-nodes-instances-tree.ts","../../../src/core/forms/utils/nodes-instances/is-slides-instance.ts","../../../src/core/forms/utils/nodes-instances/flatten-nodes-instances.ts","../../../src/core/forms/utils/nodes-instances/is-container-node-instance.ts","../../../src/core/forms/utils/nodes/is-container-node.ts","../../../src/core/forms/utils/nodes/is-slides-node.ts","../../../src/core/forms/utils/fields/create-field.ts","../../../src/core/forms/utils/nodes/create-node.ts","../../../src/core/forms/utils/fields-instances/update-trigger-conditions.ts","../../../src/core/forms/utils/fields-instances/update-filtered-choices.ts","../../../src/core/forms/utils/fields-instances/update-field-instance-state.ts","../../../src/core/forms/utils/fields-instances/update-warning.ts","../../../src/core/forms/utils/warning/evaluate-warning-group.ts","../../../src/core/forms/utils/warning/evaluate-warning-conditions.ts","../../../src/core/forms/utils/warning/evaluate-warning.ts","../../../src/core/forms/utils/fields-instances/update-validation.ts","../../../src/core/forms/utils/validation/evaluate-validation-group.ts","../../../src/core/forms/utils/validation/evaluate-validation-not-empty.ts","../../../src/core/forms/utils/validation/evaluate-validation-min-value.ts","../../../src/core/forms/utils/validation/evaluate-validation-min-digits.ts","../../../src/core/forms/utils/validation/evaluate-validation-max-value.ts","../../../src/core/forms/utils/validation/evaluate-validation-max-digits.ts","../../../src/core/forms/utils/validation/evaluate-validation-conditions.ts","../../../src/core/forms/utils/validation/evaluate-validation.ts","../../../src/core/forms/utils/fields-instances/update-next-slide-condition.ts","../../../src/core/forms/utils/fields-instances/update-formula.ts","../../../src/core/forms/utils/nodes-instances/node-instance-complete-name.ts","../../../src/core/forms/utils/nodes-instances/node-instance-suffix.ts","../../../src/core/forms/utils/nodes-instances/update-visibility.ts","../../../src/core/forms/utils/nodes-instances/update-conditional-branches.ts","../../../src/core/forms/utils/fields-instances/is-table-field-instance.ts","../../../src/core/forms/utils/fields/is-table-field.ts","../../../src/core/forms/utils/fields-instances/is-field-with-choices-instance.ts","../../../src/core/forms/utils/nodes-instances/is-field-instance.ts","../../../src/core/forms/utils/nodes/is-field.ts","../../../src/core/forms/utils/fields/is-field-with-choices.ts","../../../src/core/forms/utils/fields/is-custom-field-with-choices.ts","../../../src/core/forms/interface/nodes/node-type.ts","../../../src/core/forms/field-with-choices.ts","../../../src/core/forms/field-service.ts","../../../src/core/forms/utils/fields/fields-map.ts","../../../src/core/forms/field-host.ts","../../../src/core/forms/field.ts","../../../src/core/forms/field-is-valid.ts","../../../src/core/forms/field-icon.ts","../../../src/core/forms/field-utils.ts","../../../src/core/forms/interface/fields/field-type.ts","../../../src/core/forms/errors.ts","../../../src/core/forms/date-value-string.ts","../../../src/core/forms/date-value.ts","../../../src/core/forms/base-field.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from './create-warning';\n\nexport function notEmptyWarning(): AjfWarning {\n  return createWarning({condition: 'notEmpty($value)', warningMessage: 'Value must not be empty'});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function notEmptyValidation(): AjfValidation {\n  return createValidation({condition: `notEmpty($value)`, errorMessage: `Value must not be empty`});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + minValue.toString(),\n    errorMessage: 'Value must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function minDigitsValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + minValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value <= ' + maxValue.toString(),\n    errorMessage: 'Value must be <= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\nexport function maxDigitsValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length <= ${maxValue.toString()} : false`,\n    errorMessage: 'Digits count must be <= ' + maxValue.toString()\n  });\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '../../interface/forms/form';\nimport {AjfFormStringIdentifier} from '../../interface/forms/form-string-identifier';\n\nexport type AjfFormCreate = Partial<AjfForm>;\n\nexport function createForm(form: AjfFormCreate = {}): AjfForm {\n  return {\n    nodes: form.nodes || [],\n    choicesOrigins: form.choicesOrigins || [],\n    attachmentsOrigins: form.attachmentsOrigins || [],\n    initContext: form.initContext || {},\n    stringIdentifier: form.stringIdentifier || [] as AjfFormStringIdentifier[],\n    supplementaryInformations: form.supplementaryInformations,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isNumberField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {isChoicesOrigin} from './is-choices-origin';\n\nexport function isChoicesFixedOrigin(origin: AjfChoicesOrigin<any>): boolean {\n  return isChoicesOrigin(origin) && origin.type === 'fixed';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function isChoicesOrigin(co: any): boolean {\n  return co != null\n    && typeof co === 'object'\n    && co.name != null\n    && typeof co.name === 'string'\n    && co.label != null\n    && typeof co.label === 'string'\n    && ['fixed', 'promise', 'observable', 'observableArray', 'function'].indexOf(co.type) > -1\n    && co.choices instanceof Array;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\n\nexport function initChoicesOrigin(origin: AjfChoicesOrigin<any>): Promise<void> {\n  if (origin.type === 'fixed') {\n    return Promise.resolve();\n  }\n  if (origin.type === 'function') {\n    const fo = origin as AjfChoicesFunctionOrigin<any>;\n    fo.choices = fo.generator();\n    return Promise.resolve();\n  }\n  if (origin.type === 'promise') {\n    const po = origin as AjfChoicesPromiseOrigin<any>;\n    return po.generator.then(choices => po.choices = choices).then();\n  }\n  if (origin.type === 'observable') {\n    const obso = origin as AjfChoicesObservableOrigin<any>;\n    if (obso.generator != null) {\n      obso.choices = [];\n      return new Promise<void>(res => {\n        obso.generator.subscribe(\n          c => obso.choices.push(c),\n          () => {},\n          () => res(),\n        );\n      });\n    }\n  }\n  if (origin.type === 'observableArray') {\n    const aoo = origin as AjfChoicesObservableArrayOrigin<any>;\n    if (aoo.generator != null) {\n      aoo.choices = [];\n      return new Promise<void>(res => {\n        aoo.generator.subscribe(\n          choices => {\n            aoo.choices = choices;\n            res();\n          }\n        );\n      });\n    }\n  }\n  return Promise.resolve();\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesPromiseOrigin\n} from '../../interface/choices/choices-promise-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesPromiseOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesPromiseOrigin<T>, 'generator'>\n  &Partial<AjfChoicesPromiseOrigin<T>>;\n\nexport function createChoicesPromiseOrigin<T>(\n  origin: AjfChoicesPromiseOriginCreate<T>\n): AjfChoicesPromiseOrigin<T> {\n  return {\n    ...origin,\n    type: 'promise',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableOrigin<T>>;\n\nexport function createChoicesObservableOrigin<T>(\n  origin: AjfChoicesObservableOriginCreate<T>\n): AjfChoicesObservableOrigin<T> {\n  return {\n    ...origin,\n    type: 'observable',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesObservableArrayOrigin\n} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableArrayOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesObservableArrayOrigin<T>, 'generator'>\n  &Partial<AjfChoicesObservableArrayOrigin<T>>;\n\nexport function createChoicesObservableArrayOrigin<T>(\n  origin: AjfChoicesObservableArrayOriginCreate<T>\n): AjfChoicesObservableArrayOrigin<T> {\n  return {\n    ...origin,\n    type: 'observableArray',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesFunctionOriginCreate<T> =\n  Omit<AjfChoicesOriginCreate<T>, 'type'>&Pick<AjfChoicesFunctionOrigin<T>, 'generator'>\n  &Partial<AjfChoicesFunctionOrigin<T>>;\n\nexport function createChoicesFunctionOrigin<T>(\n  origin: AjfChoicesFunctionOriginCreate<T>\n): AjfChoicesFunctionOrigin<T> {\n  return {\n    ...origin,\n    type: 'function',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from '../../interface/choices/choices-fixed-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from './create-choices-origin';\n\nexport type AjfChoicesFixedOriginCreate<T> =\n    Omit<AjfChoicesOriginCreate<T>, 'type'>&Partial<AjfChoicesFixedOrigin<T>>;\n\nexport function createChoicesFixedOrigin<T = string | number>(\n    origin: AjfChoicesFixedOriginCreate<T>): AjfChoicesFixedOrigin<T> {\n  const type = 'fixed';\n  return {...createChoicesOrigin({...origin, type}), type};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfAttachmentsOriginSerializer} from './attachments-origin-serializer';\nimport {AjfChoicesOriginSerializer} from './choices-origin-serializer';\nimport {AjfNodeSerializer} from './node-serializer';\n\nexport class AjfFormSerializer {\n  static fromJson(form: Partial<AjfForm>, context?: AjfContext): AjfForm {\n    const choicesOrigins =\n        (form.choicesOrigins || []).map(c => AjfChoicesOriginSerializer.fromJson(c));\n    const attachmentsOrigins =\n        (form.attachmentsOrigins || []).map(a => AjfAttachmentsOriginSerializer.fromJson(a));\n    const nodes =\n        (form.nodes || [])\n            .map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins)) as (\n            AjfRepeatingSlide | AjfSlide)[];\n    return {\n      ...form,\n      choicesOrigins,\n      attachmentsOrigins,\n      nodes,\n      stringIdentifier: form.stringIdentifier || [],\n      initContext: deepCopy(context || {}),\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../interface/fields/field-with-choices';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfContainerNode} from '../interface/nodes/container-node';\nimport {AjfNode} from '../interface/nodes/node';\nimport {AjfNodeGroup} from '../interface/nodes/node-group';\nimport {AjfFieldNodeLink} from '../interface/nodes/node-link';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingNode} from '../interface/nodes/repeating-node';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {componentsMap} from '../utils/fields/fields-map';\nimport {AjfFieldCreate, createField} from '../utils/fields/create-field';\nimport {createFieldWithChoices} from '../utils/fields/create-field-with-choices';\nimport {createContainerNode} from '../utils/nodes/create-container-node';\nimport {AjfNodeCreate, createNode} from '../utils/nodes/create-node';\nimport {createNodeGroup} from '../utils/nodes/create-node-group';\nimport {createRepeatingNode} from '../utils/nodes/create-repeating-node';\nimport {createRepeatingSlide} from '../utils/slides/create-repeating-slide';\nimport {createSlide} from '../utils/slides/create-slide';\n\nimport {AjfValidationGroupSerializer} from './validation-group-serializer';\nimport {AjfWarningGroupSerializer} from './warning-group-serializer';\n\nexport class AjfNodeSerializer {\n  static fromJson(\n      json: Partial<AjfNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNode {\n    const err = 'Malformed node';\n    json.name = json.name || '';\n    if (json.id == null || json.parent == null || json.nodeType == null) {\n      throw new Error(err);\n    }\n    const obj = json as AjfNodeCreate;\n    if (obj.visibility) {\n      obj.visibility = AjfConditionSerializer.fromJson(obj.visibility);\n    }\n    obj.conditionalBranches =\n        (obj.conditionalBranches || []).map(c => AjfConditionSerializer.fromJson(c));\n    switch (obj.nodeType) {\n      case AjfNodeType.AjfField:\n        return AjfNodeSerializer._fieldFromJson(\n            obj as AjfNodeCreate & Partial<AjfField>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfFieldNodeLink:\n        return AjfNodeSerializer._fieldNodeLinkFromJson(\n            obj as AjfNodeCreate & Partial<AjfFieldNodeLink>);\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeSerializer._nodeGroupFromJson(\n            obj as AjfNodeCreate & Partial<AjfNodeGroup>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfNodeSerializer._repeatingSlideFromJson(\n            obj as AjfNodeCreate & Partial<AjfRepeatingSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n      case AjfNodeType.AjfSlide:\n        return AjfNodeSerializer._slideFromJson(\n            obj as AjfNodeCreate & Partial<AjfSlide>,\n            choicesOrigins,\n            attachmentsOrigins,\n        );\n    }\n    throw new Error(err);\n  }\n\n  private static _containerNodeFromJson(\n      json: AjfNodeCreate&Partial<AjfContainerNode>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfContainerNode {\n    json.nodes = (json.nodes ||\n                  []).map(n => AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins));\n    return createContainerNode(json);\n  }\n\n  private static _fieldFromJson(\n      json: AjfNodeCreate&Partial<AjfField>&Partial<{attachmentsOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfField {\n    if (json.fieldType == null) {\n      throw new Error('Malformed field');\n    }\n    const obj = json as AjfFieldCreate;\n    if (obj.validation) {\n      obj.validation = AjfValidationGroupSerializer.fromJson(obj.validation);\n    }\n    if (obj.warning) {\n      obj.warning = AjfWarningGroupSerializer.fromJson(obj.warning);\n    }\n    if (json.attachmentsOriginRef) {\n      obj.attachmentOrigin =\n          (attachmentsOrigins || []).find(a => a.name === json.attachmentsOriginRef);\n    }\n    if (obj.nextSlideCondition) {\n      obj.nextSlideCondition = AjfConditionSerializer.fromJson(obj.nextSlideCondition);\n    }\n    const isCustomFieldWithChoice = obj.fieldType > 100\n      && componentsMap[obj.fieldType] != null\n      && componentsMap[obj.fieldType].isFieldWithChoice === true;\n    if (isCustomFieldWithChoice) {\n      return AjfNodeSerializer._fieldWithChoicesFromJson(\n        json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n        choicesOrigins,\n    );\n    }\n\n    switch (obj.fieldType) {\n      case AjfFieldType.Formula:\n        return AjfNodeSerializer._formulaFieldFromJson(\n            json as AjfFieldCreate & Partial<AjfFormulaField>);\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return AjfNodeSerializer._fieldWithChoicesFromJson(\n            json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n            choicesOrigins,\n        );\n    }\n    return createField(obj);\n  }\n\n  private static _fieldNodeLinkFromJson(json: AjfNodeCreate&\n                                       Partial<AjfFieldNodeLink>): AjfFieldNodeLink {\n    return {...createNode(json), nodeType: AjfNodeType.AjfFieldNodeLink};\n  }\n\n  private static _fieldWithChoicesFromJson(\n      json: AjfFieldCreate&Partial<AjfFieldWithChoices<any>>&Partial<{choicesOriginRef: string}>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      ): AjfFieldWithChoices<any> {\n    const err = 'Malformed field with choices';\n    if (json.choicesOriginRef == null) {\n      throw new Error(err);\n    }\n    const choicesOrigin = (choicesOrigins || []).find(c => c.name === json.choicesOriginRef);\n    if (choicesOrigin == null) {\n      throw new Error(err);\n    }\n    if (json.choicesFilter) {\n      json.choicesFilter = AjfFormulaSerializer.fromJson(json.choicesFilter);\n    }\n    if (json.triggerConditions) {\n      json.triggerConditions = json.triggerConditions.map(t => AjfConditionSerializer.fromJson(t));\n    }\n    return createFieldWithChoices<any>({...json, choicesOrigin});\n  }\n\n  private static _formulaFieldFromJson(json: AjfFieldCreate&\n                                      Partial<AjfFormulaField>): AjfFormulaField {\n    if (json.formula) {\n      json.formula = AjfFormulaSerializer.fromJson(json.formula);\n    }\n    return {\n      ...createField(json),\n      fieldType: AjfFieldType.Formula,\n    };\n  }\n\n  private static _nodeGroupFromJson(\n      json: AjfNodeCreate&Partial<AjfNodeGroup>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfNodeGroup {\n    return createNodeGroup({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _repeatingNodeFromJson(json: AjfNodeCreate&\n                                       Partial<AjfRepeatingNode>): AjfRepeatingNode {\n    if (json.formulaReps) {\n      json.formulaReps = AjfFormulaSerializer.fromJson(json.formulaReps);\n    }\n    return createRepeatingNode(json);\n  }\n\n  private static _repeatingSlideFromJson(\n      json: AjfNodeCreate&Partial<AjfRepeatingSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfRepeatingSlide {\n    return createRepeatingSlide({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _slideFromJson(\n      json: AjfNodeCreate&Partial<AjfSlide>,\n      choicesOrigins?: AjfChoicesOrigin<any>[],\n      attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n      ): AjfSlide {\n    return createSlide(\n        AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../interface/warning/warning-group';\nimport {createWarningGroup} from '../utils/warning/create-warning-group';\n\nexport class AjfWarningGroupSerializer {\n  static fromJson(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n    return createWarningGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../interface/validation/validation-group';\nimport {createValidationGroup} from '../utils/validation/create-validation-group';\n\nexport class AjfValidationGroupSerializer {\n  static fromJson(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n    return createValidationGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\n\nexport type AjfSlideCreate = AjfContainerNodeCreate;\n\nexport function createSlide(nodeGroup: AjfSlideCreate): AjfSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    nodeType: AjfNodeType.AjfSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from '../nodes/create-repeating-node';\n\nexport type AjfRepeatingSlideCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createRepeatingSlide(nodeGroup: AjfRepeatingSlideCreate): AjfRepeatingSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfRepeatingSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfContainerNodeCreate, createContainerNode} from './create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from './create-repeating-node';\n\nexport type AjfNodeGroupCreate = AjfContainerNodeCreate&AjfRepeatingNodeCreate;\n\nexport function createNodeGroup(nodeGroup: AjfNodeGroupCreate): AjfNodeGroup {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfNodeGroup,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfRepeatingNodeCreate = AjfNodeCreate&Partial<AjfRepeatingNode>;\n\nexport function createRepeatingNode(repeatingNode: AjfRepeatingNodeCreate): AjfRepeatingNode {\n  const node = createNode(repeatingNode);\n  return {\n    ...repeatingNode,\n    ...node,\n    minReps: repeatingNode.minReps != null ? repeatingNode.minReps : 1,\n    maxReps: repeatingNode.maxReps != null ? repeatingNode.maxReps : 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfContainerNodeCreate = AjfNodeCreate&Partial<AjfContainerNode>;\n\nexport function createContainerNode(containerNode: AjfContainerNodeCreate): AjfContainerNode {\n  const node = createNode(containerNode);\n  return {\n    ...node,\n    nodes: containerNode.nodes || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldCreate, createField} from './create-field';\n\nexport type AjfFieldWithChoicesCreate<T> = AjfFieldCreate&\n    Pick<AjfFieldWithChoices<T>, 'fieldType'|'choicesOrigin'>&Partial<AjfFieldWithChoices<T>>;\n\nexport function createFieldWithChoices<T>(field: AjfFieldWithChoicesCreate<T>):\n    AjfFieldWithChoices<T> {\n  const node = createField({...field});\n  return {\n    ...node,\n    ...field,\n    choices: field.choices || [],\n    forceExpanded: field.forceExpanded || false,\n    forceNarrow: field.forceNarrow || false,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from '../utils/choices/create-choices-origin';\n\nexport class AjfChoicesOriginSerializer {\n  static fromJson(origin: Partial<AjfChoicesOrigin<any>>): AjfChoicesOrigin<any> {\n    return createChoicesOrigin<any>({\n      ...origin,\n      type: origin.type || 'fixed',\n      name: origin.name || '',\n    } as AjfChoicesOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n\nexport type AjfChoicesOriginCreate<T> =\n    Pick<AjfChoicesOrigin<any>, 'type'|'name'>&Partial<AjfChoicesOrigin<T>>;\n\nexport function createChoicesOrigin<T>(origin: AjfChoicesOriginCreate<T>): AjfChoicesOrigin<T> {\n  return {\n    ...origin,\n    type: origin.type,\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {\n  AjfAttachmentsOriginCreate, createAttachmentsOrigin\n} from '../utils/attachments/create-attachments-origin';\n\nexport class AjfAttachmentsOriginSerializer {\n  static fromJson(origin: Partial<AjfAttachmentsOrigin<any>>): AjfAttachmentsOrigin<any> {\n    if (origin.name == null) {\n      throw new Error('Malformed attachments origin');\n    }\n    return createAttachmentsOrigin(origin as AjfAttachmentsOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../../interface/attachments/attachments-origin';\n\nexport type AjfAttachmentsOriginCreate<T> =\n    Pick<AjfAttachmentsOrigin<T>, 'name'>&Partial<AjfAttachmentsOrigin<T>>;\n\nexport function createAttachmentsOrigin<T>(origin: AjfAttachmentsOriginCreate<T>):\n    AjfAttachmentsOrigin<T> {\n  return {\n    ...origin,\n    attachments: origin.attachments || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport const AJF_SEARCH_ALERT_THRESHOLD = new InjectionToken<number>('AJF_SEARCH_ALERT_THRESHOLD');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseFieldComponent} from './base-field';\n\nexport abstract class AjfInputFieldComponent extends AjfBaseFieldComponent {\n  type: 'text' | 'number' = 'text';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function getTypeName(v: any): string {\n  let typeStr = typeof v;\n  return typeStr === 'object'\n    ? v.constructor.toString().match(/\\w+/g)[1]\n    : typeStr;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfBoolToIntPipe} from './bool-to-int';\nimport {AjfDateValuePipe} from './date-value';\nimport {AjfDateValueStringPipe} from './date-value-string';\nimport {AjfExpandFieldWithChoicesPipe} from './expand-input-with-choices';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfIncrementPipe} from './increment';\nimport {AjfIsRepeatingSlideInstancePipe} from './is-repeating-slide';\nimport {AjfNodeCompleteNamePipe} from './node-complete-name';\nimport {AjfRangePipe} from './range';\nimport {AjfTableRowClass} from './table-row-class';\nimport {AjfTableVisibleColumnsPipe} from './table-visible-columns';\nimport {AjfValidationService} from './validation-service';\nimport {AjfValidSlidePipe} from './valid-slide';\n\n@NgModule({\n  declarations: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  exports: [\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfIncrementPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  providers: [AjfDateValueStringPipe, AjfFormRendererService, AjfValidationService]\n})\nexport class AjfFormsModule {\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\n\n@Pipe({name: 'ajfValidSlide', pure: false})\nexport class AjfValidSlidePipe implements PipeTransform {\n  transform (slide: AjfBaseSlideInstance, idx: number): boolean {\n    if (idx == null || typeof idx !== 'number') {\n      return false;\n    }\n    if (idx >= slide.slideNodes.length) {\n      return true;\n    }\n    return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      }).reduce((v1, v2) => v1 && v2, true);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\n\n@Pipe({name: 'ajfTableVisibleColumns'})\nexport class AjfTableVisibleColumnsPipe implements PipeTransform {\n  transform(instance: AjfTableFieldInstance): (string|number|FormControl)[][] {\n    if (!instance.node.editable) {\n      return instance.hideEmptyRows\n        ? (instance.value || []).filter(col => col[1].reduce((prev: boolean, cur) => {\n          return prev || (cur != null && cur !== '' && cur !== 0 && cur !== '0');\n        }, false)).map(v => [v[0], ...v[1]])\n        : instance.value.map(v => [v[0], ...v[1]]);\n    }\n    return (instance.controls || []).map(v => [v[0], ...v[1]]);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfTableRowClass'})\nexport class AjfTableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfRange'})\nexport class AjfRangePipe implements PipeTransform {\n  transform(size: number = 0, start: number = 1, step: number = 1): number[] {\n    const range: number[] = [];\n    for (let length = 0; length < size; ++length) {\n      range.push(start);\n      start += step;\n    }\n    return range;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\n@Pipe({name: 'ajfNodeCompleteName'})\nexport class AjfNodeCompleteNamePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string {\n    return instance ? nodeInstanceCompleteName(instance) : '';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\n\n@Pipe({name: 'ajfIsRepeatingSlideInstance'})\nexport class AjfIsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isRepeatingSlideInstance(instance);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfIncrement'})\nexport class AjfIncrementPipe implements PipeTransform {\n  transform(value: number, increment: number = 1): number {\n    return value + increment;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\n\n@Pipe({name: 'ajfExpandFieldWithChoices'})\nexport class AjfExpandFieldWithChoicesPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, threshold: number) {\n    return !instance.node.forceNarrow && (\n      instance.node.forceExpanded\n      || (instance.filteredChoices && instance.filteredChoices.length <= threshold)\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'ajfBoolToInt'})\nexport class AjfBoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@ajf/core/utils';\n\nimport {\n  AfterViewChecked, AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\n\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<AjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation>\n    = new EventEmitter<AjfPageSliderOrientation>();\n  readonly orientationChange: Observable<AjfPageSliderOrientation> =\n    this._orientationChange.asObservable();\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean { return this._saveDisabled; }\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean { return this._hasStartMessage; }\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean { return this._hasEndMessage; }\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean { return this._hideTopToolbar; }\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean { return this._hideBottomToolbar; }\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean { return this._hideNavigationButtons; }\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean { return this._fixedOrientation; }\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _readonly = false;\n  get readonly(): boolean { return this._readonly; }\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation { return this._orientation; }\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') { return; }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  formSlider: AjfPageSlider;\n  fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  readonly formAction: Observable<AjfFormActionEvent> = this._formAction.asObservable();\n\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete)\n    );\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void { this._errorMoveEvent.emit(true); }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void { this._errorMoveEvent.emit(false); }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.addGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'down'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.removeGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'up'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue()\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent).pipe(\n        withLatestFrom(this._errorPositions)\n      ).subscribe((v: [boolean, number[]]) => {\n          const move = v[0];\n          const currentPosition = this.formSlider.currentPage - (+this.hasStartMessage) + 1;\n          const errors = v[1];\n          if (errors == null) { return; }\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return nodeInstanceCompleteName(node);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\nimport * as esprima from 'esprima';\nimport {BehaviorSubject, Observable, Subject, Subscriber, Subscription, timer} from 'rxjs';\nimport {\n  debounceTime, filter, map, pairwise, publishReplay, refCount, scan, share, startWith,\n  withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFormulaFieldInstance} from './interface/fields-instances/formula-field-instance';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfEmptyField} from './interface/fields/empty-field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from './interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfNodeGroup} from './interface/nodes/node-group';\nimport {AjfNodeType} from './interface/nodes/node-type';\nimport {AjfNodesInstancesOperation} from './interface/operations/nodes-instances-operation';\nimport {AjfRendererUpdateMapOperation} from './interface/operations/renderer-update-map-operation';\nimport {AjfRendererUpdateMap} from './interface/renderer-maps/update-map';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {AjfTableCell} from './interface/fields/table-field';\nimport {isCustomFieldWithChoices} from './utils/fields/is-custom-field-with-choices';\nimport {isFieldWithChoicesInstance} from './utils/fields-instances/is-field-with-choices-instance';\nimport {isTableFieldInstance} from './utils/fields-instances/is-table-field-instance';\nimport {updateFieldInstanceState} from './utils/fields-instances/update-field-instance-state';\nimport {updateFilteredChoices} from './utils/fields-instances/update-filtered-choices';\nimport {updateFormula} from './utils/fields-instances/update-formula';\nimport {updateNextSlideCondition} from './utils/fields-instances/update-next-slide-condition';\nimport {updateTriggerConditions} from './utils/fields-instances/update-trigger-conditions';\nimport {updateValidation} from './utils/fields-instances/update-validation';\nimport {updateWarning} from './utils/fields-instances/update-warning';\nimport {createField} from './utils/fields/create-field';\nimport {isFieldWithChoices} from './utils/fields/is-field-with-choices';\nimport {flattenNodesInstances} from './utils/nodes-instances/flatten-nodes-instances';\nimport {flattenNodesInstancesTree} from './utils/nodes-instances/flatten-nodes-instances-tree';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\nimport {isNodeGroupInstance} from './utils/nodes-instances/is-node-group-instance';\nimport {isSlideInstance} from './utils/nodes-instances/is-slide-instance';\nimport {isSlidesInstance} from './utils/nodes-instances/is-slides-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\nimport {nodeInstanceSuffix} from './utils/nodes-instances/node-instance-suffix';\nimport {nodeToNodeInstance} from './utils/nodes-instances/node-to-node-instance';\nimport {updateConditionalBranches} from './utils/nodes-instances/update-conditional-branches';\nimport {updateVisibility} from './utils/nodes-instances/update-visibility';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isContainerNode} from './utils/nodes/is-container-node';\nimport {isRepeatingContainerNode} from './utils/nodes/is-repeating-container-node';\nimport {orderedNodes} from './utils/nodes/ordered-nodes';\nimport {updateRepsNum} from './utils/slides-instances/update-reps-num';\nimport {validSlide} from './utils/slides-instances/valid-slide';\nimport {AjfValidationService} from './validation-service';\n\nconst esprimaMod: any = (esprima as any).default || esprima;\nconst {tokenize} = esprimaMod;\n\nexport enum AjfFormInitStatus {\n  Initializing,\n  Complete\n}\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _visibilityNodesMap: Observable<AjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<AjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<AjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<AjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<AjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<AjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<AjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n      new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this._formInitEvent.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup | null> =\n    new BehaviorSubject<FormGroup | null>(null);\n  readonly formGroup: Observable<FormGroup | null> = this._formGroup.asObservable();\n\n  private _form: BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null> =\n      new BehaviorSubject<{form: AjfForm | null, context?: AjfContext}|null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<AjfNodeInstance[]>;\n  private _flatNodesTree: Observable<AjfSlideInstance[]>;\n  private _nodesUpdates: Subject<AjfNodesInstancesOperation> =\n      new Subject<AjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<AjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this._nextSlideTrigger.asObservable();\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum.asObservable();\n\n  get nodesTree(): Observable<AjfSlideInstance[]> {\n    return this._flatNodesTree;\n  }\n  get errorPositions(): Observable<number[]> { return this._errorPositions; }\n  get errors(): Observable<number> { return this._errors; }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm|null, context: AjfContext = {}) {\n    this._initUpdateMapStreams();\n    if (form != null && Object.keys(context).length === 0 &&\n        Object.keys(form.initContext || {}).length > 0) {\n      context = form.initContext || {};\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) { return {}; }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group.node.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group.node.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(map((f) => {\n      const fieldName = nodeInstanceCompleteName(field);\n      return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n    }));\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n        withLatestFrom(this._nodes, this._form), filter(v => v[2] != null && v[2].form != null),\n        map((v: [void, AjfNodeInstance[], {form: AjfForm | null, context?: AjfContext}|null]) => {\n          const nodes = v[1];\n          const form = v[2]!.form!;\n          let currentPosition = 0;\n          const errors: number[] = [];\n          nodes.forEach((node) => {\n            if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n              const rsNode = node as AjfRepeatingSlideInstance;\n              for (let i = 0; i < rsNode.reps; i++) {\n                if (node.visible) {\n                  currentPosition++;\n                  if (i == 0) {\n                    rsNode.position = currentPosition;\n                  }\n                  if (!validSlide(rsNode, i)) {\n                    errors.push(currentPosition);\n                  }\n                }\n              }\n            } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n              const sNode = node as AjfSlideInstance;\n              if (sNode.visible) {\n                currentPosition++;\n                sNode.position = currentPosition;\n                if (!sNode.valid) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          });\n          form.valid = errors.length == 0;\n          this._slidesNum.next(currentPosition);\n          return errors;\n        }),\n        publishReplay(), refCount());\n    this._errors = this._errorPositions.pipe(\n      map(e => e != null ? e.length : 0),\n      startWith(0),\n      publishReplay(),\n      refCount()\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._visibilityNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._visibilityNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._repetitionNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._repetitionNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._conditionalBranchNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._conditionalBranchNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._formulaNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._formulaNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._validationNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._validationNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._warningNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._warningNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._filteredChoicesNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._filteredChoicesNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._triggerConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._triggerConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n    this._nextSlideConditionsNodesMap =\n        (<Observable<AjfRendererUpdateMapOperation>>this._nextSlideConditionsNodesMapUpdates)\n            .pipe(scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n                    return op(rmap);\n                  }, {}), startWith<AjfRendererUpdateMap>({}), share());\n\n    this._nodesMaps = [\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = <Observable<{form: AjfForm | null, context?: AjfContext}>>this._form;\n    formObs\n      .pipe(map((_form) => {\n        return this._initFormGroupStreams(new FormGroup({}));\n      }))\n      .subscribe(this._formGroup);\n    formObs\n        .pipe(map((form) => {\n          return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n            const nodes = form != null && form.form != null ?\n                this._orderedNodesInstancesTree(\n                    flattenNodes(form.form.nodes), form.form.nodes, undefined, [],\n                    form.context || {}) :\n                [];\n            let currentPosition = 0;\n            nodes.forEach((node) => {\n              if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n                const rsNode = node as AjfRepeatingSlideInstance;\n                for (let i = 0; i < rsNode.reps; i++) {\n                  if (node.visible) {\n                    currentPosition++;\n                    if (i == 0) {\n                      rsNode.position = currentPosition;\n                    }\n                  }\n                }\n              } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n                const sNode = node as AjfSlideInstance;\n                if (sNode.visible) {\n                  currentPosition++;\n                  sNode.position = currentPosition;\n                }\n              }\n            });\n            return nodes;\n          };\n        }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n      allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[], context: AjfContext,\n      branchVisibility = true): AjfNodeInstance|null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      const nodeType = instance.node.nodeType;\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        this._explodeRepeatingNode(\n            allNodes, instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance, context);\n      } else if (nodeType === AjfNodeType.AjfSlide) {\n        const sInstance = instance as AjfSlideInstance;\n        sInstance.nodes = this._orderedNodesInstancesTree(\n            allNodes, sInstance.node.nodes, sInstance.node.id, prefix, context);\n      }\n      updateVisibility(instance, context, branchVisibility);\n      updateConditionalBranches(instance, context);\n      if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n\n        if (isCustomFieldWithChoices(fInstance.node) || isFieldWithChoices(fInstance.node)) {\n          updateFilteredChoices(fInstance as AjfFieldWithChoicesInstance<any>, context);\n        } else {\n          if (isTableFieldInstance(fInstance)) {\n            const tfInstance = fInstance as AjfTableFieldInstance;\n            const tNode = tfInstance.node;\n            tfInstance.context = context[nodeInstanceCompleteName(tfInstance)] || context;\n              const formGroup = this._formGroup.getValue();\n              let controlsWithLabels: [string, (string|FormControl)[]][] = [];\n              controlsWithLabels.push([node.label, tNode.columnLabels]);\n              if (formGroup != null) {\n                tNode.rows.forEach((row, rowIdx) => {\n                  let r: FormControl[] = [];\n                  (row as AjfTableCell[]).forEach((cell, idx) => {\n                    /*\n                    every control is registered with the cell position\n                    inside the form control matrix\n                    with this mask `${tNode.name}__${rowIdx}__${idx}`\n                    */\n                    const name = `${tNode.name}__${rowIdx}__${idx}`;\n                    const control = new FormControl();\n                    control.setValue(tfInstance.context[cell.formula]);\n                    formGroup\n                      .registerControl(name, control);\n                    r.push(control);\n                    /* create a object that respect the instance interface\n                    with the minimum defined properties to allow to run addToNodeFormula map*/\n                    const fakeInstance = {\n                      formula: {formula: cell.formula},\n                      node: {\n                        name,\n                        nodeType: 0,\n                        editable: false\n                      },\n                      visible: true,\n                      prefix: [],\n                      conditionalBranches: [],\n                      updatedEvt: new EventEmitter<void>()\n                    } as unknown as AjfNodeInstance;\n                    this._addToNodesFormulaMap(fakeInstance, cell.formula);\n                  });\n                  controlsWithLabels.push([tNode.rowLabels[rowIdx], r]);\n                });\n                tfInstance.controls = controlsWithLabels;\n              }\n          } else {\n            fInstance.value = context[nodeInstanceCompleteName(instance)];\n          }\n          updateFieldInstanceState(fInstance, context);\n        }\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n      allNodes: AjfNode[]|AjfNodeInstance[], instance: AjfRepeatingContainerNodeInstance,\n      oldReps: number,\n      context: AjfContext): {added: AjfNodeInstance[]|null, removed: AjfNodeInstance[]|null} {\n    const newReps = instance.reps;\n    const result: { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } = {\n      added: null,\n      removed: null\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        const node = createField({\n                       id: 999,\n                       name: '',\n                       parent: -1,\n                       fieldType: AjfFieldType.Empty,\n                       label: instance.node.label\n                     }) as AjfEmptyField;\n        const newInstance = this._initNodeInstance(\n          allNodes, node, instance.prefix.slice(0), context);\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps ; i < newReps ; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance.node;\n        prefix.push(i);\n        orderedNodes(group.nodes, instance.node.id)\n          .forEach((n) => {\n            const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n            if (newInstance != null) {\n              newNodes.push(newInstance);\n              instance.nodes.push(newInstance);\n            }\n          });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        nodesNum ++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach((n => {\n        this._removeNodeInstance(n);\n      }));\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      const completeName = nodeInstanceCompleteName(instance);\n      if (fg != null && fg.contains(completeName)) {\n        fg.controls[completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      const rsInstance = instance as AjfRepeatingSlideInstance;\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide =\n          rsInstance.nodes != null ? rsInstance.nodes.length / rsInstance.reps : 0;\n      for (let i = 0 ; i < instance.reps ; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      rsInstance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates.asObservable()\n        .pipe(\n            withLatestFrom(this._formGroup),\n            filter((values: [AjfNodesInstancesOperation, FormGroup|null]) => values[1] !== null))\n        .subscribe((values: [AjfNodesInstancesOperation, FormGroup|null]) => {\n          const form: FormGroup = <FormGroup>values[1];\n          form.updateValueAndValidity();\n        });\n  }\n\n  private _explodeRepeatingNode(\n      allNodes: AjfNode[]|AjfNodeInstance[],\n      instance: AjfNodeGroupInstance|AjfRepeatingSlideInstance, context: AjfContext) {\n    const oldReps = updateRepsNum(instance, context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n      allNodes: AjfNode[]|AjfNodeInstance[], nodes: AjfNode[], parent: number|null = null,\n      prefix: number[] = [], context: AjfContext): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent).forEach((node: AjfNode) => {\n      const parentNodeInstance = nodesInstances.find(\n          ni => ni.node.id == node.parent && nodeInstanceSuffix(ni) == curSuffix);\n      const branchVisibility = parentNodeInstance != null ?\n          parentNodeInstance.verifiedBranch != null &&\n              parentNodeInstance.verifiedBranch == node.parentNode :\n          true;\n      const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n      if (nni != null) {\n        nodesInstances.push(nni);\n      }\n    });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue)\n      .filter((k) => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription =\n        formGroup.valueChanges\n            .pipe(\n                startWith<any>({}), pairwise(), debounceTime(200),\n                withLatestFrom<\n                    [any, any],\n                    [\n                      [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                      AjfNodeInstance[]\n                    ]>(...(this._nodesMaps), this._flatNodes))\n            .subscribe((v: [\n                         [any, any], AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfRendererUpdateMap, AjfRendererUpdateMap,\n                         AjfRendererUpdateMap, AjfNodeInstance[]\n                       ]) => {\n              const oldFormValue = init && {} || v[0][0];\n              init = false;\n              const newFormValue = v[0][1];\n              const visibilityMap = v[1];\n              const repetitionMap = v[2];\n              const conditionalBranchesMap = v[3];\n              const formulaMap = v[4];\n              const validationMap = v[5];\n              const warningMap = v[6];\n              const nextSlideConditionsMap = v[7];\n              const filteredChoicesMap = v[8];\n              const triggerConditionsMap = v[9];\n              const nodes = v[10];\n\n              // takes the names of the fields that have changed\n              const delta = this._formValueDelta(oldFormValue, newFormValue);\n              const deltaLen = delta.length;\n              let updatedNodes: AjfNodeInstance[] = [];\n\n              /*\n                for each field update all properties map\n                with the following rule  \"if fieldname is in map update it\" and\n                push on updateNodes the node instance that wrap field\n              */\n              delta.forEach((fieldName) => {\n                updatedNodes = updatedNodes.concat(\n                    nodes.filter(n => nodeInstanceCompleteName(n) === fieldName));\n                if (visibilityMap[fieldName] != null) {\n                  visibilityMap[fieldName].forEach(nodeInstance => {\n                    const completeName = nodeInstanceCompleteName(nodeInstance);\n                    const visibilityChanged = updateVisibility(nodeInstance, newFormValue);\n                    const isField = isFieldInstance(nodeInstance);\n                    if (visibilityChanged && !nodeInstance.visible) {\n                      const fg = this._formGroup.getValue();\n                      if (fg != null) {\n                        const s = timer(200).subscribe(() => {\n                          if (s && !s.closed) {\n                            s.unsubscribe();\n                          }\n                          fg.controls[completeName].setValue(null);\n                        });\n                      }\n                      if (isField) {\n                        (nodeInstance as AjfFieldInstance).value = null;\n                      }\n                    } else if (visibilityChanged && nodeInstance.visible && isField) {\n                      const fg = this._formGroup.getValue();\n                      const res = updateFormula(nodeInstance as AjfFieldInstance, newFormValue);\n                      if (fg != null && res.changed) {\n                        fg.controls[completeName].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (repetitionMap[fieldName] != null) {\n                  repetitionMap[fieldName].forEach(nodeInstance => {\n                    if (isRepeatingContainerNode(nodeInstance.node)) {\n                      const rnInstance = nodeInstance as AjfRepeatingContainerNodeInstance;\n                      const oldReps = updateRepsNum(rnInstance, newFormValue);\n                      if (oldReps !== rnInstance.reps) {\n                        this._adjustReps(nodes, rnInstance, oldReps, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (conditionalBranchesMap[fieldName] != null) {\n                  conditionalBranchesMap[fieldName].forEach((nodeInstance) => {\n                    // const branchChanged = nodeInstance.updateConditionalBranches(newFormValue);\n                    updateConditionalBranches(nodeInstance, newFormValue);\n                    // if (branchChanged) {\n                    const verifiedBranch = nodeInstance.verifiedBranch;\n                    nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                      if (idx == verifiedBranch) {\n                        this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                      } else {\n                        this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                      }\n                    });\n                    // }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (formulaMap[fieldName] != null) {\n                  formulaMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      const res = updateFormula(fInstance, newFormValue);\n                      const fg = this._formGroup.getValue();\n                      if (fg != null && res.changed) {\n                        updateValidation(fInstance, newFormValue);\n                        fg.controls[nodeInstanceCompleteName(nodeInstance)].setValue(res.value);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (validationMap[fieldName] != null) {\n                  validationMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      newFormValue.$value = newFormValue[nodeInstanceCompleteName(nodeInstance)];\n                      updateValidation(\n                          fInstance, newFormValue, this.currentSupplementaryInformations);\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (warningMap[fieldName] != null) {\n                  warningMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      updateWarning(fInstance, newFormValue);\n                      if (fInstance.warningResults != null &&\n                          fInstance.warningResults.filter(warning => warning.result).length > 0) {\n                        fInstance.warningTrigger.emit();\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n                  if (nextSlideConditionsMap[fieldName]\n                          .filter((nodeInstance) => {\n                            if (isFieldInstance(nodeInstance)) {\n                              const fInstance = nodeInstance as AjfFieldInstance;\n                              return updateNextSlideCondition(fInstance, newFormValue);\n                            }\n                            return false;\n                          })\n                          .length == 1) {\n                    this._nextSlideTrigger.emit();\n                  }\n                }\n\n                if (filteredChoicesMap[fieldName] != null) {\n                  filteredChoicesMap[fieldName].forEach((nodeInstance) => {\n                    if (isFieldInstance(nodeInstance)) {\n                      const fInstance = nodeInstance as AjfFieldInstance;\n                      if (isFieldWithChoices(fInstance.node)) {\n                        updateFilteredChoices(\n                            fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                      }\n                    }\n                    if (updatedNodes.indexOf(nodeInstance) === -1) {\n                      updatedNodes.push(nodeInstance);\n                    }\n                  });\n                }\n\n                if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n                  const res = triggerConditionsMap[fieldName].filter((nodeInstance) => {\n                    if (!isFieldInstance(nodeInstance)) {\n                      return false;\n                    }\n                    const fInstance = nodeInstance as AjfFieldInstance;\n                    if (!isFieldWithChoices(fInstance.node)) {\n                      return false;\n                    }\n                    return updateTriggerConditions(\n                        fInstance as AjfFieldWithChoicesInstance<any>, newFormValue);\n                  });\n                  if (res.length == 1) {\n                    (res[0] as AjfFieldWithChoicesInstance<any>).selectionTrigger.emit();\n                  }\n                }\n              });\n              updatedNodes.forEach(n => {\n                const nodeIdx = nodes.indexOf(n);\n                let idx = nodeIdx - 1;\n                while (idx >= 0) {\n                  const curNode = nodes[idx];\n                  if (isSlidesInstance(curNode)) {\n                    const slide = curNode as (AjfRepeatingSlideInstance | AjfSlideInstance);\n                    const subNodesNum = slide.flatNodes.length;\n                    let valid = true;\n                    for (let i = 0 ; i < subNodesNum ; i++) {\n                      const subNode = slide.flatNodes[i];\n                      if (\n                        subNode.visible && isFieldInstance(subNode)\n                        && !(subNode as AjfFieldInstance).valid\n                      ) {\n                        valid = false;\n                        break;\n                      }\n                    }\n                    if (slide.valid !== valid) {\n                      slide.valid = valid;\n                    }\n                    slide.updatedEvt.emit();\n                  }\n                  idx--;\n                }\n                n.updatedEvt.emit();\n              });\n              if (initForm) {\n                initForm = false;\n                this._formInitEvent.emit(AjfFormInitStatus.Complete);\n              }\n              this._valueChanged.next();\n            });\n    return formGroup;\n  }\n\n  private _showSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n      context: AjfContext, nodes: AjfNodeInstance[], node: AjfNodeInstance, visible: boolean,\n      branch?: number) {\n    let subNodes: AjfNodeInstance[];\n    const nodeSuffix = nodeInstanceSuffix(node);\n    if (branch != null) {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id && n.node.parentNode == branch;\n      });\n    } else {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id;\n      });\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach((n) => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        updateVisibility(n, context, visible);\n        updateFormula(n as AjfFormulaFieldInstance, context);\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes =\n        this._nodesUpdates.pipe(scan((nodes: AjfNodeInstance[], op: AjfNodesInstancesOperation) => {\n                                  return op(nodes);\n                                }, []), share());\n    this._flatNodesTree = this._nodes.pipe(map(nodes => flattenNodesInstancesTree(nodes)), share());\n    this._flatNodes = this._flatNodesTree.pipe(\n        map(slides => {\n          let nodes: AjfNodeInstance[] = [];\n          slides.forEach(s => {\n            nodes.push(s);\n            nodes = nodes.concat(s.flatNodes);\n          });\n          return nodes;\n        }),\n        share());\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstanceCompleteName(nodeInstance);\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (isSlidesInstance(nodeInstance)) {\n      return this._removeSlideInstance(nodeInstance as AjfBaseSlideInstance);\n    } else if (isRepeatingContainerNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      this._removeFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfBaseSlideInstance): AjfBaseSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          delete vmap[fieldInstanceName];\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    // TODO: check this, probably is never verified\n    if (isRepeatingContainerNode(fieldInstance.node)) {\n      const rcInstance = (fieldInstance as AjfNodeInstance as AjfRepeatingContainerNodeInstance);\n      if (rcInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, rcInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isFieldWithChoices(fieldInstance.node)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._removeFromNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n        if (fwcInstance.triggerConditions != null) {\n          fwcInstance.triggerConditions.forEach((condition) => {\n            this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n          });\n        }\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (isRepeatingContainerNode(nodeInstance.node)) {\n      return this._addNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isSlideInstance(nodeInstance)) {\n      return this._addSlideInstance(nodeInstance as AjfSlideInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      return this._addFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          vmap[fieldInstanceName] = [];\n        }\n        if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n          vmap[fieldInstanceName].push(fieldInstance);\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (isNodeGroupInstance(fieldInstance)) {\n      const ngInstance = fieldInstance as AjfNodeInstance as AjfNodeGroupInstance;\n      if (ngInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, ngInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (isCustomFieldWithChoices(fieldInstance.node) || isFieldWithChoicesInstance(fieldInstance)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n      }\n      if (fwcInstance.triggerConditions != null) {\n        fwcInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(nodeGroupInstance: AjfRepeatingContainerNodeInstance):\n      AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeInstanceCompleteName(nodeGroupInstance);\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<AjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] != null) {\n            const idx = vmap[tokenName].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[tokenName].splice(idx, 1);\n              if (vmap[tokenName].length == 0) {\n                delete vmap[tokenName];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n      nodesMap: Subject<AjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n      formula: string): void {\n    let tokens = tokenize(formula)\n      .filter((token: any) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach((token: any) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] == null) {\n            vmap[tokenName] = [];\n          }\n          if (vmap[tokenName].indexOf(nodeInstance) === -1) {\n            vmap[tokenName].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'MM/DD/YYYY';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n      `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, threshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(threshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"MM\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the threshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var threshold = (res/counter)*coefficient || 0;\n          return threshold;\n        }\n      }`,\n    `var alert = function(source, property, threshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > threshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeral(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'MM-DD-YYYY';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'MM';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfExpressionUtils.utils[name] === undefined) {\n      AjfExpressionUtils.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => typeof f === 'string' ? f : f.toString())\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfExpressionUtils.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseSlideInstance} from '../../interface/slides-instances/base-slide-instance';\n\nexport function validSlide(slide: AjfBaseSlideInstance, idx: number): boolean {\n  if (idx >= slide.slideNodes.length) {\n    return true;\n  }\n  return slide.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      })\n      .reduce((v1, v2) => v1 && v2, true);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfRepeatingNodeInstance} from '../../interface/nodes-instances/repeating-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateRepsNum(instance: AjfRepeatingNodeInstance, context?: AjfContext): number {\n  const oldReps: number = instance.reps || 0;\n  context = context || {};\n  if (instance.node.formulaReps == null) {\n    const ctxReps = context[nodeInstanceCompleteName(instance)];\n    if (ctxReps != null) {\n      instance.reps = ctxReps;\n    } else if (oldReps == 0) {\n      instance.reps = 1;\n    }\n  } else {\n    let newReps = evaluateExpression(instance.node.formulaReps.formula, context);\n    if (newReps !== oldReps) {\n      instance.reps = newReps;\n    }\n  }\n  instance.canAdd = instance.node.maxReps === 0 || instance.reps < instance.node.maxReps;\n  instance.canRemove = instance.node.minReps === 0 || instance.reps > instance.node.minReps;\n  return oldReps;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport function orderedNodes(nodes: AjfNode[], parent: number|null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes\n      .filter(\n          (n: AjfNode) => parent != null ? n.parent == parent : n.parent == null || n.parent === 0)\n      .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n      .forEach((n: AjfNode) => {\n        newNodes.push(n);\n        newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n      });\n  return newNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from './is-container-node';\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((node as AjfContainerNode).nodes));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext, createCondition, createFormula, normalizeExpression, alwaysCondition\n} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfTableField} from '../../interface/fields/table-field';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {\n  AjfRepeatingContainerNodeInstance\n} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {componentsMap} from '../fields/fields-map';\nimport {createFieldInstance} from '../fields-instances/create-field-instance';\nimport {\n  createFieldWithChoicesInstance\n} from '../fields-instances/create-field-with-choices-instance';\nimport {createTableFieldInstance} from '../fields-instances/create-table-field-instance';\nimport {isFieldWithChoicesInstance} from '../fields-instances/is-field-with-choices-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {createNodeGroupInstance} from '../nodes-instances/create-node-group-instance';\nimport {createRepeatingSlideInstance} from '../slides-instances/create-repeating-slide-instance';\nimport {createSlideInstance} from '../slides-instances/create-slide-instance';\nimport {createValidationGroup} from '../validation/create-validation-group';\nimport {createWarningGroup} from '../warning/create-warning-group';\n\nimport {getAncestorRepeatingNodesNames} from './get-ancestor-repeating-nodes-names';\nimport {getInstanceCondition} from './get-instance-condition';\nimport {getInstanceConditions} from './get-instance-conditions';\nimport {getInstanceFormula} from './get-instance-formula';\nimport {getInstanceValidations} from './get-instance-validations';\nimport {getInstanceWarnings} from './get-instance-warnings';\nimport {isFieldInstance} from './is-field-instance';\nimport {isNodeGroupInstance} from './is-node-group-instance';\nimport {isRepeatingSlideInstance} from './is-repeating-slide-instance';\n\nexport function nodeToNodeInstance(\n    allNodes: AjfNode[]|AjfNodeInstance[], node: AjfNode, prefix: number[],\n    context: AjfContext): AjfNodeInstance|null {\n  let instance: AjfNodeInstance|null = null;\n  const nodeType = node.nodeType;\n  switch (nodeType) {\n    case AjfNodeType.AjfField:\n      const field = node as AjfField;\n      if (field.fieldType > 100) {\n        if (\n          componentsMap[field.fieldType] != null\n          && componentsMap[field.fieldType].createInstance != null\n        ) {\n          instance = componentsMap[field.fieldType].createInstance!(\n            {node: node as AjfField, prefix}, context);\n        } else {\n          instance = createFieldInstance({node: node as AjfField, prefix}, context);\n        }\n      } else {\n        switch (field.fieldType) {\n          case AjfFieldType.SingleChoice:\n          case AjfFieldType.MultipleChoice:\n            instance = createFieldWithChoicesInstance(\n                {node: node as AjfFieldWithChoices<any>, prefix}, context);\n            break;\n          case AjfFieldType.Table:\n            instance = createTableFieldInstance({node: node as AjfTableField, prefix}, context);\n            break;\n          default:\n            instance = createFieldInstance({node: node as AjfField, prefix}, context);\n            break;\n        }\n      }\n      break;\n    case AjfNodeType.AjfNodeGroup:\n      instance = createNodeGroupInstance({node: node as AjfNodeGroup, prefix});\n      break;\n    case AjfNodeType.AjfRepeatingSlide:\n      instance = createRepeatingSlideInstance({node: node as AjfRepeatingSlide, prefix});\n      break;\n    case AjfNodeType.AjfSlide:\n      instance = createSlideInstance({node: node as AjfSlide, prefix});\n      break;\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeExpression(oldVisibility, ancestorsNames, prefix);\n        instance.visibility = newVisibility !== oldVisibility ?\n            createCondition({condition: newVisibility}) :\n            node.visibility;\n      }\n\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = getInstanceConditions(\n        conditionalBranches, ancestorsNames, prefix);\n\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        const ngInstance = instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance;\n        const formulaReps = ngInstance.node.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n          ngInstance.formulaReps =\n              newFormula !== oldFormula ? createFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n        const fNode = fInstance.node;\n\n        if (fNode.formula) {\n          fInstance.formula = getInstanceFormula(fNode.formula, ancestorsNames, prefix);\n        }\n\n        if (fNode.validation != null) {\n          const newConditions =\n              getInstanceValidations(fNode.validation.conditions, ancestorsNames, prefix);\n          if (newConditions !== fNode.validation.conditions) {\n            fInstance.validation = createValidationGroup(fNode.validation);\n            fInstance.validation.conditions = newConditions;\n          } else {\n            fInstance.validation = fNode.validation;\n          }\n        }\n\n        if (fNode.warning != null) {\n          const newWarnings = getInstanceWarnings(fNode.warning.conditions, ancestorsNames, prefix);\n          if (newWarnings !== fNode.warning.conditions) {\n            fInstance.warning = createWarningGroup(fNode.warning);\n            fInstance.warning.conditions = newWarnings;\n          } else {\n            fInstance.warning = fNode.warning;\n          }\n        }\n\n        if (fNode.nextSlideCondition != null) {\n          fInstance.nextSlideCondition =\n              getInstanceCondition(fNode.nextSlideCondition, ancestorsNames, prefix);\n        }\n\n        if (isFieldWithChoices(fNode)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          const fwcNode = fwcInstance.node;\n          if (fwcNode.choicesFilter != null) {\n            fwcInstance.choicesFilter =\n                getInstanceFormula(fwcNode.choicesFilter, ancestorsNames, prefix);\n          }\n          if (fwcNode.triggerConditions != null) {\n            fwcInstance.triggerConditions =\n                getInstanceConditions(fwcNode.triggerConditions, ancestorsNames, prefix);\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      const conditionalBranches = instance.node.conditionalBranches != null\n        && instance.node.conditionalBranches.length > 0\n        ? instance.node.conditionalBranches\n        : [alwaysCondition()];\n      instance.conditionalBranches = conditionalBranches;\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const rgInstance = instance as AjfRepeatingContainerNodeInstance;\n        rgInstance.formulaReps = rgInstance.node.formulaReps;\n      } else if (isFieldInstance(instance)) {\n        const fInstance = instance as AjfFieldInstance;\n        fInstance.validation = fInstance.node.validation;\n        fInstance.warning = fInstance.node.warning;\n        fInstance.nextSlideCondition = fInstance.node.nextSlideCondition;\n        if (isFieldWithChoicesInstance(instance)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          fwcInstance.choicesFilter = fwcInstance.node.choicesFilter;\n          fwcInstance.triggerConditions = fwcInstance.node.triggerConditions;\n        }\n        fInstance.formula = fInstance.node.formula;\n      }\n    }\n  }\n  return instance;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesInstance} from '../nodes-instances/is-slides-instance';\nimport {isRepeatingSlide} from '../nodes/is-repeating-slide';\n\nexport function isRepeatingSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesInstance(nodeInstance) &&\n      isRepeatingSlide(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingSlide(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {getInstanceWarning} from './get-instance-warning';\n\nexport function getInstanceWarnings(\n    warnings: AjfWarning[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map((warning) => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from '../warning/create-warning';\n\nexport function getInstanceWarning(\n    warning: AjfWarning, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeExpression(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return createWarning({condition: newWarning});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\n\nexport function createWarning(warning: Pick<AjfWarning, 'condition'>&\n                              Partial<AjfWarning>): AjfWarning {\n  return {...warning, warningMessage: warning.warningMessage || 'Undefined Warning'};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {getInstanceValidation} from './get-instance-validation';\n\nexport function getInstanceValidations(\n    validations: AjfValidation[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation[] {\n  let changed = false;\n  const newValidations = validations.map((validation) => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from '../validation/create-validation';\n\nexport function getInstanceValidation(\n    validation: AjfValidation, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeExpression(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return createValidation({condition: newValidation});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\n\nexport function createValidation(validation: Pick<AjfValidation, 'condition'>&\n                                 Partial<AjfValidation>): AjfValidation {\n  return {\n    ...validation,\n    clientValidation: validation.clientValidation || false,\n    errorMessage: validation.errorMessage || 'Undefined Error'\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceFormula(\n    formula: AjfFormula, ancestorsNames: {[prop: string]: number}, prefix: number[]): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return {formula: newFormula};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {getInstanceCondition} from './get-instance-condition';\n\nexport function getInstanceConditions(\n    conditions: AjfCondition[], ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map((condition) => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceCondition(\n    condition: AjfCondition, ancestorsNames: {[prop: string]: number},\n    prefix: number[]): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeExpression(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return {condition: newCondition};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {isField} from '../nodes/is-field';\n\nimport {getAncestorRepeatingNodes} from './get-ancestor-repeating-nodes';\n\nexport function getAncestorRepeatingNodesNames(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  const nodeGroups = getAncestorRepeatingNodes(allNodes, node) as AjfNodeGroup[];\n  nodeGroups.forEach((n, idx) => (n.nodes || []).forEach((sn) => {\n    if (isField(sn)) {\n      names[sn.name] = idx;\n    }\n  }));\n  return names;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\nexport function getAncestorRepeatingNodes(\n    allNodes: (AjfNode|AjfNodeInstance)[], node: AjfNode): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number|null = node.parent;\n  while (curParent != null) {\n    const curNode =\n        allNodes.map((n: AjfNode|AjfNodeInstance) => (n as AjfNodeInstance).node || n as AjfNode)\n            .find(n => n.id == curParent);\n    if (curNode) {\n      if (isRepeatingContainerNode(curNode)) {\n        nodeGroups.push(curNode);\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return nodeGroups;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfNodeGroup ||\n       node.nodeType === AjfNodeType.AjfRepeatingSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\n\nexport function createWarningGroup(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\n\nexport function createValidationGroup(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstanceCreate, createSlideInstance} from './create-slide-instance';\n\nexport type AjfRepeatingSlideInstanceCreate = Omit<AjfSlideInstanceCreate, 'node'>&\n    Pick<AjfRepeatingSlideInstance, 'node'>&Partial<AjfRepeatingSlideInstance>;\n\nexport function createRepeatingSlideInstance(instance: AjfRepeatingSlideInstanceCreate):\n    AjfRepeatingSlideInstance {\n  const slideInstance = createSlideInstance(instance);\n  return {\n    ...slideInstance,\n    node: instance.node,\n    slideNodes: [],\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {AjfBaseSlideInstanceCreate} from './base';\n\nexport type AjfSlideInstanceCreate = AjfBaseSlideInstanceCreate&Partial<AjfSlideInstance>;\n\nexport function createSlideInstance(instance: AjfSlideInstanceCreate): AjfSlideInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    nodes: [],\n    slideNodes: [],\n    flatNodes: [],\n    valid: false,\n    position: 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from './create-node-instance';\n\nexport type AjfNodeGroupInstanceCreate = AjfNodeInstanceCreate&Partial<AjfNodeGroupInstance>;\n\nexport function createNodeGroupInstance(instance: AjfNodeGroupInstanceCreate):\n    AjfNodeGroupInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\nimport {AjfTableField, AjfTableCell} from '../../interface/fields/table-field';\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\n\nexport type AjfTableFieldInstanceCreate = AjfFieldInstanceCreate&Partial<AjfTableFieldInstance>;\n/**\n * to mantain retrocompatibility with old string type convert string to AjfTableCell\n * check  node.rows: (string|AjfTableCell)[][];\n * if elem of map is string convert in to AjfTableCell object\n */\nfunction normalizeRows(node: AjfTableField): void {\n  node.rows.forEach((row, rowIdx) => {\n    row.forEach( (elem, elemIdx) => {\n      if (typeof elem === 'string') {\n        node.rows[rowIdx][elemIdx] = {\n          formula: elem,\n          editable: node.editable\n        } as AjfTableCell;\n      }\n    });\n  });\n}\n\nexport function createTableFieldInstance(\n    instance: AjfTableFieldInstanceCreate, context: AjfContext): AjfTableFieldInstance {\n      normalizeRows(instance.node as AjfTableField);\n      const fieldInstance = createFieldInstance(instance, context);\n      return {\n        ...fieldInstance,\n        node: instance.node,\n        context,\n        hideEmptyRows: instance.hideEmptyRows || false,\n        controls: []\n      };\n    }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfFieldWithChoicesInstanceCreate<T> =\n    AjfFieldInstanceCreate&Partial<AjfFieldWithChoicesInstance<T>>;\n\nexport function createFieldWithChoicesInstance<T>(\n    instance: AjfFieldWithChoicesInstanceCreate<T>,\n    context: AjfContext): AjfFieldWithChoicesInstance<T> {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    filteredChoices: [...instance.node.choices],\n    firstTriggerConditionDone: {},\n    selectionTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport type AjfFieldInstanceCreate = AjfNodeInstanceCreate&Partial<AjfFieldInstance>;\n\nexport function createFieldInstance(\n    instance: AjfFieldInstanceCreate, context: AjfContext): AjfFieldInstance {\n  const nodeInstance = createNodeInstance(instance);\n  let value: any = null;\n  if (nodeInstance.node != null && context != null) {\n    const completeName = nodeInstanceCompleteName(nodeInstance);\n    if (context[nodeInstance.node.name] != null) {\n      value = context[nodeInstance.node.name];\n    } else if (context[completeName] != null) {\n      value = context[completeName];\n    }\n  }\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    value,\n    valid: false,\n    defaultValue: instance.defaultValue != null ? instance.defaultValue : null,\n    validationResults: instance.validationResults || [],\n    warningResults: instance.warningResults || [],\n    warningTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport type AjfNodeInstanceCreate = Pick<AjfNodeInstance, 'node'>&Partial<AjfNodeInstance>;\n\nexport function createNodeInstance(instance: AjfNodeInstanceCreate): AjfNodeInstance {\n  return {\n    node: instance.node,\n    prefix: instance.prefix ? [...instance.prefix] : [],\n    visible: instance.visible != null ? instance.visible : true,\n    conditionalBranches: [],\n    updatedEvt: new EventEmitter<void>()\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlideNode} from '../nodes/is-slide-node';\n\nexport function isSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlideNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isNodeGroup} from '../nodes/is-node-group';\n\nexport function isNodeGroupInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isNodeGroup(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isNodeGroup(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {flattenNodesInstances} from './flatten-nodes-instances';\nimport {isSlidesInstance} from './is-slides-instance';\n\nexport function flattenNodesInstancesTree(nodes: AjfNodeInstance[]): AjfSlideInstance[] {\n  let flatTree: AjfSlideInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isSlidesInstance(nodeInstance)) {\n      const ni = nodeInstance as AjfSlideInstance;\n      flatTree.push(ni);\n      ni.flatNodes = flattenNodesInstances(ni.nodes);\n    }\n  });\n  return flatTree;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesNode} from '../nodes/is-slides-node';\n\nexport function isSlidesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nimport {isContainerNodeInstance} from './is-container-node-instance';\nimport {isFieldInstance} from './is-field-instance';\n\nexport function flattenNodesInstances(\n    nodes: AjfNodeInstance[], includeGroups = false): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isFieldInstance(nodeInstance)) {\n      flatNodes.push(nodeInstance);\n    }\n    if (isContainerNodeInstance(nodeInstance)) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(\n          flattenNodesInstances((nodeInstance as AjfContainerNodeInstance).nodes, includeGroups));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isContainerNode} from '../nodes/is-container-node';\n\nexport function isContainerNodeInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isContainerNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {isSlidesNode} from './is-slides-node';\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (node.nodeType === AjfNodeType.AjfNodeGroup || isSlidesNode(node));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isSlidesNode(node: AjfNode): boolean {\n  return node != null &&\n      (node.nodeType === AjfNodeType.AjfRepeatingSlide || node.nodeType === AjfNodeType.AjfSlide);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeCreate, createNode} from '../nodes/create-node';\n\nexport type AjfFieldCreate =\n    Omit<AjfNodeCreate, 'nodeType'>&Pick<AjfField, 'fieldType'>&Partial<AjfField>;\n\nexport function createField(field: AjfFieldCreate): AjfField {\n  const node = createNode({...field, nodeType: AjfNodeType.AjfField});\n  const editable = field.editable != null ?\n      field.editable :\n      field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;\n  return {\n    ...node,\n    ...field,\n    nodeType: AjfNodeType.AjfField,\n    editable,\n    defaultValue: field.defaultValue != null ? field.defaultValue : null,\n    size: field.size || 'normal',\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport type AjfNodeCreate = Pick<AjfNode, 'nodeType'|'id'|'parent'|'name'>&Partial<AjfNode>;\n\nexport function createNode(node: AjfNodeCreate): AjfNode {\n  const conditionalBranches =\n      node.conditionalBranches != null && node.conditionalBranches.length > 0 ?\n      node.conditionalBranches :\n      [alwaysCondition()];\n  return {\n    ...node,\n    parentNode: node.parentNode != null ? node.parentNode : 0,\n    label: node.label || '',\n    visibility: node.visibility || alwaysCondition(),\n    conditionalBranches,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport function updateTriggerConditions(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): boolean {\n  if (instance.triggerConditions == null) {\n    return false;\n  }\n  const completeName = nodeInstanceCompleteName(instance);\n  if (instance.firstTriggerConditionDone[completeName]) {\n    return false;\n  }\n  let found = false;\n  const conditionsNum = instance.triggerConditions.length;\n  for (let i = 0; i < conditionsNum; i++) {\n    if (evaluateExpression(instance.triggerConditions[i].condition, context)) {\n      found = true;\n      break;\n    }\n  }\n  instance.firstTriggerConditionDone[completeName] = found;\n  return found;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from '../../interface/fields-instances/field-with-choices-instance';\n\nexport function updateFilteredChoices(\n    instance: AjfFieldWithChoicesInstance<any>, context: AjfContext): void {\n  if (instance.choicesFilter != null) {\n    instance.filteredChoices = instance.node.choicesOrigin.choices.filter(c => {\n      context.$choice = c;\n      context.$choiceValue = c.value;\n      return evaluateExpression(instance.choicesFilter!.formula, context);\n    });\n  } else {\n    instance.filteredChoices = instance.node.choicesOrigin.choices;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfFormulaFieldInstance} from '../../interface/fields-instances/formula-field-instance';\nimport {updateConditionalBranches} from '../nodes-instances/update-conditional-branches';\nimport {updateVisibility} from '../nodes-instances/update-visibility';\nimport {updateFormula} from './update-formula';\nimport {updateNextSlideCondition} from './update-next-slide-condition';\nimport {updateValidation} from './update-validation';\nimport {updateWarning} from './update-warning';\n\nexport function updateFieldInstanceState(\n    instance: AjfFieldInstance, context: AjfContext, branchVisibility = true): void {\n  updateVisibility(instance, context, branchVisibility);\n  updateConditionalBranches(instance, context);\n  updateFormula(instance as AjfFormulaFieldInstance, context);\n  updateValidation(instance, context);\n  updateWarning(instance, context);\n  updateNextSlideCondition(instance, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateWarningGroup} from '../warning/evaluate-warning-group';\n\nexport function updateWarning(instance: AjfFieldInstance, context: AjfContext): void {\n  const warning = instance.warning;\n  if (warning == null) {\n    return;\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && warning) {\n    instance.warningResults = evaluateWarningGroup(warning, context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarningConditions} from './evaluate-warning-conditions';\n\nexport function evaluateWarningGroup(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return evaluateWarningConditions(warning, context);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarning} from './evaluate-warning';\n\nexport function evaluateWarningConditions(\n    warning: AjfWarningGroup, context?: AjfContext): AjfWarningResult[] {\n  return warning.conditions.map(cond => evaluateWarning(cond, context));\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\n\nexport function evaluateWarning(\n    warning: AjfWarning, context?: AjfContext, forceFormula?: string): AjfWarningResult {\n  return {\n    result: evaluateExpression(warning.condition, context, forceFormula),\n    warning: warning.warningMessage,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateValidationGroup} from '../validation/evaluate-validation-group';\n\nexport function updateValidation(\n    instance: AjfFieldInstance, context: AjfContext, supplementaryInformations?: any): void {\n  const validation = instance.validation;\n  if (validation == null) {\n    instance.valid = true;\n    return;\n  }\n\n  if (supplementaryInformations) {\n    Object.keys(supplementaryInformations).forEach((key) => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && validation && validation.forceValue) {\n    instance.value = evaluateExpression(validation.forceValue.condition, context);\n    context[completeName] = instance.value;\n    context.$value = instance.value;\n  }\n\n  instance.validationResults =\n      evaluateValidationGroup(validation, context[completeName], context);\n  instance.valid = instance.validationResults.reduce(\n      (prev: boolean, x: AjfValidationResult) => prev && x.result, true);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nimport {evaluateValidationConditions} from './evaluate-validation-conditions';\nimport {evaluateValidationMaxDigits} from './evaluate-validation-max-digits';\nimport {evaluateValidationMaxValue} from './evaluate-validation-max-value';\nimport {evaluateValidationMinDigits} from './evaluate-validation-min-digits';\nimport {evaluateValidationMinValue} from './evaluate-validation-min-value';\nimport {evaluateValidationNotEmpty} from './evaluate-validation-not-empty';\n\nexport function evaluateValidationGroup(\n    validation: AjfValidationGroup, value: any, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  let ctx = deepCopy(context);\n  ctx['$value'] = value;\n  res = evaluateValidationConditions(validation, ctx);\n  if (validation.maxValue) {\n    const maxValue = evaluateValidationMaxValue(validation, value);\n    if (maxValue != null) {\n      res.push(maxValue);\n    }\n  }\n  if (validation.minValue) {\n    const minValue = evaluateValidationMinValue(validation, value);\n    if (minValue != null) {\n      res.push(minValue);\n    }\n  }\n  if (validation.notEmpty) {\n    const notEmpty = evaluateValidationNotEmpty(validation, value);\n    if (notEmpty != null) {\n      res.push(notEmpty);\n    }\n  }\n  if (validation.maxDigits) {\n    const maxDigits = evaluateValidationMaxDigits(validation, value);\n    if (maxDigits != null) {\n      res.push(maxDigits);\n    }\n  }\n  if (validation.minDigits) {\n    const minDigits = evaluateValidationMinDigits(validation, value);\n    if (minDigits != null) {\n      res.push(minDigits);\n    }\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationNotEmpty(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.notEmpty == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.notEmpty === 'boolean') {\n    return {\n      result: evaluateExpression(`($value != null) === ${validation.notEmpty}`, ctx),\n      error: 'Value must not be empty',\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.notEmpty, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.minValue}`, ctx),\n      error: `Value must be >= ${validation.minValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMinDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.minDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length >= ${validation.minDigits}`, ctx),\n      error: `Digits count must be >= ${validation.minDigits}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.minDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxValue(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.maxValue}`, ctx),\n      error: `Value must be <= ${validation.maxValue}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationMaxDigits(\n    validation: AjfValidationGroup, value: any): AjfValidationResult|null {\n  if (validation.maxDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length <= ${validation.maxDigits}`, ctx),\n      error: `Digits count must be <= ${validation.maxDigits}`,\n      clientValidation: false\n    };\n  }\n  return evaluateValidation(validation.maxDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\nexport function evaluateValidationConditions(\n    validation: AjfValidationGroup, context?: AjfContext): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  validation.conditions.forEach((cond) => {\n    res.push(evaluateValidation(cond, context));\n  });\n  return res;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nexport function evaluateValidation(\n    validation: AjfValidation, context?: AjfContext, forceFormula?: string): AjfValidationResult {\n  return {\n    result: evaluateExpression(validation.condition, context, forceFormula),\n    error: validation.errorMessage,\n    clientValidation: validation.clientValidation,\n  };\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\n\nexport function updateNextSlideCondition(instance: AjfFieldInstance, context: AjfContext): boolean {\n  if (instance.nextSlideCondition != null) {\n    return evaluateExpression(instance.nextSlideCondition.condition, context);\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * update the relative instance value and the context\n * if !editable evaluate expression once one time and flag changed is false\n */\nexport function updateFormula(\n    instance: AjfFieldInstance, context: AjfContext): {changed: boolean, value: any} {\n  const formula = instance.formula;\n  const editable = instance.node.editable;\n  if (formula != null && instance.visible && (!editable || (editable && instance.value == null))) {\n    let newValue: any = evaluateExpression(formula.formula, context);\n    const oldValue = instance.value;\n    if (newValue !== instance.value) {\n      instance.value = newValue;\n      context[nodeInstanceCompleteName(instance)] = instance.value;\n      context.$value = instance.value;\n    }\n    return {changed: newValue !== oldValue, value: newValue};\n  }\n  return {changed: false, value: instance.value};\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {nodeInstanceSuffix} from './node-instance-suffix';\n\nexport function nodeInstanceCompleteName(instance: AjfNodeInstance): string {\n  return instance != null && instance.node != null\n    ? `${instance.node.name}${nodeInstanceSuffix(instance)}`\n    : '';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function nodeInstanceSuffix(instance: AjfNodeInstance): string {\n  if (instance.prefix == null || instance.prefix.length == 0) {\n    return '';\n  }\n  return `__${instance.prefix.join('__')}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateVisibility(\n    instance: AjfNodeInstance, context: AjfContext, branchVisibility = true): boolean {\n  if (instance.visibility == null) {\n    instance.visible = false;\n    return false;\n  }\n  const visibility: AjfCondition = instance.visibility;\n\n  const oldVisibility: boolean = instance.visible;\n  let newVisibility: boolean =\n      branchVisibility && evaluateExpression(visibility.condition, context);\n  if (newVisibility !== instance.visible) {\n    instance.visible = newVisibility;\n  }\n\n  return oldVisibility !== newVisibility;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport function updateConditionalBranches(instance: AjfNodeInstance, context: AjfContext): boolean {\n  const conditionalBranches = instance.conditionalBranches;\n\n  if (conditionalBranches != null) {\n    const oldBranch = instance.verifiedBranch;\n    let idx = 0;\n    let found = false;\n    while (idx < conditionalBranches.length && !found) {\n      let verified: boolean = evaluateExpression(conditionalBranches[idx].condition, context);\n      if (verified) {\n        found = true;\n        if (idx !== instance.verifiedBranch) {\n          instance.verifiedBranch = idx;\n        }\n      }\n      idx++;\n    }\n\n    if (oldBranch !== instance.verifiedBranch) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isTableField} from '../fields/is-table-field';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isTableFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isTableField((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isTableField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Table;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\nexport function isFieldWithChoicesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && isFieldInstance(nodeInstance) &&\n      isFieldWithChoices((nodeInstance as AjfFieldInstance).node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isField} from '../nodes/is-field';\n\nexport function isFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isField(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\nexport function isField(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfField;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\nexport function isFieldWithChoices(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.SingleChoice ||\n      field.fieldType === AjfFieldType.MultipleChoice;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {componentsMap} from './fields-map';\n\nexport function isCustomFieldWithChoices(field: AjfField): boolean {\n  return field.fieldType > 100\n    && componentsMap[field.fieldType] != null\n    && componentsMap[field.fieldType].isFieldWithChoice === true;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {\n  AjfFieldWithChoicesInstance\n} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfFieldWithChoicesComponent<T>\n    extends AjfBaseFieldComponent<AjfFieldWithChoicesInstance<T>> {\n  private _searchThreshold: number = 6;\n  get searchThreshold(): number { return this._searchThreshold; }\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    warningAlertService: AjfWarningAlertService,\n    searchThreshold: number\n  ) {\n    super(cdr, service, warningAlertService);\n    if (searchThreshold != null) {\n      this._searchThreshold = searchThreshold;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {componentsMap} from './utils/fields/fields-map';\nimport {AjfFieldInstanceCreate} from './utils/fields-instances/create-field-instance';\n\nexport abstract class AjfFieldService {\n  readonly componentsMap: AjfFieldComponentsMap = componentsMap;\n\n  registerCustomField(field: {\n    fieldType: number,\n    component: Type<AjfBaseFieldComponent>,\n    createInstance?: (instance: AjfFieldInstanceCreate, context: AjfContext) => AjfFieldInstance;\n    isFieldWithChoice?: boolean,\n  }): void {\n    const {fieldType, component} = field;\n    if (fieldType < 100) {\n      throw new Error('Invalid custom field type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom field component');\n    }\n    this.componentsMap[fieldType] = field;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap} from '../../interface/fields/field-components-map';\n\nexport const componentsMap: AjfFieldComponentsMap = {};\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({selector: '[ajf-field-host]'})\nexport class AjfFieldHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {ChangeDetectorRef, ComponentFactoryResolver, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldHost} from './field-host';\nimport {AjfBaseFieldComponent} from '.';\n\nexport abstract class AjfFormField implements OnDestroy, OnInit {\n  fieldHost: AjfFieldHost;\n\n  private _instance: AjfFieldInstance;\n  get instance(): AjfFieldInstance { return this._instance; }\n  set instance(instance: AjfFieldInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._loadComponent();\n    }\n  }\n\n  private _readonly: boolean;\n  get readonly(): boolean { return this._readonly; }\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    if (this._componentInstance != null) {\n      this._componentInstance.readonly = this._readonly;\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _componentInstance: AjfBaseFieldComponent<AjfFieldInstance>;\n\n  protected abstract componentsMap: AjfFieldComponentsMap;\n  private _updatedSub = Subscription.EMPTY;\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _cfr: ComponentFactoryResolver\n  ) { }\n\n  ngOnDestroy(): void {\n    this._updatedSub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    this._updatedSub.unsubscribe();\n    this._updatedSub = Subscription.EMPTY;\n    if (this._instance == null || this.fieldHost == null) { return; }\n\n    const vcr = this.fieldHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.componentsMap[this._instance.node.fieldType];\n    if (componentDef == null) { return; }\n    const component = componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      this._componentInstance = componentRef.instance;\n      this._componentInstance.instance = this._instance;\n      this._componentInstance.readonly = this._readonly;\n\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in  this._componentInstance) {\n            ( this._componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n      this._updatedSub = this._instance.updatedEvt.subscribe(() => this._cdr.markForCheck());\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\n\nimport {AjfValidationResult} from './interface/validation/validation-results';\n\n@Pipe({name: 'ajfFieldIsValid'})\nexport class AjfFieldIsValidPipe {\n    transform(validationResults?: AjfValidationResult[]): boolean {\n        return validationResults != null\n            && validationResults.filter((f) => !f.result).length === 0;\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\n\n@Pipe({name: 'ajfFieldIcon'})\nexport class AjfFieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(\n        (field as AjfField).fieldType ? (field as AjfField).fieldType : field as AjfFieldType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './interface/fields/field-type';\n\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${\n    typeof AjfFieldType[type] === 'string'\n    ? AjfFieldType[type].toLowerCase()\n    : type}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  Geolocation,\n  Barcode,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  get name(): string { return 'AjfInvalidFieldDefinitionError'; }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport {format} from 'date-fns';\n\n@Injectable()\n@Pipe({name: 'ajfDateValueString'})\nexport class AjfDateValueStringPipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): string|undefined {\n    if (date == null) { return undefined; }\n    const dateObj = date === 'today' ? new Date() : date;\n    return format(dateObj, 'YYYY-MM-DD');\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfDateValue'})\nexport class AjfDateValuePipe implements PipeTransform {\n  transform(date: Date|'today'|undefined): Date|undefined {\n    if (date == null) { return undefined; }\n    return date === 'today' ? new Date() : date as Date;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\nimport {ChangeDetectorRef, OnDestroy, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\nexport abstract class AjfBaseFieldComponent<T extends AjfFieldInstance = AjfFieldInstance>\n    implements OnDestroy, OnInit {\n  private _instance: T;\n  get instance(): T { return this._instance; }\n  set instance(instance: T) {\n    if (instance !== this._instance) {\n      this._instance = instance;\n      this._setUpInstanceUpdate();\n      this._onInstanceChange();\n    }\n  }\n\n  protected _readonly: boolean;\n  get readonly(): boolean { return this._readonly; }\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _control: Observable<AbstractControl | null>;\n  get control(): Observable<AbstractControl | null> { return this._control; }\n\n  private _warningTriggerSub: Subscription = Subscription.EMPTY;\n  private _instanceUpdateSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    protected _changeDetectorRef: ChangeDetectorRef,\n    private _service: AjfFormRendererService,\n    private _warningAlertService: AjfWarningAlertService,\n  ) {\n    this._control = defer(() => this._service.getControl(this.instance).pipe(\n      map(ctrl => ctrl || new FormControl()),\n    ));\n  }\n\n  ngOnInit(): void {\n    this._warningTriggerSub = this.instance.warningTrigger.pipe(\n      withLatestFrom(this.control),\n      filter(v => v[1] != null)\n    ).subscribe((v: [void, AbstractControl | null]) => {\n      if (this.instance.warningResults == null) { return; }\n      const control = v[1];\n      const s = this._warningAlertService.showWarningAlertPrompt(\n        this.instance.warningResults.filter(w => w.result).map(w => w.warning)\n      ).subscribe(\n        (r: AjfFieldWarningAlertResult) => {\n          if (r.result) { control!.setValue(null); }\n        },\n        (_e: any) => { if (s) { s.unsubscribe(); }},\n        () => { if (s) { s.unsubscribe(); }}\n      );\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._warningTriggerSub.unsubscribe();\n    this._instanceUpdateSub.unsubscribe();\n  }\n\n  protected _onInstanceChange(): void { }\n\n  private _setUpInstanceUpdate(): void {\n    this._instanceUpdateSub.unsubscribe();\n    if (this._instance != null) {\n      this._instanceUpdateSub = this._instance.updatedEvt.subscribe(() => {\n        if (this._changeDetectorRef) {\n          try {\n            this._changeDetectorRef.detectChanges();\n          } catch (e) { }\n        }\n      });\n    } else {\n      this._instanceUpdateSub = Subscription.EMPTY;\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n}\n"],"names":["((/** @type {?} */ (esprima))).default"],"mappings":"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"}