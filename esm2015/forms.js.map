{"version":3,"file":"forms.js","sources":["../../../src/core/forms/forms.ts","../../../src/core/forms/forms-module.ts","../../../src/core/forms/table-row-class.ts","../../../src/core/forms/field-is-valid.ts","../../../src/core/forms/bool-to-int.ts","../../../src/core/forms/form.ts","../../../src/core/forms/form-renderer.ts","../../../src/core/forms/validation-service.ts","../../../src/core/forms/form-renderer-utils.ts","../../../src/core/forms/field.ts","../../../src/core/forms/nodes-instances.ts","../../../src/core/forms/field-icon.ts","../../../src/core/forms/field-utils.ts","../../../src/core/forms/nodes.ts","../../../src/core/forms/warning.ts","../../../src/core/forms/validation.ts","../../../src/core/forms/math.ts","../../../src/core/forms/errors.ts","../../../src/core/forms/choices.ts","../../../src/core/forms/get-type-name.ts","../../../src/core/forms/attachments.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfAttachmentsOrigin} from './attachments';\nimport {AjfChoicesOrigin, IAjfChoicesOrigin} from './choices';\nimport {AjfNode} from './nodes';\n\n\nexport class AjfForm extends AjfJsonSerializable {\n  nodes: AjfNode[];\n  choicesOrigins: IAjfChoicesOrigin[];\n  attachmentsOrigins: AjfAttachmentsOrigin[];\n  initContext: any;\n  topBar: boolean;\n  valid = true;\n  stringIdentifier: {label: string, value: string[]}[];\n  lastSelectedLocation: boolean = true;\n  supplementaryInformations: any;\n  /**\n   * this method will load an AjfForm from json\n   * @param obj : any - object form\n   * @return AjfForm\n   */\n  static fromJson(obj: any, context?: any): AjfForm {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n      obj.initContext = context;\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('choicesOrigins') > -1 &&\n        obj.choicesOrigins instanceof Array) {\n      let cos: IAjfChoicesOrigin[] = [];\n      for (let i = 0; i < obj.choicesOrigins.length; i++) {\n        cos.push(AjfChoicesOrigin.fromJson(obj.choicesOrigins[i]));\n      }\n      obj.choicesOrigins = cos;\n    }\n\n    if (keys.indexOf('attachmentsOrigins') > -1 &&\n        obj.attachmentsOrigins instanceof Array) {\n      let cos: AjfAttachmentsOrigin[] = [];\n      for (let i = 0; i < obj.attachmentsOrigins.length; i++) {\n        cos.push(AjfAttachmentsOrigin.fromJson(obj.attachmentsOrigins[i]));\n      }\n      obj.attachmentsOrigins = cos;\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let fs: AjfNode[] = [];\n      for (let i = 0; i < obj.nodes.length; i++) {\n        let nodeObj: any = obj.nodes[i];\n        let node: AjfNode;\n        node = AjfNode.fromJson(nodeObj, obj.choicesOrigins,\n                                obj.attachmentsOrigins, context);\n        fs.push(node);\n      }\n      obj.nodes = fs;\n    }\n\n    return new AjfForm(obj);\n  }\n\n  static toString(schema: any, json: any, emptyString = ''): string | null {\n    if (schema.stringIdentifier != null && schema.stringIdentifier.length > 0) {\n      let str: string[] = schema.stringIdentifier.map((s: any) => {\n        let values: string[] = [];\n        if (s.value != null && s.value.length > 0) {\n          s.value.forEach((curValue: any) => {\n            let val: any;\n            let vp: string[] = curValue.split('.');\n            let cp: any = json;\n            vp.forEach(k => {\n              if (Object.keys(cp).indexOf(k) > -1) {\n                val = cp[k];\n                cp = cp[k];\n              }\n            });\n            if (val instanceof Array && val.length > 0) {\n              val = val.join(', ');\n            }\n            if (typeof(val) === 'string' && val != null) {\n              values.push(val);\n            }\n          });\n        }\n        return `${s.label}: ${values.length > 0 ? values.join(', ')\n                                                : emptyString}`;\n      });\n      return str.join(' - ');\n    }\n    return null;\n  }\n\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n        [ 'nodes', 'choicesOrigins', 'stringIdentifier', 'topBar' ]);\n\n    this.nodes = obj && obj.nodes || [];\n    this.choicesOrigins = obj && obj.choicesOrigins || [];\n    this.attachmentsOrigins = obj && obj.attachmentsOrigins || [];\n    this.initContext = obj && obj.initContext || {};\n    this.stringIdentifier = obj && obj.stringIdentifier || [];\n    this.lastSelectedLocation = obj && obj.lastSelectedLocation == false ? false : true;\n    this.supplementaryInformations = obj && obj.supplementaryInformations || null;\n  }\n  /**\n   * this method will get child nodes from ajfNode\n   * @param   node : AjfNode\n   * @return ajfNode[] - the child og AjfNode\n   */\n  getChildNodes(node: AjfNode): AjfNode[] {\n    return this.nodes.filter(n => n.parent === node.id).sort(n => n.parentNode);\n  }\n  /**\n   * this method will get root node\n   * @return ajfNode - the root node\n   */\n  getRootNode(): AjfNode | null {\n    if (this.nodes == null || this.nodes.length === 0) {\n      return null;\n    }\n    let ns: AjfNode[] = this.nodes.filter(n => n.parent == null);\n    return ns.length === 1 ? ns[0] : null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {BoolToIntPipe} from './bool-to-int';\nimport {FieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFormRendererService} from './form-renderer';\nimport {TableRowClass} from './table-row-class';\nimport {AjfValidationService} from './validation-service';\n\n\n@NgModule({\n  declarations: [\n    AjfFieldIsValidPipe,\n    BoolToIntPipe,\n    FieldIconPipe,\n    TableRowClass,\n  ],\n  exports: [\n    AjfFieldIsValidPipe,\n    BoolToIntPipe,\n    FieldIconPipe,\n    TableRowClass,\n  ],\n  providers: [\n    AjfFormRendererService,\n    AjfValidationService\n  ]\n})\nexport class AjfFormsModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'tableRowClass'})\nexport class TableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfFieldInstance} from './nodes-instances';\n\n@Pipe({ name: 'ajfFieldIsValid' })\nexport class AjfFieldIsValidPipe {\n    transform(fieldInstance: AjfFieldInstance): boolean {\n        if (\n            fieldInstance &&\n            fieldInstance.validationResults &&\n            fieldInstance.validationResults.length === 0\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'boolToInt'})\nexport class BoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, AfterViewChecked, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@ajf/core/utils';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\nimport {AjfForm} from './forms';\nimport {AjfFieldType} from './nodes';\nimport {\n  AjfNodeGroupInstance, AjfNodeInstance, AjfRepeatingSlideInstance, IAjfSlideInstance\n} from './nodes-instances';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<IAjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation>\n    = new EventEmitter<AjfPageSliderOrientation>();\n  readonly orientationChange: Observable<AjfPageSliderOrientation> =\n    this._orientationChange.asObservable();\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean { return this._saveDisabled; }\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean { return this._hasStartMessage; }\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean { return this._hasEndMessage; }\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean { return this._hideTopToolbar; }\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean { return this._hideBottomToolbar; }\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean { return this._hideNavigationButtons; }\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean { return this._fixedOrientation; }\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation { return this._orientation; }\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') { return; }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  formSlider: AjfPageSlider;\n  fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  readonly formAction: Observable<AjfFormActionEvent> = this._formAction.asObservable();\n\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete)\n    );\n  }\n\n  isRepeatingSlide(slide: IAjfSlideInstance): boolean {\n    return slide instanceof AjfRepeatingSlideInstance;\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void { this._errorMoveEvent.emit(true); }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void { this._errorMoveEvent.emit(false); }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.addGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'down'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(nodeGroup: AjfNodeGroupInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService.removeGroup(nodeGroup).pipe(\n      delayWhen(() => this.formSlider.pageScrollFinish),\n    ).subscribe(\n        (r) => { if (r && this.formSlider != null) { this.formSlider.slide({dir: 'up'}); } },\n        (_e) => { if (s) { s.unsubscribe(); } },\n        () => { if (s) { s.unsubscribe(); } }\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue()\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent).pipe(\n        withLatestFrom(this._errorPositions)\n      ).subscribe((v: [boolean, number[]]) => {\n          const move = v[0];\n          const currentPosition = this.formSlider.currentPage - (+this.hasStartMessage) + 1;\n          const errors = v[1];\n          if (errors == null) { return; }\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return node.completeName;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\n\nimport {BehaviorSubject, Observable, Subject, Subscriber, Subscription, timer} from 'rxjs';\nimport {\n  debounceTime, filter, map, pairwise, publishReplay, refCount,\n  scan, share, startWith, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from './forms';\nimport {AjfEmptyField, AjfNode, AjfNodeGroup, AjfTableField} from './nodes';\nimport {\n  AjfFieldInstance, AjfFieldWithChoicesInstance, AjfNodeGroupInstance, AjfNodeInstance,\n  AjfRepeatingSlideInstance, AjfSlideInstance, AjfTableFieldInstance, IAjfNodeInstance,\n  IAjfSlideInstance\n} from './nodes-instances';\nimport {\n  IAjfNodesInstancesOperation, IAjfRendererUpdateMap, IAjfRendererUpdateMapOperation,\n  IAjfRendererUpdateTableMapOperation\n} from './form-renderer-operations';\nimport {\n  flattenNodes, flattenNodesTree, flattenNodesInstances, isContainerNode,\n  isRepeatingNode, nodeToNodeInstance, orderedNodes\n} from './form-renderer-utils';\nimport {AjfValidationService} from './validation-service';\n\nimport {tokenize, Token} from 'esprima';\n\n\nexport enum AjfFormInitStatus {\n  Initializing,\n  Complete\n}\n\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _visibilityNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<IAjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<IAjfRendererUpdateMapOperation>\n    = new Subject<IAjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this._formInitEvent.asObservable();\n\n  private _formGroup: BehaviorSubject<FormGroup | null> =\n    new BehaviorSubject<FormGroup | null>(null);\n  readonly formGroup: Observable<FormGroup | null> = this._formGroup.asObservable();\n\n  private _form: BehaviorSubject<{form: AjfForm | null, context?: any} | null> =\n    new BehaviorSubject<{form: AjfForm | null, context?: any} | null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<IAjfNodeInstance[]>;\n  private _flatNodesTree: Observable<IAjfSlideInstance[]>;\n  private _nodesUpdates: Subject<IAjfNodesInstancesOperation>\n    = new Subject<IAjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<IAjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this._nextSlideTrigger.asObservable();\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum.asObservable();\n\n  get nodesTree(): Observable<IAjfSlideInstance[]> { return this._flatNodesTree; }\n  get errorPositions(): Observable<number[]> { return this._errorPositions; }\n  get errors(): Observable<number> { return this._errors; }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm | null, context: any = {}) {\n    this._initUpdateMapStreams();\n    if (\n      form != null && Object.keys(context).length === 0 &&\n      Object.keys(form.initContext).length > 0\n    ) {\n      context = form.initContext;\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) { return {}; }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group instanceof AjfNodeGroupInstance ?\n        group.nodeGroup.maxReps : group.slide.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group instanceof AjfNodeGroupInstance ?\n        group.nodeGroup.minReps : group.slide.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(\n      map((f) => {\n        const fieldName = field.completeName;\n        return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n      })\n    );\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n      withLatestFrom(this._nodes, this._form),\n      filter(v => v[2] != null && v[2].form != null),\n      map((v: [void, AjfNodeInstance[], {form: AjfForm | null, context?: any} | null]) => {\n        const nodes = v[1];\n        const form = v[2]!.form!;\n        let currentPosition = 0;\n        const errors: number[] = [];\n        nodes.forEach((node) => {\n          if (node instanceof AjfRepeatingSlideInstance) {\n            for (let i = 0 ; i < node.reps ; i ++) {\n              if (node.visible) {\n                currentPosition++;\n                if (i == 0) {\n                  node.position = currentPosition;\n                }\n                if (!node.validSlide(i)) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          } else if (node instanceof AjfSlideInstance) {\n            if (node.visible) {\n              currentPosition++;\n              node.position = currentPosition;\n              if (!node.valid) {\n                errors.push(currentPosition);\n              }\n            }\n          }\n        });\n        form.valid = errors.length == 0;\n        this._slidesNum.next(currentPosition);\n        return errors;\n      }),\n      publishReplay(),\n      refCount()\n    );\n    this._errors = this._errorPositions.pipe(\n      map(e => e != null ? e.length : 0),\n      startWith(0),\n      publishReplay(),\n      refCount()\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._visibilityNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._visibilityNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._repetitionNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._repetitionNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._conditionalBranchNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._conditionalBranchNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._formulaNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._formulaNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._validationNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._validationNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._warningNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._warningNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._filteredChoicesNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._filteredChoicesNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n    this._triggerConditionsNodesMap =\n      (<Observable<IAjfRendererUpdateTableMapOperation>>this._triggerConditionsNodesMapUpdates)\n        .pipe(\n          scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateTableMapOperation) => {\n            return op(rmap);\n          }, {}),\n          startWith<IAjfRendererUpdateMap>({}),\n          share()\n        );\n    this._nextSlideConditionsNodesMap =\n      (<Observable<IAjfRendererUpdateMapOperation>>this._nextSlideConditionsNodesMapUpdates).pipe(\n        scan((rmap: IAjfRendererUpdateMap, op: IAjfRendererUpdateMapOperation) => {\n          return op(rmap);\n        }, {}),\n        startWith<IAjfRendererUpdateMap>({}),\n        share()\n      );\n\n    this._nodesMaps = [\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = <Observable<{form: AjfForm | null, context?: any}>>this._form;\n    formObs\n      .pipe(map((_form) => {\n        return this._initFormGroupStreams(new FormGroup({}));\n      }))\n      .subscribe(this._formGroup);\n    formObs\n      .pipe(map((form) => {\n        return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n          const nodes = form != null && form.form != null ?\n            this._orderedNodesInstancesTree(\n              flattenNodes(form.form.nodes), form.form.nodes, undefined, [], form.context\n            ) : [];\n          let currentPosition = 0;\n          nodes.forEach((node) => {\n            if (node instanceof AjfRepeatingSlideInstance) {\n              for (let i = 0 ; i < node.reps ; i ++) {\n                if (node.visible) {\n                  currentPosition++;\n                  if (i == 0) {\n                    node.position = currentPosition;\n                  }\n                }\n              }\n            } else if (node instanceof AjfSlideInstance) {\n              if (node.visible) {\n                currentPosition++;\n                node.position = currentPosition;\n              }\n            }\n          });\n          return nodes;\n        };\n      }))\n      .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n    allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode,\n    prefix: number[], context: any, branchVisibility = true\n  ): AjfNodeInstance | null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      if (\n        instance instanceof AjfNodeGroupInstance ||\n        instance instanceof AjfRepeatingSlideInstance\n      ) {\n        this._explodeRepeatingNode(allNodes, instance, context);\n      } else if ( instance instanceof AjfSlideInstance ) {\n        instance.nodes = this._orderedNodesInstancesTree(\n          allNodes, instance.slide.nodes, instance.slide.id, prefix, context\n        );\n      }\n      instance.updateVisibility(context, branchVisibility);\n      instance.updateConditionalBranches(context);\n      if (instance instanceof AjfFieldWithChoicesInstance) {\n        instance.updateFilteredChoices(context);\n      } else if (instance instanceof AjfFieldInstance) {\n        instance.value = context[instance.completeName];\n        instance.updateFieldState(context);\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    oldReps: number, context: any\n  ): { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } {\n    const newReps = instance.reps;\n    const result: { added: AjfNodeInstance[] | null, removed: AjfNodeInstance[] | null } = {\n      added: null,\n      removed: null\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance instanceof AjfNodeGroupInstance) {\n        const node = new AjfEmptyField({\n          'label': instance.node.label\n        });\n        const newInstance = this._initNodeInstance(\n          allNodes, node, instance.prefix.slice(0), context);\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps ; i < newReps ; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup : instance.slide;\n        prefix.push(i);\n        orderedNodes(group.nodes, instance.node.id)\n          .forEach((n) => {\n            const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n            if (newInstance != null) {\n              newNodes.push(newInstance);\n              instance.nodes.push(newInstance);\n            }\n          });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance instanceof AjfNodeGroupInstance) {\n        nodesNum ++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach((n => {\n        this._removeNodeInstance(n);\n      }));\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      if (fg != null && fg.contains(instance.completeName)) {\n        fg.controls[instance.completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance instanceof AjfRepeatingSlideInstance) {\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide = instance.nodesPerSlide;\n      for (let i = 0 ; i < instance.reps ; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      instance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates.asObservable()\n    .pipe(\n      withLatestFrom(this._formGroup),\n      filter(( values: [IAjfNodesInstancesOperation, FormGroup | null ]) => values[1] !== null)\n    )\n    .subscribe(( values: [IAjfNodesInstancesOperation, FormGroup | null ]) => {\n      const form: FormGroup = <FormGroup>values[1];\n      form.updateValueAndValidity();\n    });\n  }\n\n  private _explodeRepeatingNode(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    context: any\n  ) {\n    const oldReps = instance.updateRepsNum(context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    nodes: AjfNode[], parent: number | null = null,\n    prefix: number[] = [], context: any\n  ): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent)\n      .forEach((node: AjfNode) => {\n        const parentNodeInstance = nodesInstances.find(\n          ni => ni.node.id == node.parent && ni.suffix == curSuffix);\n        const branchVisibility = parentNodeInstance != null ?\n          parentNodeInstance.verifiedBranch != null &&\n          parentNodeInstance.verifiedBranch == node.parentNode : true;\n        const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n        if (nni != null) {\n          nodesInstances.push(nni);\n        }\n      });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue)\n      .filter((k) => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription = formGroup.valueChanges.pipe(\n      startWith<any>({}),\n      pairwise(),\n      debounceTime(200),\n      withLatestFrom<\n        [any, any], [[any, any], IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, AjfNodeInstance[]]\n      >(...(this._nodesMaps), this._flatNodes)\n    ).subscribe((\n        v: [[any, any], IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, IAjfRendererUpdateMap, IAjfRendererUpdateMap,\n        IAjfRendererUpdateMap, AjfNodeInstance[]]\n      ) => {\n        const oldFormValue = init && {} || v[0][0];\n        init = false;\n        const newFormValue = v[0][1];\n        const visibilityMap = v[1];\n        const repetitionMap = v[2];\n        const conditionalBranchesMap = v[3];\n        const formulaMap = v[4];\n        const validationMap = v[5];\n        const warningMap = v[6];\n        const nextSlideConditionsMap = v[7];\n        const filteredChoicesMap = v[8];\n        const triggerConditionsMap = v[9];\n        const nodes = v[10];\n\n        const delta = this._formValueDelta(oldFormValue, newFormValue);\n        const deltaLen = delta.length;\n        let updatedNodes: AjfNodeInstance[] = [];\n\n        delta.forEach((fieldName) => {\n          updatedNodes = updatedNodes.concat(nodes.filter(n => n.completeName === fieldName));\n          if (visibilityMap[fieldName] != null) {\n            visibilityMap[fieldName].forEach(nodeInstance => {\n              const visibilityChanged = nodeInstance.updateVisibility(newFormValue);\n              if (visibilityChanged && !nodeInstance.visible) {\n                const fg = this._formGroup.getValue();\n                if (fg != null) {\n                  const s = timer(200).subscribe(() => {\n                    if (s && !s.closed) { s.unsubscribe(); }\n                    fg.controls[nodeInstance.completeName].setValue(null);\n                  });\n                }\n                if (nodeInstance instanceof AjfFieldInstance) {\n                  (<AjfFieldInstance>nodeInstance).value = null;\n                }\n              } else if (\n                visibilityChanged && nodeInstance.visible &&\n                nodeInstance instanceof AjfFieldInstance\n              ) {\n                const fg = this._formGroup.getValue();\n                const res = (<AjfFieldInstance>nodeInstance).updateFormula(newFormValue);\n                if (fg != null && res.changed) {\n                  fg.controls[nodeInstance.completeName].setValue(res.value);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (repetitionMap[fieldName] != null) {\n            repetitionMap[fieldName].forEach(nodeInstance => {\n              if (\n                nodeInstance instanceof AjfNodeGroupInstance ||\n                nodeInstance instanceof AjfRepeatingSlideInstance\n              ) {\n                const oldReps = nodeInstance.updateRepsNum(newFormValue);\n                if (oldReps !== nodeInstance.reps) {\n                  this._adjustReps(nodes, nodeInstance, oldReps, newFormValue);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (conditionalBranchesMap[fieldName] != null) {\n            conditionalBranchesMap[fieldName].forEach((nodeInstance) => {\n              // const branchChanged = nodeInstance.updateConditionalBranches(newFormValue);\n              nodeInstance.updateConditionalBranches(newFormValue);\n              // if (branchChanged) {\n                const verifiedBranch = nodeInstance.verifiedBranch;\n                nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                  if (idx == verifiedBranch) {\n                    this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                  } else {\n                    this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                  }\n                });\n              // }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (formulaMap[fieldName] != null) {\n            formulaMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                const res = nodeInstance.updateFormula(newFormValue);\n                const fg = this._formGroup.getValue();\n                if (fg != null && res.changed) {\n                  nodeInstance.updateValidation(newFormValue);\n                  fg.controls[nodeInstance.completeName].setValue(res.value);\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (validationMap[fieldName] != null) {\n            validationMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                newFormValue.$value = newFormValue[nodeInstance.completeName];\n                nodeInstance.updateValidation(\n                  newFormValue,\n                  this.currentSupplementaryInformations\n                );\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (warningMap[fieldName] != null) {\n            warningMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldInstance) {\n                nodeInstance.updateWarning(newFormValue);\n                if (nodeInstance.warningResults.filter(warning => warning.result).length > 0) {\n                  nodeInstance.emitTriggerWarning();\n                }\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n            if (\n              nextSlideConditionsMap[fieldName].filter((nodeInstance) => {\n                if (nodeInstance instanceof AjfFieldInstance) {\n                  return nodeInstance.updateNextSlideCondition(newFormValue);\n                }\n                return false;\n              }).length == 1\n            ) {\n              this._nextSlideTrigger.emit();\n            }\n          }\n\n          if (filteredChoicesMap[fieldName] != null) {\n            filteredChoicesMap[fieldName].forEach((nodeInstance) => {\n              if (nodeInstance instanceof AjfFieldWithChoicesInstance) {\n                nodeInstance.updateFilteredChoices(newFormValue);\n              }\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n            const res = triggerConditionsMap[fieldName]\n              .filter((nodeInstance) => {\n                return nodeInstance instanceof AjfFieldWithChoicesInstance &&\n                  nodeInstance.updateTriggerConditions(newFormValue);\n              });\n            if (res.length == 1) {\n              (<AjfFieldWithChoicesInstance>res[0]).emitTriggerSelection();\n            }\n          }\n        });\n        updatedNodes.forEach(n => n.triggerUpdate());\n        if (initForm) {\n          initForm = false;\n          this._formInitEvent.emit(AjfFormInitStatus.Complete);\n        }\n        this._valueChanged.next();\n      });\n    return formGroup;\n  }\n\n  private _showSubtree(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance, branch?: number\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n    context: any, nodes: AjfNodeInstance[], node: AjfNodeInstance,\n    visible: boolean, branch?: number\n  ) {\n    let subNodes: AjfNodeInstance[];\n    if (branch != null) {\n      subNodes = nodes.filter(\n        n => {\n          return n.suffix == node.suffix && n.node.parent == node.node.id &&\n            n.node.parentNode == branch;\n        }\n      );\n    } else {\n      subNodes = nodes.filter(n => n.suffix == node.suffix && n.node.parent == node.node.id);\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach((n) => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        n.updateVisibility(context, visible);\n        if (n instanceof AjfFieldInstance) {\n          (<AjfFieldInstance>n).updateFormula(context);\n        }\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = this._nodesUpdates.pipe(\n      scan((nodes: AjfNodeInstance[], op: IAjfNodesInstancesOperation) => {\n        return op(nodes);\n      }, []),\n      share()\n    );\n    this._flatNodesTree = this._nodes.pipe(\n      map(nodes => flattenNodesTree(nodes)),\n      share()\n    );\n    this._flatNodes = this._flatNodesTree.pipe(\n      map(slides => {\n        let nodes: IAjfNodeInstance[] = [];\n        slides.forEach(s => {\n          nodes.push(s);\n          nodes = nodes.concat(s.flatNodes);\n        });\n        return nodes;\n      }),\n      share()\n    );\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstance.completeName;\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (nodeInstance instanceof AjfSlideInstance) {\n      return this._removeSlideInstance(nodeInstance);\n    } else if (isRepeatingNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(<AjfNodeGroupInstance | AjfRepeatingSlideInstance>nodeInstance);\n    } else if (nodeInstance instanceof AjfFieldInstance) {\n      this._removeFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.slide;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(\n    nodeGroupInstance: AjfNodeGroupInstance | AjfRepeatingSlideInstance\n  ): AjfNodeGroupInstance | AjfRepeatingSlideInstance {\n    const nodeGroup = nodeGroupInstance instanceof AjfNodeGroupInstance ?\n      nodeGroupInstance.nodeGroup : nodeGroupInstance.slide;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = fieldInstance.completeName;\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n          if (vmap[fieldInstanceName] == null) {\n            delete vmap[fieldInstanceName];\n          }\n          return vmap;\n        });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula != null) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (fieldInstance instanceof AjfNodeGroupInstance) {\n      if (fieldInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (\n      fieldInstance instanceof AjfFieldWithChoicesInstance && fieldInstance.choicesFilter != null\n    ) {\n      this._removeFromNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n      if (fieldInstance.triggerConditions != null) {\n        fieldInstance.triggerConditions.forEach((condition) => {\n          this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (\n      nodeInstance instanceof AjfRepeatingSlideInstance ||\n      nodeInstance instanceof AjfNodeGroupInstance\n    ) {\n      return this._addNodeGroupInstance(nodeInstance);\n    } else if (nodeInstance instanceof AjfSlideInstance) {\n      return this._addSlideInstance(nodeInstance);\n    } else if (nodeInstance instanceof AjfFieldInstance) {\n      return this._addFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = fieldInstance.completeName;\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (\n      formGroup != null && fieldInstance instanceof AjfTableFieldInstance\n      && (<AjfTableField>fieldInstance.node).editable\n    ) {\n      let node = <AjfTableField>fieldInstance.node;\n      let value: FormControl[][] = [];\n      node.rows.forEach((row) => {\n        let r: FormControl[] = [];\n        row.forEach((k) => {\n          const control = new FormControl();\n          control.setValue(fieldInstance.context[k]);\n          formGroup!.registerControl(k, control);\n          r.push(control);\n        });\n        value.push(r);\n      });\n      fieldInstance.controls = value;\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n          if (vmap[fieldInstanceName] == null) {\n            vmap[fieldInstanceName] = [];\n          }\n          if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n            vmap[fieldInstanceName].push(fieldInstance);\n          }\n          return vmap;\n        });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula != null) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (fieldInstance instanceof AjfNodeGroupInstance) {\n      if (fieldInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach((condition) => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach((condition) => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance, fieldInstance.nextSlideCondition.condition\n      );\n    }\n\n    if (fieldInstance instanceof AjfFieldWithChoicesInstance) {\n      if (fieldInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n      }\n      if (fieldInstance.triggerConditions != null) {\n        fieldInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.slide;\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(\n    nodeGroupInstance: AjfNodeGroupInstance | AjfRepeatingSlideInstance\n  ): AjfNodeGroupInstance | AjfRepeatingSlideInstance {\n    const nodeGroup = nodeGroupInstance instanceof AjfNodeGroupInstance ?\n      nodeGroupInstance.nodeGroup : nodeGroupInstance.slide;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeGroupInstance.completeName;\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<IAjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance, formula: string\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n    nodesMap: Subject<IAjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n    formula: string\n  ): void {\n    let tokens = tokenize(formula)\n      .filter((token: Token) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n        tokens.forEach((token: Token) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] != null) {\n            const idx = vmap[tokenName].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[tokenName].splice(idx, 1);\n              if (vmap[tokenName].length == 0) {\n                delete vmap[tokenName];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n    nodesMap: Subject<IAjfRendererUpdateMapOperation>, nodeInstance: AjfNodeInstance,\n    formula: string\n  ): void {\n    let tokens = tokenize(formula)\n      .filter((token: Token) => token.type == 'Identifier' && token.value != '$value');\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: IAjfRendererUpdateMap): IAjfRendererUpdateMap => {\n        tokens.forEach((token: Token) => {\n          let tokenName = token.value;\n          if (vmap[tokenName] == null) {\n            vmap[tokenName] = [];\n          }\n          if (vmap[tokenName].indexOf(nodeInstance) === -1) {\n            vmap[tokenName].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {AjfValidatedProperty} from '@ajf/core/models';\n\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'MM/DD/YYYY';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n      `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, treshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(treshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"MM\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the treshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var treshold = (res/counter)*coefficient || 0;\n          return treshold;\n        }\n      }`,\n    `var alert = function(source, property, treshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > treshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numeral(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'MM-DD-YYYY';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'MM';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfValidatedProperty.utils[name] === undefined) {\n      AjfValidatedProperty.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => typeof f === 'string' ? f : f.toString())\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfValidatedProperty.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {tokenize, Token} from 'esprima';\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\n\nimport {\n  AjfField, AjfFieldWithChoices, AjfNode, AjfNodeGroup, AjfRepeatingSlide, AjfSlide, AjfTableField\n} from './nodes';\nimport {\n  AjfFieldInstance, AjfTableFieldInstance, AjfFieldWithChoicesInstance, AjfNodeGroupInstance,\n  AjfNodeInstance, AjfRepeatingSlideInstance, AjfSlideInstance, IAjfSlideInstance\n} from './nodes-instances';\nimport {AjfValidation, AjfValidationGroup} from './validation';\nimport {AjfWarning, AjfWarningGroup} from './warning';\n\n\nexport function orderedNodes(nodes: AjfNode[], parent: number | null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes.filter((n: AjfNode) => n.parent == parent)\n    .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n    .forEach((n: AjfNode) => {\n      newNodes.push(n);\n      newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n    });\n  return newNodes;\n}\n\nexport function isRepeatingNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (\n      node instanceof AjfNodeGroup ||\n      node instanceof AjfSlide ||\n      node instanceof AjfRepeatingSlide\n    ) {\n      flatNodes = flatNodes.concat(flattenNodes(node.nodes));\n    }\n  });\n  return flatNodes;\n}\n\nexport function flattenNodesInstances(\n  nodes: AjfNodeInstance[], includeGroups = false\n): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (nodeInstance instanceof AjfFieldInstance) {\n      flatNodes.push(nodeInstance);\n    }\n    // @TODO missing composed fields\n    if (\n      nodeInstance instanceof AjfNodeGroupInstance ||\n      nodeInstance instanceof AjfSlideInstance ||\n      nodeInstance instanceof AjfRepeatingSlideInstance\n    ) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(flattenNodesInstances(nodeInstance.nodes, includeGroups));\n    }\n  });\n  return flatNodes;\n}\n\nexport function getAncestorRepeatingNodes(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode\n): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number | null = node.parent;\n  while (curParent != null) {\n    node = (<any[]>allNodes).find((n: AjfNode | AjfNodeInstance) => {\n      return n instanceof AjfNode ? n.id == curParent : n.node.id == curParent;\n    });\n    if (node instanceof AjfNodeInstance) {\n      node = node.node;\n    }\n    if (isRepeatingNode(node)) {\n      nodeGroups.push(node);\n    }\n    curParent = node != null ? node.parent : null;\n  }\n  return nodeGroups;\n}\n\nexport function getAncestorRepeatingNodesNames(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode\n): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  getAncestorRepeatingNodes(allNodes, node)\n    .forEach((n, idx) => {\n      ((<AjfNodeGroup>n).nodes || [])\n        .forEach((sn) => {\n          if (sn instanceof AjfField) {\n            names[sn.name] = idx;\n          }\n        });\n    });\n  return names;\n}\n\nexport function flattenNodesTree(nodes: AjfNodeInstance[]): IAjfSlideInstance[] {\n  let flatTree: IAjfSlideInstance[] = [];\n  nodes\n    .forEach((nodeInstance: AjfNodeInstance) => {\n      if (\n        nodeInstance instanceof AjfSlideInstance ||\n        nodeInstance instanceof AjfRepeatingSlideInstance\n      ) {\n        flatTree.push(nodeInstance);\n        nodeInstance.flatNodes = flattenNodesInstances(nodeInstance.nodes);\n      }\n    });\n  return flatTree;\n}\n\nexport function normalizeFormula(\n  formula: string, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): string {\n  const ancestorsNameStrings = Object.keys(ancestorsNames);\n  const tokens = tokenize(formula)\n    .filter((token: Token) => token.type == 'Identifier' && token.value != '$value')\n    .map((token: Token) => token.value);\n  tokens.forEach((t) => {\n    if (ancestorsNameStrings.indexOf(t) > -1) {\n      formula = formula.replace(\n        new RegExp(`\\\\b${t}\\\\b`, 'g'),\n        `${t}__${prefix.slice(ancestorsNames[t]).join('__')}`\n      );\n    }\n  });\n  return formula;\n}\n\nfunction getInstanceCondition(\n  condition: AjfCondition, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeFormula(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return new AjfCondition({condition: newCondition});\n}\n\nfunction getInstanceFormula(\n  formula: AjfFormula, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeFormula(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return new AjfFormula({formula: newFormula});\n}\n\nfunction getInstanceConditions(\n  conditions: AjfCondition[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map((condition) => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n\nfunction getInstanceValidation(\n  validation: AjfValidation, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeFormula(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return new AjfValidation({condition: newValidation});\n}\n\nfunction getInstanceValidations(\n  validations: AjfValidation[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfValidation[] {\n  let changed = false;\n  const newValidations = validations.map((validation) => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n\nfunction getInstanceWarning(\n  warning: AjfWarning, ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeFormula(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return new AjfWarning({condition: newWarning});\n}\n\nfunction getInstanceWarnings(\n  warnings: AjfWarning[], ancestorsNames: {[prop: string]: number}, prefix: number[]\n): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map((warning) => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n\nexport function nodeToNodeInstance(\n  allNodes: AjfNode[] | AjfNodeInstance[], node: AjfNode, prefix: number[], context: any\n): AjfNodeInstance | null {\n  let instance: AjfNodeInstance | null = null;\n  if (node instanceof AjfFieldWithChoices) {\n    instance = new AjfFieldWithChoicesInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfTableField) {\n    instance = new AjfTableFieldInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfField) {\n    instance = new AjfFieldInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfNodeGroup) {\n    instance = new AjfNodeGroupInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfRepeatingSlide) {\n    instance = new AjfRepeatingSlideInstance({node: node, prefix: prefix}, context);\n  } else if (node instanceof AjfSlide) {\n    instance = new AjfSlideInstance({node: node, prefix: prefix}, context);\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeFormula(oldVisibility, ancestorsNames, prefix);\n        instance.visibility = newVisibility !== oldVisibility ? new AjfCondition({\n          condition: newVisibility\n        }) : node.visibility;\n      }\n\n      instance.conditionalBranches = getInstanceConditions(\n        instance.node.conditionalBranches, ancestorsNames, prefix\n      );\n\n      if (\n          instance instanceof AjfNodeGroupInstance || instance instanceof AjfRepeatingSlideInstance\n        ) {\n        const formulaReps = instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup.formulaReps :\n          instance.slide.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeFormula(oldFormula, ancestorsNames, prefix);\n          instance.formulaReps = newFormula !== oldFormula ?\n            new AjfFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (instance instanceof AjfFieldInstance) {\n        if (instance.field.formula != null) {\n          instance.formula = getInstanceFormula(instance.field.formula, ancestorsNames, prefix);\n        }\n\n        if (instance.field.validation != null) {\n          const newConditions = getInstanceValidations(\n            instance.field.validation.conditions, ancestorsNames, prefix\n          );\n          if (newConditions !== instance.field.validation.conditions) {\n            instance.validation = new AjfValidationGroup(instance.field.validation);\n            instance.validation.conditions = newConditions;\n          } else {\n            instance.validation = instance.field.validation;\n          }\n        }\n\n        if (instance.field.warning != null) {\n          const newWarnings = getInstanceWarnings(\n            instance.field.warning.conditions, ancestorsNames, prefix\n          );\n          if (newWarnings !== instance.field.warning.conditions) {\n            instance.warning = new AjfWarningGroup(instance.field.warning);\n            instance.warning.conditions = newWarnings;\n          } else {\n            instance.warning = instance.field.warning;\n          }\n        }\n\n        if (instance.field.nextSlideCondition != null) {\n          instance.nextSlideCondition = getInstanceCondition(\n            instance.field.nextSlideCondition, ancestorsNames, prefix\n          );\n        }\n\n        if (instance instanceof AjfFieldWithChoicesInstance) {\n          if (instance.field.choicesFilter != null) {\n            instance.choicesFilter = getInstanceFormula(\n              instance.field.choicesFilter, ancestorsNames, prefix\n            );\n          }\n          if (instance.field.triggerConditions != null) {\n            instance.triggerConditions = getInstanceConditions(\n              instance.field.triggerConditions, ancestorsNames, prefix\n            );\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      instance.conditionalBranches = instance.node.conditionalBranches;\n      if (\n        instance instanceof AjfNodeGroupInstance || instance instanceof AjfRepeatingSlideInstance\n      ) {\n        instance.formulaReps = (instance instanceof AjfNodeGroupInstance ?\n          instance.nodeGroup : instance.slide).formulaReps;\n      } else if (instance instanceof AjfFieldInstance) {\n        instance.formula = instance.field.formula;\n        instance.validation = instance.field.validation;\n        instance.warning = instance.field.warning;\n        instance.nextSlideCondition = instance.field.nextSlideCondition;\n        if (instance instanceof AjfFieldWithChoicesInstance) {\n          instance.choicesFilter = instance.field.choicesFilter;\n          instance.triggerConditions = instance.field.triggerConditions;\n        }\n      }\n    }\n  }\n  return instance;\n}\n\nexport function findNodeInstanceInTree(\n  nodes: AjfNodeInstance[], node: AjfNodeInstance\n): {container: AjfNodeInstance[], index: number} {\n  const index = nodes.indexOf(node);\n  if (index > -1) {\n    return {container: nodes, index: index};\n  }\n  const groups = nodes.filter(n => isContainerNodeInstance(n));\n  let i = 0;\n  const len = groups.length;\n  while (i < len) {\n    const res = findNodeInstanceInTree((<any>groups[i]).node.nodes, node);\n    if (res.index > -1) {\n      return res;\n    }\n    i++;\n  }\n  return {\n    container: [],\n    index: -1\n  };\n}\n\nexport function flattenNodeInstances(nodes: AjfNodeInstance[] = []): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    flatNodes.push(nodeInstance);\n    if (\n      nodeInstance instanceof AjfNodeGroupInstance ||\n      nodeInstance instanceof AjfSlideInstance ||\n      nodeInstance instanceof AjfRepeatingSlideInstance\n    ) {\n      flatNodes = flatNodes.concat(flattenNodeInstances(nodeInstance.nodes));\n    }\n  });\n  return flatNodes;\n}\n\nexport function isContainerNodeInstance(node: AjfNodeInstance): boolean {\n  return node != null && (\n    node instanceof AjfSlideInstance ||\n    node instanceof AjfRepeatingSlideInstance ||\n    node instanceof AjfNodeGroupInstance\n  );\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AfterViewInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit} from '@angular/core';\nimport {AbstractControl} from '@angular/forms';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {filter, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldType, AjfFieldWithChoices} from './nodes';\nimport {\n  AjfDateFieldInstance, AjfEmptyFieldInstance, AjfFieldInstance,\n  AjfFieldWithChoicesInstance, AjfTableFieldInstance\n} from './nodes-instances';\nimport {AjfFormRendererService} from './form-renderer';\n\nexport interface AjfFormFieldWarningAlertResult { result: boolean; }\n\nexport class AjfFormFieldValueChanged { field: AjfFormField; }\n\n\nexport abstract class AjfFormField implements AfterViewInit, OnDestroy, OnInit {\n  // AjfFieldType obj implement the type of field\n  // ( String, Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed )\n  ajfFieldTypes = AjfFieldType;\n  // this observable implement abstract control\n  control: Observable<AbstractControl | null>;\n\n  private _fieldInstance: AjfFieldInstance;\n  get fieldInstance(): AjfFieldInstance { return this._fieldInstance; }\n  set fieldInstance(fieldInstance: AjfFieldInstance) {\n    this._fieldInstance = fieldInstance;\n    this._fieldUpdateSubscription.unsubscribe();\n    this._fieldUpdateSubscription = fieldInstance.updated.subscribe(() => {\n      if (this._changeDetectionRef) {\n        try {\n          this._changeDetectionRef.detectChanges();\n        } catch (e) { }\n      }\n    });\n  }\n\n  get fwcInst(): AjfFieldWithChoicesInstance {\n    return this._fieldInstance as AjfFieldWithChoicesInstance;\n  }\n  get fwc(): AjfFieldWithChoices { return this._fieldInstance.field as AjfFieldWithChoices; }\n  get datefInst(): AjfDateFieldInstance { return this._fieldInstance as AjfDateFieldInstance; }\n  get tablefInst(): AjfTableFieldInstance { return this._fieldInstance  as AjfTableFieldInstance; }\n  get emptyfInst(): AjfEmptyFieldInstance { return this._fieldInstance as AjfEmptyFieldInstance; }\n\n  singleChoiceSelect: any;\n  multipleChoiceSelect: any;\n\n  // this private AjfFieldValueChanged event emitter emit an event when the\n  // field value is changed\n  private _valueChanged: EventEmitter<AjfFormFieldValueChanged> =\n      new EventEmitter<AjfFormFieldValueChanged>();\n  // this @output expose the value changed like an observable\n  get valueChanged(): Observable<AjfFormFieldValueChanged> {\n    return this._valueChanged.asObservable();\n  }\n\n  private _triggerSelectionSubscription: Subscription = Subscription.EMPTY;\n  private _triggerWarningSubscription: Subscription = Subscription.EMPTY;\n  private _fieldUpdateSubscription: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init _rendererService _changeDetectionRef _alertCtrl\n   * and init the messagesWarning subscription\n   */\n  constructor(protected _rendererService: AjfFormRendererService,\n              protected _changeDetectionRef: ChangeDetectorRef) {}\n\n  abstract showWarningAlertPrompt(\n    messagesWarning: string[]\n  ): Observable<AjfFormFieldWarningAlertResult>;\n\n  /**\n   * this method will init the control, the filtere choices and the change\n   * detection reference\n   */\n  ngOnInit(): void {\n    this.control = this._rendererService.getControl(this.fieldInstance);\n    this._triggerWarningSubscription = this.fieldInstance.triggerWarning\n      .pipe(\n        withLatestFrom(this.control),\n        filter(v => v[1] != null)\n      )\n      .subscribe((v: [void, AbstractControl | null]) => {\n        const control = v[1];\n        const s = this.showWarningAlertPrompt(\n          this.fieldInstance.warningResults.filter(w => w.result).map(w => w.warning)\n        ).subscribe(\n          (r: AjfFormFieldWarningAlertResult) => {\n            if (r.result) { control!.setValue(null); }\n          },\n          (_e: any) => { if (s) { s.unsubscribe(); }},\n          () => { if (s) { s.unsubscribe(); }}\n        );\n      });\n  }\n\n  ngAfterViewInit() {\n    if (this.fieldInstance instanceof AjfFieldWithChoicesInstance) {\n      this._triggerSelectionSubscription = this.fieldInstance.triggerSelection\n        .subscribe(() => {\n          this._triggerSelection();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._triggerSelectionSubscription.unsubscribe();\n    this._triggerWarningSubscription.unsubscribe();\n    this._fieldUpdateSubscription.unsubscribe();\n  }\n\n  private _triggerSelection(): void {\n    if (this.singleChoiceSelect != null && !this.singleChoiceSelect._isOpen) {\n      this.singleChoiceSelect.open();\n    } else if (this.multipleChoiceSelect != null &&\n               !this.multipleChoiceSelect._isOpen) {\n      this.multipleChoiceSelect.open();\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable, ReplaySubject} from 'rxjs';\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\nimport {AjfChoice} from './choices';\nimport {\n  AjfDateField, AjfEmptyField, AjfField, AjfFieldWithChoices, AjfNode, AjfNodeGroup,\n  AjfRepeatingSlide, AjfSlide, AjfTableField, IAjfSlide\n} from './nodes';\nimport {AjfValidationGroup, AjfValidationResult} from './validation';\nimport {AjfWarningGroup, AjfWarningResult} from './warning';\n\n\nexport interface AjfFieldState {\n  visibility: boolean;\n  value: any;\n}\n\nexport interface IAjfNodeInstance {\n  node: AjfNode;\n  prefix?: number[];\n  visible?: boolean;\n}\n\n\nexport class AjfNodeInstance implements IAjfNodeInstance {\n  private _updatedEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _updated: Observable<void>;\n  get updated(): Observable<void> { return this._updated; }\n\n  private _node: AjfNode;\n  get node(): AjfNode { return this._node; }\n  // is the index of node loop\n  private _prefix: number[];\n  get prefix(): number[] { return this._prefix.slice(0); }\n  // if is true this node is visible on the form\n  private _visible: boolean;\n  get visible(): boolean { return this._visible; }\n\n  get suffix(): string {\n    if (this.prefix == null || this.prefix.length == 0) { return ''; }\n    return `__${this.prefix.join('__')}`;\n  }\n\n  /**\n   * this method will get the complete name of the field\n   * @return : string\n   */\n  get completeName(): string {\n    return `${this.node.name}${this.suffix}`;\n  }\n\n  //  index of conditionalBranches that verified the branch\n  verifiedBranch: number;\n  conditionalBranches: AjfCondition[];\n\n  visibility: AjfCondition | null;\n\n  constructor(params: IAjfNodeInstance, _context?: any) {\n    this._updated = this._updatedEvt.asObservable();\n\n    this._node = params.node;\n    this._prefix = params.prefix != null ? params.prefix.slice(0) : [];\n    this._visible = params.visible != null ? params.visible : true;\n  }\n\n  protected setNode(node: AjfNode) { this._node = node; }\n\n  triggerUpdate(): void {\n    this._updatedEvt.emit();\n  }\n\n  /**\n   * Update nodes visibility based on context value.\n   * Returns true if the visibility has changes\n   *\n   * @param context Context value\n   * @param branchVisibility\n   *\n   * @memberOf AjfNodeInstance\n   */\n  updateVisibility(context: any, branchVisibility = true): boolean {\n    if (this.visibility == null) { return false; }\n    const visibility: AjfCondition = this.visibility;\n\n    const oldVisibility: boolean = this.visible;\n    let newVisibility: boolean = branchVisibility && visibility.evaluate(context);\n    if (newVisibility !== this.visible) {\n      this._visible = newVisibility;\n    }\n\n    return oldVisibility !== newVisibility;\n  }\n\n  updateConditionalBranches(context: any): boolean {\n    const conditionalBranches = this.conditionalBranches;\n\n    if (conditionalBranches != null) {\n      const oldBranch = this.verifiedBranch;\n      let idx = 0;\n      let found = false;\n      while (idx < conditionalBranches.length && !found) {\n        let verified: boolean = conditionalBranches[idx].evaluate(context);\n        if (verified) {\n          found = true;\n          if (idx !== this.verifiedBranch) {\n            this.verifiedBranch = idx;\n          }\n        }\n        idx++;\n      }\n\n      if (oldBranch !== this.verifiedBranch) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nexport class AjfFieldInstance extends AjfNodeInstance {\n  // if the field pass the validation\n  valid: boolean;\n  // number of repetitions\n  reps = 0;\n  // an array of AjfValidationResult\n  protected _validationResults: AjfValidationResult[] = [];\n  // an array of AjfWarningResult\n  protected _warningResults: AjfWarningResult[] = [];\n  protected _defaultValue: any = null;\n\n  get field(): AjfField { return <AjfField>this.node; }\n  set field(field: AjfField) { this.setNode(field); }\n\n  private _value: any;\n  // the value of field\n  get value(): any { return this._value != null && this._value || this._defaultValue; }\n  set value(value: any) { this._value = value; }\n\n  private _triggerWarning: ReplaySubject<void> = new ReplaySubject<void>(1);\n  get triggerWarning(): Observable<void> { return this._triggerWarning.asObservable(); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    if (this.node != null && context != null) {\n      if (context[this.node.name] != null) {\n        this.value = context[this.node.name];\n      } else if (context[this.completeName] != null) {\n        this.value = context[this.completeName];\n      } else {\n        this.value = null;\n      }\n    }\n    const defVal = (<AjfField>this.node).defaultValue;\n    this._defaultValue = this.node && defVal != null ? defVal : null;\n  }\n\n  /**\n   * this method will get the validationResults value of the field\n   * @return : _validationResults\n   */\n  get validationResults(): AjfValidationResult[] {\n    return this._validationResults;\n  }\n\n  /**\n   * this method will get the warningResults value of the field\n   * @return : _warningResults\n   */\n  get warningResults(): AjfWarningResult[] {\n    return this._warningResults;\n  }\n\n  formula: AjfFormula | null;\n  validation: AjfValidationGroup | null;\n  warning: AjfWarningGroup | null;\n  nextSlideCondition: AjfCondition | null;\n\n  updateFormula(context: any): { changed: boolean, value: any } {\n    const formula = this.formula;\n    const editable = this.field.editable;\n    if (formula != null && this.visible && (!editable || (editable && this.value == null))) {\n      let newValue: any = formula.evaluate(context);\n      const oldValue = this.value;\n      if (newValue !== this.value) {\n        this.value = newValue;\n        context[this.completeName] = this.value;\n        context.$value = this.value;\n      }\n      return {\n        changed: newValue !== oldValue,\n        value: newValue\n      };\n    }\n    return { changed: false, value: this.value };\n  }\n\n  private _makeSupplementaryContext(context: any, supplementaryInformations: any): any {\n    Object.keys(supplementaryInformations).forEach((key) => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n    return context;\n  }\n\n  updateValidation(context: any, supplementaryInformations?: any): void {\n    const validation = this.validation;\n    if (validation == null) { return; }\n\n    if (supplementaryInformations) {\n      this._makeSupplementaryContext(context, supplementaryInformations);\n    }\n\n    if (context[this.completeName] != null && validation && validation.forceValue) {\n      this.value = validation.evaluateForceValue(context);\n      context[this.completeName] = this.value;\n      context.$value = this.value;\n    }\n\n    if (validation != null) {\n      this._validationResults = validation.evaluate(context[this.completeName], context);\n      this.valid = this.validationResults\n        .reduce((prev: boolean, x: AjfValidationResult) => prev && x.result, true);\n    } else {\n      this.valid = true;\n    }\n  }\n\n  updateWarning(context: any): void {\n    const warning = this.warning;\n\n    if (context[this.completeName] != null && warning) {\n      this._warningResults = warning.evaluate(context);\n    }\n  }\n\n  updateNextSlideCondition(context: any): boolean {\n    if (this.nextSlideCondition != null) {\n      return this.nextSlideCondition.evaluate(context);\n    }\n    return false;\n  }\n\n  /**\n   * this method will update the state of the field\n   * @param   context         : any - the context of the field to update\n   * @param   branchVisibility: boolean\n   */\n  updateFieldState(context: any, branchVisibility = true): void {\n    this.updateVisibility(context, branchVisibility);\n    this.updateConditionalBranches(context);\n    this.updateFormula(context);\n    this.updateValidation(context);\n    this.updateWarning(context);\n    this.updateNextSlideCondition(context);\n  }\n\n  emitTriggerWarning(): void {\n    this._triggerWarning.next();\n  }\n}\n\nexport class AjfFieldWithChoicesInstance extends AjfFieldInstance {\n  choicesFilter: AjfFormula;\n  filteredChoices: AjfChoice<any>[];\n  triggerConditions: AjfCondition[];\n\n  get field(): AjfFieldWithChoices { return <AjfFieldWithChoices>this.node; }\n  set field(field: AjfFieldWithChoices) { this.setNode(field); }\n\n  private _triggerSelection: ReplaySubject<null> = new ReplaySubject<null>(1);\n  get triggerSelection(): Observable<null> { return this._triggerSelection.asObservable(); }\n  private _firstTriggerConditionDone: any = {};\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    this.filteredChoices = this.field.choices.slice(0);\n  }\n\n  updateFilteredChoices(context: any): void {\n    if (this.choicesFilter != null) {\n      this.filteredChoices = this.field.choicesOrigin\n        .getChoices()\n        .filter(c => {\n          context.$choiceValue = c.value;\n          return this.choicesFilter.evaluate(context);\n        });\n    } else {\n      this.filteredChoices = this.field.choicesOrigin\n        .getChoices();\n    }\n  }\n\n  updateTriggerConditions(context: any): boolean {\n    if (this._firstTriggerConditionDone[this.completeName]) {\n      return false;\n    }\n    let found = false;\n    const conditionsNum = this.triggerConditions.length;\n    for (let i = 0 ; i < conditionsNum ; i++) {\n      if (this.triggerConditions[i].evaluate(context)) {\n        found = true;\n        break;\n      }\n    }\n    this._firstTriggerConditionDone[this.completeName] = found;\n    return found;\n  }\n\n  emitTriggerSelection(): void {\n    this._triggerSelection.next(null);\n  }\n}\n\nexport class AjfNodeGroupInstance extends AjfNodeInstance {\n  nodesNames: string[];\n  nodes: AjfNodeInstance[];\n  flatNodes: AjfNodeInstance[];\n  formulaReps: AjfFormula | null;\n\n  // number of repetitions\n  private _reps: number;\n  get reps(): number { return this._reps; }\n  set reps(reps: number) {\n    this._reps = reps;\n    this._repsArr = new Array(reps);\n  }\n\n  private _repsArr: Array<number>;\n  get repsArr(): Array<number> { return this._repsArr; }\n\n  get valid(): boolean {\n    return this.nodes.map(n => {\n      if (Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    }).reduce((v1, v2) => v1 && v2);\n  }\n\n  get nodeGroup(): AjfNodeGroup { return <AjfNodeGroup>this.node; }\n  protected setNodeGroup(nodeGroup: AjfNodeGroup) { this.setNode(nodeGroup); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n  }\n\n  updateRepsNum(context: any): number {\n    const oldReps: number = this.reps || 0;\n    if (this.nodeGroup.formulaReps == null) {\n      const ctxReps = context[this.completeName];\n      if (ctxReps != null) {\n        this.reps = ctxReps;\n      } else if (oldReps == 0) {\n        this.reps = 1;\n      }\n    } else {\n      let newReps = this.nodeGroup.formulaReps.evaluate(context);\n      if (newReps !== oldReps) {\n        this.reps = newReps;\n      }\n    }\n    return oldReps;\n  }\n}\n\nexport interface IAjfSlideInstance extends IAjfNodeInstance {\n  nodes: AjfNodeInstance[];\n  flatNodes: AjfNodeInstance[];\n  readonly valid: boolean;\n  readonly slide: IAjfSlide;\n}\n\nexport class AjfSlideInstance extends AjfNodeInstance implements IAjfSlideInstance {\n  nodes: AjfNodeInstance[] = [];\n  flatNodes: AjfNodeInstance[] = [];\n  position: number;\n  get valid(): boolean {\n    return this.flatNodes.map(n => {\n      if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    }).reduce((v1, v2) => v1 && v2, true);\n  }\n  get slide(): AjfSlide { return <AjfSlide>this.node; }\n  protected setSlide(slide: AjfSlide) { this.setNode(slide); }\n}\n\nexport class AjfRepeatingSlideInstance extends AjfSlideInstance implements IAjfSlideInstance {\n  formulaReps: AjfFormula;\n  position: number;\n  slideNodes: AjfNodeInstance[][];\n  canRemoveGroup: boolean;\n  canAddGroup: boolean;\n\n  private _reps: number;\n  get reps(): number { return this._reps; }\n  set reps(reps: number) {\n    this._reps = reps;\n    this.canRemoveGroup = this.slide.minReps === 0 || reps > this.slide.minReps;\n    this.canAddGroup = this.slide.maxReps === 0 || reps < this.slide.maxReps;\n    this._repsArr = new Array(reps);\n  }\n\n  private _repsArr: Array<number>;\n  get repsArr(): Array<number> { return this._repsArr; }\n\n  get slide(): AjfRepeatingSlide { return <AjfRepeatingSlide>this.node; }\n\n  get nodesPerSlide(): number {\n    return this.nodes != null ? this.nodes.length / this.reps : 0;\n  }\n\n  protected setSlide(slide: AjfRepeatingSlide) { this.setNode(slide); }\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n  }\n\n  validSlide(idx: number): boolean {\n    if (idx >= this.slideNodes.length) {\n      return true;\n    }\n    return this.slideNodes[idx]\n      .map(n => {\n        if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n          return (<any>n).valid;\n        }\n        return true;\n      }).reduce((v1, v2) => v1 && v2, true);\n  }\n\n  slidePosition(idx: number): number {\n    return this.position + idx;\n  }\n\n  updateRepsNum(context: any): number {\n    const oldReps: number = this.reps || 0;\n    if (this.slide.formulaReps == null) {\n      const ctxReps = context[this.completeName];\n      if (ctxReps != null) {\n        this.reps = ctxReps;\n      } else if (oldReps == 0) {\n        this.reps = 1;\n      }\n    } else {\n      let newReps = this.slide.formulaReps.evaluate(context);\n      if (newReps !== oldReps) {\n        this.reps = newReps;\n      }\n    }\n    return oldReps;\n  }\n}\n\nexport class AjfTableFieldInstance extends AjfFieldInstance {\n\n  constructor(params: IAjfNodeInstance, context?: any) {\n    super(params, context);\n    this.setValue(context);\n    this._hideEmptyRows = (<AjfTableField>this.node).hideEmptyRows;\n  }\n\n  private _hideEmptyRows: boolean;\n\n  get hideEmptyRows(): boolean {\n    return this._hideEmptyRows;\n  }\n\n  private _matrixValue: string[][];\n  private _matrixFormControl: FormControl[][];\n  private _matrixFormControlWithLabels: (FormControl | string)[][];\n  private _context: any = {};\n\n\n  get controls(): FormControl[][] {\n    return this._matrixFormControl;\n  }\n\n  set controls(v: FormControl[][]) {\n    this._matrixFormControl = v;\n    this._matrixFormControlWithLabels = this._controlsWithLabels();\n  }\n\n  get controlsWithLabels(): (FormControl | string)[][] {\n    return this._matrixFormControlWithLabels;\n  }\n\n  private _controlsWithLabels(): (FormControl | string) [][] {\n    let node = <AjfTableField>this.node;\n    let ret: (FormControl | string)[][] = [];\n    let i = 0;\n    for (let rowLabel of <any>(node.rowLabels)) {\n      ret.push([rowLabel].concat(<any>this._matrixFormControl[i]));\n      i = i + 1;\n    }\n    ret.unshift([node.label].concat(node.columnLabels));\n    return ret;\n  }\n\n  get value() {\n    let node = <AjfTableField>this.node;\n    if (node.editable) {\n      return this._matrixFormControl;\n    }\n    return this._matrixValue;\n  }\n  set value(_v: any) {}\n\n  get context(): any {\n    return this._context;\n  }\n\n  setValue(context: any) {\n    let node = <AjfTableField>this.node;\n    if (!node.editable) {\n      let value: string[][] = [];\n      let rowIndex = 0;\n      node.rows.forEach((row) => {\n        row.forEach((k) => {\n          this._context[k] = context[k];\n        });\n        value[rowIndex] = [node.rowLabels[rowIndex]]\n          .concat(\n          row.map(k => context[k])\n          );\n        rowIndex += 1;\n      });\n      value.unshift([node.label].concat(node.columnLabels));\n      this._matrixValue = value;\n    } else {\n      this._context = context;\n    }\n  }\n\n  get visibleColumns(): string[][] {\n    if (this.hideEmptyRows) {\n      return this.value\n        .filter((column: any[]) =>\n          column\n            .slice(1)\n            .reduce((a: any, b: any) => {\n              return a || (b != null && b !== '' && b !== 0 && b !== '0');\n            }, false));\n    }\n    return this.value;\n  }\n}\n\nexport class AjfDateFieldInstance extends AjfFieldInstance {\n  get field(): AjfDateField { return this.field; }\n  set field(field: AjfDateField) { this.setNode(field); }\n}\n\nexport class AjfEmptyFieldInstance extends AjfFieldInstance {\n  get field(): AjfEmptyField { return this.field; }\n  set field(field: AjfEmptyField) { this.setNode(field); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField, AjfFieldType} from './nodes';\n\n@Pipe({name: 'fieldIcon'})\nexport class FieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(field instanceof AjfField ? field.fieldType : field);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './nodes';\n\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${AjfFieldType[type].toLowerCase()}`;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfAttachmentsOrigin} from './attachments';\nimport {IAjfChoicesOrigin} from './choices';\nimport {AjfInvalidFieldDefinitionError} from './errors';\nimport {factorial} from './math';\nimport {AjfValidationGroup} from './validation';\nimport {AjfWarningGroup} from './warning';\n\n\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH\n}\n\n\n/**\n * This class will define an ajf node\n */\nexport class AjfNode extends AjfJsonSerializable {\n  // node identification number\n  private _id: number;\n  get id(): number { return this._id; }\n  set id(id: number) { this._id = id; }\n\n  // id of predecessor node\n  private _parent: number;\n  get parent(): number { return this._parent; }\n  set parent(parent: number) { this._parent = parent; }\n\n  // is a id of parent node,  if this node is part of an AjfNodeGroup\n  private _parentNode: number;\n  get parentNode(): number { return this._parentNode; }\n  set parentNode(parentNode: number) { this._parentNode = parentNode; }\n\n  // an AjfCondition array\n  private _conditionalBranches: AjfCondition[];\n  /**\n   * this method will get the conditionalBranches of the field\n   * @return : _conditionalBranches\n   */\n  get conditionalBranches(): AjfCondition[] {\n    return this._conditionalBranches;\n  }\n  /**\n   * this method will set the conditionalBranches of the field\n   * @param conditionalBranches : AjfCondition[] - the new conditionalBranches\n   */\n  set conditionalBranches(conditionalBranches: AjfCondition[]) {\n    this._conditionalBranches = conditionalBranches;\n  }\n\n  // the name of the field\n  private _name: string;\n  /**\n   * this method will get the current name of field\n   * @return : _name\n   */\n  get name(): string {\n    return this._name;\n  }\n  /**\n   * this method will set the current name of field\n   * @param name : string - the new name\n   */\n  set name(name: string) {\n    this._name = name;\n  }\n  // hte label of the field\n  private _label: string;\n  /**\n   * this method will get the label of the field\n   * @return : _label\n   */\n  get label(): string {\n    return this._label;\n  }\n  /**\n   * this method will set the label of the field\n   * @param label : string - the new label\n   */\n  set label(label: string) {\n    this._label = label;\n  }\n\n  // AjfCondition for handling visibility\n  private _visibility: AjfCondition | null;\n  /**\n   * this method will get the visibility of the field\n   * @return : _visibility\n   */\n  get visibility(): AjfCondition | null {\n    return this._visibility;\n  }\n  /**\n   * this method will set the visibility of the field\n   * @param visibility : AjfCondition - the new visibility\n   */\n  set visibility(visibility: AjfCondition | null) {\n    this._visibility = visibility;\n  }\n\n  /**\n   * this method will load an AjfNode from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static fromJson(obj: any, choicesOrigins?: any[], attachmentsOrigins?: any[],\n      context?: any): AjfNode {\n    // array of string:  contains a keys Object\n    // example:\n    // [\"id\", \"name\", \"label\", \"visibility\", \"hasChoices\", \"parent\",\n    //  \"parentNode\", \"nodeType\", \"conditionalBranches\", \"fieldType\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('nodeType') === -1) {\n      throw new Error('Node type missing type');\n    }\n\n    let nodeType = obj.nodeType;\n    delete obj.nodeType;\n    if (AjfNodeType[nodeType] == null) {\n      throw new Error('Invalid node type');\n    }\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      if (cbs.length == 0) {\n        cbs.push(AjfCondition.alwaysCondition());\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return AjfNode.createNode(nodeType, obj, choicesOrigins, attachmentsOrigins, context);\n  }\n  /**\n   * this method will create an AjfNode\n   * @param nodeType           : identified a type of node (nodeGroup or nodeField)\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static createNode(\n    nodeType: AjfNodeType, obj?: any, choicesOrigins?: any[],\n    attachmentsOrigins?: any[], context?: any\n  ): AjfNode {\n    choicesOrigins = choicesOrigins || [];\n    attachmentsOrigins = attachmentsOrigins || [];\n    switch (nodeType) {\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeGroup.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfField:\n        return AjfField.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfRepeatingSlide.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      case AjfNodeType.AjfSlide:\n        return AjfSlide.fromJson(obj, choicesOrigins, attachmentsOrigins, context);\n      default:\n        throw new Error('Invalid node type');\n    }\n  }\n  /**\n   * this method get the nodeType\n   * @return AjfNodeType\n   */\n  get nodeType(): AjfNodeType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfField) {\n      return AjfNodeType.AjfField;\n    }\n    if (thisObj instanceof AjfFieldNodeLink) {\n      return AjfNodeType.AjfFieldNodeLink;\n    }\n    if (thisObj instanceof AjfNodeGroup) {\n      return AjfNodeType.AjfNodeGroup;\n    }\n    if (thisObj instanceof AjfRepeatingSlide) {\n      return AjfNodeType.AjfRepeatingSlide;\n    }\n    if (thisObj instanceof AjfSlide) {\n      return AjfNodeType.AjfSlide;\n    }\n    throw new Error('Invalid node type');\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'id', 'nodeType', 'parent', 'parentNode', 'visibility', 'name', 'label',\n      'conditionalBranches'\n    ]);\n\n    this._id         = obj && obj.id          || null;\n    this._parent     = obj && obj.parent      || null;\n    this._parentNode = obj && obj.parentNode  || 0;\n    this._visibility = obj && obj.visibility  || AjfCondition.alwaysCondition();\n    this._name       = obj && obj.name        || null;\n    this._label      = obj && obj.label       || null;\n    this._conditionalBranches = obj && obj.conditionalBranches || [AjfCondition.alwaysCondition()];\n  }\n\n  /**\n   * this method will set the conditiona branch number of the field\n   * @param cbn : number\n   */\n  setConditionalBranchesNum(cbn: number): void {\n    if (this.getMaxConditionalBranches() >= 0) {\n      cbn = Math.min(cbn, this.getMaxConditionalBranches());\n    }\n    if (cbn < this.conditionalBranches.length) {\n      this.conditionalBranches = this.conditionalBranches.slice(0, cbn);\n    } else if (cbn > this.conditionalBranches.length) {\n      for (let i = this.conditionalBranches.length; i < cbn; i++) {\n        this.conditionalBranches.push(AjfCondition.alwaysCondition());\n      }\n    }\n  }\n\n  /**\n   * this method will get the max xonditional branches of the field\n   * @return number\n   */\n  getMaxConditionalBranches(): number {\n    return -1;\n  }\n}\n\nexport class AjfFieldNodeLink extends AjfNode {\n}\n\n/**\n * this enumerate any field type\n */\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  LENGTH\n}\n\n/**\n * This class will define an ajf node group\n */\nexport class AjfNodeGroup extends AjfNode {\n  // array of ajfNode\n  private _nodes: AjfNode[];\n  get nodes(): AjfNode[] { return this._nodes; }\n  set nodes(nodes: AjfNode[]) { this._nodes = nodes; }\n\n  // is a node group repeat condition\n  // example: \"opd_treatment == 'Yes' && ($groupReps || 1) || 0\"\n  private _formulaReps: AjfFormula;\n  get formulaReps(): AjfFormula { return this._formulaReps; }\n  set formulaReps(formulaReps: AjfFormula) { this._formulaReps = formulaReps; }\n\n  // max number of repetitions\n  private _maxReps: number;\n  get maxReps(): number { return this._maxReps; }\n  set maxReps(maxReps: number) { this._maxReps = maxReps; }\n\n  // min number of repetitions\n  private _minReps: number;\n  get minReps(): number { return this._minReps; }\n  set minReps(minReps: number) { this._minReps = minReps; }\n\n  /**\n   * this method will load an AjfNodeGroup from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNodeGroup\n   */\n  static fromJson(obj: any, choicesOrigins: any[], attachmentsOrigins: any[],\n      context: any): AjfNodeGroup {\n    // array of string:  contains a keys Object\n    // example:\n    // [\"id\", \"parent\", \"parentNode\", \"formulaReps\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('formulaReps') > -1 && obj.formulaReps != null) {\n      obj.formulaReps = AjfFormula.fromJson(obj.formulaReps);\n    }\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    let ret =  new AjfNodeGroup(obj);\n\n    return ret;\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'formulaReps', 'minReps', 'maxReps', 'nodes'\n    ]);\n\n    this.nodes = obj && obj.nodes || [];\n    this.formulaReps = obj && obj.formulaReps || null;\n    this.maxReps = obj && obj.maxReps || null;\n    this.minReps = obj && obj.minReps || null;\n  }\n}\n\nexport interface IAjfSlide {\n  nodes: AjfNode[];\n}\n\n/**\n * Represents a form slide.\n * Slides are specialized node groups used to layout the form.\n * They must be at the root level of the form\n *\n * @export\n */\nexport class AjfSlide extends AjfNode implements IAjfSlide {\n  private _nodes: AjfNode[];\n  get nodes(): AjfNode[] { return this._nodes.slice(0); }\n  set nodes(nodes: AjfNode[]) { this._nodes = nodes.slice(0); }\n\n  static fromJson(\n    obj: any, choicesOrigins: any[], attachmentsOrigins: any[], context: any\n  ): AjfSlide {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return new AjfSlide(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['nodes']);\n\n    this._nodes = obj && obj.nodes || [];\n  }\n}\n\nexport class AjfRepeatingSlide extends AjfSlide {\n  private _formulaReps: AjfFormula | null;\n  get formulaReps(): AjfFormula | null { return this._formulaReps; }\n  set formulaReps(formulaReps: AjfFormula | null) { this._formulaReps = formulaReps; }\n\n  // max number of repetitions\n  private _maxReps: number;\n  get maxReps(): number { return this._maxReps; }\n  set maxReps(maxReps: number) { this._maxReps = maxReps; }\n\n  // min number of repetitions\n  private _minReps: number;\n  get minReps(): number { return this._minReps; }\n  set minReps(minReps: number) { this._minReps = minReps; }\n\n  static fromJson(\n    obj: any, choicesOrigins: any[], attachmentsOrigins: any[], context: any\n  ): AjfRepeatingSlide {\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        nodes.push(AjfNode.fromJson(obj.nodes[i], choicesOrigins, attachmentsOrigins));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('formulaReps') > -1 && obj.formulaReps != null) {\n      obj.formulaReps = AjfFormula.fromJson(obj.formulaReps);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return new AjfRepeatingSlide(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'nodes', 'formulaReps', 'minReps', 'maxReps'\n    ]);\n\n    this.formulaReps = obj && obj.formulaReps || null;\n    this.nodes = obj && obj.nodes || [];\n    this.minReps = obj && obj.minReps || 1;\n    this.maxReps = obj && obj.maxReps || 0;\n  }\n}\n\n/**\n * This class will define an ajf Field\n */\nexport abstract class AjfField extends AjfNode {\n  // a field description\n  private _description: string;\n  /**\n   * this method will get the description of the field\n   * @return : _description\n   */\n  get description(): string {\n    return this._description;\n  }\n  /**\n   * this method will set the description of the field\n   * @param description : string - the new description\n   */\n  set description(description: string) {\n    this._description = description;\n  }\n\n  // a boolean to identify an editable status\n  private _editable: boolean;\n  /**\n   * this method will get the editable status  of the field\n   * @return : _editable\n   */\n  get editable(): boolean {\n    return this._editable;\n  }\n  //  an AjfFormula\n  private _formula: AjfFormula | null;\n  /**\n   * this method will get the formula of the field\n   * @return : _formula\n   */\n  get formula(): AjfFormula | null {\n    return this._formula;\n  }\n  set formula(formula: AjfFormula | null) {\n    this._formula = formula;\n  }\n\n  // a boolean to identify if the field have choices\n  private _hasChoices = false;\n  /**\n   * this method will get the hasChoices status of the field\n   * @return : _hasChoices\n   */\n  get hasChoices(): boolean {\n    return this._hasChoices;\n  }\n\n  //  a default value\n  private _defaultValue: any;\n\n  /**\n   * this method will get the default value of the field\n   * @return : _defaultValue\n   */\n  get defaultValue(): any {\n    return this._defaultValue;\n  }\n\n  /**\n   * this method will set the defaultValue of the field\n   * @param defaultValue : any - the new defaultValue\n   */\n  set defaultValue(defaultValue: any) {\n    if (defaultValue == null || this.validateValue(defaultValue)) {\n      this._defaultValue = defaultValue;\n    } else {\n      throw new AjfInvalidFieldDefinitionError(\n        'The default value is not valid for this field type');\n    }\n  }\n\n  private _size: 'normal' | 'small' | 'smaller' | 'tiny' | 'mini';\n  get size(): 'normal' | 'small' | 'smaller' | 'tiny' | 'mini' {\n    return this._size;\n  }\n  set size(size: 'normal' | 'small' | 'smaller' | 'tiny' | 'mini') {\n    this._size = size;\n  }\n\n  //  an AjfValidationGroup\n  private _validation: AjfValidationGroup | null;\n\n  /**\n   * this method will get the validation value of the field\n   * @return : _validation\n   */\n  get validation(): AjfValidationGroup | null {\n    return this._validation;\n  }\n  set validation(validation: AjfValidationGroup | null) {\n    this._validation = validation;\n  }\n\n  // an AjfWarningGroup\n  private _warning: AjfWarningGroup | null;\n\n  /**\n   * this method will get the warning value of the field\n   * @return : _warning\n   */\n  get warning(): AjfWarningGroup | null {\n    return this._warning;\n  }\n  set warning(warning: AjfWarningGroup | null) {\n    this._warning = warning;\n  }\n\n  //  a boolean to identify if field has attachments\n  private _hasAttachments = false;\n  /**\n   * this method will get the hasAttachments status of the field\n   * @return : _hasAttachments\n   */\n  get hasAttachments(): boolean { return this._hasAttachments; }\n\n  // an AjfAttachmentsOrigin\n  private _attachmentsOrigin: AjfAttachmentsOrigin;\n\n  /**\n   * this method will get the attachmentsOrigin of the field\n   * @return : AjfAttachmentsOrigin\n   */\n  get attachmentsOrigin(): AjfAttachmentsOrigin | null {\n    return this.hasAttachments && this._attachmentsOrigin || null;\n  }\n\n  /**\n   * this method will get the attachments of the field\n   * @return : any the attachments\n   */\n  get attachments(): any[] {\n      return this.hasAttachments &&\n         this._attachmentsOrigin.getAttachments()  || [];\n  }\n\n  private _nextSlideCondition: AjfCondition | null;\n  get nextSlideCondition(): AjfCondition | null {\n    return this._nextSlideCondition;\n  }\n  set nextSlideCondition(condition: AjfCondition | null) {\n    this._nextSlideCondition = condition;\n  }\n\n  // @TODO Maybe not used??\n  private _nextSlide: boolean;\n  get nextSlide(): boolean {\n    return this._nextSlide;\n  }\n  set nextSlide(val: boolean) {\n    this._nextSlide = val;\n  }\n\n  /**\n   * this method will get the field type\n   * @return : AjfFieldType\n   */\n  get fieldType(): AjfFieldType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfFormulaField) {\n      return AjfFieldType.Formula;\n    }\n    if (thisObj instanceof AjfMultipleChoiceField) {\n      return AjfFieldType.MultipleChoice;\n    }\n    if (thisObj instanceof AjfSingleChoiceField) {\n      return AjfFieldType.SingleChoice;\n    }\n    if (thisObj instanceof AjfBooleanField) {\n      return AjfFieldType.Boolean;\n    }\n    if (thisObj instanceof AjfNumberField) {\n      return AjfFieldType.Number;\n    }\n    if (thisObj instanceof AjfTextField) {\n      return AjfFieldType.Text;\n    }\n    if (thisObj instanceof AjfStringField) {\n      return AjfFieldType.String;\n    }\n    if (thisObj instanceof AjfDateField) {\n      return AjfFieldType.Date;\n    }\n    if (thisObj instanceof AjfDateInputField) {\n      return AjfFieldType.DateInput;\n    }\n    if (thisObj instanceof AjfTableField) {\n      return AjfFieldType.Table;\n    }\n    if (thisObj instanceof AjfTimeField) {\n      return AjfFieldType.Time;\n    }\n    return AjfFieldType.Empty;\n  }\n\n  /**\n   * this method will get the node type of the field\n   * @return : AjfFieldType\n   */\n  get nodeType(): AjfNodeType { return AjfNodeType.AjfField; }\n\n  /**\n   * this method will create new field\n   * @return : ajfField\n   */\n  static create(fieldType: AjfFieldType, obj?: any): AjfField {\n    let ret: AjfField;\n    switch (fieldType) {\n      case AjfFieldType.String:\n        ret = new AjfStringField(obj);\n        break;\n      case AjfFieldType.Text:\n        ret = new AjfTextField(obj);\n        break;\n      case AjfFieldType.Number:\n        ret = new AjfNumberField(obj);\n        break;\n      case AjfFieldType.Boolean:\n        ret = new AjfBooleanField(obj);\n        break;\n      case AjfFieldType.SingleChoice:\n        ret = new AjfSingleChoiceField(obj);\n        break;\n      case AjfFieldType.MultipleChoice:\n        ret = new AjfMultipleChoiceField(obj);\n        break;\n      case AjfFieldType.Formula:\n        ret = new AjfFormulaField(obj);\n        break;\n      case AjfFieldType.Empty:\n        ret = new AjfEmptyField(obj);\n        break;\n      case AjfFieldType.Date:\n        ret = new AjfDateField(obj);\n        break;\n      case AjfFieldType.DateInput:\n        ret = new AjfDateInputField(obj);\n        break;\n      case AjfFieldType.Time:\n        ret = new AjfTimeField(obj);\n        break;\n      case AjfFieldType.Table:\n        ret = new AjfTableField(obj);\n        break;\n      default:\n        throw new Error('Invalid field type');\n    }\n    return ret;\n  }\n\n  /**\n   * this method will load an AjfField from json\n   * @param obj                : any - object node\n   * @param choicesOrigins     : any[] - array of choicesOrigins\n   * @param attachmentsOrigins : any[] - array of attachmentsOrigins\n   * @return AjfNode\n   */\n  static fromJson(obj: any, choicesOrigins: any[], attachmentsOrigins: any[],\n      context: any): AjfField {\n    // array of string: contains a keys object\n    // example:\n    // [\"id\", \"name\", \"label\", \"visibility\", \"hasChoices\", \"parent\",\n    // \"parentNode\", \"conditionalBranches\", \"fieldType\", \"nodes\"]\n    obj = deepCopy(obj);\n    if (context) {\n      context = deepCopy(context);\n    }\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('fieldType') === -1) {\n      throw new Error('Field type missing type');\n    }\n    let fieldType = obj.fieldType;\n    delete obj.fieldType;\n    if (AjfFieldType[fieldType] == null) {\n      throw new Error('Invalid field type');\n    }\n\n    if (keys.indexOf('visibility') > -1 && obj.visibility != null) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    }\n\n    if (keys.indexOf('formula') > -1 && obj.formula != null) {\n      obj.formula = AjfFormula.fromJson(obj.formula);\n    }\n\n    if (keys.indexOf('choicesFilter') > -1 && obj.choicesFilter != null) {\n      obj.choicesFilter = AjfFormula.fromJson(obj.choicesFilter);\n    }\n\n    if (keys.indexOf('validation') > -1 && obj.validation != null) {\n      obj.validation = AjfValidationGroup.fromJson(obj.validation);\n    }\n\n    if (keys.indexOf('warning') > -1  && obj.warning != null) {\n      obj.warning = AjfWarningGroup.fromJson(obj.warning);\n    }\n\n    if (keys.indexOf('choicesOriginRef') > -1) {\n      let origins = choicesOrigins.filter(x => x.getName() === obj.choicesOriginRef);\n      obj.choicesOrigin = origins.length > 0 ? origins[0] : null;\n    }\n\n    if (keys.indexOf('attachmentsOriginRef') > -1) {\n      let origins = attachmentsOrigins.filter(x => x.getName() === obj.attachmentsOriginRef);\n      obj.attachmentsOrigin = origins.length > 0 ? origins[0] : null;\n    }\n\n    if (keys.indexOf('triggerConditions') > -1 &&\n        obj.triggerConditions != null &&\n        obj.triggerConditions.length > 0) {\n      obj.triggerConditions = obj.triggerConditions\n        .map((t: any) => {\n          return AjfCondition.fromJson(t);\n        });\n    }\n\n    if (keys.indexOf('nodes') > -1 && obj.nodes instanceof Array) {\n      let nodes: AjfNode[] = [];\n      for (let i = 0 ; i < obj.nodes.length ; i ++) {\n        let childNode = obj.nodes[i];\n        childNode.parentField = obj.id;\n        nodes.push(AjfNode.fromJson(childNode, choicesOrigins, attachmentsOrigins, context));\n      }\n      obj.nodes = nodes;\n    }\n\n    if (keys.indexOf('nextSlideCondition') > -1 && obj.nextSlideCondition != null) {\n      obj.nextSlideCondition = AjfCondition.fromJson(obj.nextSlideCondition);\n    }\n\n    if (keys.indexOf('conditionalBranches') > -1 && obj.conditionalBranches instanceof Array) {\n      let cbs: AjfCondition[] = [];\n      for (let i = 0 ; i < obj.conditionalBranches.length ; i ++) {\n        cbs.push(AjfCondition.fromJson(obj.conditionalBranches[i]));\n      }\n      obj.conditionalBranches = cbs;\n    }\n\n    return AjfField.create(fieldType, obj);\n  }\n  /**\n   * this constructor will assign the obj value to a class variables\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'fieldType', 'description',\n      'editable', 'formula', 'validation', 'warning', 'hasChoices', 'defaultValue', 'size',\n      'nextSlideCondition'\n    ]);\n\n    this._description         = obj && obj.description         || null;\n    this._formula             = obj && obj.formula             || null;\n    this._validation          = obj && obj.validation          || null;\n    this._warning             = obj && obj.warning             || null;\n    this._attachmentsOrigin   = obj && obj.attachmentsOrigin   || null;\n    this.defaultValue         = obj && obj.defaultValue != null ? obj.defaultValue : null;\n    this._size                = obj && obj.size                || 'normal';\n    this._nextSlideCondition  = obj && obj.nextSlideCondition  || null;\n\n    this.setHasAttachments(this._attachmentsOrigin && true || false);\n\n    this._hasChoices = false;\n    this.setEditable();\n  }\n\n  /**\n   * this method will set the editable value of the field\n   * @param editable : boolean\n   */\n  protected setEditable(editable = true) {\n    this._editable = editable;\n  }\n\n  /**\n   * this method will set the HasChoices value of the field\n   * @param hasChoices : boolean\n   */\n  protected setHasChoices(hasChoices: boolean) {\n    this._hasChoices = hasChoices;\n  }\n\n  /**\n   * this method will set the hasAttachments value of the field\n   * @param hasAttachments : boolean\n   */\n  protected setHasAttachments(hasAttachments: boolean) {\n    this._hasAttachments = hasAttachments;\n  }\n\n  abstract validateValue(defaultValue: any): boolean;\n}\n\n/**\n * This class will define an ajf empty field\n */\nexport class AjfEmptyField extends AjfField {\n  HTML: string;\n\n  validateValue(_: any): boolean {\n    return true;\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'HTML'\n    ]);\n    this.HTML = obj && obj.HTML || null;\n  }\n}\n\n/**\n * This class will define an ajf string field\n */\nexport class AjfStringField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\n/**\n * This class will define an ajf text field\n */\n\nexport class AjfTextField extends AjfStringField {\n}\n\n/**\n * This class will define an ajf number field\n */\nexport class AjfNumberField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === parseInt(value, 10) || value === parseFloat(value);\n  }\n}\n\n/**\n * This class will define an ajf boolean field\n */\nexport class AjfBooleanField extends AjfField {\n  validateValue(value: any): boolean {\n    return value === !!value;\n  }\n\n  getMaxConditionalBranches(): number {\n    return 2;\n  }\n}\n\n/**\n * This class will define an ajf field with choices\n */\nexport class AjfFieldWithChoices extends AjfField {\n  choicesOrigin: IAjfChoicesOrigin;\n  choicesFilter: AjfFormula;\n  forceExpanded: boolean;\n  forceNarrow: boolean;\n  triggerConditions: AjfCondition[];\n\n  get choices(): any[] {\n    return this.choicesOrigin && this.choicesOrigin.getChoices() || [];\n  }\n\n  get choicesOriginRef(): string {\n    return this.choicesOrigin.getName();\n  }\n\n  validateValue(_: any): boolean {\n    return true;\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([\n        'choicesOriginRef', 'choicesFilter',\n        'forceExpanded', 'forceNarrow', 'triggerConditions'\n      ]);\n\n    this.choicesOrigin     = obj && obj.choicesOrigin     || null;\n    this.choicesFilter     = obj && obj.choicesFilter     || null;\n    this.forceExpanded     = obj && obj.forceExpanded     || false;\n    this.forceNarrow       = obj && obj.forceNarrow       || false;\n    this.triggerConditions = obj && obj.triggerConditions || null;\n\n    this.setHasChoices(true);\n  }\n}\n\n/**\n * This class will define an ajf field with SingleChoice\n */\nexport class AjfSingleChoiceField extends AjfFieldWithChoices {\n  constructor(obj?: any) {\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    return value == null || this.choices.filter(x => x === value).length > 0;\n  }\n\n  getMaxConditionalBranches(): number {\n    return Math.max(1, this.choices.length + 1);\n  }\n}\n\n/**\n * This class will define an ajf field with MultipleChoice\n */\nexport class AjfMultipleChoiceField extends AjfSingleChoiceField {\n  constructor(obj?: any) {\n    let defaultValue = obj && obj.defaultValue || [];\n    obj = {...obj || {}, defaultValue};\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    if (value instanceof Array) {\n      let i = 0;\n      let l: number = value.length;\n      let good = true;\n      while (good && i < l) {\n        good = super.validateValue(value[i++]);\n      }\n      return good;\n    } else {\n      return super.validateValue(value);\n    }\n  }\n\n  getMaxConditionalBranches(): number {\n    let total = 0;\n    let l: number = this.choices.length;\n    let f: number[] = [1];\n\n    for (let i = 1; i <= l; i++) {\n      f.push(factorial(i));\n    }\n\n    for (let i = 1; i <= l; i++) {\n      total += f[l] / (f[i] * f[l - i]);\n    }\n\n    return total;\n  }\n}\n\n/**\n * This class will define an formula field\n */\nexport class AjfFormulaField extends AjfNumberField {\n  constructor(obj?: any) {\n    super(obj);\n    this.setEditable(false);\n  }\n}\n\n/**\n * This class will define an ajf date field\n */\nexport class AjfDateField extends AjfField {\n  minDate: Date | 'today';\n  maxDate: Date | 'today';\n\n  minDateValue: Date;\n  maxDateValue: Date;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['maxDate', 'minDate']);\n\n    this.minDate = obj && obj.minDate || null;\n    this.maxDate = obj && obj.maxDate || null;\n\n    this.minDateValue = this.minDate === 'today' ? new Date() : <Date>this.minDate;\n    this.maxDateValue = this.maxDate === 'today' ? new Date() : <Date>this.maxDate;\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\n\nexport class AjfDateInputField extends AjfField {\n  constructor(obj?: any) {\n    super(obj);\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\nexport class AjfTimeField extends AjfField {\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([]);\n  }\n\n  validateValue(value: any): boolean {\n    return value === value.toString();\n  }\n}\n\nexport class AjfTableField extends AjfField {\n  rows: string[][];\n  columnLabels: string[] = [];\n  rowLabels: string[] = [];\n  hideEmptyRows: boolean = false;\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.setEditable(obj && obj.editable || false);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n      [ 'rows', 'columnLabels', 'rowLabels' ]);\n\n    this.rows = obj && obj.rows || [];\n    this.columnLabels = obj && obj.columnLabels || [];\n    this.rowLabels = obj && obj.rowLabels || [];\n    this.hideEmptyRows = obj && obj.hideEmptyRows || false;\n  }\n\n  validateValue(value: any): boolean { return value === value.toString(); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfJsonSerializable} from '@ajf/core/models';\n\n\n/**\n * This class will define an ajf warning result\n */\nexport class AjfWarningResult {\n\n  result: boolean;\n  warning: string;\n\n  /**\n   * this constructor will assign the parameters value to a class variables\n   * @param res : boolean\n   * @param wrn : string\n   */\n  constructor(res: boolean, wrn: string) {\n    this.result = res;\n    this.warning = wrn;\n  }\n}\n\n/**\n * This class will define an ajf warning\n */\nexport class AjfWarning extends AjfCondition {\n  warningMessage: string;\n\n  /**\n   * this static method will load an AjfWarning from json\n   * @param obj  : any - object warning\n   * @return AjfWarning\n   */\n  static fromJson(obj: any): AjfWarning { return new AjfWarning(obj); }\n\n  static getNotEmptyWarning(): AjfWarning {\n    return new AjfWarning({\n      condition : `notEmpty($value)`,\n      warningMessage : `Value must not be empty`\n    });\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables and call\n   * super()\n   */\n  constructor(obj?: any) {\n    super(obj);\n    this.warningMessage = obj && obj.warningMessage || 'Undefined Error';\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['warningMessage']);\n  }\n\n  /**\n   * this public method will evaluate context or forceFormula\n   * @param context      : any - context\n   * @param forceFormula : string - formula\n   * @return AjfWarningResult\n   */\n  evaluate(context?: any, forceFormula?: string): AjfWarningResult {\n    return new AjfWarningResult(super.evaluate(context, forceFormula),\n                                this.warningMessage);\n  }\n}\n\n/**\n * This class will define an ajf warning group\n */\nexport class AjfWarningGroup extends AjfJsonSerializable {\n  notEmpty: AjfWarning | null;\n  conditions: AjfWarning[];\n\n  /**\n   * this static method will load an AjfWarningGroup from json\n   * @param obj  : any - object warningGroup\n   * @return AjfValidationGroup\n   */\n  static fromJson(obj: any): AjfWarningGroup {\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('notEmpty') > -1) {\n      obj.notEmpty = AjfWarning.getNotEmptyWarning();\n    }\n\n    if (keys.indexOf('conditions') > -1 && obj.conditions instanceof Array) {\n      let conditions: AjfCondition[] = [];\n      for (let c of obj.conditions) {\n        conditions.push(AjfWarning.fromJson(c));\n      }\n      obj.conditions = conditions;\n    }\n\n    return new AjfWarningGroup(obj);\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables\n   * @param obj : any\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.notEmpty = obj && obj.notEmpty || null;\n    this.conditions = obj && obj.conditions || null;\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['notEmpty', 'conditions']);\n  }\n\n  /**\n   * this protected method evaluate conditions\n   * @param context : any\n   * @return AjfWarningResult[]\n   */\n  protected _evaluateConditions(context: any): AjfWarningResult[] {\n    let res: AjfWarningResult[] = [];\n    this.conditions.forEach((cond) => {\n      res.push(cond.evaluate(context));\n    });\n    return res;\n  }\n\n  /**\n   * this public method evaluate\n   * @param value   : any\n   * @param context : any\n   * @return AjfWarningResult[]\n   */\n  evaluate(context?: any): AjfWarningResult[] {\n    let res: AjfWarningResult[] = this._evaluateConditions(context);\n    return res;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport class AjfValidationResult {\n\n  result: boolean;\n  error: string;\n  clientValidation: boolean;\n\n  /**\n   * this constructor will assign the parameters value to a class variables\n   * @param res : boolean\n   * @param err : string\n   * @cVal : boolean\n   */\n  constructor(res: boolean, err: string, cVal: boolean) {\n    this.result = res;\n    this.error = err;\n    this.clientValidation = cVal;\n  }\n}\n\n/**\n * This class will define an ajf validation\n */\nexport class AjfValidation extends AjfCondition {\n  clientValidation: boolean;\n  errorMessage: string;\n\n  /**\n   * this static method will load an AjfValidation from json\n   * @param obj  : any - object validation\n   * @return AjfValidation\n   */\n  static fromJson(obj: any): AjfValidation {\n    obj = deepCopy(obj);\n    return new AjfValidation(obj);\n  }\n\n  /**\n   * this static method will get an ajfValidation with maxValue setted\n   * @param maxValue : number - max value\n   * @return AjfValidation\n   */\n  static getMaxCondition(maxValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : '$value <= ' + maxValue.toString(),\n      errorMessage : 'Value must be <= ' + maxValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with minValue setted\n   * @param minValue : number - min value\n   * @return AjfValidation\n   */\n  static getMinCondition(minValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : '$value >= ' + minValue.toString(),\n      errorMessage : 'Value must be >= ' + minValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with notEmpty setted\n   * @return AjfValidation\n   */\n  static getNotEmptyCondition(): AjfValidation {\n    return new AjfValidation({\n      condition : `notEmpty($value)`,\n      errorMessage : `Value must not be empty`\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with maxDigit setted\n   * @return AjfValidation\n   */\n  static getMaxDigitsCondition(maxValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : `$value ? $value.toString().length <= ${maxValue.toString()} : false`,\n      errorMessage : 'Digits count must be <= ' + maxValue.toString()\n    });\n  }\n\n  /**\n   * this static method will get an ajfValidation with minDigit setted\n   * @return AjfValidation\n   */\n  static getMinDigitsCondition(minValue: number): AjfValidation {\n    return new AjfValidation({\n      condition : `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n      errorMessage : 'Digits count must be >= ' + minValue.toString()\n    });\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables and call\n   * super()\n   */\n  constructor(obj?: any) {\n    super(obj);\n    this.clientValidation = obj && obj.clientValidation || false;\n    this.errorMessage = obj && obj.errorMessage || 'Undefined Error';\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['clientValidation', 'errorMessage']);\n  }\n\n  /**\n   * this public method will evaluate context or forceFormula\n   * @param context      : any - context\n   * @param forceFormula : string - formula\n   * @return AjfValidationResult\n   */\n  evaluate(context?: any, forceFormula?: string): AjfValidationResult {\n    return new AjfValidationResult(super.evaluate(context, forceFormula),\n                                   this.errorMessage, this.clientValidation);\n  }\n}\n\n/**\n * This class will define an ajf validation group\n */\nexport class AjfValidationGroup extends AjfJsonSerializable {\n  forceValue: AjfCondition;\n  maxValue: AjfValidation | null;\n  minValue: AjfValidation | null;\n  notEmpty: AjfValidation | null;\n  maxDigits: AjfValidation | null;\n  minDigits: AjfValidation | null;\n  conditions: AjfValidation[];\n\n  /**\n   * this static method will load an AjfValidationGroup from json\n   * @param obj  : any - object validationGroup\n   * @return AjfValidationGroup\n   */\n  static fromJson(obj: any): AjfValidationGroup {\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('maxValue') > -1 && typeof obj.maxValue === 'number') {\n      obj.maxValue = AjfValidation.getMaxCondition(obj.maxValue);\n    }\n\n    if (keys.indexOf('minValue') > -1 && typeof obj.minValue === 'number') {\n      obj.minValue = AjfValidation.getMinCondition(obj.minValue);\n    }\n\n    if (keys.indexOf('notEmpty') > -1) {\n      obj.notEmpty = AjfValidation.getNotEmptyCondition();\n    }\n\n    if (keys.indexOf('forceValue') > -1) {\n      obj.forceValue = AjfCondition.fromJson(obj.forceValue);\n    }\n\n    if (keys.indexOf('maxDigits') > -1 && typeof obj.maxDigits === 'number') {\n      obj.maxDigits = AjfValidation.getMaxDigitsCondition(obj.maxDigits);\n    }\n\n    if (keys.indexOf('minDigits') > -1 && typeof obj.minDigits === 'number') {\n      obj.minDigits = AjfValidation.getMinDigitsCondition(obj.minDigits);\n    }\n\n    if (keys.indexOf('conditions') > -1 && obj.conditions instanceof Array) {\n      let conditions: AjfCondition[] = [];\n      for (let c of obj.conditions) {\n        conditions.push(AjfValidation.fromJson(c));\n      }\n      obj.conditions = conditions;\n    }\n\n    return new AjfValidationGroup(obj);\n  }\n\n  /**\n   * this constructor will assign the obj value to a class variables\n   * @param obj : any\n   */\n  constructor(obj?: any) {\n    super(obj);\n\n    this.forceValue = obj && obj.forceValue || null;\n    this.maxValue = obj && obj.maxValue || null;\n    this.minValue = obj && obj.minValue || null;\n    this.notEmpty = obj && obj.notEmpty || null;\n    this.maxDigits = obj && obj.maxDigits || null;\n    this.minDigits = obj && obj.minDigits || null;\n    this.conditions = obj && obj.conditions || [];\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat([\n        'forceValue', 'maxValue', 'minValue', 'notEmpty',\n        'maxDigits', 'minDigits', 'conditions'\n      ]);\n  }\n\n  toJson(): any {\n    const json: any = {};\n    if (this.forceValue != null) {\n      json['forceValue'] = true;\n    }\n\n    if (this.maxValue != null) {\n      json['maxValue'] = this.maxValue.condition.replace('$value <= ', '');\n    }\n\n    if (this.minValue != null) {\n      json['minValue'] = this.minValue.condition.replace('$value >= ', '');\n    }\n\n    if (this.notEmpty != null) {\n      json['notEmpty'] = true;\n    }\n\n    if (this.maxDigits != null) {\n      json['maxDigits'] = this.maxDigits.condition.replace(\n        '$value ? $value.toString().length <=  : false', '');\n    }\n\n    if (this.minDigits != null) {\n      json['minDigits'] = this.minDigits.condition.replace(\n        '$value ? $value.toString().length >=  : false', '');\n    }\n\n    if (this.conditions != null) {\n      json['conditions'] = this.conditions.map(c => c.toJson());\n    }\n\n    return json;\n  }\n\n  /**\n   * this protected method evaluate max value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateMaxValue(value: any) {\n    if (this.maxValue == null) { return null; }\n    return this.maxValue.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate min value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateMinvalue(value: any) {\n    if (this.minValue == null) { return null; }\n    return this.minValue.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate not empty value\n   * @param value : any\n   * @return AjfValidationResult\n   */\n  protected _evaluateNotEmpty(value: any) {\n    if (this.notEmpty == null) { return null; }\n    return this.notEmpty.evaluate({'$value' : value});\n  }\n\n  /**\n   * this protected method evaluate conditions\n   * @param context : any\n   * @return AjfValidationResult[]\n   */\n  protected _evaluateConditions(context: any): AjfValidationResult[] {\n    let res: AjfValidationResult[] = [];\n    this.conditions.forEach((cond) => {\n      res.push(cond.evaluate(context));\n    });\n    return res;\n  }\n\n  /**\n   * this public method evaluate\n   * @param value   : any\n   * @param context : any\n   * @return AjfValidationResult[]\n   */\n  evaluate(value: any, context?: any): AjfValidationResult[] {\n    let res: AjfValidationResult[] = [];\n    let ctx = deepCopy(context);\n    ctx['$value'] = value;\n    res = this._evaluateConditions(ctx);\n    if (this.maxValue) {\n      const maxValue = this._evaluateMaxValue(value);\n      if (maxValue != null) {\n        res.push();\n      }\n    }\n    if (this.minValue) {\n      const minValue = this._evaluateMinvalue(value);\n      if (minValue != null) {\n        res.push(minValue);\n      }\n    }\n    if (this.notEmpty) {\n      const notEmpty = this._evaluateNotEmpty(value);\n      if (notEmpty != null) {\n        res.push(notEmpty);\n      }\n    }\n    if (this.maxDigits) {\n      res.push(this.maxDigits.evaluate({'$value' : value}));\n    }\n    if (this.minDigits) {\n      res.push(this.minDigits.evaluate({'$value' : value}));\n    }\n    return res;\n  }\n  /**\n   * this public method evaluate force value\n   * @param context : any\n   * @return string\n   */\n  evaluateForceValue(context: any) {\n    return this.forceValue.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function factorial(n: number): number {\n  let f = 1;\n  for (let i: number = n; i > 1; i--) {\n    f = f * i;\n  }\n  return f;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  get name(): string { return 'AjfInvalidFieldDefinitionError'; }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {getTypeName} from './get-type-name';\n\nexport enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH\n}\n\nexport interface IAjfChoicesOrigin {\n  getType(): string;\n  getName(): string;\n  getLabel(): string;\n  getChoices(): Array<any>;\n  getChoicesType(): any;\n  setName(name: string): void;\n  setLabel(label: string): void;\n}\n\nexport class AjfChoice<T> extends AjfJsonSerializable {\n  label: string;\n  value: T;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.label = obj && obj.label || '';\n    this.value = obj && obj.value || null;\n  }\n}\n\nexport abstract class AjfChoicesOrigin<T> extends AjfJsonSerializable implements\n    IAjfChoicesOrigin {\n  private _name: string;\n  private _label: string;\n  private _choicesType: string;\n\n  static create(type: string, obj?: any): any {\n    switch (type) {\n    case 'string':\n      return new AjfChoicesFixedOrigin<string>(obj);\n    case 'number':\n      return new AjfChoicesFixedOrigin<number>(obj);\n    default:\n      return null;\n    }\n  }\n\n  static fromJson(obj: any): AjfChoicesOrigin<any> {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n    if (keys.indexOf('type') === -1) {\n      throw new Error('Choices origin type missing type');\n    }\n    let type: string = obj.type;\n    delete obj.type;\n    switch (type) {\n    case 'fixed':\n      return new AjfChoicesFixedOrigin<any>(obj);\n    case 'function':\n      return new AjfChoicesFunctionOrigin<any>(obj);\n    case 'observable':\n      return new AjfChoicesObservableOrigin<any>(obj);\n    case 'observableArray':\n      return new AjfChoicesObservableArrayOrigin<any>(obj);\n    case 'promise':\n      return new AjfChoicesObservableOrigin<any>(obj);\n    default:\n      throw new Error('Invalid choices origin type');\n    }\n  }\n\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(\n        [ 'type', 'name', 'label', 'choicesType' ]);\n\n    this._name = obj && obj.name || null;\n    this._label = obj && obj.label || null;\n    this._choicesType = obj && obj.choicesType || null;\n  }\n\n  abstract getType(): string;\n\n  getName(): string { return this._name; }\n\n  getLabel(): string { return this._label; }\n\n  setName(name: string): void { this._name = name; }\n\n  setLabel(label: string): void { this._label = label; }\n\n  abstract getChoices(): Array<AjfChoice<T>>;\n\n  getChoicesType(): string {\n    return this._choicesType || this.guessChoicesType();\n  }\n\n  private guessChoicesType(): string {\n    let cs = this.getChoices();\n    if (cs && cs.length > 0) {\n      this._choicesType = getTypeName(cs[0].value);\n    }\n    return this._choicesType;\n  }\n}\n\nexport interface IAjfChoicesFunction<T> extends Function { (): AjfChoice<T>[]; }\n\nexport class AjfChoicesFixedOrigin<T> extends AjfChoicesOrigin<T> {\n  private _choices: AjfChoice<T>[];\n\n  getType(): string { return 'fixed'; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('choices');\n\n    this._choices = obj && <AjfChoice<T>[]>obj.choices || [];\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._choices; }\n\n  setChoices(choices: AjfChoice<T>[]) { this._choices = choices.slice(0); }\n}\n\nexport class AjfChoicesFunctionOrigin<T> extends AjfChoicesOrigin<T> {\n  private _generator: IAjfChoicesFunction<T>;\n  get generator(): IAjfChoicesFunction<T> { return this._generator; }\n\n  getType(): string { return 'function'; }\n\n  constructor(generator: IAjfChoicesFunction<T>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('generator');\n\n    this._generator = generator;\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._generator(); }\n}\n\nexport class AjfChoicesObservableOrigin<T> extends AjfChoicesOrigin<T> {\n  private _currentChoices: AjfChoice<T>[] = [];\n  private _subscription: Subscription = Subscription.EMPTY;\n\n  get observable(): Observable<AjfChoice<T>> {\n    return this._observable;\n  }\n\n  getType(): string { return 'observable'; }\n\n  constructor(private _observable: Observable<AjfChoice<T>>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('observable');\n\n    let self = this;\n    this._subscription = _observable.subscribe(\n        (x: AjfChoice<T>) => self._currentChoices.push(x));\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._currentChoices.splice(0); }\n\n  destroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nexport class AjfChoicesObservableArrayOrigin<T> extends AjfChoicesOrigin<T> {\n  private _currentChoices: AjfChoice<T>[] = [];\n  private _subscription: Subscription = Subscription.EMPTY;\n\n  get observable(): Observable<AjfChoice<T>[]> {\n    return this._observable;\n  }\n\n  getType(): string { return 'observableArray'; }\n\n  constructor(private _observable: Observable<AjfChoice<T>[]>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('observable');\n\n    let self = this;\n    this._subscription = _observable.subscribe(\n        (x: AjfChoice<T>[]) => self._currentChoices = x.splice(0));\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._currentChoices.splice(0); }\n\n  destroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nexport class AjfChoicesPromiseOrigin<T> extends AjfChoicesOrigin<T> {\n  private _choices: AjfChoice<T>[] = [];\n\n  getType(): string { return 'promise'; }\n\n  constructor(promise: Promise<AjfChoice<T>[]>, obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat('promise');\n\n    promise.then((x: AjfChoice<T>[]) => { this._choices = x.splice(0); });\n  }\n\n  getChoices(): AjfChoice<T>[] { return this._choices.splice(0); }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport function getTypeName(v: any): string {\n  let typeStr = typeof v;\n  return typeStr === 'object'\n    ? v.constructor.toString().match(/\\w+/g)[1]\n    : typeStr;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\n\nexport enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH\n}\n\nexport interface IAjfAttachment {\n  label: string;\n  value: any;\n  type: string;\n}\n\n/**\n * This class will define an ajf attachment\n */\nexport class AjfAttachment<T> {\n  get label(): string { return this._label; }\n  get value(): T { return this._value; }\n  get type(): string { return this._type; }\n\n  private _label: string;\n  private _value: T;\n  private _type: string;\n\n  constructor(obj?: any) {\n    this._label = obj && obj.label || null;\n    this._value = obj && obj.value || null;\n    this._type = obj && obj.type || null;\n  }\n}\n\n/**\n * This class will define an ajf attachments orgin\n */\nexport abstract class AjfAttachmentsOrigin {\n  private _name: string;\n\n  /**\n   * this static method will create attachment\n   * @param obj : any - object attachment\n   * @return AjfAttachment\n   */\n  static create(obj: any): any {\n    let attachments: IAjfAttachment[] = [];\n    if (obj.attachments instanceof Array) {\n      for (let i = 0; i < obj.attachments.length; i++) {\n        let att: any = obj.attachments[i];\n        switch (att.type) {\n        case AjfAttachmentsType.Link:\n          attachments.push(new AjfAttachment<string>(att));\n          break;\n        case AjfAttachmentsType.Pdf:\n          attachments.push(new AjfAttachment<string>(att));\n          break;\n        default:\n          throw new Error('Invalid attachment type');\n        }\n      }\n    }\n    obj.attachments = attachments;\n    return new AjfAttachmentsFixedOrigin(obj);\n  }\n  /**\n   * this static method will load an AjfAttachmentsOrigin from json\n   * @param obj : any - object Attachments\n   * @return AjfAttachmentsOrigin\n   */\n  static fromJson(obj: any): AjfAttachmentsOrigin {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n    if (keys.indexOf('type') === -1) {\n      throw new Error('Attachments origin type missing type');\n    }\n    let type: string = obj.type;\n    delete obj.type;\n    switch (type) {\n    case 'fixed':\n      return AjfAttachmentsFixedOrigin.create(obj);\n    default:\n      throw new Error('Invalid attachment origin type');\n    }\n  }\n\n  getName(): string { return this._name; }\n\n  constructor(obj?: any) { this._name = obj && obj.name || null; }\n\n  abstract getAttachments(): IAjfAttachment[];\n}\n/**\n * This class will define an ajf attachments fixed origin\n */\nexport class AjfAttachmentsFixedOrigin extends AjfAttachmentsOrigin {\n  private _attachments: IAjfAttachment[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this._attachments = obj && obj.attachments || [];\n  }\n\n  getAttachments(): IAjfAttachment[] { return this._attachments; }\n}\n"],"names":[],"mappings":"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"}