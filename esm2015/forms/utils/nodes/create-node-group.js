/**
 * @license
 * Copyright (C) Gnucoop soc. coop.
 *
 * This file is part of the Advanced JSON forms (ajf).
 *
 * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Advanced JSON forms (ajf).
 * If not, see http://www.gnu.org/licenses/.
 *
 */
import { AjfNodeType } from '../../interface/nodes/node-type';
import { createContainerNode } from './create-container-node';
import { createRepeatingNode } from './create-repeating-node';
/**
 * It creates a AjfNodeGroup
 * set nodeType to AjfNodeType.AjfNodeGroup = 2.
 * Extends an AjfNode with the merging of containerNode  attributes(nodes)
 * with repeatingNode attributes(formulaReps, minReps, maxReps)
 */
export function createNodeGroup(nodeGroup) {
    return Object.assign(Object.assign(Object.assign({}, createContainerNode(nodeGroup)), createRepeatingNode(nodeGroup)), { nodeType: AjfNodeType.AjfNodeGroup });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLW5vZGUtZ3JvdXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29yZS9mb3Jtcy91dGlscy9ub2Rlcy9jcmVhdGUtbm9kZS1ncm91cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7QUFHSCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDNUQsT0FBTyxFQUF5QixtQkFBbUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3BGLE9BQU8sRUFBeUIsbUJBQW1CLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUlwRjs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxlQUFlLENBQUMsU0FBNkI7SUFDM0QscURBQ0ssbUJBQW1CLENBQUMsU0FBUyxDQUFDLEdBQzlCLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxLQUNqQyxRQUFRLEVBQUUsV0FBVyxDQUFDLFlBQVksSUFDbEM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChDKSBHbnVjb29wIHNvYy4gY29vcC5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKS5cbiAqXG4gKiBBZHZhbmNlZCBKU09OIGZvcm1zIChhamYpIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vclxuICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzXG4gKiBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSxcbiAqIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgQWZmZXJvXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIEFkdmFuY2VkIEpTT04gZm9ybXMgKGFqZikuXG4gKiBJZiBub3QsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvLlxuICpcbiAqL1xuXG5pbXBvcnQge0FqZk5vZGVHcm91cH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlL25vZGVzL25vZGUtZ3JvdXAnO1xuaW1wb3J0IHtBamZOb2RlVHlwZX0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlL25vZGVzL25vZGUtdHlwZSc7XG5pbXBvcnQge0FqZkNvbnRhaW5lck5vZGVDcmVhdGUsIGNyZWF0ZUNvbnRhaW5lck5vZGV9IGZyb20gJy4vY3JlYXRlLWNvbnRhaW5lci1ub2RlJztcbmltcG9ydCB7QWpmUmVwZWF0aW5nTm9kZUNyZWF0ZSwgY3JlYXRlUmVwZWF0aW5nTm9kZX0gZnJvbSAnLi9jcmVhdGUtcmVwZWF0aW5nLW5vZGUnO1xuXG5leHBvcnQgdHlwZSBBamZOb2RlR3JvdXBDcmVhdGUgPSBBamZDb250YWluZXJOb2RlQ3JlYXRlJkFqZlJlcGVhdGluZ05vZGVDcmVhdGU7XG5cbi8qKlxuICogSXQgY3JlYXRlcyBhIEFqZk5vZGVHcm91cFxuICogc2V0IG5vZGVUeXBlIHRvIEFqZk5vZGVUeXBlLkFqZk5vZGVHcm91cCA9IDIuXG4gKiBFeHRlbmRzIGFuIEFqZk5vZGUgd2l0aCB0aGUgbWVyZ2luZyBvZiBjb250YWluZXJOb2RlICBhdHRyaWJ1dGVzKG5vZGVzKVxuICogd2l0aCByZXBlYXRpbmdOb2RlIGF0dHJpYnV0ZXMoZm9ybXVsYVJlcHMsIG1pblJlcHMsIG1heFJlcHMpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOb2RlR3JvdXAobm9kZUdyb3VwOiBBamZOb2RlR3JvdXBDcmVhdGUpOiBBamZOb2RlR3JvdXAge1xuICByZXR1cm4ge1xuICAgIC4uLmNyZWF0ZUNvbnRhaW5lck5vZGUobm9kZUdyb3VwKSxcbiAgICAuLi5jcmVhdGVSZXBlYXRpbmdOb2RlKG5vZGVHcm91cCksXG4gICAgbm9kZVR5cGU6IEFqZk5vZGVUeXBlLkFqZk5vZGVHcm91cCxcbiAgfTtcbn1cbiJdfQ==