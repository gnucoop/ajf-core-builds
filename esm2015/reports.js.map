{"version":3,"file":"reports.js","sources":["../../../src/core/reports/widget.ts","../../../src/core/reports/reports.ts","../../../src/core/reports/reports-instances.ts","../../../src/core/reports/widgets-instances.ts","../../../src/core/reports/widgets.ts","../../../src/core/reports/report.ts","../../../src/core/reports/dataset.ts","../../../src/core/reports/chart-utils.ts","../../../src/core/reports/charts.ts","../../../src/core/reports/aggregation.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfReportChartWidgetInstance,\n  AjfReportFormulaWidgetInstance,\n  AjfReportImageContainerWidgetInstance,\n  AjfReportImageWidgetInstance,\n  AjfReportLayoutWidgetInstance,\n  AjfReportMapWidgetInstance,\n  AjfReportTableWidgetInstance,\n  AjfReportTextWidgetInstance,\n  AjfReportWidgetInstance,\n} from './widgets-instances';\nimport {\n  AjfReportChartWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from './widgets';\n\nexport abstract class AjfReportWidgetRenderer {\n  readonly widgetTypes = AjfReportWidgetType;\n\n  private _widget: AjfReportWidget | null;\n  get widget(): AjfReportWidget | null { return this._widget; }\n\n  private _imageTypes = AjfImageType;\n  get imageTypes() { return this._imageTypes; }\n\n  private _widgetInstance: AjfReportWidgetInstance;\n  get widgetInstance(): AjfReportWidgetInstance { return this._widgetInstance; }\n  set widgetInstance(widgetInstance: AjfReportWidgetInstance) {\n    if (this._widgetInstance !== widgetInstance) {\n      this._widgetInstance = widgetInstance;\n      this._widget = this._widgetInstance != null ? this._widgetInstance.widget : null;\n      this._cdr.markForCheck();\n    }\n  }\n\n  get imgwInst(): AjfReportImageWidgetInstance {\n    return this._widgetInstance as AjfReportImageWidgetInstance;\n  }\n  get imgw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get imgcwInst(): AjfReportImageContainerWidgetInstance {\n    return this._widgetInstance as AjfReportImageContainerWidgetInstance;\n  }\n  get imgcw(): AjfReportImageWidget {\n    return this._widget as AjfReportImageWidget;\n  }\n  get layoutwInst(): AjfReportLayoutWidgetInstance {\n    return this._widgetInstance as AjfReportLayoutWidgetInstance;\n  }\n  get layoutw(): AjfReportLayoutWidget {\n    return this._widget as AjfReportLayoutWidget;\n  }\n  get chartwInst(): AjfReportChartWidgetInstance {\n    return this._widgetInstance as AjfReportChartWidgetInstance;\n  }\n  get chartw(): AjfReportChartWidget {\n    return this._widget as AjfReportChartWidget;\n  }\n  get tablewInst(): AjfReportTableWidgetInstance {\n    return this._widgetInstance as AjfReportTableWidgetInstance;\n  }\n  get textwInst(): AjfReportTextWidgetInstance {\n    return this._widgetInstance as AjfReportTextWidgetInstance;\n  }\n  get mapwInst(): AjfReportMapWidgetInstance {\n    return this._widgetInstance as AjfReportMapWidgetInstance;\n  }\n  get mapw(): AjfReportMapWidget {\n    return this._widget as AjfReportMapWidget;\n  }\n  get formulawInst(): AjfReportFormulaWidgetInstance {\n    return this._widgetInstance as AjfReportFormulaWidgetInstance;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidget} from './widgets';\n\n\nexport class AjfReportContainer extends AjfJsonSerializable {\n  private _content: AjfReportWidget[];\n  get content(): AjfReportWidget[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  static fromJson(obj: any): AjfReportContainer {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('content') > -1 && obj['content'] instanceof Array) {\n      obj['content'] = obj['content'].map((cw: any) => AjfReportWidget.fromJson(cw));\n    }\n\n    return new AjfReportContainer(obj);\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['content', 'styles']);\n\n    this._content = obj && obj.content || [];\n    this._styles = obj && obj.styles || {};\n  }\n}\n/**\n * Class that represents a report.\n * A report is defined as three trees of report widgets (@see AjfReportWidget),\n * displayed each in the header / content / footer of the report.\n *\n */\nexport class AjfReport extends AjfJsonSerializable {\n  /**\n   * Collection of widgets that compose the report header\n   */\n  private _header: AjfReportContainer;\n  get header(): AjfReportContainer { return this._header; }\n\n  /**\n   * Collection of widgets that compose the report footer\n   */\n  private _footer: AjfReportContainer;\n  get footer(): AjfReportContainer { return this._footer; }\n\n  /**\n   * Collection of widgets that compose the report content\n   */\n  private _content: AjfReportContainer;\n  get content(): AjfReportContainer { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles { return this._styles; }\n\n  set styles(styles: AjfReportStyles) {\n    this._styles = styles;\n  }\n\n  /**\n   * collection of forms that generate the report variables\n   *\n   * @memberOf AjfReport\n   */\n  private _forms: AjfForm[];\n  get forms(): AjfForm[] { return this._forms; }\n  set forms(forms: AjfForm[]) {\n    this._forms = forms;\n  }\n\n  /**\n   * Creates a report starting from a JSON representation.\n   * The form definition can be nested in the report JSON.\n   * @param obj : any The JSON representation of the report\n   * @param form : AjfForm The form that defines the data structure\n   * @return AjfReport The report\n   */\n  static fromJson(obj: any, forms?: AjfForm[]): AjfReport {\n    obj = deepCopy(obj);\n    const keys: string[] = Object.keys(obj);\n\n    const containers: string[] = ['header', 'footer', 'content'];\n    containers.forEach((c) => {\n      if (keys.indexOf(c) > -1) {\n        obj[c] = AjfReportContainer.fromJson(obj[c]);\n      }\n    });\n\n    return new AjfReport(forms || [], obj);\n  }\n\n  /**\n   * Creates a report.\n   * @param form : AjfForm The form that defines the data structure\n   * @param obj : any Report initial data\n   */\n  constructor(forms: AjfForm[], obj?: any) {\n    super(obj);\n\n    this._forms = forms.slice(0);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['header', 'footer', 'content', 'styles']);\n\n    this._header = obj && obj.header || null;\n    this._footer = obj && obj.footer || null;\n    this._content = obj && obj.content || null;\n    this._styles = obj && obj.styles || null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfTableDataset} from './dataset';\nimport {AjfReport, AjfReportContainer} from './reports';\nimport {AjfReportStyles} from './report-styles';\nimport {AjfReportWidgetInstance} from './widgets-instances';\nimport {\n  AjfReportChartWidget, AjfReportTextWidget, AjfReportTableWidget, AjfReportWidget\n} from './widgets';\n\n\nexport class AjfReportContainerInstance {\n  private _container: AjfReportContainer;\n  get container(): AjfReportContainer { return this._container; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles = {};\n  get styles(): AjfReportStyles { return this._styles; }\n\n  private _context: any;\n\n  constructor(container: AjfReportContainer, context: any, private _ts: TranslateService) {\n    this._container = container;\n    this._styles = this._container != null ? this._container.styles : {};\n    this._context = context;\n\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    this._container.content.forEach(c => {\n      this._translate(c);\n      content.push(AjfReportWidgetInstance.create(c, this._context, this._ts));\n    });\n    this._content = content;\n  }\n\n  private _translate(reportWidget: AjfReportWidget): void {\n    if (reportWidget.hasContent) {\n      reportWidget.content.forEach((subReportWidget: AjfReportWidget) => {\n        this._translate(subReportWidget);\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTextWidget && reportWidget.htmlText) {\n      reportWidget.htmlText = this._ts.instant(reportWidget.htmlText);\n    }\n\n    if (reportWidget instanceof AjfReportChartWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach(element => {\n        element.label = element.label ? this._ts.instant(element.label) : '';\n      });\n    }\n\n    if (reportWidget instanceof AjfReportTableWidget && reportWidget.dataset) {\n      reportWidget.dataset.forEach((row: AjfTableDataset[]) => {\n        row.forEach((element: AjfTableDataset) => {\n          if (element.formula && element.formula.formula) {\n            try {\n              let formulaToBeTranslate = element.formula.formula;\n              if (formulaToBeTranslate[0] === '\"') {\n                formulaToBeTranslate = formulaToBeTranslate.slice(1, -1);\n                element.formula.formula = formulaToBeTranslate.length > 0\n                  ? `\"${this._ts.instant(formulaToBeTranslate)}\"` : element.formula.formula;\n              } else {\n                element.formula.formula = this._ts.instant(formulaToBeTranslate);\n              }\n            } catch (e) { }\n          }\n        });\n      });\n\n    }\n\n  }\n}\n\n\n/**\n * A report instance. Report + data\n */\nexport class AjfReportInstance {\n  /**\n   * The report\n   */\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n\n  private _header: AjfReportContainerInstance;\n  get header(): AjfReportContainerInstance { return this._header; }\n\n  private _content: AjfReportContainerInstance;\n  get content(): AjfReportContainerInstance { return this._content; }\n\n  private _footer: AjfReportContainerInstance;\n  get footer(): AjfReportContainerInstance { return this._footer; }\n\n  private _data: any;\n  get data(): any { return this._data; }\n\n  get styles(): AjfReportStyles {\n    return this._report != null ? this._report.styles : {};\n  }\n\n  private _context: any;\n  get context(): any { return this._context; }\n\n  constructor(report: AjfReport, context: any, private _ts: TranslateService) {\n    this._report = report;\n    this._context = context;\n\n    this._populateReport();\n  }\n\n  private _populateReport(): void {\n    this._header = this._populateContainer(this._report.header);\n    this._content = this._populateContainer(this._report.content);\n    this._footer = this._populateContainer(this._report.footer);\n  }\n\n  private _populateContainer(container: AjfReportContainer): AjfReportContainerInstance {\n    return new AjfReportContainerInstance(container, this._context, this._ts);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {TranslateService} from '@ngx-translate/core';\nimport {ChartData, ChartDataSets} from 'chart.js';\n\nimport {Observable, Subject} from 'rxjs';\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\nimport {chartToChartJsType} from './chart-utils';\nimport {AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\nimport {\n  AjfReportChartWidget, AjfReportDataWidget, AjfReportFormulaWidget, AjfReportImageContainerWidget,\n  AjfReportImageWidget, AjfReportLayoutWidget, AjfReportMapWidget, AjfReportTableWidget,\n  AjfReportTextWidget, AjfReportWidget, AjfReportWidgetType\n} from './widgets';\n\nexport class AjfReportWidgetInstance {\n  protected _widget: AjfReportWidget;\n  get widget(): AjfReportWidget { return this._widget; }\n\n  private _visible = true;\n  get visible(): boolean { return this._visible; }\n\n  private _content: AjfReportWidgetInstance[];\n  get content(): AjfReportWidgetInstance[] { return this._content; }\n\n  private _styles: AjfReportStyles;\n  get styles(): AjfReportStyles {\n    return this._styles;\n  }\n\n  private _widgetType: AjfReportWidgetType;\n  get widgetType(): AjfReportWidgetType | null {\n    return this._widgetType;\n  }\n\n  protected _context: any;\n\n  static create(\n    widget: AjfReportWidget, context: any, ts: TranslateService): AjfReportWidgetInstance {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return new AjfReportLayoutWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageWidget) {\n      return new AjfReportImageWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTextWidget) {\n      return new AjfReportTextWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportTableWidget) {\n      return new AjfReportTableWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportChartWidget) {\n      return new AjfReportChartWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportMapWidget) {\n      return new AjfReportMapWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportDataWidget) {\n      return new AjfReportDataWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportFormulaWidget) {\n      return new AjfReportFormulaWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportImageContainerWidget) {\n      return new AjfReportImageContainerWidgetInstance(widget, context, ts);\n    } else if (widget instanceof AjfReportWidget) {\n      return new AjfReportWidgetInstance(widget, context, ts);\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(widget: AjfReportWidget, context: any, public ts: TranslateService) {\n    this._widget = widget;\n    if (widget != null) {\n      this._styles = widget.styles;\n      this._widgetType = widget.widgetType;\n    }\n    this._context = context;\n\n    this._initInstance();\n    this.initContext(context);\n  }\n\n  initContext(context: any): void {\n    this._evaluateVisibility(context);\n  }\n\n  protected _initInstance(): void {\n    this._populateContent();\n  }\n\n  private _populateContent(): void {\n    const content: AjfReportWidgetInstance[] = [];\n    if (this._widget.hasContent) {\n      this._widget.content.forEach(w => {\n        content.push(AjfReportWidgetInstance.create(w, this._context, this.ts));\n      });\n    }\n    this._content = content;\n  }\n\n  private _evaluateVisibility(context: any): void {\n    if (this._widget.visibility != null) {\n      this._visible = this._widget.visibility.evaluate(context);\n    }\n  }\n}\n\n\nexport class AjfReportDataWidgetInstance extends AjfReportWidgetInstance {\n  get widget(): AjfReportDataWidget {\n    return <AjfReportDataWidget>this._widget;\n  }\n\n  private _dataset: any;\n  get dataset(): any { return this._dataset; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    this._populateData(context);\n  }\n\n  protected _initInstance(): void {\n    super._initInstance();\n  }\n\n  private _populateData(context: any): void {\n    this._dataset = (<any[]>(this.widget.dataset || []))\n      .map(row => {\n        if (row instanceof Array) {\n          return (<AjfDataset[]>row).map((cell) => {\n            return cell.formula instanceof Array ?\n              cell.formula.map((f) => f.evaluate(context)) :\n              cell.formula.evaluate(context);\n          });\n        } else {\n          const formula = (<AjfDataset>row).formula;\n          return formula instanceof Array ?\n            formula.map((f) => f.evaluate(context)) :\n            formula.evaluate(context);\n        }\n      });\n  }\n}\n\n\nexport class AjfReportLayoutWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  getColumnContent(column: number): AjfReportWidgetInstance | null {\n    return column >= 0 && column < this.content.length ? this.content[column] : null;\n  }\n}\n\nexport class AjfReportColumnWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportPageBreakWidgetInstance extends AjfReportWidgetInstance {\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n}\n\nexport class AjfReportImageWidgetInstance extends AjfReportWidgetInstance {\n  private _icon: string;\n  get icon(): string { return this._icon; }\n\n  private _flag: string;\n  get flag(): string { return this._flag; }\n\n  private _url: string;\n  get url(): string { return this._url; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageWidget>this.widget);\n    const icon = widget.icon;\n    const flag = widget.flag;\n    const url = widget.url;\n    this._icon = icon ? icon.evaluate(context) : '';\n    this._flag = flag ? flag.evaluate(context) : '';\n    this._url = url ? url.evaluate(context) : '';\n  }\n}\n\nexport class AjfReportImageContainerWidgetInstance extends AjfReportWidgetInstance {\n  private _icons: string[];\n  get icons(): string[] { return this._icons; }\n\n  private _flags: string[];\n  get flags(): string[] { return this._flags; }\n\n  private _urls: string[];\n  get urls(): string[] { return this._urls; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = (<AjfReportImageContainerWidget>this.widget);\n\n    // TODO: check! perche' evaluate torna una lista di liste?\n    // this._urls[0][0] contiene la lista di url..\n    this._urls = widget.urls ?\n      (widget.urls instanceof Array ? widget.urls :\n        (widget.urls instanceof AjfFormula ? widget.urls.evaluate(context) : []))\n      : [];\n\n    this._flags = widget.flags ?\n      (widget.flags instanceof Array ? widget.flags :\n        (widget.flags instanceof AjfFormula ? widget.flags.evaluate(context) : []))\n      : [];\n\n    this._icons = widget.icons ?\n      (widget.icons instanceof Array ? widget.icons.map((l) => l.evaluate(context)) :\n        (widget.icons instanceof AjfFormula ? widget.icons.evaluate(context) : []))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidgetInstance extends AjfReportWidgetInstance {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const formulaRegEx: RegExp = /\\[\\[(.+?)\\]\\]/g;\n    const widget = (<AjfReportTextWidget>this.widget);\n    let htmlText = widget.htmlText;\n    const matches: { idx: number, len: number, formula: AjfFormula }[] = [];\n    let match;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match['index'];\n      const len = match[0].length;\n      const formula = new AjfFormula({ formula: match[1] });\n      matches.push({ idx, len, formula });\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = m.formula.evaluate(context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    this._htmlText = htmlText;\n  }\n}\n\nexport class AjfReportTableWidgetInstance extends AjfReportWidgetInstance {\n  private _data: AjfTableCell[][];\n  get data(): AjfTableCell[][] { return this._data; }\n\n  private _recalcEvt: Subject<boolean> = new Subject<boolean>();\n  private _recalc: Observable<boolean>;\n  get recalc(): Observable<boolean> { return this._recalc; }\n\n  constructor(widget: AjfReportWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n    this._recalc = this._recalcEvt.asObservable();\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportTableWidget>this.widget;\n    this._data = [];\n\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      this._data.push([]);\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        const value = cell.formula.evaluate(context);\n        const style = {...widget.cellStyles, ...cell.style};\n        this._data[i].push(<AjfTableCell>{\n          value,\n          style,\n          rowspan: cell.rowspan,\n          colspan: cell.colspan\n        });\n      }\n    }\n    // this._data = (widget.dataset || []).map((row: AjfDataset[]) => {\n    //   return row.map((cell: AjfTableDataset) => {\n    //     return <AjfTableCell>{\n    //       value: cell.formula.evaluate(context),\n    //       style: {...widget.cellStyles, ...cell.style},\n    //       rowspan: cell.rowspan,\n    //       colspan: cell.colspan\n    //     };\n    //   });\n    // });\n  }\n\n  calcValues(context: any): void {\n    if (context === undefined) { return; }\n    const widget = <AjfReportTableWidget>this.widget;\n    let rows = (widget.dataset || []);\n    const rowsNum = rows.length;\n    for (let i = 0; i < rowsNum; i++) {\n      const row: AjfTableDataset[] = rows[i];\n      const cellsNum = row.length;\n      for (let j = 0; j < cellsNum; j++) {\n        const cell = row[j];\n        this._data[i][j].value = cell.formula.evaluate(context);\n      }\n    }\n    this._data = this._data.slice(0);\n    this._recalcEvt.next(true);\n  }\n}\n\nexport class AjfReportChartWidgetInstance extends AjfReportDataWidgetInstance {\n  private _datasets: ChartDataSets[];\n  private _labels: string[];\n\n  private _data: ChartData;\n  get data(): ChartData {\n    return this._data;\n  }\n\n  private _chartType: ExtendedChartType;\n  get chartType(): ExtendedChartType { return this._chartType; }\n\n  constructor(widget: AjfReportDataWidget, context: any, ts: TranslateService) {\n    super(widget, context, ts);\n  }\n\n  private _translate(formula: AjfFormula, context: any): string[] {\n    const evaluatedfunction: any = formula.evaluate(context);\n    try {\n      if (Array.isArray(evaluatedfunction)) {\n        evaluatedfunction.forEach((rowValue, index) => {\n          if (Array.isArray(rowValue)) {\n            rowValue.forEach((value, rowIndex) => {\n              evaluatedfunction[index][rowIndex] = this.ts.instant(value);\n            });\n          } else {\n            evaluatedfunction[index] = this.ts.instant(rowValue);\n          }\n        });\n      }\n      return evaluatedfunction;\n    } catch (e) {\n      return evaluatedfunction;\n    }\n  }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportChartWidget>this.widget;\n    this._chartType = chartToChartJsType(widget.chartType);\n    if (widget.labels instanceof Array) {\n      widget.labels.map((l: AjfFormula) => {\n        this._labels.concat(this._translate(l, context));\n      });\n    } else {\n      this._labels = this._translate(widget.labels, context);\n    }\n\n    this._datasets = widget.dataset.map((d => {\n      let ds = <any>{...d.options || {},\n        data: d.aggregation.evaluate(d.formula, context)\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds,\n          chartType: ct,\n          type: ct\n        };\n      }\n      if (d.options != null) {\n        ds = {...ds,\n          options: d.options\n        };\n      }\n      if (d.label != null) {\n        ds = {...ds,\n          label: d.label\n        };\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    }));\n    this._data = { labels: this._labels, datasets: this._datasets };\n  }\n}\n\nexport class AjfReportMapWidgetInstance extends AjfReportDataWidgetInstance {\n  coordinate: number[];\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportMapWidget>this.widget;\n    this.coordinate = widget.coordinate.evaluate(context);\n  }\n}\n\nexport class AjfReportFormulaWidgetInstance extends AjfReportWidgetInstance {\n  private _formula: string;\n  get formula(): string { return this._formula; }\n\n  initContext(context: any): void {\n    super.initContext(context);\n    const widget = <AjfReportFormulaWidget>this.widget;\n    this._formula = widget.formula.evaluate(context);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon, AjfImageType} from '@ajf/core/image';\nimport {AjfCondition, AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfChartType} from './charts';\nimport {AjfChartDataset, AjfDataset, AjfTableDataset} from './dataset';\nimport {AjfReportStyles} from './report-styles';\n\nimport {ChartOptions} from 'chart.js';\n\n/**\n * Report widget types. They are mainly divided in layout and data widgets.\n * Layout widgets (Layout, PageBreak, Image, Text) are used to display static\n * content or for layout purposes.\n * Data widgets (Chart, Table, Map) are used to display the data of a report\n * instance (@see AjfReportInstance).\n * All data widgets and the PageBreak widget can have no content\n */\nexport enum AjfReportWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  LENGTH\n}\n\nexport enum AjfReportDataType {\n  EPI,\n  Month,\n  Year,\n  LENGTH\n}\nexport interface AjfReportCustomWidget {\n  json: string;\n  type: string;\n}\n\n/**\n * Base abstract class that represent a report widget.\n *\n */\nexport abstract class AjfReportWidget extends AjfJsonSerializable {\n  /**\n   * The sub-widgets contained inside this widget\n   */\n  content: AjfReportWidget[];\n\n  /**\n   * A dictionary of CSS-styles applied to the widget\n   */\n  styles: AjfReportStyles;\n\n  /**\n   * The condition under which the widget is visible\n   *\n   * @memberOf AjfReportWidget\n   */\n  visibility: AjfCondition;\n\n  /**\n   * True if the current widget can contain sub-widgets\n   */\n  abstract get hasContent(): boolean;\n\n  /**\n   * Creates a report widget from its JSON representation\n   *\n   * @param obj: any The JSON representation\n   * @throws 'Widget type missing' when the JSON representation lacks of a widget type\n   * @throws 'Invalid widget type' when the JSON representation contains an invalid widget type\n   * @return AjfReportWidget The report widget\n   */\n  static fromJson(obj: any): AjfReportWidget {\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('widgetType') === -1) {\n      throw new Error('Widget type missing');\n    }\n\n    let widgetType = obj.widgetType;\n    if (AjfReportWidgetType[widgetType] == null) {\n      throw new Error('Invalid widget type');\n    }\n\n    obj = this.parseJsonObject(obj);\n\n    delete obj.widgetType;\n\n    return AjfReportWidget.createWidget(widgetType, obj);\n  }\n\n  protected static parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('visibility') > -1) {\n      obj.visibility = AjfCondition.fromJson(obj.visibility);\n    } else {\n      obj.visibility = AjfCondition.alwaysCondition();\n    }\n\n    if (keys.indexOf('content') > -1 && obj.content instanceof Array) {\n      obj.content = obj.content.map((w: any) => AjfReportWidget.fromJson(w));\n    }\n\n    if (keys.indexOf('dataset') > -1 && obj['dataset'] instanceof Array) {\n      if (obj.widgetType == AjfReportWidgetType.Table) {\n        const data: AjfTableDataset[][] = obj.dataset\n          .map((row: AjfTableDataset[]) => row.map(cell => AjfTableDataset.fromJson(cell)));\n        obj.dataset = data;\n      } else if (obj.widgetType == AjfReportWidgetType.Chart) {\n        const data: AjfChartDataset[] = obj.dataset\n          .map((row: any) => AjfChartDataset.fromJson(row));\n        obj.dataset = data;\n      }\n    }\n\n    if (keys.indexOf('labels') > -1) {\n      if (obj['labels'] instanceof Array) {\n        obj.labels = obj.labels.map((l: string) => AjfFormula.fromJson(l));\n      } else {\n        obj.labels = AjfFormula.fromJson(obj.labels);\n      }\n    }\n\n    if (keys.indexOf('coordinate') > -1) {\n        obj.coordinate = AjfFormula.fromJson(obj.coordinate);\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a report widget given a widget type (@see AjfReportWidgetType)\n   */\n  static createWidget(widgetType: AjfReportWidgetType, obj?: any): AjfReportWidget {\n    switch (widgetType) {\n      case AjfReportWidgetType.Layout:\n        return new AjfReportLayoutWidget(obj);\n      case AjfReportWidgetType.PageBreak:\n        return new AjfReportPageBreakWidget(obj);\n      case AjfReportWidgetType.Image:\n        return new AjfReportImageWidget(obj);\n      case AjfReportWidgetType.Text:\n        return new AjfReportTextWidget(obj);\n      case AjfReportWidgetType.Chart:\n        return new AjfReportChartWidget(obj);\n      case AjfReportWidgetType.Table:\n        return new AjfReportTableWidget(obj);\n      case AjfReportWidgetType.Map:\n        return new AjfReportMapWidget(obj);\n      case AjfReportWidgetType.Column:\n        return new AjfReportColumnWidget(obj);\n      case AjfReportWidgetType.Formula:\n        return new AjfReportFormulaWidget(obj);\n      case AjfReportWidgetType.ImageContainer:\n        return new AjfReportImageContainerWidget(obj);\n      default:\n        throw new Error('Invalid widget type');\n    }\n\n  }\n\n  /**\n   * The widget type (@see AjfReportWidgetType)\n   */\n  get widgetType(): AjfReportWidgetType {\n    const thisObj: any = this;\n    if (thisObj instanceof AjfReportLayoutWidget) {\n      return AjfReportWidgetType.Layout;\n    }\n    if (thisObj instanceof AjfReportColumnWidget) {\n      return AjfReportWidgetType.Column;\n    }\n    if (thisObj instanceof AjfReportPageBreakWidget) {\n      return AjfReportWidgetType.PageBreak;\n    }\n    if (thisObj instanceof AjfReportImageWidget) {\n      return AjfReportWidgetType.Image;\n    }\n    if (thisObj instanceof AjfReportTextWidget) {\n      return AjfReportWidgetType.Text;\n    }\n    if (thisObj instanceof AjfReportChartWidget) {\n      return AjfReportWidgetType.Chart;\n    }\n    if (thisObj instanceof AjfReportTableWidget) {\n      return AjfReportWidgetType.Table;\n    }\n    if (thisObj instanceof AjfReportMapWidget) {\n      return AjfReportWidgetType.Map;\n    }\n    if (thisObj instanceof AjfReportFormulaWidget) {\n      return AjfReportWidgetType.Formula;\n    }\n    if (thisObj instanceof AjfReportImageContainerWidget) {\n      return AjfReportWidgetType.ImageContainer;\n    }\n    throw new Error('Invalid widget type');\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['widgetType', 'content', 'styles', 'visibility']);\n\n    this.content = obj && obj.content || [];\n    this.styles = obj && obj.styles || {};\n    this.visibility = obj && obj.visibility || AjfCondition.alwaysCondition();\n  }\n}\n\n\nexport class AjfReportLayoutWidget extends AjfReportWidget {\n  columns: number[];\n\n  get hasContent(): boolean { return true; }\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['columns']);\n\n    if (obj && obj.columns) {\n      this.columns = obj.columns;\n    } else {\n      this.content = [new AjfReportColumnWidget()];\n      this.columns = [1];\n    }\n  }\n}\n\nexport class AjfReportColumnWidget extends AjfReportWidget {\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\nexport class AjfReportPageBreakWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n  }\n}\n\n\nexport class AjfReportImageWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this._icon = null;\n    this._flag = null;\n    this._url = null;\n  }\n\n  private _icon: AjfFormula | null;\n  get icon(): AjfFormula | null { return this._icon; }\n  set icon(icon: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Icon) {\n      this._icon = icon;\n    }\n  }\n\n  private _flag: AjfFormula | null;\n  get flag(): AjfFormula | null { return this._flag; }\n  set flag(flag: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Flag) {\n      this._flag = flag;\n    }\n  }\n\n  private _url: AjfFormula | null;\n  get url(): AjfFormula | null { return this._url; }\n  set url(url: AjfFormula | null) {\n    if (this._imageType === AjfImageType.Image) {\n      this._url = url;\n    }\n  }\n\n  setUrl(imageUrl: string) {\n    this.imageType = AjfImageType.Image;\n    this._url = new AjfFormula({formula: `\"${imageUrl}\"`});\n  }\n\n  setIcon(icon: AjfImageIcon) {\n    this.imageType = AjfImageType.Icon;\n    this._icon = new AjfFormula({\n      formula: `{fontSet: \"${icon.fontSet}\", fontIcon: \"${icon.fontIcon}\"}`\n    });\n  }\n\n  setFlag(flag: string) {\n    this.imageType = AjfImageType.Flag;\n    this._flag = new AjfFormula({formula: `\"${flag}\"`});\n  }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'url', 'icon', 'flag'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n    this._url = obj && obj.url ?\n      (obj.url instanceof AjfFormula ? obj.url : AjfFormula.fromJson(obj.url)) :\n      null;\n    this._icon = obj && obj.icon ?\n      (obj.icon instanceof AjfFormula ? obj.icon : AjfFormula.fromJson(obj.icon)) :\n      null;\n    this._flag = obj && obj.flag ?\n      (obj.flag instanceof AjfFormula ? obj.flag : AjfFormula.fromJson(obj.flag)) :\n      null;\n  }\n}\n\nexport class AjfReportImageContainerWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n\n  private _imageType: AjfImageType = AjfImageType.Image;\n  get imageType(): AjfImageType { return this._imageType; }\n  set imageType(imageType: AjfImageType) {\n    this._imageType = imageType;\n    this.urls = [];\n    this.flags = [];\n    this.icons = [];\n  }\n\n  urls: AjfFormula | string[];\n  flags: AjfFormula | string[];\n  icons: AjfFormula | AjfFormula[];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat([\n      'imageType', 'urls', 'icons', 'flags'\n    ]);\n\n    this._imageType = obj && obj.imageType != null ? obj.imageType : null;\n\n    this.urls = obj && obj.urls ?\n      (obj.urls instanceof AjfFormula ? obj.urls :\n        (obj.urls instanceof Array ? obj.urls : AjfFormula.fromJson(obj.urls))\n      ) : [];\n\n    this.flags = obj && obj.flags ?\n      (obj.flags instanceof AjfFormula ? obj.flags :\n        (obj.flags instanceof Array ? obj.flags : AjfFormula.fromJson(obj.flags))\n      ) : [];\n\n    this.icons = obj && obj.icons\n      ? (\n        obj.icons instanceof AjfFormula\n        ? obj.icons\n        : obj.icons.map((l: string) => AjfFormula.fromJson(l)))\n      : [];\n  }\n}\n\nexport class AjfReportTextWidget extends AjfReportWidget {\n  private _htmlText: string;\n  get htmlText(): string { return this._htmlText; }\n  set htmlText(htmlText: string) {\n    this._htmlText = htmlText;\n  }\n\n  get hasContent(): boolean { return false; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers.concat(['htmlText']);\n\n    this._htmlText = obj && obj.htmlText || '';\n  }\n\n}\n\nexport class AjfReportFormulaWidget extends AjfReportWidget {\n  private _formula: AjfFormula;\n  get formula(): AjfFormula { return this._formula; }\n  set formula(formula: AjfFormula) { this._formula = formula; }\n\n  get hasContent(): boolean { return true; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['content', 'formula']);\n\n    this.content = obj && obj.content || [];\n    this.formula = obj && obj.formula ?\n      (obj.formula instanceof AjfFormula ? obj.formula : AjfFormula.fromJson(obj.formula)) : null;\n  }\n\n}\n\nexport abstract class AjfReportDataWidget extends AjfReportWidget {\n  get hasContent(): boolean { return false; }\n  dataset: AjfDataset[] | AjfDataset[][];\n\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['dataset']);\n\n    this.dataset = obj && obj.dataset || [];\n  }\n}\n\n\n/**\n * Concrete class for manage chart.\n *\n *\n *\n * @throws 'labels or data or backgroundColor or borderColor missed'\n *         if the length of arrays passed by obj are not the same\n */\nexport class AjfReportChartWidget extends AjfReportDataWidget {\n  chartType: AjfChartType;\n  labels: AjfFormula | AjfFormula[];\n  dataset: AjfChartDataset[];\n  options: ChartOptions;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['chartType', 'labels', 'options']);\n\n    this.chartType = obj && obj.type || AjfChartType.Line;\n    this.dataset = obj && obj.dataset || [];\n    this.labels = obj && obj.labels || [];\n    this.options = obj && obj.options || null;\n  }\n}\n\n\nexport class AjfReportTableWidget extends AjfReportDataWidget {\n  cellStyles: any;\n  dataset: AjfTableDataset[][];\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['cellStyles']);\n\n    this.cellStyles = obj && obj.cellStyles || null;\n  }\n}\n\nexport class AjfReportMapWidget extends AjfReportDataWidget {\n  coordinate: AjfFormula;\n  tileLayer: string;\n  attribution: string;\n  disabled: boolean;\n\n  get coordinateMap():  AjfFormula | null { return this.coordinate; }\n  get tileLayerMap(): string { return this.tileLayer; }\n  get attributionMap(): string { return this.attribution; }\n  get disabledMap():  boolean { return this.disabled; }\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers = this.jsonExportedMembers\n      .concat(['coordinate', 'tileLayer', 'attribution', 'disabled']);\n\n    this.coordinate = obj && obj.coordinate || '';\n    this.tileLayer = obj && obj.tileLayer || '';\n    this.attribution = obj && obj.attribution || '';\n    this.disabled = obj && obj.disabled || false;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfReport} from './reports';\nimport {AjfReportInstance} from './reports-instances';\n\nexport abstract class AjfReportRenderer {\n  private _reportInstance: AjfReportInstance;\n  get reportInstance(): AjfReportInstance { return this._reportInstance; }\n  set reportInstance(reportInstance: AjfReportInstance) {\n    this._reportInstance = reportInstance;\n    this._report = reportInstance != null ? reportInstance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {AjfAggregation, AjfAggregationType} from './aggregation';\nimport {AjfChartDatasetOptions, AjfChartType} from './charts';\n\n/**\n * This class will define an ajf dataset\n */\nexport class AjfDataset extends AjfJsonSerializable {\n  formula: AjfFormula | AjfFormula[];\n  aggregation: AjfAggregation;\n  label: string;\n\n  /**\n   * this static method will load an AjfDataset from json\n   * @param obj : any - object formula\n   * @return AjfFormula\n   */\n\n  static fromJson(obj: any): AjfDataset {\n    return new AjfDataset(AjfDataset._parseJsonObject(obj));\n  }\n\n  protected static _parseJsonObject(obj: any): any {\n    obj = deepCopy(obj);\n    let keys: string[] = Object.keys(obj);\n\n    if (keys.indexOf('formula') === -1) {\n      throw new Error('dataset formula missing');\n    }\n    if (keys.indexOf('aggregation') === -1) {\n      throw new Error('dataset aggregation missing');\n    }\n    if (keys.indexOf('label') === -1) {\n      throw new Error('dataset label missing');\n    }\n\n    let formula: AjfFormula | AjfFormula[];\n    if (obj.formula instanceof Array) {\n      formula = (obj.formula as string[]).map(f => AjfFormula.fromJson(f));\n    } else {\n      formula =  AjfFormula.fromJson(obj.formula);\n    }\n    let aggregation: AjfAggregation = AjfAggregation.fromJson(obj.aggregation);\n\n    obj.formula = formula;\n    obj.aggregation = aggregation;\n\n    return obj;\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['formula', 'aggregation', 'label']);\n\n    this.formula     = obj && obj.formula     || null;\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n    this.label       = obj && obj.label       || null;\n  }\n\n}\n\nexport class AjfTableDataset extends AjfDataset {\n  formula: AjfFormula;\n  colspan: number;\n  rowspan: number;\n  style: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['rowspan', 'colspan', 'style']);\n\n    this.rowspan     = obj && obj.rowspan     || null;\n    this.colspan     = obj && obj.colspan     || null;\n    this.style       = obj && obj.style       || null;\n  }\n\n  static fromJson(obj: any): AjfTableDataset {\n    return new AjfTableDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n\n\nexport class AjfChartDataset extends AjfDataset {\n  formula: AjfFormula[];\n  chartType?: AjfChartType;\n  options?: AjfChartDatasetOptions;\n  datalabels?: any;\n\n  constructor(obj?: any) {\n    super(obj);\n\n    this.jsonExportedMembers =\n      this.jsonExportedMembers.concat(['chartType', 'options']);\n\n    if (obj.chartType != null) { this.chartType = obj.chartType; }\n    if (obj.options != null) { this.options = obj.options; }\n    if (obj.datalabels != null) { this.datalabels = obj.datalabels; }\n  }\n\n  static fromJson(obj: any): AjfChartDataset {\n    return new AjfChartDataset(AjfDataset._parseJsonObject(obj));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './charts';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n    switch (chartType) {\n      case AjfChartType.Line:\n      return 'line';\n      case AjfChartType.Bar:\n      return 'bar';\n      case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n      case AjfChartType.Radar:\n      return 'radar';\n      case AjfChartType.Scatter:\n      return 'scatter';\n      case AjfChartType.Doughnut:\n      return 'doughnut';\n      case AjfChartType.Pie:\n      return 'pie';\n      case AjfChartType.PolarArea:\n      return 'polarArea';\n      case AjfChartType.Bubble:\n      return 'bubble';\n      default:\n      return 'line';\n    }\n  }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChartColor} from 'chart.js';\n\n\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n\n\nexport interface AjfChartDatasetOptions {\n  backgroundColor?: ChartColor | ChartColor[];\n  borderWidth?: number;\n  borderColor?: ChartColor;\n  borderCapStyle?: string;\n  borderDash?: number[];\n  borderDashOffset?: number;\n  borderJoinStyle?: string;\n  fill?: boolean;\n  label?: string;\n  lineTension?: number;\n  pointBorderColor?: ChartColor | ChartColor[];\n  pointBackgroundColor?: ChartColor | ChartColor[];\n  pointBorderWidth?: number | number[];\n  pointRadius?: number | number[];\n  pointHoverRadius?: number | number[];\n  pointHitRadius?: number | number[];\n  pointHoverBackgroundColor?: ChartColor | ChartColor[];\n  pointHoverBorderColor?: ChartColor | ChartColor[];\n  pointHoverBorderWidth?: number | number[];\n  pointStyle?: string | string[] | HTMLImageElement | HTMLImageElement[];\n  xAxisID?: string;\n  yAxisID?: string;\n  type?: string;\n  hidden?: boolean;\n  hideInLegendAndTooltip?: boolean;\n  stack?: string;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, AjfJsonSerializable} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\n\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n\n/**\n * This class will define an ajf aggregator\n */\nexport class AjfAggregation extends AjfJsonSerializable {\n  aggregation: AjfAggregationType;\n  /**\n   * this static method will load an AjfAggregator from json\n   * @param obj : any - object aggregator\n   * @return AjfFormula\n   */\n  static fromJson(obj: any): AjfAggregation {\n    obj = deepCopy(obj);\n    return new AjfAggregation(obj);\n  }\n\n  /**\n   *\n   * @param obj\n   */\n  constructor(obj?: any) {\n    super();\n\n    this.jsonExportedMembers = [ 'aggregation' ];\n\n    this.aggregation = obj && obj.aggregation || AjfAggregationType.None;\n  }\n\n  evaluate(formulas: AjfFormula[], context: any): number[] {\n    const data: any[] = formulas.map(f => f.evaluate(context));\n    switch (this.aggregation) {\n      case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n      case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n      case AjfAggregationType.Average:\n      case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n      default:\n      return [];\n    }\n  }\n}\n"],"names":[],"mappings":"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"}