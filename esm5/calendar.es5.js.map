{"version":3,"file":"calendar.es5.js","sources":["../../../src/core/calendar/calendar.ts","../../../src/core/calendar/calendar-period.ts","../../../src/core/calendar/calendar-module.ts","../../../src/core/calendar/calendar-entry-label.ts","../../../src/core/calendar/calendar-service.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectorRef, EventEmitter, OnInit\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {endOfISOWeek, endOfWeek, endOfYear, parse, startOfISOWeek, startOfWeek,\n  startOfYear} from 'date-fns';\nimport {Observable} from 'rxjs';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarService} from './calendar-service';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod | null;\n}\n\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  set viewDate(viewDate: Date) {\n    this._setViewDate(viewDate);\n    this._cdr.markForCheck();\n  }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n    this._cdr.markForCheck();\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode { return this._viewMode; }\n  set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n    this._cdr.markForCheck();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType { return this._selectionMode; }\n  set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n    this._cdr.markForCheck();\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  set isoMode(isoMode: boolean) {\n    this._isoMode = isoMode;\n    this._buildCalendar();\n  }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  get change(): Observable<AjfCalendarChange> {\n    return this._change.asObservable();\n  }\n\n  private _selectedPeriod: AjfCalendarPeriod | null;\n  private set selectedPeriod(period: AjfCalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n    this._cdr.markForCheck();\n  }\n\n  get value(): AjfCalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  set value(period: AjfCalendarPeriod | Date | null) {\n    if (\n      this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date\n      && (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)\n    ) {\n      this.selectedPeriod = {\n        type: 'day',\n        startDate: period,\n        endDate: period\n      };\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n    this._cdr.markForCheck();\n  }\n\n  get calendarHeaders(): string[] { return this._calendarHeaders; }\n  get calendarRows(): AjfCalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _calendarHeaders: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef, private _service: AjfCalendarService) { }\n\n  prevPage(): void {\n    this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod | null = null;\n    if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._onTouchedCallback();\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  private _onTouchedCallback: () => void = () => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _buildCalendar(): void {\n    const calendarView = this._service.buildView({\n      viewMode: this._viewMode,\n      viewDate: this._viewDate,\n      selection: this._selectedPeriod,\n      isoMode: this._isoMode,\n      minDate: this._minDate == null ? null : new Date(this._minDate),\n      maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n    });\n    this._viewHeader = calendarView.header;\n    this._calendarHeaders = calendarView.headerRow;\n    this._calendarRows = calendarView.rows;\n    this._cdr.markForCheck();\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfCalendarEntryLabelPipe} from './calendar-entry-label';\nimport {AjfCalendarService} from './calendar-service';\n\n@NgModule({\n  declarations: [\n    AjfCalendarEntryLabelPipe,\n  ],\n  exports: [\n    AjfCalendarEntryLabelPipe,\n  ],\n})\nexport class AjfCalendarModule { }\n\n@NgModule({\n  providers: [\n    AjfCalendarService,\n  ],\n})\nexport class AjfGregorianCalendarModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarService} from './calendar-service';\n\n@Injectable()\n@Pipe({name: 'ajfCalendarEntryLabel'})\nexport class AjfCalendarEntryLabelPipe implements PipeTransform {\n  constructor(private _service: AjfCalendarService) { }\n\n  transform(entry: AjfCalendarEntry): string {\n    return this._service.entryLabel(entry);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {addDays, addMonths, addWeeks, addYears, endOfDay, endOfMonth, endOfISOWeek, endOfWeek,\n  endOfYear, format, getISODay, isAfter, isBefore, isSameDay, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears} from 'date-fns';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarView} from './calendar-view';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\n\nexport interface AjfCalendarParams {\n  viewMode: AjfCalendarViewMode;\n  viewDate: Date;\n  selection: AjfCalendarPeriod|null;\n  isoMode: boolean;\n  minDate: Date|null;\n  maxDate: Date|null;\n}\n\nfunction isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n  return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n}\n\nfunction periodOrder(entryType: AjfCalendarPeriodType): number {\n  return ['day', 'week', 'month', 'year'].indexOf(entryType);\n}\n\n@Injectable({providedIn: 'root'})\nexport class AjfCalendarService {\n  buildView(params: AjfCalendarParams): AjfCalendarView {\n    const {viewMode, viewDate} = params;\n    switch (viewMode) {\n      case 'decade':\n        let curYear: number = viewDate.getFullYear();\n        let firstYear = curYear - (curYear % 10) + 1;\n        let lastYear = firstYear + 11;\n        return {\n          header: `${firstYear} - ${lastYear}`,\n          headerRow: [],\n          rows: this._decadeCalendarRows(params),\n        };\n      case 'year':\n        return {\n          header: `${viewDate.getFullYear()}`,\n          headerRow: [],\n          rows: this._yearCalendarRows(params),\n        };\n      case 'month':\n        return {\n          header: format(viewDate, 'MMM YYYY'),\n          headerRow: this._monthHeaderRow(params),\n          rows: this._monthCalendarRows(params),\n        };\n    }\n    return {\n      header: '',\n      headerRow: [],\n      rows: [],\n    };\n  }\n\n  monthBounds(date: Date, isoMode: boolean): {start: Date, end: Date} {\n    if (!isoMode) {\n      return {\n        start: startOfMonth(date),\n        end: endOfMonth(date),\n      };\n    }\n    const isoDay = getISODay(date);\n    date = isoDay < 4 ? endOfISOWeek(date) : startOfISOWeek(date);\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(startDate);\n    const startWeekDay = startDate.getDay();\n    const endWeekDay = endDate.getDay();\n    if (startWeekDay == 0 || startWeekDay > 4) {\n      startDate = addWeeks(startDate, 1);\n    }\n    if (endWeekDay > 0 && endWeekDay < 4) {\n      endDate = subWeeks(endDate, 1);\n    }\n    startDate = startOfISOWeek(startDate);\n    endDate = endOfISOWeek(endDate);\n    return { start: startDate, end: endDate };\n  }\n\n  getEntryRange(entry: AjfCalendarEntry): {start: Date, end: Date} {\n    if (entry.type === 'day') {\n      return { start: new Date(entry.date), end: new Date(entry.date) };\n    } else {\n      let curDate: Date = new Date(entry.date);\n      return {\n        start: entry.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: entry.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n\n  isEntrySelected(\n    entry: AjfCalendarEntry, selection: AjfCalendarPeriod|null\n  ): AjfCalendarEntrySelectedState {\n    if (selection != null && selection.startDate != null && selection.endDate != null) {\n      let selectionStart: Date = startOfDay(selection.startDate);\n      let selectionEnd: Date = endOfDay(selection.endDate);\n      let selectionPeriodOrder: number = periodOrder(selection.type);\n\n      let entryPeriodOrder: number = periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = this.getEntryRange(entry);\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  entryLabel(entry: AjfCalendarEntry): string {\n    if (entry.type === 'day') {\n      return `${entry.date.getDate()}`;\n    }\n    if (entry.type === 'month') {\n      return format(entry.date, 'MMM');\n    }\n    return `${entry.date.getFullYear()}`;\n  }\n\n  nextView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return addMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return addYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return addYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  previousView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return subMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return subYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return subYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  private _monthHeaderRow(params: AjfCalendarParams): string[] {\n    const {isoMode, viewDate} = params;\n    let curDate: Date;\n    if (isoMode) {\n      curDate = setISODay(startOfWeek(viewDate), 1);\n    } else {\n      curDate = startOfWeek(viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'dddd'));\n      curDate = addDays(curDate, 1);\n    }\n    return weekDayNames;\n  }\n\n  private _decadeCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curYear: number = viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let curDate: Date = startOfYear(viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'year',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _yearCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curDate: Date = startOfYear(viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'month',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _monthCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection, isoMode, minDate, maxDate} = params;\n    const monthBounds = this.monthBounds(viewDate, isoMode);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'YYYY-MM-DD') === format(curDate, 'YYYY-MM-DD'),\n          disabled: disabled\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n"],"names":[],"mappings":"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"}