{"version":3,"file":"checkbox-group.es5.js","sources":["../../../src/core/checkbox-group/checkbox-group-module.ts","../../../src/core/checkbox-group/checkbox-group.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AjfCheckboxGroup} from './checkbox-group';\n\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  declarations: [\n    AjfCheckboxGroup\n  ],\n  exports: [\n    AjfCheckboxGroup\n  ]\n})\nexport class AjfCheckboxGroupModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AfterContentInit, Directive, EventEmitter, Input, forwardRef, OnInit,\n  Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {combineLatest, BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {coerceBooleanProperty} from '@ajf/core/utils';\n\n\nexport const AJF_CHECKBOX_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AjfCheckboxGroup),\n  multi: true\n};\n\nexport class AjfCheckboxGroupItemChange<T> {\n  source: AjfCheckboxGroupItem<T>;\n  value: any;\n}\n\nexport class AjfCheckboxGroupChange<T> {\n  source: AjfCheckboxGroup<T>;\n  value: any;\n}\n\nlet _uniqueIdCounter = 0;\n\n\n@Directive({\n  selector: 'ajf-checkbox-group,[ajf-checkbox-group]',\n  providers: [AJF_CHECKBOX_GROUP_VALUE_ACCESSOR]\n})\nexport class AjfCheckboxGroup<T> implements AfterContentInit, ControlValueAccessor {\n  checkboxes: AjfCheckboxGroupItem<T>[] = [];\n\n  /** The value for the button toggle group. Should match currently selected button toggle. */\n  private _value: T[] = [];\n  get value(): T[] { return this._value; }\n  @Input() set value(newValue: T[]) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n      this._updateSelectedCheckboxesFromValue();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** The HTML name attribute applied to toggles in this group. */\n  private _name: string;\n  get name(): string { return this._name; }\n  @Input() set name(value: string) {\n    this._name = value;\n    this._updateCheckboxesNames();\n  }\n\n  /** Disables all toggles in the group. */\n  private _disabled:  boolean = false;\n  get disabled(): boolean { return this._disabled; }\n  @Input() set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** The currently selected button toggle, should match the value. */\n  private _selected: AjfCheckboxGroupItem<T>[] = [];\n  get selected() { return this._selected; }\n  set selected(selected: AjfCheckboxGroupItem<T>[]) {\n    this._selected = selected;\n    let values: T[] = [];\n    if (selected) {\n      selected.forEach(c => {\n        values.push(c.value);\n        if (!c.checked) {\n          c.checked = true;\n        }\n      });\n    }\n    this._value = values;\n  }\n\n  /** Event emitted when the group's value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupChange<T>> =\n    new EventEmitter<AjfCheckboxGroupChange<T>>();\n    @Output() readonly change: Observable<AjfCheckboxGroupChange<T>> = this._change.asObservable();\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: T[]) {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: T[]) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  addValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    if (curValue.indexOf(value) === -1) {\n      curValue.push(value);\n      this.value = curValue;\n    }\n  }\n\n  removeValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    let idx = curValue.indexOf(value);\n    if (idx > -1) {\n      curValue.splice(idx, 1);\n      this.value = curValue;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._updateCheckboxesNames();\n    this._updateSelectedCheckboxesFromValue();\n  }\n\n  registerItem(item: AjfCheckboxGroupItem<T>): void {\n    this.checkboxes.push(item);\n  }\n\n  /** The method to be called in order to update ngModel. */\n  private _controlValueAccessorChangeFn: (value: any) => void = (_) => {};\n\n  private _updateCheckboxesNames(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach((checkbox) => {\n      if (checkbox == null) { return; }\n      checkbox.name = this._name;\n    });\n  }\n\n  private _updateSelectedCheckboxesFromValue(): void {\n    if (this.checkboxes == null) { return; }\n    this.checkboxes.forEach(checkbox => {\n      if (checkbox == null) { return; }\n      if ((this._value || []).indexOf(checkbox.value) > -1) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    });\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  private _emitChangeEvent(): void {\n    let event = new AjfCheckboxGroupChange<T>();\n    event.source = this;\n    event.value = this._value;\n    this._controlValueAccessorChangeFn(event.value);\n    this._change.emit(event);\n  }\n}\n\nexport class AjfCheckboxGroupItem<T> implements OnInit {\n  /** The unique ID for this button toggle. */\n  private _checkboxId: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  readonly checkboxId: Observable<string> = this._checkboxId.asObservable();\n\n  set id(id: string) { this._checkboxId.next(id); }\n\n  name: string;\n\n  /** The parent button toggle group (exclusive selection). Optional. */\n  readonly checkboxGroup: AjfCheckboxGroup<T>;\n\n  /** Whether or not this button toggle is checked. */\n  private _checkedState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly checkedState: Observable<boolean> = this._checkedState.asObservable();\n  get checked(): boolean { return this._checkedState.getValue(); }\n  set checked(checked: boolean) { this._checkedState.next(checked); }\n\n  /** Whether or not this button toggle is disabled. */\n  private _disabledState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly disabledState: Observable<boolean> = this._disabledState.asObservable();\n  get disabled(): boolean {\n    const disabled = this._disabledState.getValue();\n    return disabled || (this.checkboxGroup != null && this.checkboxGroup.disabled);\n  }\n  set disabled(disabled: boolean) {\n    this._disabledState.next(disabled != null && disabled !== false);\n  }\n\n  /** Value assigned to this button toggle. */\n  private _value: T;\n  get value(): T { return this._value; }\n  set value(value: T) {\n    if (this._value !== value) {\n      this._value = value;\n    }\n  }\n\n  private _checkedIconVal: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  get checkedIcon(): string { return this._checkedIconVal.getValue(); }\n  set checkedIcon(icon: string) { this._checkedIconVal.next(icon); }\n\n  private _notCheckedIconVal: BehaviorSubject<string> =\n      new BehaviorSubject<string>('');\n  get notCheckedIcon(): string { return this._notCheckedIconVal.getValue(); }\n  set notCheckedIcon(icon: string) { this._notCheckedIconVal.next(icon); }\n\n  readonly icon: Observable<string>;\n\n  /** Event emitted when the group value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupItemChange<T>>\n    = new EventEmitter<AjfCheckboxGroupItemChange<T>>();\n  readonly change: Observable<AjfCheckboxGroupItemChange<T>> = this._change.asObservable();\n\n  constructor(checkboxGroup?: AjfCheckboxGroup<T>) {\n    this.icon = combineLatest(\n      this._checkedState, this._checkedIconVal, this._notCheckedIconVal\n    ).pipe(\n      map(r => r[0] ? r[1] : r[2])\n    );\n\n    if (checkboxGroup) {\n      this.checkboxGroup = checkboxGroup;\n      this.checkboxGroup.registerItem(this);\n    }\n  }\n\n  ngOnInit() {\n    if (this.id == null) {\n      this.id = `ajf-checkbox-group-item-${_uniqueIdCounter++}`;\n    }\n\n    if (\n      this.checkboxGroup && this.checkboxGroup.value &&\n      this.checkboxGroup.value.indexOf(this._value) > -1\n    ) {\n      this.checked = true;\n    }\n  }\n\n  /** Checks the button toggle due to an interaction with the underlying native input. */\n  onInputChange(event: Event) {\n    event.stopPropagation();\n\n    this._toggle();\n  }\n\n  /** Toggle the state of the current button toggle. */\n  private _toggle(): void {\n    this.checked = !this.checked;\n\n    if (this.checkboxGroup != null) {\n      if (this.checked) {\n        this.checkboxGroup.addValue(this._value);\n      } else {\n        this.checkboxGroup.removeValue(this._value);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}