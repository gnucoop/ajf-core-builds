/**
 * @license
 * Copyright (C) 2018 Gnucoop soc. coop.
 *
 * This file is part of the Advanced JSON forms (ajf).
 *
 * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Advanced JSON forms (ajf).
 * If not, see http://www.gnu.org/licenses/.
 *
 */
import { __assign } from "tslib";
import { AjfFieldType } from '../../interface/fields/field-type';
import { AjfNodeType } from '../../interface/nodes/node-type';
import { createNode } from '../nodes/create-node';
export function createField(field) {
    var node = createNode(__assign(__assign({}, field), { nodeType: AjfNodeType.AjfField }));
    var editable = field.editable != null ?
        field.editable :
        field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;
    return __assign(__assign(__assign({}, node), field), { nodeType: AjfNodeType.AjfField, editable: editable, defaultValue: field.defaultValue != null ? field.defaultValue : null, size: field.size || 'normal' });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWZpZWxkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvcmUvZm9ybXMvdXRpbHMvZmllbGRzL2NyZWF0ZS1maWVsZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7O0FBR0gsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQy9ELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUM1RCxPQUFPLEVBQWdCLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBSy9ELE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBcUI7SUFDL0MsSUFBTSxJQUFJLEdBQUcsVUFBVSx1QkFBSyxLQUFLLEtBQUUsUUFBUSxFQUFFLFdBQVcsQ0FBQyxRQUFRLElBQUUsQ0FBQztJQUNwRSxJQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxDQUFDO1FBQ3JDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQixLQUFLLENBQUMsU0FBUyxLQUFLLFlBQVksQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLFNBQVMsS0FBSyxZQUFZLENBQUMsS0FBSyxDQUFDO0lBQ3ZGLHNDQUNLLElBQUksR0FDSixLQUFLLEtBQ1IsUUFBUSxFQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQzlCLFFBQVEsVUFBQSxFQUNSLFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUNwRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksSUFBSSxRQUFRLElBQzVCO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoQykgMjAxOCBHbnVjb29wIHNvYy4gY29vcC5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKS5cbiAqXG4gKiBBZHZhbmNlZCBKU09OIGZvcm1zIChhamYpIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vclxuICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzXG4gKiBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSxcbiAqIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgQWZmZXJvXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIEFkdmFuY2VkIEpTT04gZm9ybXMgKGFqZikuXG4gKiBJZiBub3QsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvLlxuICpcbiAqL1xuXG5pbXBvcnQge0FqZkZpZWxkfSBmcm9tICcuLi8uLi9pbnRlcmZhY2UvZmllbGRzL2ZpZWxkJztcbmltcG9ydCB7QWpmRmllbGRUeXBlfSBmcm9tICcuLi8uLi9pbnRlcmZhY2UvZmllbGRzL2ZpZWxkLXR5cGUnO1xuaW1wb3J0IHtBamZOb2RlVHlwZX0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlL25vZGVzL25vZGUtdHlwZSc7XG5pbXBvcnQge0FqZk5vZGVDcmVhdGUsIGNyZWF0ZU5vZGV9IGZyb20gJy4uL25vZGVzL2NyZWF0ZS1ub2RlJztcblxuZXhwb3J0IHR5cGUgQWpmRmllbGRDcmVhdGUgPVxuICAgIE9taXQ8QWpmTm9kZUNyZWF0ZSwgJ25vZGVUeXBlJz4mUGljazxBamZGaWVsZCwgJ2ZpZWxkVHlwZSc+JlBhcnRpYWw8QWpmRmllbGQ+O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRmllbGQoZmllbGQ6IEFqZkZpZWxkQ3JlYXRlKTogQWpmRmllbGQge1xuICBjb25zdCBub2RlID0gY3JlYXRlTm9kZSh7Li4uZmllbGQsIG5vZGVUeXBlOiBBamZOb2RlVHlwZS5BamZGaWVsZH0pO1xuICBjb25zdCBlZGl0YWJsZSA9IGZpZWxkLmVkaXRhYmxlICE9IG51bGwgP1xuICAgICAgZmllbGQuZWRpdGFibGUgOlxuICAgICAgZmllbGQuZmllbGRUeXBlICE9PSBBamZGaWVsZFR5cGUuRm9ybXVsYSAmJiBmaWVsZC5maWVsZFR5cGUgIT09IEFqZkZpZWxkVHlwZS5UYWJsZTtcbiAgcmV0dXJuIHtcbiAgICAuLi5ub2RlLFxuICAgIC4uLmZpZWxkLFxuICAgIG5vZGVUeXBlOiBBamZOb2RlVHlwZS5BamZGaWVsZCxcbiAgICBlZGl0YWJsZSxcbiAgICBkZWZhdWx0VmFsdWU6IGZpZWxkLmRlZmF1bHRWYWx1ZSAhPSBudWxsID8gZmllbGQuZGVmYXVsdFZhbHVlIDogbnVsbCxcbiAgICBzaXplOiBmaWVsZC5zaXplIHx8ICdub3JtYWwnLFxuICB9O1xufVxuIl19