{"version":3,"file":"ajf-core-barcode.mjs","sources":["../../../projects/core/barcode/src/barcode.ts","../../../projects/core/barcode/src/public_api.ts","../../../projects/core/barcode/src/ajf-core-barcode.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, ElementRef, Renderer2, ViewChild} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {BrowserMultiFormatReader, IScannerControls} from '@zxing/browser';\n\ntype AjfVideoFacingMode = 'user' | 'environment';\n\n@Directive()\nexport abstract class AjfBarcode implements ControlValueAccessor {\n  @ViewChild('barcodeVideo', {read: ElementRef}) barcodeVideo!: ElementRef<HTMLVideoElement>;\n  @ViewChild('barcodeVideoPreview', {read: ElementRef})\n  barcodeVideoPreview!: ElementRef<HTMLDivElement>;\n  @ViewChild('barcodeImagePreview', {read: ElementRef})\n  barcodeImagePreview!: ElementRef<HTMLImageElement>;\n\n  /**\n   * A html video element created at runtime\n   *\n   * @memberof AjfBarcode\n   */\n  private _video?: HTMLVideoElement;\n  get videoSource(): HTMLVideoElement | undefined {\n    return this._video;\n  }\n\n  /**\n   * implement the control form value.\n   * rappresent the barcode value.\n   *\n   * @memberof AjfBarcode\n   */\n  private _barcodeValue = '';\n  get value(): string {\n    return this._barcodeValue;\n  }\n  set value(value: string) {\n    if (this._barcodeValue !== value) {\n      this._barcodeValue = value;\n      this._cdr.detectChanges();\n      this._onChangeCallback(value);\n    }\n  }\n\n  private _supportsVideoStream = false;\n  get supportsVideoStream(): boolean {\n    return this._supportsVideoStream;\n  }\n\n  private _toggle = 'drop';\n  get toggle() {\n    return this._toggle;\n  }\n  set toggle(val: string) {\n    this._toggle = val;\n    this._cdr.markForCheck();\n  }\n\n  private _showSwitchButton = false;\n  get showSwitchButton(): boolean {\n    return this._showSwitchButton;\n  }\n\n  private _deviceId?: string;\n  private _streams = [] as AjfVideoFacingMode[];\n  private _currentStream = -1;\n  private _scannerControls?: IScannerControls;\n  private _codeReader = new BrowserMultiFormatReader();\n\n  private _onChangeCallback = (_: any) => {};\n  private _onTouchedCallback = () => {};\n\n  constructor(protected _cdr: ChangeDetectorRef, private _renderer: Renderer2) {\n    this._supportsVideoStream =\n      navigator.mediaDevices != null &&\n      navigator.mediaDevices.enumerateDevices != null &&\n      navigator.mediaDevices.getUserMedia != null;\n    this._initVideoStreams();\n  }\n\n  reset(): void {\n    this.value = '';\n    this._onTouchedCallback();\n  }\n\n  onSelectFile(evt: Event): void {\n    if (evt == null || evt.target == null) {\n      return;\n    }\n    const target = evt.target as HTMLInputElement;\n    const files = target.files as FileList;\n    this._onSelect(files);\n  }\n\n  onSelectDrop(files: FileList): void {\n    if (files == null) {\n      return;\n    }\n    this._onSelect(files);\n  }\n\n  onTabChange(idx: number): void {\n    if (this._scannerControls != null) {\n      this._scannerControls.stop();\n      this._scannerControls = undefined;\n    }\n    if (idx === 1) {\n      this._setCurrentStream();\n      if (this.barcodeVideo == null || this.barcodeVideoPreview == null) {\n        return;\n      }\n      const video = this.barcodeVideo.nativeElement;\n      const preview = this.barcodeVideoPreview.nativeElement;\n      this._renderer.addClass(preview, 'ajf-video-preview-hidden');\n      this._codeReader\n        .decodeFromVideoElement(video, result => {\n          if (result == null) {\n            return;\n          }\n          if (this._scannerControls != null) {\n            this._scannerControls.stop();\n          }\n          video.pause();\n          const points = result.getResultPoints();\n          const nw = points[0];\n          const se = points[1];\n          const lx = Math.max((nw.getX() / video.videoWidth) * video.clientWidth, -10, 0);\n          const ly = Math.max((nw.getY() / video.videoHeight) * video.clientHeight - 10, 0);\n          const rx = Math.min(\n            (se.getX() / video.videoWidth) * video.clientWidth + 10,\n            video.clientWidth,\n          );\n          const ry = Math.min(\n            (se.getY() / video.videoHeight) * video.clientHeight + 10,\n            video.clientHeight,\n          );\n          this._renderer.setStyle(preview, 'top', `${ly}px`);\n          this._renderer.setStyle(preview, 'left', `${lx}px`);\n          this._renderer.setStyle(preview, 'width', `${rx - lx}px`);\n          this._renderer.setStyle(preview, 'height', `${ry - ly}px`);\n          this._renderer.removeClass(preview, 'ajf-video-preview-hidden');\n          this.value = result.getText();\n        })\n        .then(controls => (this._scannerControls = controls));\n    }\n  }\n\n  switchCamera(): void {\n    const newStream = (this._currentStream + 1) % this._streams.length;\n    if (newStream === this._currentStream) {\n      return;\n    }\n    this._currentStream = newStream;\n    this._setCurrentStream();\n  }\n\n  /** ControlValueAccessor implements */\n  writeValue(value: string) {\n    this._barcodeValue = value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouchedCallback = fn;\n  }\n\n  private _onSelect(files: FileList): void {\n    if (files != null && files.length > 0 && files[0]) {\n      let reader = new FileReader();\n\n      reader.readAsDataURL(files[0]);\n      reader.onload = (ev: ProgressEvent) => {\n        if (!ev.loaded) {\n          return;\n        }\n        const data = reader.result as string;\n        this._setImagePreview(`url(${data})`);\n        this._codeReader\n          .decodeFromImageUrl(data)\n          .then(res => {\n            this.value = res.getText();\n          })\n          .catch(() => {});\n      };\n    }\n  }\n\n  private _setImagePreview(img: string): void {\n    if (this.barcodeImagePreview != null) {\n      this._renderer.setStyle(this.barcodeImagePreview.nativeElement, 'background-image', img);\n    }\n  }\n\n  private _initVideoStreams(): void {\n    if (!this._supportsVideoStream) {\n      return;\n    }\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(devices => {\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\n        if (videoDevices.length === 0) {\n          this._supportsVideoStream = false;\n          throw new Error('No video device found');\n        }\n        return videoDevices[0];\n      })\n      .then(device => {\n        const {deviceId} = device;\n        const facingModes = ['environment', 'user'] as AjfVideoFacingMode[];\n        const streamQueries = facingModes.map(facingMode => {\n          return navigator.mediaDevices\n            .getUserMedia({\n              audio: false,\n              video: {deviceId, advanced: [{facingMode}]},\n            })\n            .then(stream => ({stream, facingMode}));\n        });\n        this._deviceId = deviceId;\n        return Promise.all(streamQueries);\n      })\n      .then(streams => {\n        this._streams = [];\n        const tracksIds = [] as string[];\n        const tracksLabels = [] as string[];\n        streams.forEach(({stream, facingMode}) => {\n          if (stream == null) {\n            return;\n          }\n          const tracks = stream.getTracks();\n          let addStream = false;\n          if (\n            tracks.find(t => tracksIds.indexOf(t.id) === -1 && tracksLabels.indexOf(t.label) === -1)\n          ) {\n            tracks.forEach(t => {\n              tracksIds.push(t.id);\n              tracksLabels.push(t.label);\n            });\n            addStream = true;\n          }\n          if (addStream) {\n            this._streams.push(facingMode);\n          }\n        });\n        if (this._streams.length === 0) {\n          throw new Error('No stream available');\n        }\n        this._showSwitchButton = this._streams.length > 1;\n        this._currentStream = 0;\n        this._setCurrentStream();\n      })\n      .catch(() => (this._supportsVideoStream = false))\n      .finally(() => this._cdr.markForCheck());\n  }\n\n  private _setCurrentStream(): void {\n    if (\n      this.barcodeVideo == null ||\n      this._deviceId == null ||\n      this._streams.length === 0 ||\n      this._currentStream < 0 ||\n      this._currentStream >= this._streams.length\n    ) {\n      return;\n    }\n    const video = this.barcodeVideo.nativeElement;\n    const facingMode = this._streams[this._currentStream];\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: false,\n        video: {deviceId: this._deviceId, advanced: [{facingMode}]},\n      })\n      .then(stream => {\n        video.srcObject = stream;\n      });\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './barcode';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}