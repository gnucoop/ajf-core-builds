{"version":3,"file":"ajf-core-reports.mjs","sources":["../../../projects/core/reports/src/base-widget.ts","../../../projects/core/reports/src/interface/charts/chart-type.ts","../../../projects/core/reports/src/chart-utils.ts","../../../projects/core/reports/src/get-column-content.ts","../../../projects/core/reports/src/interface/aggregation/aggregation-type.ts","../../../projects/core/reports/src/interface/widgets/widget-type.ts","../../../projects/core/reports/src/report.ts","../../../projects/core/reports/src/utils/reports/build-report-string-identifier.ts","../../../projects/core/reports/src/report-string-identifier.ts","../../../projects/core/reports/src/widget-export.ts","../../../projects/core/reports/src/widget-export.html","../../../projects/core/reports/src/widget-host.ts","../../../projects/core/reports/src/reports-module.ts","../../../projects/core/reports/src/utils/aggregation/create-aggregation.ts","../../../projects/core/reports/src/serializers/aggregation-serializer.ts","../../../projects/core/reports/src/utils/dataset/create-dataset.ts","../../../projects/core/reports/src/serializers/dataset-serializer.ts","../../../projects/core/reports/src/utils/widgets/create-widget.ts","../../../projects/core/reports/src/serializers/widget-serializer.ts","../../../projects/core/reports/src/serializers/report-container-serializer.ts","../../../projects/core/reports/src/utils/reports/create-report.ts","../../../projects/core/reports/src/serializers/report-serializer.ts","../../../projects/core/reports/src/widget.ts","../../../projects/core/reports/src/utils/widgets/widgets-map.ts","../../../projects/core/reports/src/widget-service.ts","../../../projects/core/reports/src/utils/aggregation/evaluate-aggregation.ts","../../../projects/core/reports/src/utils/widgets/is-chart-widget.ts","../../../projects/core/reports/src/utils/widgets/is-dialog-widget.ts","../../../projects/core/reports/src/utils/widgets/is-dynamic-table-widget.ts","../../../projects/core/reports/src/utils/widgets/is-formula-widget.ts","../../../projects/core/reports/src/utils/widgets/is-graph-widget.ts","../../../projects/core/reports/src/utils/widgets/is-heat-map-widget.ts","../../../projects/core/reports/src/utils/widgets/is-image-container-widget.ts","../../../projects/core/reports/src/utils/widgets/is-image-widget.ts","../../../projects/core/reports/src/utils/widgets/is-map-widget.ts","../../../projects/core/reports/src/utils/widgets/is-paginated-list-widget.ts","../../../projects/core/reports/src/utils/widgets/is-paginated-table-widget.ts","../../../projects/core/reports/src/utils/widgets/is-widget-with-content.ts","../../../projects/core/reports/src/utils/widgets/is-table-widget.ts","../../../projects/core/reports/src/utils/widgets/is-text-widget.ts","../../../projects/core/reports/src/utils/widgets-instances/is-chart-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-dialog-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-dynamic-table-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-formula-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-graph-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-heat-map-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-image-container-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-image-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-map-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-paginated-list-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-paginated-table-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-table-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-text-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/is-widget-with-content-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/create-widget-instance.ts","../../../projects/core/reports/src/utils/widgets-instances/widget-instance-utils.ts","../../../projects/core/reports/src/utils/widgets-instances/widget-to-widget-instance.ts","../../../projects/core/reports/src/utils/reports-instances/create-report-container-instance.ts","../../../projects/core/reports/src/utils/reports-instances/create-report-instance.ts","../../../projects/core/reports/src/utils/reports/create-report-container.ts","../../../projects/core/reports/src/automatic-report/styles.ts","../../../projects/core/reports/src/automatic-report/automatic-report.ts","../../../projects/core/reports/src/xls-report/hindikit-parser.ts","../../../projects/core/reports/src/xls-report/styles.ts","../../../projects/core/reports/src/xls-report/xls-report.ts","../../../projects/core/reports/src/report-to-pdf/load-report-images.ts","../../../projects/core/reports/src/report-to-pdf/report-to-pdf.ts","../../../projects/core/reports/src/public_api.ts","../../../projects/core/reports/src/ajf-core-reports.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, ElementRef, Input} from '@angular/core';\n\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\n@Directive()\nexport class AjfBaseWidgetComponent<T extends AjfWidgetInstance = AjfWidgetInstance> {\n  private _instance: T | undefined;\n  get instance(): T | undefined {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: T | undefined) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._cdr.detectChanges();\n    }\n  }\n\n  constructor(protected _cdr: ChangeDetectorRef, readonly el: ElementRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './interface/charts/chart-type';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n  switch (chartType) {\n    case AjfChartType.Line:\n      return 'line';\n    case AjfChartType.Bar:\n      return 'bar';\n    case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n    case AjfChartType.Radar:\n      return 'radar';\n    case AjfChartType.Scatter:\n      return 'scatter';\n    case AjfChartType.Doughnut:\n      return 'doughnut';\n    case AjfChartType.Pie:\n      return 'pie';\n    case AjfChartType.PolarArea:\n      return 'polarArea';\n    case AjfChartType.Bubble:\n      return 'bubble';\n    default:\n      return 'line';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfLayoutWidgetInstance} from './interface/widgets-instances/layout-widget-instance';\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\n@Pipe({name: 'ajfGetColumnContent'})\nexport class AjfGetColumnContentPipe implements PipeTransform {\n  transform(instance: AjfLayoutWidgetInstance, column: number): AjfWidgetInstance | null {\n    return column >= 0 && column < instance.content.length ? instance.content[column] : null;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  DynamicTable,\n  Graph,\n  PaginatedList,\n  Dialog,\n  HeatMap,\n  PaginatedTable,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, Input} from '@angular/core';\n\nimport {AjfReportInstance} from './interface/reports-instances/report-instance';\nimport {AjfReport} from './interface/reports/report';\n\n@Directive()\nexport abstract class AjfReportRenderer {\n  private _instance: AjfReportInstance | undefined;\n  get instance(): AjfReportInstance | undefined {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfReportInstance | undefined) {\n    this._instance = instance;\n    this._report = instance != null ? instance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null = null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, buildStringIdentifier, BuildStringIdentifierOpts} from '@ajf/core/common';\n\nimport {AjfReport} from '../../interface/reports/report';\n\nexport const buildReportStringIdentifier = (\n  report: AjfReport,\n  context: AjfContext,\n  opts?: BuildStringIdentifierOpts,\n): string => {\n  if (report == null) {\n    return '';\n  }\n  const stringIdentifier = report.stringIdentifier || [];\n  if (stringIdentifier.length === 0) {\n    return '';\n  }\n  return buildStringIdentifier(stringIdentifier, context, opts);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, BuildStringIdentifierOpts} from '@ajf/core/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfReport} from './interface/reports/report';\nimport {buildReportStringIdentifier} from './utils/reports/build-report-string-identifier';\n\n@Pipe({name: 'ajfReportStringIdentifier'})\nexport class AjfReportStringIdentifierPipe implements PipeTransform {\n  transform(report: AjfReport, context: AjfContext, opts?: BuildStringIdentifierOpts): string {\n    return buildReportStringIdentifier(report, context, opts);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableCell} from '@ajf/core/table';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from 'chart.js';\nimport {format} from 'date-fns';\nimport {utils, WorkBook, WorkSheet, writeFile} from 'xlsx';\n\nimport {AjfWidgetType} from './interface/widgets/widget-type';\n\n@Component({\n  selector: 'ajf-widget-export',\n  templateUrl: 'widget-export.html',\n  styleUrls: ['widget-export.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AjfWidgetExport {\n  @Input() widgetType: AjfWidgetType | undefined;\n  @Input() data: ChartData | AjfTableCell[][] | undefined;\n  @Input() overlay = true;\n  @Input() enable = false;\n\n  showOverlay = false;\n\n  private static _iconsMap: {[html: string]: string} = {};\n\n  /**\n   * Allows rendering html icons as text.\n   */\n  static addIcons(icons: {[html: string]: string}) {\n    AjfWidgetExport._iconsMap = {...AjfWidgetExport._iconsMap, ...icons};\n  }\n\n  constructor() {}\n\n  /**\n   * Export widget data in CSV format\n   * @deprecated Use `AjfWidgetExport.export` with 'csv' parameter.\n   * @breaking-change 13.0.0\n   */\n  exportCsv(): void {\n    this.export('csv');\n  }\n\n  /**\n   * Export widget data in Xlsx format\n   * @deprecated Use `AjfWidgetExport.export` with 'xlsx' parameter.\n   * @breaking-change 13.0.0\n   */\n  exportXlsx(): void {\n    this.export('xlsx');\n  }\n\n  /**\n   * Export widget data in CSV or Xlsx format\n   */\n  export(bookType: 'csv' | 'xlsx'): void {\n    if (this.widgetType == null) {\n      return;\n    }\n    const sheetName = this._buildTitle(this.widgetType);\n    const sheets: {[sheet: string]: WorkSheet} = {};\n    sheets[sheetName] = utils.aoa_to_sheet(this._buildXlsxData());\n    const workBook: WorkBook = {Sheets: sheets, SheetNames: [sheetName]};\n    writeFile(workBook, `${sheetName}.${bookType}`, {\n      bookType,\n      type: 'array',\n    });\n  }\n\n  private _buildXlsxData(): unknown[][] {\n    const iconsMap = AjfWidgetExport._iconsMap;\n    let xlsxData: unknown[][] = [];\n    let labels: string[] = [];\n    switch (this.widgetType) {\n      default:\n      case AjfWidgetType.Chart:\n        this.data = this.data as ChartData;\n        const datasets = this.data.datasets || [];\n        labels = ['name'].concat(this.data.labels as string[]);\n        xlsxData.push(labels);\n        for (let i = 0; i < datasets.length; i++) {\n          const row: unknown[] = [];\n          const data = datasets[i].data || [];\n          row.push(datasets[i].label);\n          for (let j = 0; j < data.length; j++) {\n            row.push(data[j]);\n          }\n          xlsxData.push(row);\n        }\n        break;\n      case AjfWidgetType.DynamicTable:\n      case AjfWidgetType.Table:\n      case AjfWidgetType.PaginatedTable:\n        const tableData = this.data as AjfTableCell[][];\n        if (tableData.length > 1) {\n          xlsxData = [];\n          const nextRows: unknown[][] = [];\n          let nextRow: unknown[] = [];\n          let totRowSpan = 0;\n          let nextRowspanNum = 0;\n\n          for (let i = 0; i < tableData.length; i++) {\n            let isNewRowAfterRowspan = false;\n            let res: unknown[] = [];\n\n            nextRow = [];\n            if (totRowSpan > 0) {\n              res = [...nextRows[nextRowspanNum - 1]];\n              isNewRowAfterRowspan = true;\n            }\n            tableData[i].forEach((elem: AjfTableCell, idxElem: number) => {\n              let val = elem.value.changingThisBreaksApplicationSecurity;\n              if (val === undefined) {\n                val = elem.value;\n              }\n              if (val != null && iconsMap[val]) {\n                val = iconsMap[val];\n              }\n              res.push(val);\n\n              if (elem.colspan && elem.colspan > 1) {\n                for (let j = 1; j < elem.colspan; j++) {\n                  res.push(' ');\n                }\n              }\n              if (isNewRowAfterRowspan) {\n                if (elem.rowspan && elem.rowspan > 1) {\n                  for (let idx = 1; idx < elem.rowspan; idx++) {\n                    nextRow.push(' ');\n                    nextRows[nextRowspanNum] = nextRows[nextRowspanNum].concat(nextRow);\n                  }\n                }\n                if (idxElem === tableData[i].length - 1 && nextRowspanNum > 0) {\n                  nextRowspanNum++;\n                  if (nextRowspanNum === totRowSpan) {\n                    totRowSpan = 0;\n                    nextRowspanNum = 0;\n                  }\n                }\n              } else {\n                if (elem.rowspan && elem.rowspan > 1) {\n                  totRowSpan = elem.rowspan;\n                  nextRowspanNum = 1;\n                  for (let idx = 1; idx < elem.rowspan; idx++) {\n                    nextRow.push(' ');\n                    nextRows[idx - 1] = nextRow;\n                  }\n                }\n              }\n            });\n            xlsxData.push(res);\n          }\n        }\n        break;\n    }\n\n    return xlsxData;\n  }\n\n  private _buildTitle(widgetType: AjfWidgetType): string {\n    return `${AjfWidgetType[widgetType]} ${format(new Date(), `yyyy-MM-dd`)}`;\n  }\n}\n","<div class=\"ajf-widget-wrapper\" (mouseenter)=\"showOverlay = true\" (mouseleave)=\"showOverlay = false\" [class.ajf-show-overlay]=\"showOverlay\">\n  <ng-content></ng-content>\n  <div *ngIf=\"enable\" class=\"ajf-export-menu\" [class.ajf-export-menu-overlay]=\"overlay\">\n      <button (click)=\"export('csv')\">CSV</button>\n      <button (click)=\"export('xlsx')\">XLSX</button>\n  </div>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n// eslint-disable-next-line\n@Directive({selector: '[ajf-widget-host]'})\nexport class AjfWidgetHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {AjfGetColumnContentPipe} from './get-column-content';\nimport {AjfReportStringIdentifierPipe} from './report-string-identifier';\nimport {AjfWidgetExport} from './widget-export';\nimport {AjfWidgetHost} from './widget-host';\n\n@NgModule({\n  declarations: [\n    AjfGetColumnContentPipe,\n    AjfReportStringIdentifierPipe,\n    AjfWidgetHost,\n    AjfWidgetExport,\n  ],\n  imports: [CommonModule],\n  exports: [AjfGetColumnContentPipe, AjfReportStringIdentifierPipe, AjfWidgetHost, AjfWidgetExport],\n})\nexport class AjfReportsModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport type AjfAggregationCreate = Partial<AjfAggregation>;\n\nexport function createAggregation(aggregation: AjfAggregationCreate): AjfAggregation {\n  return {\n    ...aggregation,\n    aggregation: aggregation.aggregation || AjfAggregationType.None,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../interface/aggregation/aggregation';\nimport {createAggregation} from '../utils/aggregation/create-aggregation';\n\nexport class AjfAggregationSerializer {\n  static fromJson(json: Partial<AjfAggregation>): AjfAggregation {\n    if (json.aggregation == null) {\n      throw new Error('Malformed aggregation');\n    }\n    return createAggregation({...json, aggregation: json.aggregation});\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\nimport {AjfDataset} from '../../interface/dataset/dataset';\nimport {createAggregation} from '../aggregation/create-aggregation';\n\nexport function createDataset(dataset: Partial<AjfDataset>): AjfDataset {\n  return {\n    ...dataset,\n    aggregation: dataset.aggregation || createAggregation({aggregation: AjfAggregationType.None}),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {createDataset} from '../utils/dataset/create-dataset';\n\nimport {AjfAggregationSerializer} from './aggregation-serializer';\n\nexport class AjfDatasetSerializer {\n  static fromJson(json: Partial<AjfDataset>): AjfDataset {\n    if (json.formula == null || json.aggregation == null || json.label == null) {\n      throw new Error('Malformed dataset');\n    }\n    json.formula =\n      json.formula instanceof Array\n        ? (json.formula = json.formula.map(f => AjfFormulaSerializer.fromJson(f)))\n        : AjfFormulaSerializer.fromJson(json.formula);\n    json.aggregation = AjfAggregationSerializer.fromJson(json.aggregation);\n    return createDataset(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\nimport {AjfWidget} from '../../interface/widgets/widget';\n\nexport type AjfWidgetCreate = Pick<AjfWidget, 'widgetType'> & Partial<AjfWidget>;\n\nexport function createWidget(widget: AjfWidgetCreate): AjfWidget {\n  return {\n    ...widget,\n    styles: widget.styles || {},\n    visibility: widget.visibility || alwaysCondition(),\n  } as AjfWidget;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer, alwaysCondition} from '@ajf/core/models';\n\nimport {AjfChartDataset} from '../interface/dataset/chart-dataset';\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {AjfTableDataset} from '../interface/dataset/table-dataset';\nimport {AjfChartWidget} from '../interface/widgets/chart-widget';\nimport {AjfDataWidget} from '../interface/widgets/data-widget';\nimport {AjfMapWidget} from '../interface/widgets/map-widget';\nimport {AjfWidget} from '../interface/widgets/widget';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {AjfWidgetWithContent} from '../interface/widgets/widget-with-content';\nimport {createWidget} from '../utils/widgets/create-widget';\n\nimport {AjfDatasetSerializer} from './dataset-serializer';\n\nexport class AjfWidgetSerializer {\n  static fromJson(json: Partial<AjfWidget>): AjfWidget {\n    if (json.widgetType == null) {\n      throw new Error('Malformed widget');\n    }\n    json.visibility = json.visibility\n      ? AjfConditionSerializer.fromJson(json.visibility)\n      : alwaysCondition();\n    json.styles = json.styles || {};\n    const obj = json as AjfWidget;\n    if (obj.widgetType === AjfWidgetType.Layout || obj.widgetType === AjfWidgetType.Column) {\n      return AjfWidgetSerializer._widgetWithContentFromJson(obj);\n    }\n    if (obj.widgetType === AjfWidgetType.Chart || obj.widgetType === AjfWidgetType.Table) {\n      const w = AjfWidgetSerializer._dataWidgetFromJson(obj);\n      if (obj.widgetType === AjfWidgetType.Chart) {\n        const cw = w as AjfChartWidget;\n        if (cw.labels instanceof Array) {\n          cw.labels.map(l => AjfFormulaSerializer.fromJson(l));\n        } else if (cw.labels != null) {\n          cw.labels = AjfFormulaSerializer.fromJson(cw.labels);\n        }\n      }\n      return w;\n    }\n    if (obj.widgetType === AjfWidgetType.Map) {\n      const mw = obj as AjfMapWidget;\n      mw.coordinate = AjfFormulaSerializer.fromJson(mw.coordinate);\n    }\n    return obj;\n  }\n\n  private static _dataWidgetFromJson(json: AjfWidget & Partial<AjfDataWidget>): AjfDataWidget {\n    let dataset: AjfDataset[] | AjfDataset[][];\n    if (json.dataset == null) {\n      dataset = [];\n    } else {\n      if (json.widgetType === AjfWidgetType.Table) {\n        dataset = (json.dataset as AjfTableDataset[][]).map(row =>\n          row.map(cell => AjfDatasetSerializer.fromJson(cell)),\n        );\n      } else {\n        dataset = (json.dataset as AjfChartDataset[]).map(d => AjfDatasetSerializer.fromJson(d));\n      }\n    }\n    return {...createWidget(json), dataset};\n  }\n\n  private static _widgetWithContentFromJson(\n    json: AjfWidget & Partial<AjfWidgetWithContent>,\n  ): AjfWidgetWithContent {\n    const content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...createWidget(json), content};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {AjfWidgetSerializer} from './widget-serializer';\n\nexport class AjfReportContainerSerializer {\n  static fromJson(json: Partial<AjfReportContainer>): AjfReportContainer {\n    json.content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...json, content: json.content!, styles: json.styles || {}};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../../interface/reports/report';\n\nexport type AjfReportCreate = Partial<AjfReport>;\n\nexport function createReport(report: AjfReportCreate): AjfReport {\n  return {...report};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../interface/reports/report';\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {createReport} from '../utils/reports/create-report';\nimport {AjfReportContainerSerializer} from './report-container-serializer';\n\nexport class AjfReportSerializer {\n  static fromJson(json: Partial<AjfReport>): AjfReport {\n    const containers: (keyof AjfReport)[] = ['header', 'footer', 'content'];\n    containers.forEach(c => {\n      if (json[c]) {\n        (json[c] as AjfReportContainer) = AjfReportContainerSerializer.fromJson(\n          json[c] as Partial<AjfReportContainer>,\n        );\n      }\n    });\n    return createReport(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, Input, OnInit, Renderer2, ViewChild} from '@angular/core';\n\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\nimport {AjfWidgetComponentsMap} from './interface/widgets/widget-components-map';\nimport {AjfWidgetHost} from './widget-host';\n\n@Directive()\nexport abstract class AjfReportWidget implements OnInit {\n  @ViewChild(AjfWidgetHost, {static: true}) widgetHost!: AjfWidgetHost;\n\n  private _instance: AjfWidgetInstance | undefined;\n  get instance(): AjfWidgetInstance | undefined {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfWidgetInstance | undefined) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      if (this._init) {\n        this._loadComponent();\n      }\n    }\n  }\n\n  protected abstract widgetsMap: AjfWidgetComponentsMap;\n\n  private _init = false;\n\n  constructor(private _renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this._init = true;\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    if (\n      !this._init ||\n      this._instance == null ||\n      this.widgetHost == null ||\n      this._instance == null ||\n      !this._instance.visible\n    ) {\n      return;\n    }\n\n    const vcr = this.widgetHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.widgetsMap[this._instance.widget.widgetType];\n    if (componentDef == null) {\n      return;\n    }\n    const component = componentDef.component;\n    try {\n      const componentRef = vcr.createComponent(component);\n      const componentInstance = componentRef.instance;\n\n      Object.keys(this._instance.widget.styles).forEach((style: string) => {\n        try {\n          this._renderer.setStyle(\n            componentInstance.el.nativeElement,\n            style,\n            `${this._instance!.widget.styles[style]}`,\n          );\n        } catch (e) {}\n      });\n\n      componentInstance.instance = this._instance;\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            (componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n    } catch (e) {}\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetComponentsMap} from '../../interface/widgets/widget-components-map';\n\nexport const componentsMap: AjfWidgetComponentsMap = {};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Type} from '@angular/core';\n\nimport {AjfBaseWidgetComponent} from './base-widget';\nimport {AjfWidgetComponentsMap} from './interface/widgets/widget-components-map';\nimport {componentsMap} from './utils/widgets/widgets-map';\n\nexport abstract class AjfWidgetService {\n  readonly componentsMap: AjfWidgetComponentsMap = componentsMap;\n\n  constructor(defaultWidgets: AjfWidgetComponentsMap) {\n    if (defaultWidgets != null) {\n      for (const key in defaultWidgets) {\n        const nKey = parseInt(key, 10);\n        this.componentsMap[nKey] = defaultWidgets[key];\n      }\n    }\n  }\n\n  registerCustomWidget(widget: {\n    widgetType: number;\n    component: Type<AjfBaseWidgetComponent>;\n    inputs?: {[key: string]: any};\n  }): void {\n    const {widgetType, component} = widget;\n    if (widgetType < 100) {\n      throw new Error('Invalid custom widget type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom widget component');\n    }\n    this.componentsMap[widgetType] = widget;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport function evaluateAggregation(\n  aggregation: AjfAggregation,\n  formulas: AjfFormula[],\n  context: AjfContext,\n): number[] {\n  const data: any[] = formulas.map(f => evaluateExpression(f.formula, context));\n  switch (aggregation.aggregation) {\n    case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n    case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n    case AjfAggregationType.Average:\n    case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n    default:\n      return [];\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChartWidget} from '../../interface/widgets/chart-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isChartWidget = (widget: AjfWidget): widget is AjfChartWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Chart;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDialogWidget} from '../../interface/widgets/dialog-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isDialogWidget = (widget: AjfWidget): widget is AjfDialogWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Dialog;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDynamicTableWidget} from '../../interface/widgets/dynamic-table-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isDynamicTableWidget = (widget: AjfWidget): widget is AjfDynamicTableWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.DynamicTable;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaWidget} from '../../interface/widgets/formula-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isFormulaWidget = (widget: AjfWidget): widget is AjfFormulaWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Formula;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfGraphWidget} from '../../interface/widgets/graph-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isGraphWidget = (widget: AjfWidget): widget is AjfGraphWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Graph;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfHeatMapWidget} from '../../interface/widgets/heat-map-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isHeatMapWidget = (widget: AjfWidget): widget is AjfHeatMapWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.HeatMap;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageContainerWidget} from '../../interface/widgets/image-container-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isImageContainerWidget = (widget: AjfWidget): widget is AjfImageContainerWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.ImageContainer;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageWidget} from '../../interface/widgets/image-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isImageWidget = (widget: AjfWidget): widget is AjfImageWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Image;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfMapWidget} from '../../interface/widgets/map-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isMapWidget = (widget: AjfWidget): widget is AjfMapWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Map;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPaginatedListWidget} from '../../interface/widgets/paginated-list-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isPaginatedListWidget = (widget: AjfWidget): widget is AjfPaginatedListWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.PaginatedList;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPaginatedTableWidget} from '../../interface/widgets/paginated-table-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isPaginatedTableWidget = (widget: AjfWidget): widget is AjfPaginatedTableWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.PaginatedTable;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfColumnWidget} from '../../interface/widgets/column-widget';\nimport {AjfDialogWidget} from '../../interface/widgets/dialog-widget';\nimport {AjfLayoutWidget} from '../../interface/widgets/layout-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isWidgetWithContent = (\n  widget: AjfWidget,\n): widget is AjfColumnWidget | AjfLayoutWidget | AjfDialogWidget => {\n  return (\n    widget != null &&\n    (widget.widgetType === AjfWidgetType.Column ||\n      widget.widgetType === AjfWidgetType.Layout ||\n      widget.widgetType === AjfWidgetType.Dialog)\n  );\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableWidget} from '../../interface/widgets/table-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isTableWidget = (widget: AjfWidget): widget is AjfTableWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Table;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTextWidget} from '../../interface/widgets/text-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\n\nexport const isTextWidget = (widget: AjfWidget): widget is AjfTextWidget => {\n  return widget != null && widget.widgetType === AjfWidgetType.Text;\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChartWidgetInstance} from '../../interface/widgets-instances/chart-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isChartWidget} from '../widgets/is-chart-widget';\n\nexport const isChartWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfChartWidgetInstance => {\n  return instance != null && isChartWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDialogWidgetInstance} from '../../interface/widgets-instances/dialog-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isDialogWidget} from '../widgets/is-dialog-widget';\n\nexport const isDialogWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfDialogWidgetInstance => {\n  return instance != null && isDialogWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDynamicTableWidgetInstance} from '../../interface/widgets-instances/dynamic-table-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isDynamicTableWidget} from '../widgets/is-dynamic-table-widget';\n\nexport const isDynamicTableWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfDynamicTableWidgetInstance => {\n  return instance != null && isDynamicTableWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaWidgetInstance} from '../../interface/widgets-instances/formula-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isFormulaWidget} from '../widgets/is-formula-widget';\n\nexport const isFormulaWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfFormulaWidgetInstance => {\n  return instance != null && isFormulaWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfGraphWidgetInstance} from '../../interface/widgets-instances/graph-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isGraphWidget} from '../widgets/is-graph-widget';\n\nexport const isGraphWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfGraphWidgetInstance => {\n  return instance != null && isGraphWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfHeatMapWidgetInstance} from '../../interface/widgets-instances/heat-map-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isHeatMapWidget} from '../widgets/is-heat-map-widget';\n\nexport const isHeatMapWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfHeatMapWidgetInstance => {\n  return instance != null && isHeatMapWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageContainerWidgetInstance} from '../../interface/widgets-instances/image-container-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isImageContainerWidget} from '../widgets/is-image-container-widget';\n\nexport const isImageContainerWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfImageContainerWidgetInstance => {\n  return instance != null && isImageContainerWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageWidgetInstance} from '../../interface/widgets-instances/image-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isImageWidget} from '../widgets/is-image-widget';\n\nexport const isImageWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfImageWidgetInstance => {\n  return instance != null && isImageWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfMapWidgetInstance} from '../../interface/widgets-instances/map-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isMapWidget} from '../widgets/is-map-widget';\n\nexport const isMapWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfMapWidgetInstance => {\n  return instance != null && isMapWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPaginatedListWidgetInstance} from '../../interface/widgets-instances/paginated-list-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isPaginatedListWidget} from '../widgets/is-paginated-list-widget';\n\nexport const isPaginatedListWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfPaginatedListWidgetInstance => {\n  return instance != null && isPaginatedListWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPaginatedTableWidgetInstance} from '../../interface/widgets-instances/paginated-table-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isPaginatedTableWidget} from '../widgets/is-paginated-table-widget';\n\nexport const isPaginatedTableWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfPaginatedTableWidgetInstance => {\n  return instance != null && isPaginatedTableWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableWidgetInstance} from '../../interface/widgets-instances/table-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isTableWidget} from '../widgets/is-table-widget';\n\nexport const isTableWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfTableWidgetInstance => {\n  return instance != null && isTableWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTextWidgetInstance} from '../../interface/widgets-instances/text-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isTextWidget} from '../widgets/is-text-widget';\n\nexport const isTextWidgetInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfTextWidgetInstance => {\n  return instance != null && isTextWidget(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfColumnWidgetInstance} from '../../interface/widgets-instances/column-widget-instance';\nimport {AjfDialogWidgetInstance} from '../../interface/widgets-instances/dialog-widget-instance';\nimport {AjfLayoutWidgetInstance} from '../../interface/widgets-instances/layout-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {isWidgetWithContent} from '../widgets/is-widget-with-content';\n\nexport const isWidgetWithContentInstance = (\n  instance: AjfWidgetInstance,\n): instance is AjfColumnWidgetInstance | AjfLayoutWidgetInstance | AjfDialogWidgetInstance => {\n  return instance != null && isWidgetWithContent(instance.widget);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslocoService} from '@ajf/core/transloco';\nimport {AjfFormSerializer} from '@ajf/core/forms';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfReportVariable} from '../../interface/reports/report-variable';\n\nexport function createWidgetInstance(\n  widget: AjfWidget,\n  context: AjfContext,\n  _ts: TranslocoService,\n  variables: AjfReportVariable[] = [],\n): AjfWidgetInstance {\n  let filter = undefined;\n  if (widget.filter != null && widget.filter.schema != null) {\n    filter = {\n      form: AjfFormSerializer.fromJson(widget.filter.schema, context),\n      context,\n      variables,\n    };\n  }\n  return {\n    widget,\n    widgetType: widget.widgetType,\n    visible: evaluateExpression(widget.visibility.condition, context),\n    styles: widget.styles || {},\n    filter,\n  } as AjfWidgetInstance;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, createFormula, evaluateExpression} from '@ajf/core/models';\nimport {TranslocoService} from '@ajf/core/transloco';\n\nexport function trFormula(f: AjfFormula, context: AjfContext, ts: TranslocoService): any {\n  let formula = f.formula;\n  if (formula.substring(0, 1) === '\"' || formula.substring(0, 1) === \"'\") {\n    const ft = formula.slice(1, -1);\n    const transFt =\n      ft != null && typeof ft === 'string' && ft.trim().length > 0 ? ts.translate(ft) : ft;\n    if (ft.length > 0) {\n      formula = `\"${transFt}\"`;\n    }\n  } else {\n    formula =\n      formula != null && typeof formula === 'string' && formula.trim().length > 0\n        ? ts.translate(formula)\n        : formula;\n  }\n  let res;\n  try {\n    res = evaluateExpression(formula, context);\n  } catch (_) {\n    res = formula;\n  }\n  return res;\n}\n\n/**\n * Evaluate a string with expression inside, identified by double square brackets\n * Example: \"Number of positive identified: [[n_positive_campaign]]\"\n */\nexport function evaluateProperty(\n  expression: string,\n  context: AjfContext,\n  ts: TranslocoService,\n): string {\n  const formulaRegEx: RegExp = /\\[{2}(.+?)\\]{2}/g;\n  const matches: {idx: number; len: number; formula: AjfFormula}[] = [];\n  let match: RegExpExecArray | null;\n  let htmlText = expression;\n  while ((match = formulaRegEx.exec(htmlText))) {\n    const idx = match.index;\n    const len = match[0].length;\n    const formula = createFormula({formula: match[1]});\n    matches.push({idx, len, formula});\n  }\n  matches.reverse().forEach(m => {\n    let calcValue;\n    try {\n      calcValue = evaluateExpression(m.formula.formula, context);\n    } catch (e) {\n      calcValue = '';\n    }\n    htmlText = `${htmlText.substring(0, m.idx)}${calcValue}${htmlText.substring(m.idx + m.len)}`;\n  });\n  htmlText = htmlText === '[[]]' ? 'false' : htmlText;\n  return htmlText != null && htmlText.length > 0 ? ts.translate(htmlText) : htmlText;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {TranslocoService} from '@ajf/core/transloco';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {chartToChartJsType} from '../../chart-utils';\nimport {AjfTableDataset} from '../../interface/dataset/table-dataset';\nimport {AjfReportVariable} from '../../interface/reports/report-variable';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {evaluateAggregation} from '../aggregation/evaluate-aggregation';\nimport {isChartWidget} from '../widgets/is-chart-widget';\nimport {isDialogWidget} from '../widgets/is-dialog-widget';\nimport {isDynamicTableWidget} from '../widgets/is-dynamic-table-widget';\nimport {isFormulaWidget} from '../widgets/is-formula-widget';\nimport {isGraphWidget} from '../widgets/is-graph-widget';\nimport {isHeatMapWidget} from '../widgets/is-heat-map-widget';\nimport {isImageContainerWidget} from '../widgets/is-image-container-widget';\nimport {isImageWidget} from '../widgets/is-image-widget';\nimport {isMapWidget} from '../widgets/is-map-widget';\nimport {isPaginatedListWidget} from '../widgets/is-paginated-list-widget';\nimport {isPaginatedTableWidget} from '../widgets/is-paginated-table-widget';\nimport {isWidgetWithContent} from '../widgets/is-widget-with-content';\nimport {isTableWidget} from '../widgets/is-table-widget';\nimport {isTextWidget} from '../widgets/is-text-widget';\nimport {componentsMap} from '../widgets/widgets-map';\nimport {isChartWidgetInstance} from '../widgets-instances/is-chart-widget-instance';\nimport {isDialogWidgetInstance} from '../widgets-instances/is-dialog-widget-instance';\nimport {isDynamicTableWidgetInstance} from '../widgets-instances/is-dynamic-table-widget-instance';\nimport {isFormulaWidgetInstance} from '../widgets-instances/is-formula-widget-instance';\nimport {isGraphWidgetInstance} from '../widgets-instances/is-graph-widget-instance';\nimport {isHeatMapWidgetInstance} from '../widgets-instances/is-heat-map-widget-instance';\nimport {isImageContainerWidgetInstance} from '../widgets-instances/is-image-container-widget-instance';\nimport {isImageWidgetInstance} from '../widgets-instances/is-image-widget-instance';\nimport {isMapWidgetInstance} from '../widgets-instances/is-map-widget-instance';\nimport {isPaginatedListWidgetInstance} from '../widgets-instances/is-paginated-list-widget-instance';\nimport {isPaginatedTableWidgetInstance} from './is-paginated-table-widget-instance';\nimport {isTableWidgetInstance} from '../widgets-instances/is-table-widget-instance';\nimport {isTextWidgetInstance} from '../widgets-instances/is-text-widget-instance';\nimport {isWidgetWithContentInstance} from '../widgets-instances/is-widget-with-content-instance';\n\nimport {createWidgetInstance} from './create-widget-instance';\nimport {evaluateProperty, trFormula} from './widget-instance-utils';\nimport {AjfGraphNode} from '@ajf/core/graph';\n\nexport function widgetToWidgetInstance(\n  widget: AjfWidget,\n  context: AjfContext,\n  ts: TranslocoService,\n  variables: AjfReportVariable[] = [],\n): AjfWidgetInstance {\n  const wi = createWidgetInstance(widget, context, ts, variables);\n\n  if (isWidgetWithContent(widget) && isWidgetWithContentInstance(wi)) {\n    let content: AjfWidgetInstance[] = [];\n    widget.content.forEach(c => {\n      if (widget.repetitions != null) {\n        wi.repetitions = evaluateExpression(widget.repetitions.formula, context);\n        if (typeof wi.repetitions === 'number' && wi.repetitions > 0) {\n          for (let i = 0; i < wi.repetitions; i++) {\n            content.push(widgetToWidgetInstance(c, {...context, '$repetition': i}, ts, variables));\n          }\n        }\n      } else {\n        content.push(widgetToWidgetInstance(c, context, ts, variables));\n      }\n      wi.content = content;\n    });\n    if (isDialogWidget(widget) && isDialogWidgetInstance(wi)) {\n      wi.toggle = widgetToWidgetInstance(widget.toggle, context, ts, variables);\n    }\n  } else if (isChartWidget(widget) && isChartWidgetInstance(wi)) {\n    if (widget.options == null) {\n      widget.options = {};\n    }\n    const labels = widget.labels instanceof Array ? widget.labels : [widget.labels];\n    const evLabels = labels.map(l => {\n      let evf = evaluateExpression(l.formula, context);\n      try {\n        if (evf instanceof Array) {\n          evf = evf.map(v =>\n            v != null && typeof v === 'string' && v.trim().length > 0 ? ts.translate(v) : v,\n          );\n        } else {\n          evf =\n            evf != null && typeof evf === 'string' && evf.trim().length > 0\n              ? ts.translate(evf)\n              : evf;\n        }\n      } catch (_e) {}\n      return evf;\n    });\n    wi.labels = widget.labels instanceof Array ? evLabels : evLabels[0];\n    wi.datasets = widget.dataset.map(d => {\n      let ds: any = {\n        ...(d.options || {}),\n        data: evaluateAggregation(d.aggregation, d.formula, context),\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds, chartType: ct, type: ct};\n      }\n      if (d.options != null) {\n        ds = {...ds, options: d.options};\n      }\n      if (d.label != null) {\n        ds = {...ds, label: d.label.trim().length > 0 ? ts.translate(d.label) : d.label};\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    });\n    wi.data = {labels: wi.labels, datasets: wi.datasets};\n    wi.chartType = chartToChartJsType(widget.type || widget.chartType);\n    wi.exportable =\n      widget.exportable && (widget.exportable === true || widget.exportable === 'true')\n        ? true\n        : false;\n    if (widget.options != null && widget.options.plugins != null) {\n      const plugins = widget.options.plugins;\n      const pluginNames = Object.keys(plugins);\n      pluginNames.forEach(pluginName => {\n        const plugin = plugins[pluginName];\n        const pluginOptions = Object.keys(plugin);\n        pluginOptions.forEach((pluginOptionName: string) => {\n          const pluginOption = plugin[pluginOptionName];\n          if (\n            typeof pluginOption !== 'string' &&\n            pluginOption != null &&\n            pluginOption.formula != null\n          ) {\n            plugin[pluginOptionName] = evaluateExpression(pluginOption.formula, context);\n          }\n        });\n      });\n    }\n  } else if (isTableWidget(widget) && isTableWidgetInstance(wi)) {\n    wi.dataset = widget.dataset.map(row =>\n      row.map(cell => {\n        return cell.formula instanceof Array\n          ? cell.formula.map(f => trFormula(f, context, ts))\n          : trFormula(cell.formula!, context, ts);\n      }),\n    );\n    wi.exportable =\n      widget.exportable && (widget.exportable === true || widget.exportable === 'true')\n        ? true\n        : false;\n    wi.data = (widget.dataset || []).map(row =>\n      row.map(cell => {\n        let evf = '';\n        try {\n          evf =\n            cell.formula instanceof Array\n              ? cell.formula.map(f => trFormula(f, context, ts))\n              : trFormula(cell.formula!, context, ts);\n        } catch (_e) {}\n        return {\n          value: evf,\n          style: {...widget.cellStyles, ...cell.style},\n          rowspan: cell.rowspan,\n          colspan: cell.colspan,\n          sorted: cell.sorted ?? false,\n        };\n      }),\n    );\n  } else if (\n    (isDynamicTableWidget(widget) && isDynamicTableWidgetInstance(wi)) ||\n    (isPaginatedTableWidget(widget) && isPaginatedTableWidgetInstance(wi))\n  ) {\n    wi.dataset = widget.dataset.map((cell: AjfTableDataset) => {\n      return cell.formula instanceof Array\n        ? cell.formula.map(f => trFormula(f, context, ts))\n        : trFormula(cell.formula!, context, ts);\n    });\n    wi.exportable =\n      widget.exportable && (widget.exportable === true || widget.exportable === 'true')\n        ? true\n        : false;\n\n    let dataset: AjfTableCell[][] = evaluateExpression(widget.rowDefinition.formula, context) || [];\n    dataset = (dataset || []).map((row: AjfTableCell[]) =>\n      row.map(cell => {\n        let trf = cell.value;\n        try {\n          if (trf instanceof Array) {\n            trf = trf.map(v =>\n              v != null && typeof v === 'string' && v.trim().length > 0 ? ts.translate(v) : v,\n            );\n          } else {\n            trf =\n              trf != null && typeof trf === 'string' && trf.trim().length > 0\n                ? ts.translate(trf)\n                : trf;\n          }\n        } catch (_e) {}\n        return {...cell, value: trf};\n      }),\n    );\n\n    const header = (widget.dataset || []).map(cell => {\n      let evf = '';\n      try {\n        evf =\n          cell.formula instanceof Array\n            ? cell.formula.map(f => trFormula(f, context, ts))\n            : trFormula(cell.formula, context, ts);\n      } catch (_e) {}\n      return {\n        value: evf,\n        style: {...widget.cellStyles, ...cell.style},\n        rowspan: cell.rowspan,\n        colspan: cell.colspan,\n        sorted: cell.sorted ?? false,\n      };\n    });\n    wi.data = header.length === 0 ? [...dataset] : [[...header], ...dataset];\n    wi.styles = {...wi.styles, alignItems: 'flex-start'};\n  } else if (isPaginatedListWidget(widget) && isPaginatedListWidgetInstance(wi)) {\n    let content: AjfWidgetInstance[] = [];\n    if (widget.contentDefinition) {\n      let contentDefinition: AjfWidget[] =\n        evaluateExpression(widget.contentDefinition.formula, context) || [];\n      contentDefinition.forEach(c => {\n        content.push(widgetToWidgetInstance(c, context, ts, variables));\n      });\n    } else if (widget.content) {\n      widget.content.forEach(c => {\n        content.push(widgetToWidgetInstance(c, context, ts, variables));\n      });\n    }\n    wi.content = content;\n  } else if (isImageWidget(widget) && isImageWidgetInstance(wi)) {\n    if (widget.flag) {\n      wi.flag = evaluateExpression(widget.flag.formula, context);\n    }\n    if (widget.icon) {\n      wi.icon = evaluateExpression(widget.icon.formula, context);\n    }\n    if (widget.url) {\n      wi.url = evaluateExpression(widget.url.formula, context);\n    }\n  } else if (isImageContainerWidget(widget) && isImageContainerWidgetInstance(wi)) {\n    if (widget.flags) {\n      wi.flags =\n        widget.flags instanceof Array\n          ? widget.flags.map(f => evaluateExpression(f.formula, context))\n          : evaluateExpression(widget.flags.formula, context);\n    }\n    if (widget.icons) {\n      wi.icons =\n        widget.icons instanceof Array\n          ? widget.icons.map(f => evaluateExpression(f.formula, context))\n          : evaluateExpression(widget.icons.formula, context);\n    }\n    if (widget.urls) {\n      wi.urls =\n        widget.urls instanceof Array\n          ? widget.urls.map(f => evaluateExpression(f.formula, context))\n          : evaluateExpression(widget.urls.formula, context);\n    }\n  } else if (isTextWidget(widget) && isTextWidgetInstance(wi)) {\n    wi.htmlText = evaluateProperty(widget.htmlText, context, ts);\n  } else if (isFormulaWidget(widget) && isFormulaWidgetInstance(wi)) {\n    wi.formula = evaluateExpression(widget.formula.formula, context);\n  } else if (isMapWidget(widget) && isMapWidgetInstance(wi)) {\n    wi.coordinate = evaluateExpression(widget.coordinate.formula, context);\n  } else if (isGraphWidget(widget) && isGraphWidgetInstance(wi)) {\n    if (widget.nodes != null) {\n      wi.nodes = widget.nodes.map(ds => {\n        let node: any = {\n          ...ds,\n        };\n        node.label = ds.label != null ? evaluateProperty(ds.label, context, ts) : ds.id;\n        node.red = evaluateExpression(ds.red, context);\n        node.yellow = evaluateExpression(ds.yellow, context);\n        node.green = evaluateExpression(ds.green, context);\n        node.color = ds.color ? evaluateExpression(ds.color, context) : undefined;\n        return node as AjfGraphNode;\n      });\n    }\n  } else if (isHeatMapWidget(widget) && isHeatMapWidgetInstance(wi)) {\n    wi.idProp = widget.idProp || 'id';\n    wi.features = (typeof widget.features === 'string'\n      ? JSON.parse(widget.features)\n      : widget.features) || {type: 'FeatureCollection', features: []};\n    wi.values = evaluateExpression(widget.values.formula, context);\n    wi.startColor = widget.startColor || '#ffeb3b';\n    wi.endColor = widget.endColor || '#f44336';\n    wi.highlightColor = widget.highlightColor || '#009688';\n    wi.showVisualMap = widget.showVisualMap === true;\n    if (widget.action) {\n      wi.action = widget.action;\n    }\n  } else if (widget.widgetType > 100) {\n    const iiFn =\n      componentsMap[widget.widgetType] != null\n        ? componentsMap[widget.widgetType].initInstance\n        : null;\n    if (iiFn != null) {\n      return iiFn(wi, context, ts);\n    }\n  }\n  return wi;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {TranslocoService} from '@ajf/core/transloco';\n\nimport {AjfReportContainerInstance} from '../../interface/reports-instances/report-container-instance';\nimport {AjfReportContainer} from '../../interface/reports/report-container';\nimport {AjfReportVariable} from '../../interface/reports/report-variable';\nimport {widgetToWidgetInstance} from '../widgets-instances/widget-to-widget-instance';\n\nexport function createReportContainerInstance(\n  container: AjfReportContainer,\n  context: AjfContext,\n  ts: TranslocoService,\n  variables: AjfReportVariable[] = [],\n): AjfReportContainerInstance {\n  const content = container.content.map(c => {\n    return widgetToWidgetInstance(c, context, ts, variables);\n  });\n  return {\n    container,\n    content,\n    styles: container.styles,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslocoService} from '@ajf/core/transloco';\n\nimport {AjfReportInstance} from '../../interface/reports-instances/report-instance';\nimport {AjfReport} from '../../interface/reports/report';\n\nimport {createReportContainerInstance} from './create-report-container-instance';\n\nexport function createReportInstance(\n  report: AjfReport,\n  context: AjfContext,\n  ts: TranslocoService,\n): AjfReportInstance {\n  (report.variables || []).forEach(variable => {\n    context[variable.name] = evaluateExpression(variable.formula.formula, context);\n  });\n  return {\n    report,\n    header: report.header\n      ? createReportContainerInstance(report.header, context, ts, report.variables)\n      : undefined,\n    content: report.content\n      ? createReportContainerInstance(report.content, context, ts, report.variables)\n      : undefined,\n    footer: report.footer\n      ? createReportContainerInstance(report.footer, context, ts, report.variables)\n      : undefined,\n    styles: report.styles || {},\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportContainer} from '../../interface/reports/report-container';\n\nexport type AjfReportContainerCreate = Partial<AjfReportContainer>;\n\nexport function createReportContainer(container: AjfReportContainer): AjfReportContainer {\n  return {...container};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles} from '../interface/styles';\n\nexport const slideTitleStyle: AjfStyles = {\n  width: '100%',\n  dislay: 'block',\n  border: '1px solid gray',\n  margin: '10px 10px 0px 10px',\n  padding: '10px',\n  backgroundColor: 'white',\n};\nexport const slideContentStyle: AjfStyles = {\n  with: '100%',\n  dislay: 'block',\n  border: '1px solid gray',\n  margin: '0px 10px 10px 50px',\n  padding: '10px',\n  backgroundColor: 'white',\n};\nexport const widgetTitleStyle: AjfStyles = {\n  width: '100%',\n  dislay: 'block',\n  border: '1px solid gray',\n  padding: '10px',\n  maxHeight: '600px',\n  backgroundColor: 'white',\n};\nexport const boxStyle: AjfStyles = {\n  dislay: 'block',\n  padding: '10px',\n  width: '100%',\n  height: '100%',\n};\nexport const widgetStyle: AjfStyles = {\n  backgroundColor: 'white',\n  dislay: 'block',\n  border: '1px solid gray',\n  padding: '10px',\n  maxHeight: '500px',\n  marginBottom: '10px',\n};\nexport const backgroundColor: string[] = [\n  '#FF6633',\n  '#FFB399',\n  '#FF33FF',\n  '#FFFF99',\n  '#00B3E6',\n  '#E6B333',\n  '#3366E6',\n  '#999966',\n  '#99FF99',\n  '#B34D4D',\n  '#80B300',\n  '#809900',\n  '#E6B3B3',\n  '#6680B3',\n  '#66991A',\n  '#FF99E6',\n  '#CCFF1A',\n  '#FF1A66',\n  '#E6331A',\n  '#33FFCC',\n  '#66994D',\n  '#B366CC',\n  '#4D8000',\n  '#B33300',\n  '#CC80CC',\n  '#66664D',\n  '#991AFF',\n  '#E666FF',\n  '#4DB3FF',\n  '#1AB399',\n  '#E666B3',\n  '#33991A',\n  '#CC9999',\n  '#B3B31A',\n  '#00E680',\n  '#4D8066',\n  '#809980',\n  '#E6FF80',\n  '#1AFF33',\n  '#999933',\n  '#FF3380',\n  '#CCCC00',\n  '#66E64D',\n  '#4D80CC',\n  '#9900B3',\n  '#E64D66',\n  '#4DB380',\n  '#FF4D4D',\n  '#99E6E6',\n  '#6666FF',\n  '#F44336',\n  '#FFEBEE',\n  '#FFCDD2',\n  '#EF9A9A',\n  '#E57373',\n  '#EF5350',\n  '#E53935',\n  '#D32F2F',\n  '#C62828',\n  '#B71C1C',\n  '#FF8A80',\n  '#FF5252',\n  '#FF1744',\n  '#D50000',\n  '#FCE4EC',\n  '#F8BBD0',\n  '#F48FB1',\n  '#F06292',\n  '#EC407A',\n  '#E91E63',\n  '#D81B60',\n  '#C2185B',\n  '#AD1457',\n  '#880E4F',\n  '#FF80AB',\n  '#FF4081',\n  '#F50057',\n  '#C51162',\n  '#F3E5F5',\n  '#E1BEE7',\n  '#CE93D8',\n  '#BA68C8',\n  '#AB47BC',\n  '#9C27B0',\n  '#8E24AA',\n  '#7B1FA2',\n  '#6A1B9A',\n  '#4A148C',\n  '#EA80FC',\n  '#E040FB',\n  '#D500F9',\n  '#AA00FF',\n  '#EDE7F6',\n  '#D1C4E9',\n  '#B39DDB',\n  '#9575CD',\n  '#7E57C2',\n  '#673AB7',\n  '#5E35B1',\n  '#512DA8',\n  '#4527A0',\n  '#311B92',\n  '#B388FF',\n  '#7C4DFF',\n  '#651FFF',\n  '#6200EA',\n  '#E8EAF6',\n  '#C5CAE9',\n  '#9FA8DA',\n  '#7986CB',\n  '#5C6BC0',\n  '#3F51B5',\n  '#3949AB',\n  '#303F9F',\n  '#283593',\n  '#1A237E',\n  '#8C9EFF',\n  '#536DFE',\n  '#3D5AFE',\n  '#304FFE',\n  '#E3F2FD',\n  '#BBDEFB',\n  '#90CAF9',\n  '#64B5F6',\n  '#42A5F5',\n  '#2196F3',\n  '#1E88E5',\n  '#1976D2',\n  '#1565C0',\n  '#0D47A1',\n  '#82B1FF',\n  '#448AFF',\n  '#2979FF',\n  '#2962FF',\n  '#E1F5FE',\n  '#B3E5FC',\n  '#81D4FA',\n  '#4FC3F7',\n  '#29B6F6',\n  '#03A9F4',\n  '#039BE5',\n  '#0288D1',\n  '#0277BD',\n  '#01579B',\n  '#80D8FF',\n  '#40C4FF',\n  '#00B0FF',\n  '#0091EA',\n  '#E0F7FA',\n  '#B2EBF2',\n  '#80DEEA',\n  '#4DD0E1',\n  '#26C6DA',\n  '#00BCD4',\n  '#00ACC1',\n  '#0097A7',\n  '#00838F',\n  '#6064',\n  '#84FFFF',\n  '#18FFFF',\n  '#00E5FF',\n  '#00B8D4',\n  '#E0F2F1',\n  '#B2DFDB',\n  '#80CBC4',\n  '#4DB6AC',\n  '#26A69A',\n  '#9688',\n  '#00897B',\n  '#00796B',\n  '#00695C',\n  '#004D40',\n  '#A7FFEB',\n  '#64FFDA',\n  '#1DE9B6',\n  '#00BFA5',\n  '#E8F5E9',\n  '#C8E6C9',\n  '#A5D6A7',\n  '#81C784',\n  '#66BB6A',\n  '#4CAF50',\n  '#43A047',\n  '#388E3C',\n  '#2E7D32',\n  '#1B5E20',\n  '#B9F6CA',\n  '#69F0AE',\n  '#00E676',\n  '#00C853',\n  '#F1F8E9',\n  '#DCEDC8',\n  '#C5E1A5',\n  '#AED581',\n  '#9CCC65',\n  '#8BC34A',\n  '#7CB342',\n  '#689F38',\n  '#558B2F',\n  '#33691E',\n  '#CCFF90',\n  '#B2FF59',\n  '#76FF03',\n  '#64DD17',\n  '#F9FBE7',\n  '#F0F4C3',\n  '#E6EE9C',\n  '#DCE775',\n  '#D4E157',\n  '#CDDC39',\n  '#C0CA33',\n  '#AFB42B',\n  '#9E9D24',\n  '#827717',\n  '#F4FF81',\n  '#EEFF41',\n  '#C6FF00',\n  '#AEEA00',\n  '#FFFDE7',\n  '#FFF9C4',\n  '#FFF59D',\n  '#FFF176',\n  '#FFEE58',\n  '#FFEB3B',\n  '#FDD835',\n  '#FBC02D',\n  '#F9A825',\n  '#F57F17',\n  '#FFFF8D',\n  '#FFFF00',\n  '#FFEA00',\n  '#FFD600',\n  '#FFF8E1',\n  '#FFECB3',\n  '#FFE082',\n  '#FFD54F',\n  '#FFCA28',\n  '#FFC107',\n  '#FFB300',\n  '#FFA000',\n  '#FF8F00',\n  '#FF6F00',\n  '#FFE57F',\n  '#FFD740',\n  '#FFC400',\n  '#FFAB00',\n  '#FFF3E0',\n  '#FFE0B2',\n  '#FFCC80',\n  '#FFB74D',\n  '#FFA726',\n  '#FF9800',\n  '#FB8C00',\n  '#F57C00',\n  '#EF6C00',\n  '#E65100',\n  '#FFD180',\n  '#FFAB40',\n  '#FF9100',\n  '#FF6D00',\n  '#FBE9E7',\n  '#FFCCBC',\n  '#FFAB91',\n  '#FF8A65',\n  '#FF7043',\n  '#FF5722',\n  '#F4511E',\n  '#E64A19',\n  '#D84315',\n  '#BF360C',\n  '#FF9E80',\n  '#FF6E40',\n  '#FF3D00',\n  '#DD2C00',\n  '#EFEBE9',\n  '#D7CCC8',\n  '#BCAAA4',\n  '#A1887F',\n  '#8D6E63',\n  '#795548',\n  '#6D4C41',\n  '#5D4037',\n  '#4E342E',\n  '#3E2723',\n  '#FAFAFA',\n  '#F5F5F5',\n  '#EEEEEE',\n  '#E0E0E0',\n  '#BDBDBD',\n  '#9E9E9E',\n  '#757575',\n  '#616161',\n  '#424242',\n  '#212121',\n  '#ECEFF1',\n  '#CFD8DC',\n  '#B0BEC5',\n  '#90A4AE',\n  '#78909C',\n  '#607D8B',\n  '#546E7A',\n  '#455A64',\n  '#37474F',\n  '#263238',\n];\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfField,\n  AjfFieldType,\n  AjfFieldWithChoices,\n  AjfForm,\n  AjfNodeType,\n  AjfRangeField,\n} from '@ajf/core/forms';\nimport {createFormula} from '@ajf/core/models';\n\nimport {AjfChartType} from '../interface/charts/chart-type';\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {AjfReport} from '../interface/reports/report';\nimport {AjfWidget} from '../interface/widgets/widget';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {createDataset} from '../utils/dataset/create-dataset';\nimport {createReportContainer} from '../utils/reports/create-report-container';\nimport {createWidget} from '../utils/widgets/create-widget';\nimport {\n  backgroundColor,\n  boxStyle,\n  slideContentStyle,\n  slideTitleStyle,\n  widgetStyle,\n  widgetTitleStyle,\n} from './styles';\n\nfunction createBooleanWidget(field: AjfField): AjfWidget {\n  return createWidget({\n    widgetType: AjfWidgetType.Column,\n    content: [\n      createWidget({\n        widgetType: AjfWidgetType.Chart,\n        type: AjfChartType.Pie,\n        labels: {formula: \"['True', 'False']\"},\n        dataset: [\n          createDataset({\n            label: 'true',\n            formula: [\n              createFormula({\n                formula: `[COUNT_FORMS(forms,\"${field.name}===true\"),COUNT_FORMS(forms,\"${field.name}===false\")]`,\n              }),\n            ],\n            options: {backgroundColor: ['green', 'red']},\n          } as Partial<AjfDataset>),\n        ],\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          legend: {display: true, position: 'bottom'},\n        },\n        styles: {width: '100%', height: '100%'},\n        exportable: true,\n      }),\n    ],\n  });\n}\nfunction createMultipleChoiceWidget(field: AjfFieldWithChoices<any>): AjfWidget {\n  const choices = field.choicesOrigin.choices;\n  let dataset: AjfDataset[] = choices.map((c, index) =>\n    createDataset({\n      label: `${c.label}`,\n      formula: [\n        createFormula({\n          formula: `[COUNT_FORMS(forms,\"${field.name}.indexOf('${c.value}') > -1\")]`,\n        }),\n      ],\n      options: {\n        backgroundColor: backgroundColor[index],\n        stack: `Stack ${index}`,\n      },\n    } as Partial<AjfDataset>),\n  );\n  let chartType = AjfChartType.Bar;\n  let labels = {formula: `[]`};\n\n  return createWidget({\n    widgetType: AjfWidgetType.Column,\n    content: [\n      createWidget({\n        widgetType: AjfWidgetType.Chart,\n        type: chartType,\n        labels,\n        dataset,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          legend: {display: true, position: 'bottom'},\n        },\n        styles: {width: '100%', height: '100%'},\n        exportable: true,\n      }),\n    ],\n  });\n}\nfunction createNumberWidget(field: AjfField): AjfWidget {\n  return createWidget({\n    widgetType: AjfWidgetType.Column,\n    styles: widgetStyle,\n    content: [\n      createWidget({\n        widgetType: AjfWidgetType.Layout,\n        columns: [0.33, 0.33, 0.33],\n        content: [\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Mean</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                'htmlText': `<p>[[MEAN(forms,\"${field.name}\")]] / [[MAX(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Median</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                'htmlText': `<p>[[MEDIAN(forms,\"${field.name}\")]] / [[MAX(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Mode</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<p>[[MODE(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n        ],\n      }),\n    ],\n  });\n}\nfunction createSingleChoiceWidget(field: AjfFieldWithChoices<any>): AjfWidget {\n  const choices = field.choicesOrigin.choices;\n  let dataset: AjfDataset[] = [];\n  let chartType = AjfChartType.Bar;\n  let labels = {formula: `[]`};\n\n  if (choices.length > 5) {\n    labels = {formula: `[${choices.map(c => `${JSON.stringify(c.label)}`)}]`};\n    chartType = AjfChartType.Pie;\n    dataset = [\n      createDataset({\n        label: field.label,\n        formula: [\n          createFormula({\n            formula: `[${choices\n              .map(choice => `COUNT_FORMS(forms,\"${field.name}==='${choice.value}'\")`)\n              .toString()}]`,\n          }),\n        ],\n        options: {backgroundColor},\n      } as Partial<AjfDataset>),\n    ];\n  } else {\n    dataset = choices.map((c, index) =>\n      createDataset({\n        label: `${c.label}`,\n        formula: [createFormula({formula: `[COUNT_FORMS(forms,\"${field.name}==='${c.value}'\")]`})],\n        options: {\n          backgroundColor: backgroundColor[index],\n          stack: `Stack ${index}`,\n        },\n      } as Partial<AjfDataset>),\n    );\n  }\n\n  return createWidget({\n    widgetType: AjfWidgetType.Column,\n    content: [\n      createWidget({\n        widgetType: AjfWidgetType.Chart,\n        type: chartType,\n        labels,\n        dataset,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          legend: {display: true, position: 'bottom'},\n        },\n        styles: {width: '100%', height: '100%'},\n        exportable: true,\n      }),\n    ],\n  });\n}\n\nfunction createRangeWidget(field: AjfRangeField): AjfWidget {\n  const end = field.end ?? 11;\n  const start = field.start ?? 1;\n  let choices = [];\n  for (let i = start; i <= end; i++) {\n    choices.push(i);\n  }\n\n  let labels = {formula: `[${JSON.stringify(field.label)}]`};\n  let dataset: AjfDataset[] = choices.map((_, index) =>\n    createDataset({\n      label: `${index + start}`,\n      formula: [\n        createFormula({formula: `[COUNT_FORMS(forms,\"${field.name}===${index + 1 + start}\")]`}),\n      ],\n      options: {\n        backgroundColor: backgroundColor[index],\n        stack: `Stack ${index}`,\n      },\n    } as Partial<AjfDataset>),\n  );\n  return createWidget({\n    widgetType: AjfWidgetType.Column,\n    styles: widgetStyle,\n    content: [\n      createWidget({\n        widgetType: AjfWidgetType.Layout,\n        columns: [0.33, 0.33, 0.33],\n        content: [\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Mean</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                'htmlText': `<p>[[MEAN(forms,\"${field.name}\")]] / [[MAX(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Median</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                'htmlText': `<p>[[MEDIAN(forms,\"${field.name}\")]] / [[MAX(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            styles: boxStyle,\n            content: [\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<div color=\"primary\"><h5>Mode</h5></div>`,\n                styles: widgetTitleStyle,\n              }),\n              createWidget({\n                widgetType: AjfWidgetType.Text,\n                htmlText: `<p>[[MODE(forms,\"${field.name}\")]]</p>`,\n                styles: widgetTitleStyle,\n              }),\n            ],\n          }),\n        ],\n      }),\n      createWidget({\n        widgetType: AjfWidgetType.Chart,\n        type: AjfChartType.Bar,\n        labels,\n        dataset,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          legend: {display: true, position: 'bottom'},\n        },\n        styles: {width: '100%', height: '100%'},\n        exportable: true,\n      }),\n    ],\n  });\n}\n\n/**\n * This function returns a basic report for any form passed in input.\n *\n * @param form the form schema\n * @param [id] the id of the form inside the plathform.\n */\nexport function automaticReport(form: Partial<AjfForm>, id?: number): AjfReport {\n  const report: AjfReport = {};\n  const reportWidgets: AjfWidget[] = [];\n  // we assume that the array of forms passed to the report is called 'forms'.\n  if (id != null) {\n    report.variables = [{name: 'forms', formula: {'formula': `forms[${id}]`}}];\n  }\n  form.nodes?.forEach(slide => {\n    const slideWidgets: AjfWidget[] = [];\n    const isInRepeating = slide.nodeType === AjfNodeType.AjfRepeatingSlide;\n\n    (slide.nodes as AjfField[]).forEach(field => {\n      field.name = isInRepeating ? field.name + '__' : field.name;\n      // create the title of the widget.\n      const fieldTitleWidget: AjfWidget = createWidget({\n        widgetType: AjfWidgetType.Text,\n        htmlText: `<div color=\"primary\"><h5>${field.label} - [[COUNT_FORMS(forms,\"${field.name} != null\")]] answers</h5></div>`,\n        styles: widgetTitleStyle,\n      });\n      slideWidgets.push(fieldTitleWidget);\n\n      switch (field.fieldType) {\n        default:\n          slideWidgets.pop(); // remove the title of empty widget\n          break;\n        case AjfFieldType.Number:\n          slideWidgets.push(createNumberWidget(field));\n          break;\n        case AjfFieldType.Boolean:\n          slideWidgets.push(createBooleanWidget(field));\n          break;\n        case AjfFieldType.SingleChoice:\n          slideWidgets.push(createSingleChoiceWidget(field));\n          break;\n        case AjfFieldType.MultipleChoice:\n          slideWidgets.push(createMultipleChoiceWidget(field));\n          break;\n        case AjfFieldType.Range:\n          slideWidgets.push(createRangeWidget(field));\n          break;\n      }\n    });\n    // if the slide have a widgets add him to the reports with the relative title\n    if (slideWidgets.length > 0) {\n      // create the title of the slide.\n      const slideTitleWidget: AjfWidget = createWidget({\n        widgetType: AjfWidgetType.Text,\n        htmlText: `<div color=\"primary\"><h1>${slide.label}</h1></div>`,\n        styles: slideTitleStyle,\n      });\n      reportWidgets.push(slideTitleWidget);\n      // create the column with the slide widgets.\n      const columnWidget: AjfWidget = createWidget({\n        widgetType: AjfWidgetType.Column,\n        content: slideWidgets,\n        styles: slideContentStyle,\n      });\n      reportWidgets.push(columnWidget);\n    }\n  });\n\n  report.content = createReportContainer({content: [...reportWidgets], styles: {}});\n\n  return report;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nconst enum TokenType {\n  END,\n  LParen,\n  RParen,\n  LBracket,\n  RBracket,\n  Comma,\n\n  // Binary operators from Plus to GreaterOrEq have the same representation\n  // in indicator formulas and JavaScript and don't need a translation.\n  Plus,\n  Minus,\n  Mul,\n  Div,\n  Less,\n  LessOrEq,\n  Greater,\n  GreaterOrEq,\n\n  Equal,\n  NotEqual,\n  Not,\n  String,\n  Number,\n  Ident,\n  Field, // an identifier starting with $\n}\n\ninterface Token {\n  type: TokenType;\n  text: string;\n}\n\n// firstToken returns the first token in s.\n// s must not begin with whitespace characters.\nfunction firstToken(s: string): Token {\n  if (s.length === 0) {\n    return {type: TokenType.END, text: ''};\n  }\n  let m: RegExpMatchArray | null;\n  const c = s.charAt(0);\n  switch (c) {\n    case '(':\n      return {type: TokenType.LParen, text: '('};\n    case ')':\n      return {type: TokenType.RParen, text: ')'};\n    case '[':\n      return {type: TokenType.LBracket, text: '['};\n    case ']':\n      return {type: TokenType.RBracket, text: ']'};\n    case ',':\n      return {type: TokenType.Comma, text: ','};\n    case '+':\n      return {type: TokenType.Plus, text: '+'};\n    case '-':\n      return {type: TokenType.Minus, text: '-'};\n    case '*':\n      return {type: TokenType.Mul, text: '*'};\n    case '/':\n      return {type: TokenType.Div, text: '/'};\n    case '<':\n      if (s.length > 1 && s.charAt(1) === '=') {\n        return {type: TokenType.LessOrEq, text: '<='};\n      }\n      return {type: TokenType.Less, text: '<'};\n    case '>':\n      if (s.length > 1 && s.charAt(1) === '=') {\n        return {type: TokenType.GreaterOrEq, text: '>='};\n      }\n      return {type: TokenType.Greater, text: '>'};\n    case '=':\n      return {type: TokenType.Equal, text: '='};\n    case '!':\n      if (s.length > 1 && s.charAt(1) === '=') {\n        return {type: TokenType.NotEqual, text: '!='};\n      }\n      return {type: TokenType.Not, text: '!'};\n    case '$':\n      m = s.match(/^\\$[a-zA-Z_]\\w*/);\n      if (m === null) {\n        throw new Error('invalid field name in: ' + s);\n      }\n      return {type: TokenType.Field, text: m[0]};\n    case '\"':\n      m = s.match(/^\"(\\\\\\\\|\\\\\"|[^\"])*\"/);\n      if (m === null) {\n        throw new Error('unterminated string literal in: ' + s);\n      }\n      return {type: TokenType.String, text: m[0]};\n    case \"'\":\n      m = s.match(/^'(\\\\\\\\|\\\\'|[^'])*'/);\n      if (m === null) {\n        throw new Error('unterminated string literal in: ' + s);\n      }\n      return {type: TokenType.String, text: m[0]};\n  }\n  if (c >= '0' && c <= '9') {\n    m = s.match(/^\\d+(\\.\\d+)?([eE][\\+\\-]?\\d+)?/);\n    if (m === null) {\n      throw new Error('impossible');\n    }\n    return {type: TokenType.Number, text: m[0]};\n  }\n  m = s.match(/^[a-zA-Z_]\\w*/);\n  if (m !== null) {\n    return {type: TokenType.Ident, text: m[0]};\n  }\n  if (s.match(/^\\s/) !== null) {\n    throw new Error('string s has a leading whitespace');\n  }\n  throw new Error('unrecognized token in: ' + s);\n}\n\nfunction tokenize(s: string): Token[] {\n  const toks: Token[] = [];\n  while (true) {\n    s = s.trim();\n    const t = firstToken(s);\n    toks.push(t);\n    if (t.type === TokenType.END) {\n      return toks;\n    }\n    s = s.slice(t.text.length);\n  }\n}\n\nexport function indicatorToJs(formula: string): string {\n  switch (typeof formula) {\n    case 'string':\n      if (formula.startsWith('js:')) {\n        return formula.slice(3).trim();\n      }\n      break;\n    case 'number':\n    case 'boolean':\n      formula = String(formula);\n      break;\n    default:\n      throw new Error('formula is not a string');\n  }\n  return parseExpression(tokenize(formula).reverse(), TokenType.END);\n}\n\nfunction unexpectedTokenError(tok: Token, rest: Token[]): Error {\n  if (tok.type === TokenType.END) {\n    return new Error('unexpected end of token stream');\n  }\n  rest.push(tok);\n  return new Error('unexpected token at the start of: ' + printTokens(rest));\n}\n\nfunction printTokens(revToks: Token[]) {\n  let s = '';\n  while (revToks.length > 0) {\n    const tok = revToks.pop() as Token;\n    if (tok.type >= TokenType.Plus && tok.type <= TokenType.NotEqual) {\n      // binary operators\n      s += ' ' + tok.text + ' ';\n    } else if (tok.type === TokenType.Comma) {\n      s += ', ';\n    } else {\n      s += tok.text;\n    }\n  }\n  return s;\n}\n\nfunction consume(revToks: Token[], expectedType: TokenType): Token {\n  const tok = revToks.pop() as Token;\n  if (tok.type !== expectedType) {\n    throw unexpectedTokenError(tok, revToks);\n  }\n  return tok;\n}\n\n// parseExpression parses the first expression in revToks\n// and returns its JavaScript/ajf translation.\n// revToks is reversed, the first token of the expression being at index length-1;\n// this way, tokens can be consumed efficiently with revToks.pop().\n// After the expression, the function expects to find the token expectedEnd.\nfunction parseExpression(revToks: Token[], expectedEnd: TokenType): string {\n  if (\n    expectedEnd !== TokenType.END &&\n    expectedEnd !== TokenType.RParen &&\n    expectedEnd !== TokenType.Comma &&\n    expectedEnd !== TokenType.RBracket\n  ) {\n    throw new Error('invalid expectedEnd');\n  }\n\n  let js = '';\n  while (true) {\n    // Expression.\n    let tok = revToks.pop() as Token;\n    let next: Token;\n    switch (tok.type) {\n      case TokenType.Ident:\n        next = revToks[revToks.length - 1];\n        if (next.type === TokenType.LParen) {\n          js += parseFunctionCall(tok.text, revToks);\n        } else if (next.type === TokenType.LBracket) {\n          consume(revToks, TokenType.LBracket);\n          const index = parseExpression(revToks, TokenType.RBracket);\n          consume(revToks, TokenType.RBracket);\n          js += `${tok.text}[${index}]`;\n        } else {\n          js += tok.text;\n        }\n        break;\n      case TokenType.Field:\n        js += 'form.' + tok.text.slice('$'.length);\n        break;\n      case TokenType.String:\n      case TokenType.Number:\n        js += tok.text;\n        break;\n      case TokenType.Plus:\n      case TokenType.Minus:\n        next = revToks[revToks.length - 1];\n        if (next.type === TokenType.Plus || next.type === TokenType.Minus) {\n          throw unexpectedTokenError(revToks.pop() as Token, revToks);\n        }\n        js += tok.text;\n        continue;\n      case TokenType.Not:\n        js += '!';\n        continue;\n      case TokenType.LParen:\n        js += '(' + parseExpression(revToks, TokenType.RParen) + ')';\n        consume(revToks, TokenType.RParen);\n        break;\n      case TokenType.LBracket:\n        js += '[' + parseList(revToks, TokenType.RBracket) + ']';\n        consume(revToks, TokenType.RBracket);\n        break;\n      default:\n        throw unexpectedTokenError(tok, revToks);\n    }\n\n    // Possible end of expression. expectedEnd can be:\n    // END,\n    // RParen for expressions between parentheses,\n    // Comma for function arguments, in which case we also accept RParen,\n    // RBracket for array elements,  in which case we also accept Comma.\n    // Note that we don't consume the end token.\n    const type = revToks[revToks.length - 1].type;\n    if (\n      type === expectedEnd ||\n      (expectedEnd === TokenType.Comma && type === TokenType.RParen) ||\n      (expectedEnd === TokenType.RBracket && type === TokenType.Comma)\n    ) {\n      return js;\n    }\n\n    // Operator.\n    tok = revToks.pop() as Token;\n    if (tok.type >= TokenType.Plus && tok.type <= TokenType.GreaterOrEq) {\n      js += ' ' + tok.text + ' ';\n      continue;\n    }\n    switch (tok.type) {\n      case TokenType.Ident:\n        if (tok.text === 'AND') {\n          js += ' && ';\n          break;\n        }\n        if (tok.text === 'OR') {\n          js += ' || ';\n          break;\n        }\n        throw unexpectedTokenError(tok, revToks);\n      case TokenType.Equal:\n        js += ' === ';\n        break;\n      case TokenType.NotEqual:\n        js += ' !== ';\n        break;\n      default:\n        throw unexpectedTokenError(tok, revToks);\n    }\n  }\n}\n\n// parseList parses a comma-separated list of expressions.\n// expectedEnd is Comma for function arguments and RBracket for arrays,\n// according to the behavior of parseExpression.\nfunction parseList(revToks: Token[], expectedEnd: TokenType): string {\n  if (expectedEnd !== TokenType.Comma && expectedEnd !== TokenType.RBracket) {\n    throw new Error('invalid expectedEnd');\n  }\n  let next = revToks[revToks.length - 1];\n  if (next.type === TokenType.RParen || next.type === TokenType.RBracket) {\n    // empty list\n    return '';\n  }\n  let js = '';\n  while (true) {\n    js += parseExpression(revToks, expectedEnd);\n    next = revToks[revToks.length - 1];\n    if (next.type === TokenType.RParen || next.type === TokenType.RBracket) {\n      return js;\n    }\n    consume(revToks, TokenType.Comma);\n    js += ', ';\n  }\n}\n\n// parseFunctionCall parses a function call expression.\n// The list of supported functions is in\n//   projects/core/models/utils/expression-utils.ts\n// The function name has already been scanned.\nfunction parseFunctionCall(name: string, revToks: Token[]): string {\n  const args = functionArgs[name];\n  if (args) {\n    return parseFunctionWithArgs(name, revToks, args);\n  }\n  if (name === 'IF') {\n    consume(revToks, TokenType.LParen);\n    let js = '(' + parseExpression(revToks, TokenType.Comma) + ' ? ';\n    consume(revToks, TokenType.Comma);\n    js += parseExpression(revToks, TokenType.Comma) + ' : ';\n    consume(revToks, TokenType.Comma);\n    js += parseExpression(revToks, TokenType.Comma) + ')';\n    consume(revToks, TokenType.RParen);\n    return js;\n  }\n  throw new Error('unsupported function: ' + name);\n}\n\n/*\n  Parses a function call expression.\n  args tells how many arguments the function takes and their type.\n  For example, the indicator function\n    SUM(forms[0], $age, $gender = \"male\")\n  can be parsed with\n    parseFunctionWithArgs('SUM', revToks, ['arg', 'field', 'func(form)?'])\n  resulting in the following JavaScript:\n    SUM(forms[0], 'age', (form) => form.gender === \"male\")\n*/\nfunction parseFunctionWithArgs(name: string, revToks: Token[], args: string[]): string {\n  consume(revToks, TokenType.LParen);\n  let argsJs = '';\n  for (let i = 0; i < args.length; i++) {\n    let argType = args[i];\n    if (argType.endsWith('?') && revToks[revToks.length-1].type === TokenType.RParen) {\n      break;\n    }\n    if (argType.endsWith('?')) {\n      argType = argType.slice(0, -1);\n    }\n    if (i !== 0) {\n      consume(revToks, TokenType.Comma);\n      argsJs += ', ';\n    }\n    let argJs = parseExpression(revToks, TokenType.Comma);\n    if (argType === 'field' && isField(argJs)) {\n      argJs = \"'\" + argJs.slice('form.'.length) + \"'\";\n    } else if (argType.startsWith('func')) {\n      argJs = argType.slice('func'.length) + ' => ' + argJs;\n    }\n    argsJs += argJs;\n  }\n  consume(revToks, TokenType.RParen);\n  return `${name}(${argsJs})`;\n}\n\nfunction isField(js: string): boolean {\n  return /^form\\.[a-zA-Z_]\\w*$/.test(js);\n}\n\nconst functionArgs: {[name: string]: string[]} = {\n  SUM: [\"arg\", \"field\", \"func(form)?\"],\n  MEAN: [\"arg\", \"field\", \"func(form)?\"],\n  MAX: [\"arg\", \"field\", \"func(form)?\"],\n  MEDIAN: [\"arg\", \"field\", \"func(form)?\"],\n  MODE: [\"arg\", \"field\", \"func(form)?\"],\n  COUNT_FORMS: [\"arg\", \"func(form)?\"],\n  COUNT_REPS: [\"arg\", \"func(form)?\"],\n  ALL_VALUES_OF: [\"arg\", \"field\", \"func(form)?\"],\n  PERCENT: [\"arg\", \"arg\"],\n  FIRST: [\"arg\", \"field\", \"arg?\"],\n  LAST: [\"arg\", \"field\", \"arg?\"],\n  MAP: [\"arg\", \"func(elem)\"],\n  INCLUDES: [\"arg\", \"arg\"],\n  FILTER_BY: [\"arg\", \"func(form)\"],\n  APPLY: [\"arg\", \"field\", \"func(form)\"],\n  GET_AGE: [\"arg\"],\n  LEN: [\"arg\"],\n  CONCAT: [\"arg\", \"arg\"],\n  REMOVE_DUPLICATES: [\"arg\"],\n  CONSOLE_LOG: [\"arg\"],\n  JOIN_FORMS: [\"arg\", \"arg\", \"field\", \"field?\"],\n  JOIN_REPEATING_SLIDES: [\"arg\", \"arg\", \"field\", \"field\", \"field\", \"field?\"],\n  FROM_REPS: [\"arg\", \"func(form)\"],\n  OP: [\"arg\", \"arg\", \"func(elemA, elemB)\"],\n  GET_LABELS: [\"arg\", \"arg\"],\n  APPLY_LABELS: [\"arg\", \"arg\", \"arg\"],\n  BUILD_DATASET: [\"arg\", \"arg?\"],\n  ROUND: [\"arg\", \"arg?\"],\n  ADD_DAYS: [\"arg\", \"arg\"],\n  DAYS_DIFF: [\"arg\", \"arg\"],\n  IS_BEFORE: [\"arg\", \"arg\"],\n  IS_AFTER: [\"arg\", \"arg\"],\n  IS_WITHIN_INTERVAL: [\"arg\", \"arg\", \"arg\"],\n  COMPARE_DATE: [\"arg\", \"arg\", \"arg\", \"arg?\"],\n  TODAY: [],\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles} from '../interface/styles';\n\nexport const slideTitleStyle: AjfStyles = {\n  width: '100%',\n  dislay: 'block',\n  border: '1px solid gray',\n  margin: '10px 10px 0px 10px',\n  padding: '10px',\n  backgroundColor: 'white',\n};\nexport const slideContentStyle: AjfStyles = {\n  with: '100%',\n  dislay: 'block',\n  border: '1px solid gray',\n  margin: '0px 10px 10px 50px',\n  padding: '10px',\n  backgroundColor: 'white',\n};\nexport const widgetTitleStyle: AjfStyles = {\n  width: '100%',\n  dislay: 'block',\n  padding: '10px',\n  maxHeight: '600px',\n  backgroundColor: 'white',\n};\nexport const htmlWidget: AjfStyles = {\n  width: '100%',\n  dislay: 'block',\n  padding: '10px',\n  backgroundColor: 'white',\n  marginBottom: '10px',\n};\nexport const boxStyle: AjfStyles = {\n  dislay: 'block',\n  padding: '10px',\n  width: '100%',\n  height: '100%',\n};\nexport const widgetStyle: AjfStyles = {\n  border: '1px outset gray',\n  marginBottom: '10px',\n};\nexport const backgroundColor: string[] = [\n  '#FF6633',\n  '#FFB399',\n  '#FF33FF',\n  '#FFFF99',\n  '#00B3E6',\n  '#E6B333',\n  '#3366E6',\n  '#999966',\n  '#99FF99',\n  '#B34D4D',\n  '#80B300',\n  '#809900',\n  '#E6B3B3',\n  '#6680B3',\n  '#66991A',\n  '#FF99E6',\n  '#CCFF1A',\n  '#FF1A66',\n  '#E6331A',\n  '#33FFCC',\n  '#66994D',\n  '#B366CC',\n  '#4D8000',\n  '#B33300',\n  '#CC80CC',\n  '#66664D',\n  '#991AFF',\n  '#E666FF',\n  '#4DB3FF',\n  '#1AB399',\n  '#E666B3',\n  '#33991A',\n  '#CC9999',\n  '#B3B31A',\n  '#00E680',\n  '#4D8066',\n  '#809980',\n  '#E6FF80',\n  '#1AFF33',\n  '#999933',\n  '#FF3380',\n  '#CCCC00',\n  '#66E64D',\n  '#4D80CC',\n  '#9900B3',\n  '#E64D66',\n  '#4DB380',\n  '#FF4D4D',\n  '#99E6E6',\n  '#6666FF',\n  '#F44336',\n  '#FFEBEE',\n  '#FFCDD2',\n  '#EF9A9A',\n  '#E57373',\n  '#EF5350',\n  '#E53935',\n  '#D32F2F',\n  '#C62828',\n  '#B71C1C',\n  '#FF8A80',\n  '#FF5252',\n  '#FF1744',\n  '#D50000',\n  '#FCE4EC',\n  '#F8BBD0',\n  '#F48FB1',\n  '#F06292',\n  '#EC407A',\n  '#E91E63',\n  '#D81B60',\n  '#C2185B',\n  '#AD1457',\n  '#880E4F',\n  '#FF80AB',\n  '#FF4081',\n  '#F50057',\n  '#C51162',\n  '#F3E5F5',\n  '#E1BEE7',\n  '#CE93D8',\n  '#BA68C8',\n  '#AB47BC',\n  '#9C27B0',\n  '#8E24AA',\n  '#7B1FA2',\n  '#6A1B9A',\n  '#4A148C',\n  '#EA80FC',\n  '#E040FB',\n  '#D500F9',\n  '#AA00FF',\n  '#EDE7F6',\n  '#D1C4E9',\n  '#B39DDB',\n  '#9575CD',\n  '#7E57C2',\n  '#673AB7',\n  '#5E35B1',\n  '#512DA8',\n  '#4527A0',\n  '#311B92',\n  '#B388FF',\n  '#7C4DFF',\n  '#651FFF',\n  '#6200EA',\n  '#E8EAF6',\n  '#C5CAE9',\n  '#9FA8DA',\n  '#7986CB',\n  '#5C6BC0',\n  '#3F51B5',\n  '#3949AB',\n  '#303F9F',\n  '#283593',\n  '#1A237E',\n  '#8C9EFF',\n  '#536DFE',\n  '#3D5AFE',\n  '#304FFE',\n  '#E3F2FD',\n  '#BBDEFB',\n  '#90CAF9',\n  '#64B5F6',\n  '#42A5F5',\n  '#2196F3',\n  '#1E88E5',\n  '#1976D2',\n  '#1565C0',\n  '#0D47A1',\n  '#82B1FF',\n  '#448AFF',\n  '#2979FF',\n  '#2962FF',\n  '#E1F5FE',\n  '#B3E5FC',\n  '#81D4FA',\n  '#4FC3F7',\n  '#29B6F6',\n  '#03A9F4',\n  '#039BE5',\n  '#0288D1',\n  '#0277BD',\n  '#01579B',\n  '#80D8FF',\n  '#40C4FF',\n  '#00B0FF',\n  '#0091EA',\n  '#E0F7FA',\n  '#B2EBF2',\n  '#80DEEA',\n  '#4DD0E1',\n  '#26C6DA',\n  '#00BCD4',\n  '#00ACC1',\n  '#0097A7',\n  '#00838F',\n  '#6064',\n  '#84FFFF',\n  '#18FFFF',\n  '#00E5FF',\n  '#00B8D4',\n  '#E0F2F1',\n  '#B2DFDB',\n  '#80CBC4',\n  '#4DB6AC',\n  '#26A69A',\n  '#9688',\n  '#00897B',\n  '#00796B',\n  '#00695C',\n  '#004D40',\n  '#A7FFEB',\n  '#64FFDA',\n  '#1DE9B6',\n  '#00BFA5',\n  '#E8F5E9',\n  '#C8E6C9',\n  '#A5D6A7',\n  '#81C784',\n  '#66BB6A',\n  '#4CAF50',\n  '#43A047',\n  '#388E3C',\n  '#2E7D32',\n  '#1B5E20',\n  '#B9F6CA',\n  '#69F0AE',\n  '#00E676',\n  '#00C853',\n  '#F1F8E9',\n  '#DCEDC8',\n  '#C5E1A5',\n  '#AED581',\n  '#9CCC65',\n  '#8BC34A',\n  '#7CB342',\n  '#689F38',\n  '#558B2F',\n  '#33691E',\n  '#CCFF90',\n  '#B2FF59',\n  '#76FF03',\n  '#64DD17',\n  '#F9FBE7',\n  '#F0F4C3',\n  '#E6EE9C',\n  '#DCE775',\n  '#D4E157',\n  '#CDDC39',\n  '#C0CA33',\n  '#AFB42B',\n  '#9E9D24',\n  '#827717',\n  '#F4FF81',\n  '#EEFF41',\n  '#C6FF00',\n  '#AEEA00',\n  '#FFFDE7',\n  '#FFF9C4',\n  '#FFF59D',\n  '#FFF176',\n  '#FFEE58',\n  '#FFEB3B',\n  '#FDD835',\n  '#FBC02D',\n  '#F9A825',\n  '#F57F17',\n  '#FFFF8D',\n  '#FFFF00',\n  '#FFEA00',\n  '#FFD600',\n  '#FFF8E1',\n  '#FFECB3',\n  '#FFE082',\n  '#FFD54F',\n  '#FFCA28',\n  '#FFC107',\n  '#FFB300',\n  '#FFA000',\n  '#FF8F00',\n  '#FF6F00',\n  '#FFE57F',\n  '#FFD740',\n  '#FFC400',\n  '#FFAB00',\n  '#FFF3E0',\n  '#FFE0B2',\n  '#FFCC80',\n  '#FFB74D',\n  '#FFA726',\n  '#FF9800',\n  '#FB8C00',\n  '#F57C00',\n  '#EF6C00',\n  '#E65100',\n  '#FFD180',\n  '#FFAB40',\n  '#FF9100',\n  '#FF6D00',\n  '#FBE9E7',\n  '#FFCCBC',\n  '#FFAB91',\n  '#FF8A65',\n  '#FF7043',\n  '#FF5722',\n  '#F4511E',\n  '#E64A19',\n  '#D84315',\n  '#BF360C',\n  '#FF9E80',\n  '#FF6E40',\n  '#FF3D00',\n  '#DD2C00',\n  '#EFEBE9',\n  '#D7CCC8',\n  '#BCAAA4',\n  '#A1887F',\n  '#8D6E63',\n  '#795548',\n  '#6D4C41',\n  '#5D4037',\n  '#4E342E',\n  '#3E2723',\n  '#FAFAFA',\n  '#F5F5F5',\n  '#EEEEEE',\n  '#E0E0E0',\n  '#BDBDBD',\n  '#9E9E9E',\n  '#757575',\n  '#616161',\n  '#424242',\n  '#212121',\n  '#ECEFF1',\n  '#CFD8DC',\n  '#B0BEC5',\n  '#90A4AE',\n  '#78909C',\n  '#607D8B',\n  '#546E7A',\n  '#455A64',\n  '#37474F',\n  '#263238',\n];\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {HttpClient} from '@angular/common/http';\nimport {ChartColor} from 'chart.js';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as XLSX from 'xlsx';\n\nimport {backgroundColor} from '../automatic-report/styles';\n\nimport {indicatorToJs} from './hindikit-parser';\nimport {htmlWidget, widgetStyle} from './styles';\nimport {createDataset} from '../utils/dataset/create-dataset';\nimport {createReportContainer} from '../utils/reports/create-report-container';\nimport {AjfWidgetCreate, createWidget} from '../utils/widgets/create-widget';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {AjfTableDataset} from '../interface/dataset/table-dataset';\nimport {AjfChartDataset} from '../interface/dataset/chart-dataset';\nimport {AjfChartDatasetOptions} from '../interface/dataset/chart-dataset-options';\nimport {AjfChartType} from '../interface/charts/chart-type';\nimport {AjfWidget} from '../interface/widgets/widget';\nimport {AjfReport} from '../interface/reports/report';\nimport {AjfReportVariable} from '../interface/reports/report-variable';\nimport {AjfLayoutWidget} from '../interface/widgets/layout-widget';\nimport {AjfColumnWidget} from '../interface/widgets/column-widget';\nimport {AjfGraphNodeDataset} from '../interface/dataset/graph-dataset';\n\n/**\n * This function builds a report from an excel file.\n */\nexport function xlsReport(file: string, http: HttpClient): Observable<AjfReport> {\n  const workbook = XLSX.read(file, {type: 'binary'});\n  const report: AjfReport = {};\n  const reportWidgets: AjfWidget[] = [];\n\n  const variables: AjfReportVariable[] = [];\n  const filters: {[sheetName: string]: Observable<any>} = {};\n  // create filters\n  workbook.SheetNames.forEach((sheetName, index) => {\n    const sheet: XLSX.WorkSheet = workbook.Sheets[sheetName];\n    if (sheetName.includes('filter') && index + 1 < workbook.SheetNames.length) {\n      const nextSheet = sheetName.includes('global')\n        ? 'global_filter'\n        : workbook.SheetNames[index + 1];\n      filters[nextSheet] = _buildFilter(workbook, sheet, http);\n    }\n  });\n\n  const obsFilterValues: Observable<any>[] = Object.values(filters).length\n    ? Object.values(filters)\n    : [of({})];\n  const filterNames: string[] = Object.keys(filters);\n\n  return forkJoin(obsFilterValues).pipe(\n    map(f => {\n      workbook.SheetNames.forEach(sheetName => {\n        const sheet: XLSX.WorkSheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(sheet) as {\n          name: string;\n          value: string;\n          __rowNum__: string;\n        }[];\n\n        if (sheetName === 'variables') {\n          json\n            .filter(e => e != null && e.name != null && e.name !== '')\n            .forEach(elem => {\n              let js: string;\n              try {\n                js = indicatorToJs(elem.value);\n              } catch (err: any) {\n                const r = Number(elem.__rowNum__) + 1;\n                err = new Error(`Error in variable \"${elem.name}\" (row ${r}): ${err.message}`);\n                window.alert(err.message);\n                throw err;\n              }\n              variables.push({\n                name: elem.name,\n                formula: {formula: js},\n              });\n            });\n        } else {\n          const idx = filterNames.indexOf(sheetName);\n\n          if (sheetName.includes('table')) {\n            const tableWidget = _buildTable(sheetName, json);\n            reportWidgets.push(tableWidget);\n          } else if (sheetName.includes('chart')) {\n            const chartWidget = _buildChart(sheetName, json);\n            reportWidgets.push(chartWidget);\n          } else if (sheetName.includes('html')) {\n            const chartWidget = _buildHtml(json);\n            reportWidgets.push(chartWidget);\n          } else if (sheetName.includes('graph')) {\n            const graphWidget = _buildGraph(sheetName, json);\n            reportWidgets.push(graphWidget);\n          } else if (sheetName.includes('heatmap')) {\n            const heatmapWidget = _buildHeatmap(sheetName, json);\n            reportWidgets.push(heatmapWidget);\n          } else if (sheetName.includes('paginatedlist')) {\n            const pagListWidget = _buildPaginatedListTable(sheetName, json);\n            reportWidgets.push(pagListWidget);\n          } else if (sheetName.includes('paginatedDialogList')) {\n            const pagListWidget = _buildPaginatedListTableWithDialog(sheetName, json);\n            reportWidgets.push(pagListWidget);\n          }\n\n          if (idx >= 0) {\n            reportWidgets[reportWidgets.length - 1].filter = {\n              schema: f[idx] as any,\n            };\n          }\n        }\n      });\n      const globalFilterIdx = filterNames.indexOf('global_filter');\n      const layoutWidget: AjfLayoutWidget = {\n        widgetType: AjfWidgetType.Layout,\n        content: [\n          createWidget({\n            widgetType: AjfWidgetType.Column,\n            content: [...reportWidgets],\n            filter: globalFilterIdx >= 0 ? {schema: f[globalFilterIdx]} : undefined,\n          } as AjfColumnWidget),\n        ],\n        columns: [1],\n        visibility: {\n          condition: 'true',\n        },\n        styles: {},\n      };\n\n      report.variables = variables;\n      report.content = createReportContainer(layoutWidget);\n\n      return report;\n    }),\n  );\n}\n\nfunction _buildFilter(\n  wbook: XLSX.WorkBook,\n  sheet: XLSX.WorkSheet,\n  http: HttpClient,\n): Observable<any> {\n  const data = new FormData();\n  const filterBook: XLSX.WorkBook = deepCopy(wbook);\n  const filterSheet: XLSX.WorkSheet = deepCopy(sheet);\n  const choicesSheet: XLSX.WorkSheet = deepCopy(wbook.Sheets['choices']);\n  filterBook.SheetNames = ['survey', 'choices'];\n  filterBook.Sheets = {survey: filterSheet, choices: choicesSheet};\n  const filterXlsx = XLSX.write(filterBook, {\n    bookType: 'xlsx',\n    type: 'array',\n  });\n  const file = new File([filterXlsx], 'filter.xlsx');\n  data.append('excelFile', file);\n\n  return http.post('https://formconv.herokuapp.com/result.json', data);\n}\n\nfunction _buildChart(name: string, json: {[key: string]: string}[]): AjfWidget {\n  const optionLabels = ['chartType', 'title'];\n  const chartOptions: {[key: string]: string} = {};\n  const datasetObj: {[key: string]: any} = {};\n  const dataset: AjfChartDataset[] = [];\n  let labels: AjfFormula = {formula: '[]'};\n\n  if (json.length > 0) {\n    const firstRow = json[0];\n    optionLabels.forEach(optionLabel => {\n      if (firstRow[optionLabel] != null) {\n        chartOptions[optionLabel] = firstRow[optionLabel];\n        delete firstRow[optionLabel];\n      }\n    });\n  }\n  json.forEach(row => {\n    const rowKeys = Object.keys(row);\n    rowKeys.forEach(rowKey => {\n      const value = row[rowKey];\n      if (datasetObj[rowKey] == null) {\n        datasetObj[rowKey] = [value];\n      } else {\n        datasetObj[rowKey].push(value);\n      }\n    });\n  });\n  const doLabels = datasetObj['labels'];\n  if (doLabels != null) {\n    let labelsJs: string;\n    try {\n      labelsJs = indicatorToJs('[' + doLabels.join() + ']');\n    } catch (err: any) {\n      err = new Error(`Error in \"labels\" of chart \"${chartOptions['title']}\": ${err.message}`);\n      window.alert(err.message);\n      throw err;\n    }\n    labels = {formula: `plainArray(${labelsJs})`};\n    delete datasetObj['labels'];\n  }\n  Object.keys(datasetObj).forEach((datasetObjKey, index) => {\n    let datasetJs: string;\n    try {\n      datasetJs = indicatorToJs('[' + datasetObj[datasetObjKey].join() + ']');\n    } catch (err: any) {\n      err = new Error(\n        `Error in \"${datasetObjKey}\" of chart \"${chartOptions['title']}\": ${err.message}`,\n      );\n      window.alert(err.message);\n      throw err;\n    }\n\n    const chartType = chartOptions['chartType'];\n    const colorCondition =\n      chartType === 'Pie' || chartType === 'PolarArea' || chartType === 'Doughnut';\n    const backColor = colorCondition ? backgroundColor : backgroundColor[index];\n    const formula: AjfFormula[] = [\n      createFormula({\n        formula: `plainArray(${datasetJs})`,\n      }),\n    ];\n    const datasetOptions: AjfChartDatasetOptions = {\n      backgroundColor: backColor as ChartColor,\n    };\n    dataset.push({\n      ...createDataset({\n        aggregation: {aggregation: 0},\n        formula,\n        label: datasetObjKey,\n      }),\n      options: datasetOptions,\n    } as AjfChartDataset);\n  });\n\n  return createWidget({\n    name,\n    widgetType: AjfWidgetType.Chart,\n    type: AjfChartType[chartOptions['chartType'] as any] as unknown as AjfChartType,\n    labels,\n    dataset,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {display: true, position: 'bottom'},\n      title: {\n        display: true,\n        text: chartOptions['title'] || '',\n      },\n    },\n    styles: {\n      ...{width: '100%', height: '100%', padding: '20px'},\n      ...widgetStyle,\n    },\n    exportable: true,\n  } as AjfWidgetCreate);\n}\n\nfunction _buildGraph(name: string, json: {[key: string]: string}[]): AjfWidget {\n  const nodes: AjfGraphNodeDataset[] = [];\n\n  json.forEach(row => {\n    const rowKeys = Object.keys(row);\n    if (rowKeys.includes('id') && row['id']) {\n      const rowId = row['id'].trim().replace(/\"/g, '');\n      if (rowId && rowId.length) {\n        let graphNodeObj: {[key: string]: any} = {};\n        rowKeys.forEach(rowKey => {\n          let js: string;\n          try {\n            js = indicatorToJs(row[rowKey]);\n          } catch (err: any) {\n            const rowNum = Number(row['__rowNum__']) + 1;\n            err = new Error(\n              `Error in \"${name}\", row ${rowNum}, column \"${rowKey}\": ${err.message}`,\n            );\n            window.alert(err.message);\n            throw err;\n          }\n          graphNodeObj[rowKey] = js;\n        });\n        graphNodeObj['id'] = rowId;\n        nodes.push(graphNodeObj as AjfGraphNodeDataset);\n      }\n    }\n  });\n\n  return createWidget({\n    widgetType: AjfWidgetType.Graph,\n    nodes,\n    styles: {},\n  } as AjfWidgetCreate);\n}\n\nfunction _buildHtml(json: {[key: string]: string}[]): AjfWidget {\n  const firstRow = json.length > 0 && json[0]['html'] != null ? json[0] : {html: ''};\n\n  return createWidget({\n    widgetType: AjfWidgetType.Text,\n    htmlText: String(firstRow['html']),\n    styles: htmlWidget,\n  });\n}\n\nfunction _buildTable(\n  sheetName: string,\n  json: {[key: string]: string | number | boolean}[],\n): AjfWidget {\n  let tableHeader: AjfTableDataset[] = [];\n  let dataRows = '[]';\n  let formula = '';\n  let pageSize = 10;\n  let pagination = false;\n  if (json.length > 1) {\n    const rowspan = 1;\n    const titles = Object.keys(json[0]);\n    const colspanRowValues = Object.values(json[0]).map(v => (v ? v.toString() : ''));\n    const colspans: number[] = colspanRowValues.map(r => +r.charAt(0));\n    const textAlign: string[] = colspanRowValues.map(r => {\n      switch (r.charAt(1)) {\n        case 'l':\n          return 'left';\n        case 'r':\n          return 'right';\n        default:\n          return 'center';\n      }\n    });\n    const sortCols: boolean[] = colspanRowValues.map(r =>\n      r.charAt(2) && r.charAt(2) === 's' ? true : false,\n    );\n    tableHeader = titles.map((title, index) => ({\n      label: '',\n      formula: {formula: `\"${title}\"`},\n      aggregation: {aggregation: 0},\n      colspan: colspans[index],\n      rowspan,\n      sorted: sortCols[index],\n      style: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        color: 'white',\n        backgroundColor: '#3f51b5',\n        borderBottom: '2px solid #ddd',\n      },\n    }));\n    pagination = json[1]['pagination'] ? (json[1]['pagination'] as boolean) : false;\n\n    if ('dataset' in json[1]) {\n      const dialogFields = json[1]['dialog_fields']\n        ? (json[1]['dialog_fields'] as string).split(',').map(v => v.trim())\n        : [];\n      const dialogLabelFields = json[1]['dialog_fields_labels']\n        ? (json[1]['dialog_fields_labels'] as string).split(',').map(v => v.trim())\n        : [];\n      formula = _buildFormListTable(json, colspans, textAlign, dialogFields, dialogLabelFields);\n      if (dialogFields && dialogFields.length) {\n        tableHeader.push({\n          label: '',\n          formula: {formula: `\" \"`},\n          aggregation: {aggregation: 0},\n          colspan: 1,\n          rowspan,\n          style: {\n            textAlign: 'center',\n            fontWeight: 'bold',\n            color: 'white',\n            backgroundColor: '#3f51b5',\n            borderBottom: '2px solid #ddd',\n          },\n        });\n      }\n    } else {\n      delete json[0];\n      dataRows = '[';\n      json.forEach(row => {\n        let dataRow = '[';\n        titles.forEach(title => {\n          let elem = row[title] || `''`;\n          try {\n            elem = indicatorToJs(elem as string);\n          } catch (err: any) {\n            const rowNum = Number(row['__rowNum__']) + 1;\n            err = new Error(\n              `Error in \"${sheetName}\", row ${rowNum}, column \"${title}\": ${err.message}`,\n            );\n            window.alert(err.message);\n            throw err;\n          }\n          dataRow += elem + ',';\n        });\n        dataRow += ']';\n        dataRows += dataRow + ',';\n      });\n      dataRows += ']';\n      formula = `buildAlignedDataset(plainArray(${dataRows}),${JSON.stringify(\n        colspans,\n      )},${JSON.stringify(textAlign)})`;\n    }\n  }\n\n  if (pagination) {\n    return createWidget({\n      widgetType: AjfWidgetType.PaginatedTable,\n      pageSize: pageSize,\n      rowDefinition: {\n        formula: formula,\n      },\n      dataset: tableHeader,\n      exportable: true,\n      cellStyles: {\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n      },\n      styles: {\n        borderCollapse: 'collapse',\n      },\n    });\n  } else {\n    return createWidget({\n      widgetType: AjfWidgetType.DynamicTable,\n      rowDefinition: {\n        formula: formula,\n      },\n      dataset: tableHeader,\n      exportable: true,\n      cellStyles: {\n        textAlign: 'center',\n        color: 'black',\n        backgroundColor: 'white',\n      },\n      styles: {\n        borderCollapse: 'collapse',\n      },\n    });\n  }\n}\n\n/**\n * Create a formula for a dynamic table widget, based on a list of Forms\n * @param json\n * @returns the formula for the DynamicTable AjfWidget, like this:\n * buildFormDataset(projectsDataset, ['id_p','donors','budget','dino_area_name','calc_progress',])\"\n */\nfunction _buildFormListTable(\n  json: {[key: string]: string | number | boolean}[],\n  colspans: number[],\n  textAlign: string[],\n  dialogFields: string[],\n  dialogLabelFields: string[],\n): string {\n  let formula = '';\n  if (json.length > 1) {\n    let fields = '[';\n    Object.keys(json[0]).forEach(fieldColName => {\n      let elem = json[1][fieldColName] ? `'${json[1][fieldColName]}'` : `''`;\n      fields += elem + ',';\n    });\n    fields += ']';\n    const dataset = json[1]['dataset'] as string;\n    const linkField = json[1]['link_field'] as string;\n    const linkPos = json[1]['link_position'] ? +json[1]['link_position'] : 0;\n    const rowLink =\n      linkField && linkField.length ? `{'link': '${linkField}', 'position': ${linkPos}}` : null;\n\n    formula = `buildAlignedFormDataset(${dataset}, ${fields}, ${JSON.stringify(\n      colspans,\n    )}, ${JSON.stringify(textAlign)}, ${rowLink}, ${JSON.stringify(dialogFields)}, ${JSON.stringify(\n      dialogLabelFields,\n    )})`;\n  }\n  return formula;\n}\n\n/**\n * Create a widget with a dynamic paginated table based on a list of Forms. Each row is an AjfTable.\n * @param sheetName\n * @param json\n * @returns a Paginated AjfWidget with a formula like this:\n * buildWidgetDataset(projectsDataset, ['id_p','donors','budget','dino_area_name','calc_progress','home_link_text',],\n *   {'link': 'home_link', 'position': 5}, {'border': 'none'},{'width': '900px'}, ['10%','30%','10%','25%','15%','10%'], \\\"#f0f0f0\\\", \\\"white\\\")\"\n */\nfunction _buildPaginatedListTable(_: string, json: {[key: string]: string}[]): AjfWidget {\n  let formula = '';\n  let pageSize = 10;\n  let dataset: string = '';\n  let title = '';\n  if (json.length > 1) {\n    const colsPercentage: string = (Object.values(json[0]) as string[])\n      .map(r => `'${r}%'`)\n      .join(',');\n    const colsPercentageArray = `[${colsPercentage}]`;\n\n    let fields = '[';\n    Object.keys(json[0]).forEach(fieldColName => {\n      let elem = json[1][fieldColName] ? `'${json[1][fieldColName]}'` : `''`;\n      fields += elem + ',';\n    });\n    fields += ']';\n\n    dataset = json[1]['dataset'] as string;\n    title = json[1]['title'] as string;\n    pageSize = json[1]['pageSize'] ? +json[1]['pageSize'] : 10;\n    const linkField = json[1]['link_field'] as string;\n    const linkPos = json[1]['link_position'] ? +json[1]['link_position'] : 0;\n    const rowLink =\n      linkField && linkField.length ? `{'link': '${linkField}', 'position': ${linkPos}}` : null;\n    const cellStyles = json[1]['cellStyles'];\n    const rowStyle = json[1]['rowStyle'];\n    const backgroundColorA = json[1]['backgroundColorA'] as string;\n    const backgroundColorB = json[1]['backgroundColorB'] as string;\n\n    formula =\n      `buildWidgetDataset(${dataset}, ${fields}, ${rowLink}, ${cellStyles},` +\n      `${rowStyle}, ${colsPercentageArray}, ${JSON.stringify(backgroundColorA)}, ${JSON.stringify(\n        backgroundColorB,\n      )})`;\n  }\n  return createWidget({\n    widgetType: AjfWidgetType.PaginatedList,\n    pageSize: pageSize,\n    title: title,\n    contentDefinition: {\n      formula: formula,\n    },\n    exportable: true,\n    styles: {\n      height: '500px',\n    },\n  });\n}\n\n/**\n * Create a widget with a dynamic paginated table based on a list of Forms. Each row is an AjfDialogWidget with an AjfTable\n * that open, on click, a dialog.\n * @param sheetName\n * @param json\n * @returns a Paginated AjfWidget with a formula like this:\n * buildWidgetDatasetWithDialog(projectsDataset, ['id_p','donors','province_choicesLabel','dino_area_name','calc_progress','home_link_text',],\n *  ['id_p','donors','province_choicesLabel','dino_area_name'], ['Codice progetto','Donors','Provinces','Settore di attivita'],\n *  {'border': 'none'},{'width': '900px'}, ['10%','30%','10%','25%','15%','10%'], \\\"#f0f0f0\\\", \\\"white\\\")\n */\nfunction _buildPaginatedListTableWithDialog(_: string, json: {[key: string]: string}[]): AjfWidget {\n  let formula = '';\n  let pageSize = 10;\n  let dataset: string = '';\n  let title = '';\n  if (json.length > 1) {\n    const colsPercentage: string = (Object.values(json[0]) as string[])\n      .map(r => `'${r}%'`)\n      .join(',');\n    const colsPercentageArray = `[${colsPercentage}]`;\n\n    let fields = '[';\n    Object.keys(json[0]).forEach(fieldColName => {\n      let elem = json[1][fieldColName] ? `'${json[1][fieldColName]}'` : `''`;\n      fields += elem + ',';\n    });\n    fields += ']';\n\n    let dialogFields = '[';\n    let dialogLabelFields = '[';\n    if (json.length > 3) {\n      dialogLabelFields += (Object.values(json[2]) as string[]).map(v => `'${v}'`).join(',');\n      dialogFields += (Object.values(json[3]) as string[]).map(v => `'${v}'`).join(',');\n    }\n    dialogFields += ']';\n    dialogLabelFields += ']';\n\n    dataset = json[1]['dataset'] as string;\n    title = json[1]['title'] as string;\n    pageSize = json[1]['pageSize'] ? +json[1]['pageSize'] : 10;\n    const cellStyles = json[1]['cellStyles'];\n    const rowStyle = json[1]['rowStyle'];\n    const backgroundColorA = json[1]['backgroundColorA'] as string;\n    const backgroundColorB = json[1]['backgroundColorB'] as string;\n\n    formula =\n      `buildWidgetDatasetWithDialog(${dataset}, ${fields}, ${dialogFields}, ${dialogLabelFields}, ${cellStyles},` +\n      `${rowStyle}, ${colsPercentageArray}, ${JSON.stringify(backgroundColorA)}, ${JSON.stringify(\n        backgroundColorB,\n      )})`;\n  }\n  return createWidget({\n    widgetType: AjfWidgetType.PaginatedList,\n    pageSize: pageSize,\n    title: title,\n    contentDefinition: {\n      formula: formula,\n    },\n    exportable: true,\n    styles: {\n      height: '500px',\n    },\n  });\n}\n\nconst _buildHeatmap = (_: string, json: {[key: string]: string}[]): AjfWidget => {\n  const defaultFeatures = {\n    type: 'FeatureCollection',\n    features: [],\n  };\n  const options = {\n    values: '[]',\n    idProp: 'id',\n    features: JSON.stringify(defaultFeatures),\n    startColor: '#ffeb3b',\n    endColor: '#f44336',\n    highlightColor: '#009688',\n    showVisualMap: false,\n    ...(json.length > 0 ? json[0] : {}),\n  };\n  return createWidget({\n    widgetType: AjfWidgetType.HeatMap,\n    ...options,\n    values: {formula: options.values},\n    styles: {\n      minHeight: '200px',\n    },\n  });\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageWidgetInstance} from '../interface/widgets-instances/image-widget-instance';\nimport {AjfReportContainerInstance} from '../interface/reports-instances/report-container-instance';\nimport {AjfReportInstance} from '../interface/reports-instances/report-instance';\nimport {AjfWidgetInstance} from '../interface/widgets-instances/widget-instance';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {AjfWidgetWithContentInstance} from '../interface/widgets-instances/widget-with-content-instance';\n\nimport {AjfImageType} from '@ajf/core/image';\n\n// ImageMap maps image urls to dataurls, like:\n// 'http://whatever.com/image.png': 'data:image/png;base64,...'\n// It can also be used for icons, like:\n// '<span class=\"material-icons\">radio_button_checked</span>': 'X'\nexport interface ImageMap {\n  [url: string]: string;\n}\n\nexport function loadReportImages(report: AjfReportInstance): Promise<ImageMap> {\n  const promises: Promise<ImageMap>[] = [];\n  if (report.header != null) {\n    promises.push(loadContainerImages(report.header));\n  }\n  if (report.content != null) {\n    promises.push(loadContainerImages(report.content));\n  }\n  if (report.footer != null) {\n    promises.push(loadContainerImages(report.footer));\n  }\n  return new Promise<ImageMap>(resolve => {\n    Promise.all(promises).then(maps => {\n      let map: ImageMap = {};\n      for (const m of maps) {\n        map = {...map, ...m};\n      }\n      resolve(map);\n    });\n  });\n}\n\nfunction loadContainerImages(\n  container: AjfReportContainerInstance | AjfWidgetWithContentInstance,\n): Promise<ImageMap> {\n  const promises: Promise<ImageMap>[] = [];\n  for (let widget of container.content) {\n    promises.push(loadWidgetImages(widget));\n  }\n  return new Promise<ImageMap>(resolve => {\n    Promise.all(promises).then(maps => {\n      let map: ImageMap = {};\n      for (const m of maps) {\n        map = {...map, ...m};\n      }\n      resolve(map);\n    });\n  });\n}\n\nfunction loadWidgetImages(widget: AjfWidgetInstance): Promise<ImageMap> {\n  switch (widget.widgetType) {\n    case AjfWidgetType.Layout:\n    case AjfWidgetType.Column:\n      return loadContainerImages(widget as AjfWidgetWithContentInstance);\n    case AjfWidgetType.Image:\n      const image = widget as AjfImageWidgetInstance;\n      if (image.widget.imageType !== AjfImageType.Image) {\n        break;\n      }\n      return new Promise<ImageMap>(resolve => {\n        const req = new XMLHttpRequest();\n        req.onerror = () => resolve({}); // ignore 404's\n        req.onload = () => {\n          const r = new FileReader();\n          r.onerror = () => resolve({});\n          r.onloadend = () => {\n            const result = r.result as string;\n            if (result.startsWith('data:image')) {\n              const map: ImageMap = {};\n              map[image.url] = result;\n              resolve(map);\n            } else {\n              resolve({});\n            }\n          };\n          r.readAsDataURL(req.response);\n        };\n        req.open('GET', image.url);\n        req.responseType = 'blob';\n        req.send();\n      });\n  }\n  return new Promise<ImageMap>(resolve => resolve({}));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  Column,\n  Content,\n  ContentStack,\n  createPdf,\n  PageOrientation,\n  TableCell,\n  TCreatedPdf,\n  TDocumentDefinitions,\n} from '@ajf/core/pdfmake';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportContainerInstance} from '../interface/reports-instances/report-container-instance';\nimport {AjfReportInstance} from '../interface/reports-instances/report-instance';\nimport {AjfChartWidgetInstance} from '../interface/widgets-instances/chart-widget-instance';\nimport {AjfColumnWidgetInstance} from '../interface/widgets-instances/column-widget-instance';\nimport {AjfFormulaWidgetInstance} from '../interface/widgets-instances/formula-widget-instance';\nimport {AjfImageWidgetInstance} from '../interface/widgets-instances/image-widget-instance';\nimport {AjfLayoutWidgetInstance} from '../interface/widgets-instances/layout-widget-instance';\nimport {AjfTableWidgetInstance} from '../interface/widgets-instances/table-widget-instance';\nimport {AjfTextWidgetInstance} from '../interface/widgets-instances/text-widget-instance';\nimport {AjfWidgetInstance} from '../interface/widgets-instances/widget-instance';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\n\nimport {ImageMap, loadReportImages} from './load-report-images';\n\nconst pageWidth = 800;\nconst pageHeight = pageWidth * 1.4142; // A4 proportions\nconst pageMargins: [number, number] = [40, 60];\n\nexport function openReportPdf(\n  report: AjfReportInstance,\n  orientation: PageOrientation = 'portrait',\n  icons: ImageMap = {},\n) {\n  createReportPdf(report, orientation, icons).then(pdf => {\n    pdf.open();\n  });\n}\n\nexport function createReportPdf(\n  report: AjfReportInstance,\n  orientation: PageOrientation = 'portrait',\n  icons: ImageMap = {},\n): Promise<TCreatedPdf> {\n  return new Promise<TCreatedPdf>(resolve => {\n    loadReportImages(report).then(images => {\n      let width = pageWidth - pageMargins[0] * 2;\n      if (orientation === 'landscape') {\n        width = pageHeight - pageMargins[1] * 2;\n      }\n      const pdfDef = reportToPdf(report, {...images, ...icons}, width);\n      pdfDef.pageSize = {width: pageWidth, height: pageHeight};\n      pdfDef.pageMargins = pageMargins;\n      pdfDef.pageOrientation = orientation;\n      resolve(createPdf(pdfDef));\n    });\n  });\n}\n\nfunction reportToPdf(\n  report: AjfReportInstance,\n  images: ImageMap,\n  width: number,\n): TDocumentDefinitions {\n  const stack: Content[] = [];\n  if (report.header != null) {\n    stack.push(containerToPdf(report.header, images, width));\n  }\n  if (report.content != null) {\n    stack.push(containerToPdf(report.content, images, width));\n  }\n  if (report.footer != null) {\n    stack.push(containerToPdf(report.footer, images, width));\n  }\n  return {content: {stack}};\n}\n\nfunction containerToPdf(\n  container: AjfReportContainerInstance,\n  images: ImageMap,\n  width: number,\n): Content {\n  return {stack: container.content.map(w => widgetToPdf(w, images, width))};\n}\n\nconst marginBetweenWidgets = 10;\n\nfunction widgetToPdf(widget: AjfWidgetInstance, images: ImageMap, width: number): Content {\n  switch (widget.widget.widgetType) {\n    case AjfWidgetType.Layout:\n      return layoutToPdf(widget as AjfLayoutWidgetInstance, images, width);\n    case AjfWidgetType.PageBreak:\n      return {text: '', pageBreak: 'after'};\n    case AjfWidgetType.Image:\n      return imageToPdf(widget as AjfImageWidgetInstance, images, width);\n    case AjfWidgetType.Text:\n      return textToPdf(widget as AjfTextWidgetInstance, images);\n    case AjfWidgetType.Chart:\n      const chart = widget as AjfChartWidgetInstance;\n      const dataUrl = chart.canvasDataUrl == null ? '' : chart.canvasDataUrl();\n      if (dataUrl === '') {\n        return {text: '[chart with no attached canvas]'};\n      }\n      return {image: dataUrl, width, margin: [0, 0, 0, marginBetweenWidgets]};\n    case AjfWidgetType.Table:\n    case AjfWidgetType.DynamicTable:\n      return tableToPdf(widget as AjfTableWidgetInstance, images);\n    case AjfWidgetType.Column:\n      const cw = widget as AjfColumnWidgetInstance;\n      return {stack: cw.content.map(w => widgetToPdf(w, images, width))};\n    case AjfWidgetType.Formula:\n      const fw = widget as AjfFormulaWidgetInstance;\n      return {text: fw.formula, margin: [0, 0, 0, marginBetweenWidgets]};\n    default:\n      return {text: ''};\n  }\n}\n\nfunction layoutToPdf(lw: AjfLayoutWidgetInstance, images: ImageMap, width: number): Content {\n  const columns = [...lw.widget.columns];\n  while (columns.length < lw.content.length) {\n    columns.push(1);\n  }\n  const childWidth = width / (columns.length || 1);\n  const children = [];\n  for (let i = 0; i < lw.content.length; i++) {\n    let child = widgetToPdf(lw.content[i], images, childWidth) as ContentStack;\n    // Children of Layout widgets are supposed to be Columns. If they aren't,\n    // we must wrap them to avoid problems like images having an 'auto' width.\n    if (child.stack == null) {\n      child = {stack: [child]};\n    }\n    (child as Column).width = columns[i] === -1 ? 'auto' : '*';\n    children.push(child);\n  }\n  return {columns: children};\n}\n\nfunction imageToPdf(image: AjfImageWidgetInstance, images: ImageMap, width: number): Content {\n  if (image.widget.imageType !== AjfImageType.Image) {\n    // Can't get icons to work, pdfs with multiple fonts don't seem to be working\n    return {text: ''};\n  }\n  const dataUrl = images[image.url];\n  if (dataUrl == null) {\n    return {text: ''};\n  }\n  const w = image.styles['width'];\n  if (typeof w === 'string' && w.endsWith('px')) {\n    width = Number(w.slice(0, -2));\n  }\n  return {image: dataUrl, width, margin: [0, 0, 0, marginBetweenWidgets]};\n}\n\nfunction htmlTextToPdfText(htmlText: string, images: ImageMap): string {\n  const iconText = images[htmlText];\n  if (typeof iconText === 'string') {\n    return iconText;\n  }\n  return stripHTML(htmlText);\n}\n\nfunction textToPdf(tw: AjfTextWidgetInstance, images: ImageMap): Content {\n  const text: Content = {\n    text: htmlTextToPdfText(tw.htmlText, images),\n    margin: [0, 0, 0, marginBetweenWidgets],\n  };\n  if (tw.htmlText.startsWith('<h1>')) {\n    text.fontSize = 20;\n    text.margin = [0, 10, 0, marginBetweenWidgets];\n  } else if (tw.htmlText.startsWith('<h2>')) {\n    text.fontSize = 15;\n    text.margin = [0, 5, 0, marginBetweenWidgets];\n  }\n  return text;\n}\n\nfunction tableToPdf(table: AjfTableWidgetInstance, images: ImageMap): Content {\n  if (table.data == null || table.data.length === 0) {\n    return {text: ''};\n  }\n  const body: TableCell[][] = [];\n  for (const dataRow of expandColAndRowSpan(table.data)) {\n    const bodyRow: TableCell[] = [];\n    for (const cell of dataRow) {\n      let text = '';\n      switch (typeof cell.value) {\n        case 'number':\n          text = String(cell.value);\n          break;\n        case 'string':\n          text = htmlTextToPdfText(cell.value, images);\n          break;\n        case 'object':\n          let val = cell.value.changingThisBreaksApplicationSecurity;\n          if (typeof val === 'number') {\n            val = String(val);\n          }\n          text = htmlTextToPdfText(val || '', images);\n          break;\n      }\n      bodyRow.push({text, colSpan: cell.colspan, rowSpan: cell.rowspan});\n    }\n    body.push(bodyRow);\n  }\n  return {\n    table: {headerRows: 0, body},\n    margin: [0, 0, 0, marginBetweenWidgets],\n  };\n}\n\n// pdfmake wants placeholder cells after cells with col/rowspan > 1\nfunction expandColAndRowSpan(data: AjfTableCell[][]): AjfTableCell[][] {\n  data = deepCopy(data);\n  // expand colspan:\n  for (const row of data) {\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      for (let k = 1; k < (cell.colspan || 1); k++) {\n        row.splice(j + k, 0, {rowspan: cell.rowspan, value: '', style: {}});\n      }\n    }\n  }\n  // expand rowspan:\n  for (let i = 0; i < data.length; i++) {\n    const row = data[i];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      for (let k = 1; k < (cell.rowspan || 1); k++) {\n        data[i + k].splice(j, 0, {value: '', style: {}});\n      }\n    }\n  }\n  return data;\n}\n\nfunction stripHTML(s: string): string {\n  return s.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './base-widget';\nexport * from './chart-utils';\nexport * from './get-column-content';\nexport * from './interface/aggregation/aggregation';\nexport * from './interface/aggregation/aggregation-type';\nexport * from './interface/charts/chart-type';\nexport * from './interface/dataset/chart-dataset';\nexport * from './interface/dataset/chart-dataset-options';\nexport * from './interface/dataset/dataset';\nexport * from './interface/dataset/table-dataset';\nexport * from './interface/reports/report';\nexport * from './interface/reports/report-container';\nexport * from './interface/reports/report-string-identifier';\nexport * from './interface/reports/report-variable';\nexport * from './interface/reports-instances/report-container-instance';\nexport * from './interface/reports-instances/report-instance';\nexport * from './interface/styles';\nexport * from './interface/widgets/base-widget';\nexport * from './interface/widgets/chart-widget';\nexport * from './interface/widgets/column-widget';\nexport * from './interface/widgets/custom-widget';\nexport * from './interface/widgets/data-widget';\nexport * from './interface/widgets/dialog-widget';\nexport * from './interface/widgets/filter';\nexport * from './interface/widgets/formula-widget';\nexport * from './interface/widgets/graph-widget';\nexport * from './interface/widgets/heat-map-widget';\nexport * from './interface/widgets/image-container-widget';\nexport * from './interface/widgets/image-widget';\nexport * from './interface/widgets/layout-widget';\nexport * from './interface/widgets/map-widget';\nexport * from './interface/widgets/page-break-widget';\nexport * from './interface/widgets/paginated-list-widget';\nexport * from './interface/widgets/paginated-table-widget';\nexport * from './interface/widgets/table-widget';\nexport * from './interface/widgets/text-widget';\nexport * from './interface/widgets/widget';\nexport * from './interface/widgets/widget-components-map';\nexport * from './interface/widgets/widget-type';\nexport * from './interface/widgets/widget-with-content';\nexport * from './interface/widgets-instances/base-widget-instance';\nexport * from './interface/widgets-instances/chart-widget-instance';\nexport * from './interface/widgets-instances/column-widget-instance';\nexport * from './interface/widgets-instances/data-widget-instance';\nexport * from './interface/widgets-instances/dialog-widget-instance';\nexport * from './interface/widgets-instances/filter-instance';\nexport * from './interface/widgets-instances/formula-widget-instance';\nexport * from './interface/widgets-instances/graph-widget-instance';\nexport * from './interface/widgets-instances/heat-map-widget-instance';\nexport * from './interface/widgets-instances/image-container-widget-instance';\nexport * from './interface/widgets-instances/image-widget-instance';\nexport * from './interface/widgets-instances/layout-widget-instance';\nexport * from './interface/widgets-instances/map-widget-instance';\nexport * from './interface/widgets-instances/page-break-widget-instance';\nexport * from './interface/widgets-instances/paginated-list-widget-instance';\nexport * from './interface/widgets-instances/paginated-table-widget-instance';\nexport * from './interface/widgets-instances/table-widget-instance';\nexport * from './interface/widgets-instances/text-widget-instance';\nexport * from './interface/widgets-instances/widget-instance';\nexport * from './interface/widgets-instances/widget-with-content-instance';\nexport * from './report';\nexport * from './report-string-identifier';\nexport * from './reports-module';\nexport * from './serializers/aggregation-serializer';\nexport * from './serializers/dataset-serializer';\nexport * from './serializers/report-container-serializer';\nexport * from './serializers/report-serializer';\nexport * from './serializers/widget-serializer';\nexport * from './widget';\nexport * from './widget-export';\nexport * from './widget-host';\nexport * from './widget-service';\n\nexport * from './utils/aggregation/create-aggregation';\nexport * from './utils/reports-instances/create-report-instance';\nexport * from './utils/widgets/create-widget';\nexport * from './utils/widgets-instances/create-widget-instance';\nexport * from './utils/widgets-instances/widget-to-widget-instance';\n\nexport * from './automatic-report/automatic-report';\nexport * from './xls-report/xls-report';\nexport * from './report-to-pdf/report-to-pdf';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["slideTitleStyle","slideContentStyle","widgetTitleStyle","boxStyle","widgetStyle","backgroundColor"],"mappings":"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"}