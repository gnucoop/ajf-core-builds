{"version":3,"file":"calendar.js","sources":["../../../../../../src/core/calendar/calendar-service.ts","../../../../../../src/core/calendar/calendar-entry-label.ts","../../../../../../src/core/calendar/calendar-entry-selected-state.ts","../../../../../../src/core/calendar/calendar-entry-type.ts","../../../../../../src/core/calendar/calendar-entry.ts","../../../../../../src/core/calendar/calendar-module.ts","../../../../../../src/core/calendar/calendar-period-type.ts","../../../../../../src/core/calendar/calendar-period.ts","../../../../../../src/core/calendar/calendar-view.ts","../../../../../../src/core/calendar/calendar-view-mode.ts","../../../../../../src/core/calendar/calendar-week-day.ts","../../../../../../src/core/calendar/calendar.ts","../../../../../../src/core/calendar/public-api.ts","../../../../../../src/core/calendar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  endOfDay,\n  endOfISOWeek,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  format,\n  getISODay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  setISODay,\n  startOfDay,\n  startOfISOWeek,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  subMonths,\n  subWeeks,\n  subYears\n} from 'date-fns';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarView} from './calendar-view';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\n\nexport interface AjfCalendarParams {\n  viewMode: AjfCalendarViewMode;\n  viewDate: Date;\n  selection: AjfCalendarPeriod|null;\n  isoMode: boolean;\n  minDate: Date|null;\n  maxDate: Date|null;\n}\n\nfunction isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n  return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft)) &&\n      (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n}\n\nfunction periodOrder(entryType: AjfCalendarPeriodType): number {\n  return ['day', 'week', 'month', 'year'].indexOf(entryType);\n}\n\n@Injectable({providedIn: 'root'})\nexport class AjfCalendarService {\n  buildView(params: AjfCalendarParams): AjfCalendarView {\n    const {viewMode, viewDate} = params;\n    switch (viewMode) {\n      case 'decade':\n        let curYear: number = viewDate.getFullYear();\n        let firstYear = curYear - (curYear % 10) + 1;\n        let lastYear = firstYear + 11;\n        return {\n          header: `${firstYear} - ${lastYear}`,\n          headerRow: [],\n          rows: this._decadeCalendarRows(params),\n        };\n      case 'year':\n        return {\n          header: `${viewDate.getFullYear()}`,\n          headerRow: [],\n          rows: this._yearCalendarRows(params),\n        };\n      case 'month':\n        return {\n          header: format(viewDate, 'MMM yyyy'),\n          headerRow: this._monthHeaderRow(params),\n          rows: this._monthCalendarRows(params),\n        };\n    }\n    return {\n      header: '',\n      headerRow: [],\n      rows: [],\n    };\n  }\n\n  monthBounds(date: Date, isoMode: boolean): {start: Date, end: Date} {\n    if (!isoMode) {\n      return {\n        start: startOfMonth(date),\n        end: endOfMonth(date),\n      };\n    }\n    const isoDay = getISODay(date);\n    date = isoDay < 4 ? endOfISOWeek(date) : startOfISOWeek(date);\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(startDate);\n    const startWeekDay = startDate.getDay();\n    const endWeekDay = endDate.getDay();\n    if (startWeekDay == 0 || startWeekDay > 4) {\n      startDate = addWeeks(startDate, 1);\n    }\n    if (endWeekDay > 0 && endWeekDay < 4) {\n      endDate = subWeeks(endDate, 1);\n    }\n    startDate = startOfISOWeek(startDate);\n    endDate = endOfISOWeek(endDate);\n    return {start: startDate, end: endDate};\n  }\n\n  getEntryRange(entry: AjfCalendarEntry): {start: Date, end: Date} {\n    if (entry.type === 'day') {\n      return {start: new Date(entry.date), end: new Date(entry.date)};\n    } else {\n      let curDate: Date = new Date(entry.date);\n      return {\n        start: entry.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: entry.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n\n  isEntrySelected(entry: AjfCalendarEntry, selection: AjfCalendarPeriod|null):\n      AjfCalendarEntrySelectedState {\n    if (selection != null && selection.startDate != null && selection.endDate != null) {\n      let selectionStart: Date = startOfDay(selection.startDate);\n      let selectionEnd: Date = endOfDay(selection.endDate);\n      let selectionPeriodOrder: number = periodOrder(selection.type);\n\n      let entryPeriodOrder: number = periodOrder(entry.type);\n      let entryRange: {start: Date, end: Date} = this.getEntryRange(entry);\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n          isBetween(entryRange.start, selectionStart, selectionEnd) &&\n          isBetween(entryRange.end, selectionStart, selectionEnd)) {\n        return 'full';\n      } else if (\n          entryPeriodOrder > selectionPeriodOrder &&\n          isBetween(selectionStart, entryRange.start, entryRange.end) &&\n          isBetween(selectionEnd, entryRange.start, entryRange.end)) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  entryLabel(entry: AjfCalendarEntry): string {\n    if (entry.type === 'day') {\n      return `${entry.date.getDate()}`;\n    }\n    if (entry.type === 'month') {\n      return format(entry.date, 'MMM');\n    }\n    return `${entry.date.getFullYear()}`;\n  }\n\n  nextView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return addMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return addYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return addYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  previousView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return subMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return subYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return subYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  private _monthHeaderRow(params: AjfCalendarParams): string[] {\n    const {isoMode, viewDate} = params;\n    let curDate: Date;\n    if (isoMode) {\n      curDate = setISODay(startOfWeek(viewDate), 1);\n    } else {\n      curDate = startOfWeek(viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'EEE'));\n      curDate = addDays(curDate, 1);\n    }\n    return weekDayNames;\n  }\n\n  private _decadeCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curYear: number = viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let curDate: Date = startOfYear(viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {type: 'year', date: date, selected: 'none'};\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _yearCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curDate: Date = startOfYear(viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {type: 'month', date: date, selected: 'none'};\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _monthCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection, isoMode, minDate, maxDate} = params;\n    const monthBounds = this.monthBounds(viewDate, isoMode);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n            (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'yyyy-MM-dd') === format(curDate, 'yyyy-MM-dd'),\n          disabled: disabled\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarService} from './calendar-service';\n\n@Injectable()\n@Pipe({name: 'ajfCalendarEntryLabel'})\nexport class AjfCalendarEntryLabelPipe implements PipeTransform {\n  constructor(private _service: AjfCalendarService) {}\n\n  transform(entry: AjfCalendarEntry): string {\n    return this._service.entryLabel(entry);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfCalendarEntrySelectedState = ('none'|'partial'|'full');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfCalendarEntryType = ('day'|'month'|'year');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarEntryType} from './calendar-entry-type';\n\nexport interface AjfCalendarEntry {\n  type: AjfCalendarEntryType;\n  date: Date;\n  selected: AjfCalendarEntrySelectedState;\n  disabled?: boolean;\n  highlight?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfCalendarEntryLabelPipe} from './calendar-entry-label';\nimport {AjfCalendarService} from './calendar-service';\n\n@NgModule({\n  declarations: [\n    AjfCalendarEntryLabelPipe,\n  ],\n  exports: [\n    AjfCalendarEntryLabelPipe,\n  ],\n})\nexport class AjfCalendarModule {\n}\n\n@NgModule({\n  providers: [\n    AjfCalendarService,\n  ],\n})\nexport class AjfGregorianCalendarModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfCalendarPeriodType = ('day'|'week'|'month'|'year');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarEntry} from './calendar-entry';\n\nexport interface AjfCalendarView {\n  header: string;\n  headerRow: string[];\n  rows: AjfCalendarEntry[][];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfCalendarViewMode = ('month'|'year'|'decade');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfCalendarWeekDay =\n    ('monday'|'tuesday'|'wednesday'|'thursday'|'friday'|'saturday'|'sunday');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {\n  endOfISOWeek,\n  endOfWeek,\n  endOfYear,\n  parseISO as parse,\n  startOfISOWeek,\n  startOfWeek,\n  startOfYear\n} from 'date-fns';\nimport {Observable} from 'rxjs';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarService} from './calendar-service';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] =\n    ['', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod|null;\n}\n\n@Directive()\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date {\n    return this._viewDate;\n  }\n  @Input()\n  set viewDate(viewDate: Date) {\n    this._setViewDate(viewDate);\n    this._cdr.markForCheck();\n  }\n\n  private _disabled = false;\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  @Input()\n  set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean {\n    return this._disabled;\n  }\n  @Input()\n  set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n    this._cdr.markForCheck();\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode {\n    return this._viewMode;\n  }\n  @Input()\n  set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n    this._cdr.markForCheck();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType {\n    return this._selectionMode;\n  }\n  @Input()\n  set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n    this._cdr.markForCheck();\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  @Input()\n  set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean {\n    return this._isoMode;\n  }\n  @Input()\n  set isoMode(isoMode: boolean) {\n    this._isoMode = isoMode;\n    this._buildCalendar();\n  }\n\n  private _minDate: Date|null;\n  get minDate(): Date|null {\n    return this._minDate;\n  }\n  @Input()\n  set minDate(minDate: Date|null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _maxDate: Date|null;\n  get maxDate(): Date|null {\n    return this._maxDate;\n  }\n  @Input()\n  set maxDate(maxDate: Date|null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  @Output() readonly change: Observable<AjfCalendarChange> = this._change.asObservable();\n\n  private _selectedPeriod: AjfCalendarPeriod|null;\n  @Input()\n  set selectedPeriod(period: AjfCalendarPeriod|null) {\n    this._selectedPeriod = period;\n    this._change.emit({source: this, period: period});\n    this._refreshSelection();\n    this._cdr.markForCheck();\n  }\n\n  get value(): AjfCalendarPeriod|Date|null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  @Input()\n  set value(period: AjfCalendarPeriod|Date|null) {\n    if (this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date &&\n        (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)) {\n      this.selectedPeriod = {type: 'day', startDate: period, endDate: period};\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n    this._cdr.markForCheck();\n  }\n\n  get calendarHeaders(): string[] {\n    return this._calendarHeaders;\n  }\n  get calendarRows(): AjfCalendarEntry[][] {\n    return this._calendarRows;\n  }\n  get viewHeader(): string {\n    return this._viewHeader;\n  }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _calendarHeaders: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef, private _service: AjfCalendarService) {}\n\n  prevPage(): void {\n    this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod|null = null;\n    if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {type: 'day', startDate: entry.date, endDate: entry.date};\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ? startOfISOWeek(entry.date) : startOfWeek(entry.date, {\n          weekStartsOn: this._startOfWeekDay as 0 | 1 | 2 | 3 | 4 | 5 | 6\n        }),\n        endDate: this._isoMode ?\n            endOfISOWeek(entry.date) :\n            endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay as 0 | 1 | 2 | 3 | 4 | 5 | 6})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._onTouchedCallback();\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => {};\n  private _onTouchedCallback: () => void = () => {};\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _buildCalendar(): void {\n    const calendarView = this._service.buildView({\n      viewMode: this._viewMode,\n      viewDate: this._viewDate,\n      selection: this._selectedPeriod,\n      isoMode: this._isoMode,\n      minDate: this._minDate == null ? null : new Date(this._minDate),\n      maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n    });\n    this._viewHeader = calendarView.header;\n    this._calendarHeaders = calendarView.headerRow;\n    this._calendarRows = calendarView.rows;\n    this._cdr.markForCheck();\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './calendar-entry-label';\nexport * from './calendar-entry-selected-state';\nexport * from './calendar-entry-type';\nexport * from './calendar-entry';\nexport * from './calendar-module';\nexport * from './calendar-period-type';\nexport * from './calendar-period';\nexport * from './calendar-service';\nexport * from './calendar-view';\nexport * from './calendar-view-mode';\nexport * from './calendar-week-day';\nexport * from './calendar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["parse"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAiEA,SAAS,SAAS,CAAC,IAAU,EAAE,SAAe,EAAE,UAAgB;IAC9D,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;SACzD,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AAClE,CAAC;AAED,SAAS,WAAW,CAAC,SAAgC;IACnD,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7D,CAAC;;IAED,MACa,kBAAkB;QAC7B,SAAS,CAAC,MAAyB;YACjC,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAC,GAAG,MAAM,CAAC;YACpC,QAAQ,QAAQ;gBACd,KAAK,QAAQ;oBACX,IAAI,OAAO,GAAW,QAAQ,CAAC,WAAW,EAAE,CAAC;oBAC7C,IAAI,SAAS,GAAG,OAAO,IAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;oBAC7C,IAAI,QAAQ,GAAG,SAAS,GAAG,EAAE,CAAC;oBAC9B,OAAO;wBACL,MAAM,EAAE,GAAG,SAAS,MAAM,QAAQ,EAAE;wBACpC,SAAS,EAAE,EAAE;wBACb,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;qBACvC,CAAC;gBACJ,KAAK,MAAM;oBACT,OAAO;wBACL,MAAM,EAAE,GAAG,QAAQ,CAAC,WAAW,EAAE,EAAE;wBACnC,SAAS,EAAE,EAAE;wBACb,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;qBACrC,CAAC;gBACJ,KAAK,OAAO;oBACV,OAAO;wBACL,MAAM,EAAE,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC;wBACpC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBACvC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;qBACtC,CAAC;aACL;YACD,OAAO;gBACL,MAAM,EAAE,EAAE;gBACV,SAAS,EAAE,EAAE;gBACb,IAAI,EAAE,EAAE;aACT,CAAC;SACH;QAED,WAAW,CAAC,IAAU,EAAE,OAAgB;YACtC,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO;oBACL,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC;oBACzB,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC;iBACtB,CAAC;aACH;YACD,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAI,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;YACpC,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,YAAY,IAAI,CAAC,IAAI,YAAY,GAAG,CAAC,EAAE;gBACzC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACpC;YACD,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;gBACpC,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAChC;YACD,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACtC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;YAChC,OAAO,EAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAC,CAAC;SACzC;QAED,aAAa,CAAC,KAAuB;YACnC,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;gBACxB,OAAO,EAAC,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,CAAC;aACjE;iBAAM;gBACL,IAAI,OAAO,GAAS,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACzC,OAAO;oBACL,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC;oBAC5E,GAAG,EAAE,KAAK,CAAC,IAAI,KAAK,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC;iBACvE,CAAC;aACH;SACF;QAED,eAAe,CAAC,KAAuB,EAAE,SAAiC;YAExE,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,IAAI,IAAI,EAAE;gBACjF,IAAI,cAAc,GAAS,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAC3D,IAAI,YAAY,GAAS,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACrD,IAAI,oBAAoB,GAAW,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE/D,IAAI,gBAAgB,GAAW,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACvD,IAAI,UAAU,GAA6B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAErE,IAAI,gBAAgB,IAAI,oBAAoB;oBACxC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,cAAc,EAAE,YAAY,CAAC;oBACzD,SAAS,CAAC,UAAU,CAAC,GAAG,EAAE,cAAc,EAAE,YAAY,CAAC,EAAE;oBAC3D,OAAO,MAAM,CAAC;iBACf;qBAAM,IACH,gBAAgB,GAAG,oBAAoB;oBACvC,SAAS,CAAC,cAAc,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC;oBAC3D,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE;oBAC7D,OAAO,SAAS,CAAC;iBAClB;aACF;YAED,OAAO,MAAM,CAAC;SACf;QAED,UAAU,CAAC,KAAuB;YAChC,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;gBACxB,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;aAClC;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC1B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAClC;YACD,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;SACtC;QAED,QAAQ,CAAC,QAAc,EAAE,QAA6B;YACpD,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC/B;iBAAM,IAAI,QAAQ,IAAI,MAAM,EAAE;gBAC7B,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC9B;iBAAM,IAAI,QAAQ,IAAI,QAAQ,EAAE;gBAC/B,OAAO,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aAC/B;YACD,OAAO,QAAQ,CAAC;SACjB;QAED,YAAY,CAAC,QAAc,EAAE,QAA6B;YACxD,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC/B;iBAAM,IAAI,QAAQ,IAAI,MAAM,EAAE;gBAC7B,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;aAC9B;iBAAM,IAAI,QAAQ,IAAI,QAAQ,EAAE;gBAC/B,OAAO,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aAC/B;YACD,OAAO,QAAQ,CAAC;SACjB;QAEO,eAAe,CAAC,MAAyB;YAC/C,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAC,GAAG,MAAM,CAAC;YACnC,IAAI,OAAa,CAAC;YAClB,IAAI,OAAO,EAAE;gBACX,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/C;iBAAM;gBACL,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;aACjC;YACD,IAAI,YAAY,GAAa,EAAE,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC1C,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAC/B;YACD,OAAO,YAAY,CAAC;SACrB;QAEO,mBAAmB,CAAC,MAAyB;YACnD,MAAM,EAAC,QAAQ,EAAE,SAAS,EAAC,GAAG,MAAM,CAAC;YACrC,IAAI,OAAO,GAAW,QAAQ,CAAC,WAAW,EAAE,CAAC;YAC7C,IAAI,SAAS,GAAG,OAAO,IAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,OAAO,GAAS,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1C,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAE/B,IAAI,IAAI,GAAyB,EAAE,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,IAAI,GAAG,GAAuB,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7B,IAAI,QAAQ,GAAqB,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;oBAC9E,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oBAC9D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnB,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAChC;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChB;YAED,OAAO,IAAI,CAAC;SACb;QAEO,iBAAiB,CAAC,MAAyB;YACjD,MAAM,EAAC,QAAQ,EAAE,SAAS,EAAC,GAAG,MAAM,CAAC;YACrC,IAAI,OAAO,GAAS,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE1C,IAAI,IAAI,GAAyB,EAAE,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,IAAI,GAAG,GAAuB,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7B,IAAI,QAAQ,GAAqB,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;oBAC/E,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oBAC9D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnB,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBACjC;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChB;YAED,OAAO,IAAI,CAAC;SACb;QAEO,kBAAkB,CAAC,MAAyB;YAClD,MAAM,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC,GAAG,MAAM,CAAC;YAChE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACxD,IAAI,aAAa,GAAS,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,WAAW,GAAS,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,EAAE;gBACZ,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;gBAC3C,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;aACtC;YAED,IAAI,IAAI,GAAyB,EAAE,CAAC;YACpC,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC3B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;YACtC,OAAO,OAAO,GAAG,WAAW,EAAE;gBAC5B,IAAI,GAAG,GAAuB,EAAE,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1B,IAAI,QAAQ,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;yBACxD,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;oBACnD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7B,IAAI,QAAQ,GAAqB;wBAC/B,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,KAAK,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC;wBAC5E,QAAQ,EAAE,QAAQ;qBACnB,CAAC;oBACF,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oBAC9D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnB,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC/B;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChB;YACD,OAAO,IAAI,CAAC;SACb;;;gBA3NF,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;6BA1EhC;;;ACAA;;;;;;;;;;;;;;;;;;;;;AAsBA;IAKA,MAEa,yBAAyB;QACpC,YAAoB,QAA4B;YAA5B,aAAQ,GAAR,QAAQ,CAAoB;SAAI;QAEpD,SAAS,CAAC,KAAuB;YAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxC;;;gBAPF,UAAU;gBACV,IAAI,SAAC,EAAC,IAAI,EAAE,uBAAuB,EAAC;;;;gBAH7B,kBAAkB;;IAU1B,gCAAC;;;ACnCD;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;;AAsBA;IAKA,MAQa,iBAAiB;;;gBAR7B,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,yBAAyB;qBAC1B;oBACD,OAAO,EAAE;wBACP,yBAAyB;qBAC1B;iBACF;;IAED,wBAAC;KAAA;;IAED,MAKa,0BAA0B;;;gBALtC,QAAQ,SAAC;oBACR,SAAS,EAAE;wBACT,kBAAkB;qBACnB;iBACF;;IAED,iCAAC;;;AC5CD;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAa,iBAAiB;CAI7B;;AC5BD;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;;AAsBA,AA4BA,MAAM,QAAQ,GACV,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAEvF,MAAa,iBAAiB;CAG7B;AAED;IAAA,MACsB,WAAW;QAiJ/B,YAAoB,IAAuB,EAAU,QAA4B;YAA7D,SAAI,GAAJ,IAAI,CAAmB;YAAU,aAAQ,GAAR,QAAQ,CAAoB;YAvIzE,cAAS,GAAG,KAAK,CAAC;YAalB,oBAAe,GAAG,KAAK,CAAC;YAUxB,cAAS,GAAwB,OAAO,CAAC;YAWzC,mBAAc,GAA0B,KAAK,CAAC;YAU9C,oBAAe,GAAG,CAAC,CAAC;YAcpB,aAAQ,GAAY,KAAK,CAAC;YA+B1B,YAAO,GAAoC,IAAI,YAAY,EAAqB,CAAC;YACtE,WAAM,GAAkC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YAuC/E,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;YAC7B,gBAAW,GAAG,EAAE,CAAC;YAEjB,kBAAa,GAAyB,EAAE,CAAC;YACzC,qBAAgB,GAAa,EAAE,CAAC;YAwFhC,sBAAiB,GAAqB,CAAC,CAAM,QAAO,CAAC;YACrD,uBAAkB,GAAe,SAAQ,CAAC;SAvFmC;QAhJrF,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,IACI,QAAQ,CAAC,QAAc;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAGD,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,IACI,QAAQ,CAAC,QAAiB;YAC5B,MAAM,WAAW,GAAG,QAAQ,IAAI,IAAI,IAAI,GAAG,QAAQ,EAAE,KAAK,OAAO,CAAC;YAClE,IAAI,WAAW,KAAK,IAAI,CAAC,SAAS,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;aAC1B;SACF;QAGD,IAAI,cAAc;YAChB,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,IACI,cAAc,CAAC,cAAuB;YACxC,IAAI,CAAC,eAAe,GAAG,cAAc,IAAI,IAAI,IAAI,GAAG,cAAc,EAAE,KAAK,OAAO,CAAC;YACjF,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAGD,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,IACI,QAAQ,CAAC,QAA6B;YACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAGD,IAAI,aAAa;YACf,OAAO,IAAI,CAAC,cAAc,CAAC;SAC5B;QACD,IACI,aAAa,CAAC,aAAoC;YACpD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAGD,IAAI,cAAc;YAChB,OAA2B,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3D;QACD,IACI,cAAc,CAAC,OAA2B;YAC5C,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAEjD,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;gBAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAID,IAAI,OAAO;YACT,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,IACI,OAAO,CAAC,OAAgB;YAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAGD,IAAI,OAAO;YACT,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,IACI,OAAO,CAAC,OAAkB;YAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAGD,IAAI,OAAO;YACT,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,IACI,OAAO,CAAC,OAAkB;YAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAMD,IACI,cAAc,CAAC,MAA8B;YAC/C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;YAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAED,IAAI,KAAK;YACP,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE;gBACxD,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC;aAC7E;YACD,OAAO,IAAI,CAAC,eAAe,CAAC;SAC7B;QACD,IACI,KAAK,CAAC,MAAmC;YAC3C,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,IAAI,MAAM,YAAY,IAAI;iBAC7E,IAAI,CAAC,eAAe,IAAI,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE;gBAC/E,IAAI,CAAC,cAAc,GAAG,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC,CAAC;aACzE;iBAAM,IAAI,MAAM,YAAY,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,eAAe,EAAE;gBACtE,IAAI,CAAC,cAAc,GAAsB,MAAM,CAAC;gBAChD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aAChC;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAED,IAAI,eAAe;YACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAC9B;QACD,IAAI,YAAY;YACd,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;QACD,IAAI,UAAU;YACZ,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;QAUD,QAAQ;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3E,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,QAAQ;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,gBAAgB;YACd,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAC9B,OAAO;aACR;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC3B;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,EAAE;gBACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;YACD,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,WAAW,CAAC,KAAuB;YACjC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;gBAChC,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAClC;YAED,IAAI,SAAS,GAA2B,IAAI,CAAC;YAC7C,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,MAAM,EAAE;gBACxE,SAAS,GAAG,IAAI,CAAC;aAClB;iBAAM,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;gBACvC,SAAS,GAAG,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,IAAI,EAAC,CAAC;aACvE;iBAAM,IAAI,IAAI,CAAC,cAAc,IAAI,MAAM,EAAE;gBACxC,SAAS,GAAG;oBACV,IAAI,EAAE,MAAM;oBACZ,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE;wBAC9E,YAAY,EAAE,IAAI,CAAC,eAA4C;qBAChE,CAAC;oBACF,OAAO,EAAE,IAAI,CAAC,QAAQ;wBAClB,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;wBACxB,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,eAA4C,EAAC,CAAC;iBAC7F,CAAC;aACH;iBAAM,IAAI,IAAI,CAAC,cAAc,IAAI,OAAO,EAAE;gBACzC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzE,SAAS,GAAG;oBACV,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACtC,OAAO,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;iBACnC,CAAC;aACH;iBAAM,IAAI,IAAI,CAAC,cAAc,IAAI,MAAM,EAAE;gBACxC,SAAS,GAAG;oBACV,IAAI,EAAE,MAAM;oBACZ,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;oBAClC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;iBAC/B,CAAC;aACH;YACD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YAEvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAED,gBAAgB,CAAC,EAAwB;YACvC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;SAC7B;QAED,iBAAiB,CAAC,EAAO;YACvB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAC9B;QAED,UAAU,CAAC,KAAU;YACnB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,KAAK,GAAGA,QAAK,CAAC,KAAK,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;QAED,QAAQ;YACN,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,kBAAkB;YAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;QAKO,YAAY,CAAC,IAAU;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QAEO,cAAc;YACpB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAC3C,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,SAAS,EAAE,IAAI,CAAC,eAAe;gBAC/B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,OAAO,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC/D,OAAO,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAChE,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,SAAS,CAAC;YAC/C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC1B;QAEO,iBAAiB;YACvB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,aAAa,EAAE;gBAClC,KAAK,IAAI,KAAK,IAAI,GAAG,EAAE;oBACrB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC7E;aACF;SACF;QAEO,eAAe,CAAC,KAAuB;YAC7C,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE;gBAC5E,OAAO,KAAK,CAAC;aACd;YACD,IAAI,IAAI,CAAC,cAAc,IAAI,OAAO,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,EAAE;gBAC1D,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;SACb;QAEO,aAAa,CAAC,KAAuB;YAC3C,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;aAC1B;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,EAAE;gBACpC,OAAO;aACR;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;;;gBA1RF,SAAS;;;;gBAlCR,iBAAiB;gBAsBX,kBAAkB;;;2BAiBvB,KAAK;2BAUL,KAAK;iCAaL,KAAK;2BAUL,KAAK;gCAWL,KAAK;iCAUL,KAAK;0BAeL,KAAK;0BAUL,KAAK;0BAUL,KAAK;yBAOL,MAAM;iCAGN,KAAK;wBAcL,KAAK;;IAqKR,kBAAC;;;ACrVD;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;GAEG;;;;"}