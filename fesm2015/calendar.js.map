{"version":3,"file":"calendar.js","sources":["../../../../../../src/core/calendar/calendar-service.ts","../../../../../../src/core/calendar/calendar-entry-label.ts","../../../../../../src/core/calendar/calendar-entry.ts","../../../../../../src/core/calendar/calendar-module.ts","../../../../../../src/core/calendar/calendar-period.ts","../../../../../../src/core/calendar/calendar-view.ts","../../../../../../src/core/calendar/calendar.ts","../../../../../../src/core/calendar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {addDays, addMonths, addWeeks, addYears, endOfDay, endOfMonth, endOfISOWeek, endOfWeek,\n  endOfYear, format, getISODay, isAfter, isBefore, isSameDay, setISODay, startOfDay, startOfISOWeek,\n  startOfMonth, startOfWeek, startOfYear, subMonths, subWeeks, subYears} from 'date-fns';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarView} from './calendar-view';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\n\nexport interface AjfCalendarParams {\n  viewMode: AjfCalendarViewMode;\n  viewDate: Date;\n  selection: AjfCalendarPeriod|null;\n  isoMode: boolean;\n  minDate: Date|null;\n  maxDate: Date|null;\n}\n\nfunction isBetween(date: Date, rangeLeft: Date, rangeRight: Date): boolean {\n  return (isAfter(date, rangeLeft) || isSameDay(date, rangeLeft))\n      && (isBefore(date, rangeRight) || isSameDay(date, rangeRight));\n}\n\nfunction periodOrder(entryType: AjfCalendarPeriodType): number {\n  return ['day', 'week', 'month', 'year'].indexOf(entryType);\n}\n\n@Injectable({providedIn: 'root'})\nexport class AjfCalendarService {\n  buildView(params: AjfCalendarParams): AjfCalendarView {\n    const {viewMode, viewDate} = params;\n    switch (viewMode) {\n      case 'decade':\n        let curYear: number = viewDate.getFullYear();\n        let firstYear = curYear - (curYear % 10) + 1;\n        let lastYear = firstYear + 11;\n        return {\n          header: `${firstYear} - ${lastYear}`,\n          headerRow: [],\n          rows: this._decadeCalendarRows(params),\n        };\n      case 'year':\n        return {\n          header: `${viewDate.getFullYear()}`,\n          headerRow: [],\n          rows: this._yearCalendarRows(params),\n        };\n      case 'month':\n        return {\n          header: format(viewDate, 'MMM yyyy'),\n          headerRow: this._monthHeaderRow(params),\n          rows: this._monthCalendarRows(params),\n        };\n    }\n    return {\n      header: '',\n      headerRow: [],\n      rows: [],\n    };\n  }\n\n  monthBounds(date: Date, isoMode: boolean): {start: Date, end: Date} {\n    if (!isoMode) {\n      return {\n        start: startOfMonth(date),\n        end: endOfMonth(date),\n      };\n    }\n    const isoDay = getISODay(date);\n    date = isoDay < 4 ? endOfISOWeek(date) : startOfISOWeek(date);\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(startDate);\n    const startWeekDay = startDate.getDay();\n    const endWeekDay = endDate.getDay();\n    if (startWeekDay == 0 || startWeekDay > 4) {\n      startDate = addWeeks(startDate, 1);\n    }\n    if (endWeekDay > 0 && endWeekDay < 4) {\n      endDate = subWeeks(endDate, 1);\n    }\n    startDate = startOfISOWeek(startDate);\n    endDate = endOfISOWeek(endDate);\n    return { start: startDate, end: endDate };\n  }\n\n  getEntryRange(entry: AjfCalendarEntry): {start: Date, end: Date} {\n    if (entry.type === 'day') {\n      return { start: new Date(entry.date), end: new Date(entry.date) };\n    } else {\n      let curDate: Date = new Date(entry.date);\n      return {\n        start: entry.type === 'month' ? startOfMonth(curDate) : startOfYear(curDate),\n        end: entry.type === 'month' ? endOfMonth(curDate) : endOfYear(curDate)\n      };\n    }\n  }\n\n  isEntrySelected(\n    entry: AjfCalendarEntry, selection: AjfCalendarPeriod|null\n  ): AjfCalendarEntrySelectedState {\n    if (selection != null && selection.startDate != null && selection.endDate != null) {\n      let selectionStart: Date = startOfDay(selection.startDate);\n      let selectionEnd: Date = endOfDay(selection.endDate);\n      let selectionPeriodOrder: number = periodOrder(selection.type);\n\n      let entryPeriodOrder: number = periodOrder(entry.type);\n      let entryRange: { start: Date, end: Date } = this.getEntryRange(entry);\n\n      if (entryPeriodOrder <= selectionPeriodOrder &&\n        isBetween(entryRange.start, selectionStart, selectionEnd) &&\n        isBetween(entryRange.end, selectionStart, selectionEnd)\n      ) {\n        return 'full';\n      } else if (entryPeriodOrder > selectionPeriodOrder &&\n        isBetween(selectionStart, entryRange.start, entryRange.end) &&\n        isBetween(selectionEnd, entryRange.start, entryRange.end)\n      ) {\n        return 'partial';\n      }\n    }\n\n    return 'none';\n  }\n\n  entryLabel(entry: AjfCalendarEntry): string {\n    if (entry.type === 'day') {\n      return `${entry.date.getDate()}`;\n    }\n    if (entry.type === 'month') {\n      return format(entry.date, 'MMM');\n    }\n    return `${entry.date.getFullYear()}`;\n  }\n\n  nextView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return addMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return addYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return addYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  previousView(viewDate: Date, viewMode: AjfCalendarViewMode): Date {\n    if (viewMode == 'month') {\n      return subMonths(viewDate, 1);\n    } else if (viewMode == 'year') {\n      return subYears(viewDate, 1);\n    } else if (viewMode == 'decade') {\n      return subYears(viewDate, 10);\n    }\n    return viewDate;\n  }\n\n  private _monthHeaderRow(params: AjfCalendarParams): string[] {\n    const {isoMode, viewDate} = params;\n    let curDate: Date;\n    if (isoMode) {\n      curDate = setISODay(startOfWeek(viewDate), 1);\n    } else {\n      curDate = startOfWeek(viewDate);\n    }\n    let weekDayNames: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      weekDayNames.push(format(curDate, 'EEE'));\n      curDate = addDays(curDate, 1);\n    }\n    return weekDayNames;\n  }\n\n  private _decadeCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curYear: number = viewDate.getFullYear();\n    let firstYear = curYear - (curYear % 10) + 1;\n    let curDate: Date = startOfYear(viewDate);\n    curDate.setFullYear(firstYear);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'year',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addYears(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _yearCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection} = params;\n    let curDate: Date = startOfYear(viewDate);\n\n    let rows: AjfCalendarEntry[][] = [];\n    for (let i = 0; i < 4; i++) {\n      let row: AjfCalendarEntry[] = [];\n      for (let j = 0; j < 3; j++) {\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'month',\n          date: date,\n          selected: 'none'\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addMonths(curDate, 1);\n      }\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  private _monthCalendarRows(params: AjfCalendarParams): AjfCalendarEntry[][] {\n    const {viewDate, selection, isoMode, minDate, maxDate} = params;\n    const monthBounds = this.monthBounds(viewDate, isoMode);\n    let viewStartDate: Date = new Date(monthBounds.start);\n    let viewEndDate: Date = new Date(monthBounds.end);\n    if (!isoMode) {\n      viewStartDate = startOfWeek(viewStartDate);\n      viewEndDate = endOfWeek(viewEndDate);\n    }\n\n    let rows: AjfCalendarEntry[][] = [];\n    let todayDate = new Date();\n    let curDate = new Date(viewStartDate);\n    while (curDate < viewEndDate) {\n      let row: AjfCalendarEntry[] = [];\n      for (let i = 0; i < 7; i++) {\n        let disabled = (minDate != null && isBefore(curDate, minDate)) ||\n          (maxDate != null && isAfter(curDate, maxDate));\n        let date = new Date(curDate);\n        let newEntry: AjfCalendarEntry = {\n          type: 'day',\n          date: date,\n          selected: 'none',\n          highlight: format(todayDate, 'yyyy-MM-dd') === format(curDate, 'yyyy-MM-dd'),\n          disabled: disabled\n        };\n        newEntry.selected = this.isEntrySelected(newEntry, selection);\n        row.push(newEntry);\n        curDate = addDays(curDate, 1);\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarService} from './calendar-service';\n\n@Injectable()\n@Pipe({name: 'ajfCalendarEntryLabel'})\nexport class AjfCalendarEntryLabelPipe implements PipeTransform {\n  constructor(private _service: AjfCalendarService) { }\n\n  transform(entry: AjfCalendarEntry): string {\n    return this._service.entryLabel(entry);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarEntrySelectedState} from './calendar-entry-selected-state';\nimport {AjfCalendarEntryType} from './calendar-entry-type';\n\nexport interface AjfCalendarEntry {\n  type: AjfCalendarEntryType;\n  date: Date;\n  selected: AjfCalendarEntrySelectedState;\n  disabled?: boolean;\n  highlight?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfCalendarEntryLabelPipe} from './calendar-entry-label';\nimport {AjfCalendarService} from './calendar-service';\n\n@NgModule({\n  declarations: [\n    AjfCalendarEntryLabelPipe,\n  ],\n  exports: [\n    AjfCalendarEntryLabelPipe,\n  ],\n})\nexport class AjfCalendarModule { }\n\n@NgModule({\n  providers: [\n    AjfCalendarService,\n  ],\n})\nexport class AjfGregorianCalendarModule { }\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarPeriodType} from './calendar-period-type';\n\nexport class AjfCalendarPeriod {\n  type: AjfCalendarPeriodType;\n  startDate: Date;\n  endDate: Date;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCalendarEntry} from './calendar-entry';\n\nexport interface AjfCalendarView {\n  header: string;\n  headerRow: string[];\n  rows: AjfCalendarEntry[][];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AfterContentInit, ChangeDetectorRef, Directive, EventEmitter, Input,\n  OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {endOfISOWeek, endOfWeek, endOfYear, parseISO as parse, startOfISOWeek, startOfWeek,\n  startOfYear} from 'date-fns';\nimport {Observable} from 'rxjs';\n\nimport {AjfCalendarEntry} from './calendar-entry';\nimport {AjfCalendarPeriodType} from './calendar-period-type';\nimport {AjfCalendarPeriod} from './calendar-period';\nimport {AjfCalendarService} from './calendar-service';\nimport {AjfCalendarViewMode} from './calendar-view-mode';\nimport {AjfCalendarWeekDay} from './calendar-week-day';\n\nconst weekDays: string[] = [\n  '', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'\n];\n\nexport class AjfCalendarChange {\n  source: AjfCalendar;\n  period: AjfCalendarPeriod | null;\n}\n\n@Directive()\nexport abstract class AjfCalendar implements AfterContentInit, ControlValueAccessor, OnInit {\n  get viewDate(): Date { return this._viewDate; }\n  @Input() set viewDate(viewDate: Date) {\n    this._setViewDate(viewDate);\n    this._cdr.markForCheck();\n  }\n\n  private _disabled = false;\n  get disabled(): boolean { return this._disabled; }\n  @Input() set disabled(disabled: boolean) {\n    const newDisabled = disabled != null && `${disabled}` !== 'false';\n    if (newDisabled !== this._disabled) {\n      this._disabled = newDisabled;\n      this._cdr.markForCheck();\n    }\n  }\n\n  private _dateOnlyForDay = false;\n  get dateOnlyForDay(): boolean { return this._disabled; }\n  @Input() set dateOnlyForDay(dateOnlyForDay: boolean) {\n    this._dateOnlyForDay = dateOnlyForDay != null && `${dateOnlyForDay}` !== 'false';\n    this._cdr.markForCheck();\n  }\n\n  private _viewMode: AjfCalendarViewMode = 'month';\n  get viewMode(): AjfCalendarViewMode { return this._viewMode; }\n  @Input() set viewMode(viewMode: AjfCalendarViewMode) {\n    this._viewMode = viewMode;\n    this._buildCalendar();\n    this._cdr.markForCheck();\n  }\n\n  private _selectionMode: AjfCalendarPeriodType = 'day';\n  get selectionMode(): AjfCalendarPeriodType { return this._selectionMode; }\n  @Input() set selectionMode(selectionMode: AjfCalendarPeriodType) {\n    this._selectionMode = selectionMode;\n    this._cdr.markForCheck();\n  }\n\n  private _startOfWeekDay = 1;\n  get startOfWeekDay(): AjfCalendarWeekDay {\n    return <AjfCalendarWeekDay>weekDays[this._startOfWeekDay];\n  }\n  @Input() set startOfWeekDay(weekDay: AjfCalendarWeekDay) {\n    this._startOfWeekDay = weekDays.indexOf(weekDay);\n\n    if (this._viewMode === 'month') {\n      this._buildCalendar();\n    }\n    this._cdr.markForCheck();\n  }\n\n  private _isoMode: boolean = false;\n\n  get isoMode(): boolean { return this._isoMode; }\n  @Input() set isoMode(isoMode: boolean) {\n    this._isoMode = isoMode;\n    this._buildCalendar();\n  }\n\n  private _minDate: Date | null;\n  get minDate(): Date | null { return this._minDate; }\n  @Input() set minDate(minDate: Date | null) {\n    this._minDate = minDate != null ? new Date(minDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _maxDate: Date | null;\n  get maxDate(): Date | null { return this._maxDate; }\n  @Input() set maxDate(maxDate: Date | null) {\n    this._maxDate = maxDate != null ? new Date(maxDate.valueOf()) : null;\n    this._cdr.markForCheck();\n  }\n\n  private _change: EventEmitter<AjfCalendarChange> = new EventEmitter<AjfCalendarChange>();\n  @Output() readonly change: Observable<AjfCalendarChange> = this._change.asObservable();\n\n  private _selectedPeriod: AjfCalendarPeriod | null;\n  @Input() set selectedPeriod(period: AjfCalendarPeriod | null) {\n    this._selectedPeriod = period;\n    this._change.emit({\n      source: this,\n      period: period\n    });\n    this._refreshSelection();\n    this._cdr.markForCheck();\n  }\n\n  get value(): AjfCalendarPeriod | Date | null {\n    if (this._dateOnlyForDay && this.selectionMode === 'day') {\n      return this._selectedPeriod != null ? this._selectedPeriod.startDate : null;\n    }\n    return this._selectedPeriod;\n  }\n  @Input() set value(period: AjfCalendarPeriod | Date | null) {\n    if (\n      this._dateOnlyForDay && this.selectionMode === 'day' && period instanceof Date\n      && (this._selectedPeriod == null || period !== this._selectedPeriod.startDate)\n    ) {\n      this.selectedPeriod = {\n        type: 'day',\n        startDate: period,\n        endDate: period\n      };\n    } else if (period instanceof Object && period !== this._selectedPeriod) {\n      this.selectedPeriod = <AjfCalendarPeriod>period;\n      this._onChangeCallback(period);\n    }\n    this._cdr.markForCheck();\n  }\n\n  get calendarHeaders(): string[] { return this._calendarHeaders; }\n  get calendarRows(): AjfCalendarEntry[][] { return this._calendarRows; }\n  get viewHeader(): string { return this._viewHeader; }\n\n  private _viewDate: Date = new Date();\n  private _viewHeader = '';\n\n  private _calendarRows: AjfCalendarEntry[][] = [];\n  private _calendarHeaders: string[] = [];\n\n  constructor(private _cdr: ChangeDetectorRef, private _service: AjfCalendarService) { }\n\n  prevPage(): void {\n    this.viewDate = this._service.previousView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  nextPage(): void {\n    this.viewDate = this._service.nextView(this._viewDate, this._viewMode);\n    this._buildCalendar();\n  }\n\n  previousViewMode(): void {\n    if (this._viewMode == 'decade') {\n      return;\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'decade';\n    } else if (this._viewMode == 'month') {\n      this._viewMode = 'year';\n    }\n    this._buildCalendar();\n  }\n\n  selectEntry(entry: AjfCalendarEntry): void {\n    if (!this._canSelectEntry(entry)) {\n      return this._nextViewMode(entry);\n    }\n\n    let newPeriod: AjfCalendarPeriod | null = null;\n    if (this._service.isEntrySelected(entry, this._selectedPeriod) == 'full') {\n      newPeriod = null;\n    } else if (this._selectionMode == 'day') {\n      newPeriod = {\n        type: 'day',\n        startDate: entry.date,\n        endDate: entry.date\n      };\n    } else if (this._selectionMode == 'week') {\n      newPeriod = {\n        type: 'week',\n        startDate: this._isoMode ?\n          startOfISOWeek(entry.date) :\n          startOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay as 0|1|2|3|4|5|6}),\n        endDate: this._isoMode ?\n          endOfISOWeek(entry.date) :\n          endOfWeek(entry.date, {weekStartsOn: this._startOfWeekDay as 0|1|2|3|4|5|6})\n      };\n    } else if (this._selectionMode == 'month') {\n      const monthBounds = this._service.monthBounds(entry.date, this._isoMode);\n      newPeriod = {\n        type: 'month',\n        startDate: new Date(monthBounds.start),\n        endDate: new Date(monthBounds.end)\n      };\n    } else if (this._selectionMode == 'year') {\n      newPeriod = {\n        type: 'year',\n        startDate: startOfYear(entry.date),\n        endDate: endOfYear(entry.date)\n      };\n    }\n    this.value = newPeriod;\n\n    this._onTouchedCallback();\n    this._cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  writeValue(value: any) {\n    if (typeof value === 'string') {\n      value = parse(value);\n    }\n    this.value = value;\n  }\n\n  ngOnInit(): void {\n    this._buildCalendar();\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshSelection();\n  }\n\n  private _onChangeCallback: (_: any) => void = (_: any) => { };\n  private _onTouchedCallback: () => void = () => { };\n\n  private _setViewDate(date: Date): void {\n    this._viewDate = date;\n  }\n\n  private _buildCalendar(): void {\n    const calendarView = this._service.buildView({\n      viewMode: this._viewMode,\n      viewDate: this._viewDate,\n      selection: this._selectedPeriod,\n      isoMode: this._isoMode,\n      minDate: this._minDate == null ? null : new Date(this._minDate),\n      maxDate: this._maxDate == null ? null : new Date(this._maxDate),\n    });\n    this._viewHeader = calendarView.header;\n    this._calendarHeaders = calendarView.headerRow;\n    this._calendarRows = calendarView.rows;\n    this._cdr.markForCheck();\n  }\n\n  private _refreshSelection(): void {\n    for (let row of this._calendarRows) {\n      for (let entry of row) {\n        entry.selected = this._service.isEntrySelected(entry, this._selectedPeriod);\n      }\n    }\n  }\n\n  private _canSelectEntry(entry: AjfCalendarEntry): boolean {\n    if (['day', 'week'].indexOf(this._selectionMode) >= 0 && entry.type != 'day') {\n      return false;\n    }\n    if (this._selectionMode == 'month' && entry.type == 'year') {\n      return false;\n    }\n    return true;\n  }\n\n  private _nextViewMode(entry: AjfCalendarEntry): void {\n    if (this._viewMode == 'decade') {\n      this._viewMode = 'year';\n    } else if (this._viewMode == 'year') {\n      this._viewMode = 'month';\n    } else if (this._viewMode == 'month') {\n      return;\n    }\n    this._viewDate = entry.date;\n    this._buildCalendar();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["parse"],"mappings":"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"}