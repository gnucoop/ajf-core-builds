{"version":3,"file":"checkbox-group.js","sources":["../../../../../../src/core/checkbox-group/checkbox-group.ts","../../../../../../src/core/checkbox-group/checkbox-group-module.ts","../../../../../../src/core/checkbox-group/public-api.ts","../../../../../../src/core/checkbox-group/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\nexport const AJF_CHECKBOX_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AjfCheckboxGroup),\n  multi: true\n};\n\nexport class AjfCheckboxGroupItemChange<T> {\n  source: AjfCheckboxGroupItem<T>;\n  value: any;\n}\n\nexport class AjfCheckboxGroupChange<T> {\n  source: AjfCheckboxGroup<T>;\n  value: any;\n}\n\nlet _uniqueIdCounter = 0;\n\n\n@Directive({\n  selector: 'ajf-checkbox-group,[ajf-checkbox-group]',\n  providers: [AJF_CHECKBOX_GROUP_VALUE_ACCESSOR]\n})\nexport class AjfCheckboxGroup<T> implements AfterContentInit, ControlValueAccessor {\n  checkboxes: AjfCheckboxGroupItem<T>[] = [];\n\n  /** The value for the button toggle group. Should match currently selected button toggle. */\n  private _value: T[] = [];\n  get value(): T[] {\n    return this._value;\n  }\n  @Input()\n  set value(newValue: T[]) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n      this._updateSelectedCheckboxesFromValue();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** The HTML name attribute applied to toggles in this group. */\n  private _name: string;\n  get name(): string {\n    return this._name;\n  }\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._updateCheckboxesNames();\n  }\n\n  /** Disables all toggles in the group. */\n  private _disabled: boolean = false;\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  @Input()\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** The currently selected button toggle, should match the value. */\n  private _selected: AjfCheckboxGroupItem<T>[] = [];\n  get selected() {\n    return this._selected;\n  }\n  set selected(selected: AjfCheckboxGroupItem<T>[]) {\n    this._selected = selected;\n    let values: T[] = [];\n    if (selected) {\n      selected.forEach(c => {\n        values.push(c.value);\n        if (!c.checked) {\n          c.checked = true;\n        }\n      });\n    }\n    this._value = values;\n  }\n\n  /** Event emitted when the group's value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupChange<T>> =\n      new EventEmitter<AjfCheckboxGroupChange<T>>();\n  @Output() readonly change: Observable<AjfCheckboxGroupChange<T>> = this._change.asObservable();\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: T[]) {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: T[]) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  addValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    if (curValue.indexOf(value) === -1) {\n      curValue.push(value);\n      this.value = curValue;\n    }\n  }\n\n  removeValue(value: T) {\n    let curValue = (this._value || []).slice(0);\n    let idx = curValue.indexOf(value);\n    if (idx > -1) {\n      curValue.splice(idx, 1);\n      this.value = curValue;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._updateCheckboxesNames();\n    this._updateSelectedCheckboxesFromValue();\n  }\n\n  registerItem(item: AjfCheckboxGroupItem<T>): void {\n    this.checkboxes.push(item);\n  }\n\n  /** The method to be called in order to update ngModel. */\n  private _controlValueAccessorChangeFn: (value: any) => void = (_) => {};\n\n  private _updateCheckboxesNames(): void {\n    if (this.checkboxes == null) {\n      return;\n    }\n    this.checkboxes.forEach((checkbox) => {\n      if (checkbox == null) {\n        return;\n      }\n      checkbox.name = this._name;\n    });\n  }\n\n  private _updateSelectedCheckboxesFromValue(): void {\n    if (this.checkboxes == null) {\n      return;\n    }\n    this.checkboxes.forEach(checkbox => {\n      if (checkbox == null) {\n        return;\n      }\n      if ((this._value || []).indexOf(checkbox.value) > -1) {\n        checkbox.checked = true;\n      } else {\n        checkbox.checked = false;\n      }\n    });\n  }\n\n  /** Dispatch change event with current selection and group value. */\n  private _emitChangeEvent(): void {\n    let event = new AjfCheckboxGroupChange<T>();\n    event.source = this;\n    event.value = this._value;\n    this._controlValueAccessorChangeFn(event.value);\n    this._change.emit(event);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n@Directive()\nexport class AjfCheckboxGroupItem<T> implements OnInit {\n  /** The unique ID for this button toggle. */\n  private _checkboxId: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  readonly checkboxId: Observable<string> = this._checkboxId.asObservable();\n\n  @Input()\n  set id(id: string) {\n    this._checkboxId.next(id);\n  }\n\n  @Input() name: string;\n\n  /** The parent button toggle group (exclusive selection). Optional. */\n  readonly checkboxGroup: AjfCheckboxGroup<T>;\n\n  /** Whether or not this button toggle is checked. */\n  private _checkedState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly checkedState: Observable<boolean> = this._checkedState.asObservable();\n  get checked(): boolean {\n    return this._checkedState.getValue();\n  }\n  @Input()\n  set checked(checked: boolean) {\n    this._checkedState.next(checked);\n  }\n\n  /** Whether or not this button toggle is disabled. */\n  private _disabledState: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  readonly disabledState: Observable<boolean> = this._disabledState.asObservable();\n  get disabled(): boolean {\n    const disabled = this._disabledState.getValue();\n    return disabled || (this.checkboxGroup != null && this.checkboxGroup.disabled);\n  }\n  @Input()\n  set disabled(disabled: boolean) {\n    this._disabledState.next(disabled != null && disabled !== false);\n  }\n\n  /** Value assigned to this button toggle. */\n  private _value: T;\n  get value(): T {\n    return this._value;\n  }\n  @Input()\n  set value(value: T) {\n    if (this._value !== value) {\n      this._value = value;\n    }\n  }\n\n  private _checkedIconVal: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  get checkedIcon(): string {\n    return this._checkedIconVal.getValue();\n  }\n  @Input()\n  set checkedIcon(icon: string) {\n    this._checkedIconVal.next(icon);\n  }\n\n  private _notCheckedIconVal: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  get notCheckedIcon(): string {\n    return this._notCheckedIconVal.getValue();\n  }\n  @Input()\n  set notCheckedIcon(icon: string) {\n    this._notCheckedIconVal.next(icon);\n  }\n\n  readonly icon: Observable<string>;\n\n  /** Event emitted when the group value changes. */\n  private _change: EventEmitter<AjfCheckboxGroupItemChange<T>> =\n      new EventEmitter<AjfCheckboxGroupItemChange<T>>();\n  @Output()\n  readonly change: Observable<AjfCheckboxGroupItemChange<T>> = this._change.asObservable();\n\n  constructor(checkboxGroup?: AjfCheckboxGroup<T>) {\n    this.icon = combineLatest(this._checkedState, this._checkedIconVal, this._notCheckedIconVal)\n                    .pipe(map(r => r[0] ? r[1] : r[2]));\n\n    if (checkboxGroup) {\n      this.checkboxGroup = checkboxGroup;\n      this.checkboxGroup.registerItem(this);\n    }\n  }\n\n  ngOnInit() {\n    if (this.id == null) {\n      this.id = `ajf-checkbox-group-item-${_uniqueIdCounter++}`;\n    }\n\n    if (this.checkboxGroup && this.checkboxGroup.value &&\n        this.checkboxGroup.value.indexOf(this._value) > -1) {\n      this.checked = true;\n    }\n  }\n\n  /** Checks the button toggle due to an interaction with the underlying native input. */\n  onInputChange(event: Event) {\n    event.stopPropagation();\n\n    this._toggle();\n  }\n\n  /** Toggle the state of the current button toggle. */\n  private _toggle(): void {\n    this.checked = !this.checked;\n\n    if (this.checkboxGroup != null) {\n      if (this.checked) {\n        this.checkboxGroup.addValue(this._value);\n      } else {\n        this.checkboxGroup.removeValue(this._value);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AjfCheckboxGroup} from './checkbox-group';\n\n\n@NgModule({\n  imports: [\n    FormsModule,\n  ],\n  declarations: [\n    AjfCheckboxGroup,\n  ],\n  exports: [\n    AjfCheckboxGroup,\n  ]\n})\nexport class AjfCheckboxGroupModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './checkbox-group';\nexport * from './checkbox-group-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}