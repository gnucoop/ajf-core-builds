{"version":3,"file":"forms.mjs","sources":["../../../../../../src/core/forms/as-field-instance.ts","../../../../../../src/core/forms/as-repeating-slide-instance.ts","../../../../../../src/core/forms/interface/fields/field-type.ts","../../../../../../src/core/forms/interface/nodes/node-type.ts","../../../../../../src/core/forms/utils/choices/init-choices-origin.ts","../../../../../../src/core/forms/utils/fields/is-field-with-choices.ts","../../../../../../src/core/forms/utils/nodes/is-field.ts","../../../../../../src/core/forms/utils/nodes-instances/is-field-instance.ts","../../../../../../src/core/forms/utils/fields-instances/is-field-with-choices-instance.ts","../../../../../../src/core/forms/utils/fields/is-table-field.ts","../../../../../../src/core/forms/utils/fields-instances/is-table-field-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/update-conditional-branches.ts","../../../../../../src/core/forms/utils/nodes-instances/update-visibility.ts","../../../../../../src/core/forms/utils/nodes-instances/node-instance-suffix.ts","../../../../../../src/core/forms/utils/nodes-instances/node-instance-complete-name.ts","../../../../../../src/core/forms/utils/fields-instances/update-formula.ts","../../../../../../src/core/forms/utils/fields-instances/update-next-slide-condition.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-conditions.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-max-digits.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-max-value.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-min-digits.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-min-value.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-not-empty.ts","../../../../../../src/core/forms/utils/validation/evaluate-validation-group.ts","../../../../../../src/core/forms/utils/fields-instances/update-validation.ts","../../../../../../src/core/forms/utils/warning/evaluate-warning.ts","../../../../../../src/core/forms/utils/warning/evaluate-warning-conditions.ts","../../../../../../src/core/forms/utils/warning/evaluate-warning-group.ts","../../../../../../src/core/forms/utils/fields-instances/update-warning.ts","../../../../../../src/core/forms/utils/fields-instances/update-field-instance-state.ts","../../../../../../src/core/forms/utils/fields-instances/update-filtered-choices.ts","../../../../../../src/core/forms/utils/fields-instances/update-trigger-conditions.ts","../../../../../../src/core/forms/utils/nodes/create-node.ts","../../../../../../src/core/forms/utils/fields/create-field.ts","../../../../../../src/core/forms/utils/fields/fields-map.ts","../../../../../../src/core/forms/utils/fields/is-custom-field-with-choices.ts","../../../../../../src/core/forms/utils/nodes/is-slides-node.ts","../../../../../../src/core/forms/utils/nodes/is-container-node.ts","../../../../../../src/core/forms/utils/nodes-instances/is-container-node-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/flatten-nodes-instances.ts","../../../../../../src/core/forms/utils/nodes-instances/is-slides-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/flatten-nodes-instances-tree.ts","../../../../../../src/core/forms/utils/nodes/is-node-group.ts","../../../../../../src/core/forms/utils/nodes-instances/is-node-group-instance.ts","../../../../../../src/core/forms/utils/nodes/is-slide-node.ts","../../../../../../src/core/forms/utils/nodes-instances/is-slide-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/create-node-instance.ts","../../../../../../src/core/forms/utils/fields-instances/create-field-instance.ts","../../../../../../src/core/forms/utils/fields-instances/create-field-with-choices-instance.ts","../../../../../../src/core/forms/utils/fields-instances/create-table-field-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/create-node-group-instance.ts","../../../../../../src/core/forms/utils/slides-instances/create-slide-instance.ts","../../../../../../src/core/forms/utils/slides-instances/create-repeating-slide-instance.ts","../../../../../../src/core/forms/utils/validation/create-validation-group.ts","../../../../../../src/core/forms/utils/warning/create-warning-group.ts","../../../../../../src/core/forms/utils/nodes/is-repeating-container-node.ts","../../../../../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes.ts","../../../../../../src/core/forms/utils/nodes-instances/get-ancestor-repeating-nodes-names.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-condition.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-conditions.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-formula.ts","../../../../../../src/core/forms/utils/validation/create-validation.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-validation.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-validations.ts","../../../../../../src/core/forms/utils/warning/create-warning.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-warning.ts","../../../../../../src/core/forms/utils/nodes-instances/get-instance-warnings.ts","../../../../../../src/core/forms/utils/nodes/is-repeating-slide.ts","../../../../../../src/core/forms/utils/nodes-instances/is-repeating-slide-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/node-to-node-instance.ts","../../../../../../src/core/forms/utils/nodes-instances/update-editability.ts","../../../../../../src/core/forms/utils/nodes/flatten-nodes.ts","../../../../../../src/core/forms/utils/nodes/ordered-nodes.ts","../../../../../../src/core/forms/utils/slides-instances/update-reps-num.ts","../../../../../../src/core/forms/utils/slides-instances/valid-slide.ts","../../../../../../src/core/forms/validation-service.ts","../../../../../../src/core/forms/form-renderer.ts","../../../../../../src/core/forms/base-field.ts","../../../../../../src/core/forms/bool-to-int.ts","../../../../../../src/core/forms/date-value.ts","../../../../../../src/core/forms/date-value-string.ts","../../../../../../src/core/forms/errors.ts","../../../../../../src/core/forms/expand-input-with-choices.ts","../../../../../../src/core/forms/field-host.ts","../../../../../../src/core/forms/field.ts","../../../../../../src/core/forms/field-utils.ts","../../../../../../src/core/forms/field-icon.ts","../../../../../../src/core/forms/field-is-valid.ts","../../../../../../src/core/forms/field-service.ts","../../../../../../src/core/forms/field-with-choices.ts","../../../../../../src/core/forms/warning-alert-service.ts","../../../../../../src/core/forms/file-field.ts","../../../../../../src/core/forms/file-field.html","../../../../../../src/core/forms/form.ts","../../../../../../src/core/forms/utils/forms/build-form-string-identifier.ts","../../../../../../src/core/forms/form-string-identifier.ts","../../../../../../src/core/forms/get-table-cell-control.ts","../../../../../../src/core/forms/image-field.ts","../../../../../../src/core/forms/image-field.html","../../../../../../src/core/forms/increment.ts","../../../../../../src/core/forms/is-cell-editable.ts","../../../../../../src/core/forms/is-readonly-input-field.ts","../../../../../../src/core/forms/is-repeating-slide.ts","../../../../../../src/core/forms/node-complete-name.ts","../../../../../../src/core/forms/range.ts","../../../../../../src/core/forms/input-field.ts","../../../../../../src/core/forms/read-only-field.ts","../../../../../../src/core/forms/read-only-field.html","../../../../../../src/core/forms/read-only-file-field.ts","../../../../../../src/core/forms/read-only-file-field.html","../../../../../../src/core/forms/read-only-image-field.ts","../../../../../../src/core/forms/read-only-image-field.html","../../../../../../src/core/forms/read-only-select-field.ts","../../../../../../src/core/forms/read-only-select-field.html","../../../../../../src/core/forms/table-row-class.ts","../../../../../../src/core/forms/read-only-table-field.ts","../../../../../../src/core/forms/read-only-table-field.html","../../../../../../src/core/forms/video-url-field.ts","../../../../../../src/core/forms/read-only-video-url-field.ts","../../../../../../src/core/forms/read-only-video-url-field.html","../../../../../../src/core/forms/table-visible-columns.ts","../../../../../../src/core/forms/valid-slide.ts","../../../../../../src/core/forms/forms-module.ts","../../../../../../src/core/forms/search-alert-threshold.ts","../../../../../../src/core/forms/utils/attachments/create-attachments-origin.ts","../../../../../../src/core/forms/serializers/attachments-origin-serializer.ts","../../../../../../src/core/forms/utils/choices/create-choices-origin.ts","../../../../../../src/core/forms/serializers/choices-origin-serializer.ts","../../../../../../src/core/forms/utils/fields/create-field-with-choices.ts","../../../../../../src/core/forms/utils/nodes/create-container-node.ts","../../../../../../src/core/forms/utils/nodes/create-repeating-node.ts","../../../../../../src/core/forms/utils/nodes/create-node-group.ts","../../../../../../src/core/forms/utils/slides/create-repeating-slide.ts","../../../../../../src/core/forms/utils/slides/create-slide.ts","../../../../../../src/core/forms/serializers/validation-group-serializer.ts","../../../../../../src/core/forms/serializers/warning-group-serializer.ts","../../../../../../src/core/forms/serializers/node-serializer.ts","../../../../../../src/core/forms/serializers/form-serializer.ts","../../../../../../src/core/forms/table-field.ts","../../../../../../src/core/forms/random-ajf-context-generator.ts","../../../../../../src/core/forms/form-to-pdf/form-to-pdf.ts","../../../../../../src/core/forms/utils/choices/create-choices-fixed-origin.ts","../../../../../../src/core/forms/utils/choices/create-choices-function-origin.ts","../../../../../../src/core/forms/utils/choices/create-choices-observable-array-origin.ts","../../../../../../src/core/forms/utils/choices/create-choices-observable-origin.ts","../../../../../../src/core/forms/utils/choices/create-choices-promise-origin.ts","../../../../../../src/core/forms/utils/choices/is-choices-origin.ts","../../../../../../src/core/forms/utils/choices/is-choices-fixed-origin.ts","../../../../../../src/core/forms/utils/fields/is-number-field.ts","../../../../../../src/core/forms/utils/forms/create-form.ts","../../../../../../src/core/forms/utils/validation/max-digits-validation.ts","../../../../../../src/core/forms/utils/validation/max-validation.ts","../../../../../../src/core/forms/utils/validation/min-digits-validation.ts","../../../../../../src/core/forms/utils/validation/min-validation.ts","../../../../../../src/core/forms/utils/validation/not-empty-validation.ts","../../../../../../src/core/forms/utils/warning/not-empty-warning.ts","../../../../../../src/core/forms/public-api.ts","../../../../../../src/core/forms/index.ts","../../../../../../src/core/forms/forms_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\n\n/**\n * It casts an AjfNodeInstance as AjfFieldInstance.\n */\n@Pipe({name: 'ajfAsFieldInstance'})\nexport class AjfAsFieldInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): AjfFieldInstance {\n    return instance as AjfFieldInstance;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\n\n/**\n * It casts an AjfSlideInstance as AjfRepeatingSlideInstance.\n */\n@Pipe({name: 'ajfAsRepeatingSlideInstance'})\nexport class AjfAsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfSlideInstance): AjfRepeatingSlideInstance {\n    return instance as unknown as AjfRepeatingSlideInstance;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * The available ajf field types.\n */\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  Geolocation,\n  Barcode,\n  File,\n  Image,\n  VideoUrl,\n  Range,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * An enum containing all the available NodeTypes\n */\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesObservableArrayOrigin} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\n/**\n * Called by form-rederer\n * take as param an AjfChoicesOrigin&lt;any&gt; and return an Promise&lt;void&gt; for handling async\n * event\n */\nexport function initChoicesOrigin(origin: AjfChoicesOrigin<any>): Promise<void> {\n  /** fixed don't use async evente the promise is resolved */\n  if (origin.type === 'fixed') {\n    return Promise.resolve();\n  }\n  /** apply function and than return resolve promise */\n  if (origin.type === 'function') {\n    const fo = origin as AjfChoicesFunctionOrigin<any>;\n    fo.choices = fo.generator();\n    return Promise.resolve();\n  }\n  /** modify origin.choices with result of resolved promise */\n  if (origin.type === 'promise') {\n    const po = origin as AjfChoicesPromiseOrigin<any>;\n    return po.generator.then(choices => (po.choices = choices)).then();\n  }\n  /** modify origin.choices with result of subscribed observable */\n  if (origin.type === 'observable') {\n    const obso = origin as AjfChoicesObservableOrigin<any>;\n    if (obso.generator != null) {\n      obso.choices = [];\n      return new Promise<void>(res => {\n        obso.generator.subscribe(\n          c => obso.choices.push(c),\n          () => {},\n          () => res(),\n        );\n      });\n    }\n  }\n  /** modify origin.choices with result of subscribed observable */\n  if (origin.type === 'observableArray') {\n    const aoo = origin as AjfChoicesObservableArrayOrigin<any>;\n    if (aoo.generator != null) {\n      aoo.choices = [];\n      return new Promise<void>(res => {\n        aoo.generator.subscribe(choices => {\n          aoo.choices = choices;\n          res();\n        });\n      });\n    }\n  }\n  return Promise.resolve();\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is a SingleChoice or MultipleChoice.\n */\nexport function isFieldWithChoices(field: AjfField): boolean {\n  return (\n    field.fieldType === AjfFieldType.SingleChoice || field.fieldType === AjfFieldType.MultipleChoice\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n/**\n * It is true if node is an AjfField.\n */\nexport function isField(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isField} from '../nodes/is-field';\n\n/**\n * It is true if the nodeInstance is relative to a AjfField.\n */\nexport function isFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isField(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\n/**\n * It is true if the nodeInstance is a fieldInstance and\n * if the node of instance is a field with choices.\n */\nexport function isFieldWithChoicesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return (\n    nodeInstance != null &&\n    isFieldInstance(nodeInstance) &&\n    isFieldWithChoices((nodeInstance as AjfFieldInstance).node)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is Table.\n */\nexport function isTableField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Table;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isTableField} from '../fields/is-table-field';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\n/**\n * It is true if the nodeInstance is a fieldInstance and\n * if the node of instance is a Table field.\n */\nexport function isTableFieldInstance(nodeInstance: AjfNodeInstance): boolean {\n  return (\n    nodeInstance != null &&\n    isFieldInstance(nodeInstance) &&\n    isTableField((nodeInstance as AjfFieldInstance).node)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\n/**\n * It updates instance.verifiedBranch with the idx of the last branch verified.\n * If instance.verifiedBranch value changes return true\n */\nexport function updateConditionalBranches(instance: AjfNodeInstance, context: AjfContext): boolean {\n  const conditionalBranches = instance.conditionalBranches;\n\n  if (conditionalBranches != null) {\n    const oldBranch = instance.verifiedBranch;\n    let idx = 0;\n    let found = false;\n    while (idx < conditionalBranches.length && !found) {\n      let verified: boolean = evaluateExpression(conditionalBranches[idx].condition, context);\n      if (verified) {\n        found = true;\n        if (idx !== instance.verifiedBranch) {\n          instance.verifiedBranch = idx;\n        }\n      }\n      idx++;\n    }\n\n    if (oldBranch !== instance.verifiedBranch) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\n/**\n * It updates instance.visible with the result of evaluating instance.visibility.condition.\n * If instance.visibility is null instance.visible is false and it returns false.\n * If instance.visible changes return true.\n */\nexport function updateVisibility(\n  instance: AjfNodeInstance,\n  context: AjfContext,\n  branchVisibility = true,\n): boolean {\n  if (instance.visibility == null) {\n    instance.visible = false;\n    return false;\n  }\n  const visibility: AjfCondition = instance.visibility;\n\n  const oldVisibility: boolean = instance.visible;\n  let newVisibility: boolean =\n    branchVisibility && evaluateExpression(visibility.condition, context);\n  if (newVisibility !== instance.visible) {\n    instance.visible = newVisibility;\n  }\n\n  return oldVisibility !== newVisibility;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\n// TODO: add details\n/**\n * It creates the node instance suffix.\n */\nexport function nodeInstanceSuffix(instance: AjfNodeInstance): string {\n  if (instance.prefix == null || instance.prefix.length == 0) {\n    return '';\n  }\n  return `__${instance.prefix.join('__')}`;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {nodeInstanceSuffix} from './node-instance-suffix';\n\n// TODO: add details\n/**\n * It creates the complete name of the instance.\n */\nexport function nodeInstanceCompleteName(instance: AjfNodeInstance): string {\n  return instance != null && instance.node != null\n    ? `${instance.node.name}${nodeInstanceSuffix(instance)}`\n    : '';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * update the relative instance value and the context\n * if !editable evaluate expression once one time and flag changed is false\n */\nexport function updateFormula(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n): {changed: boolean; value: any} {\n  const formula = instance.formula;\n  const editable = instance.node.editable;\n  if (formula != null && instance.visible && (!editable || (editable && instance.value == null))) {\n    let newValue: any = evaluateExpression(formula.formula, context);\n    const oldValue = instance.value;\n    if (newValue !== instance.value) {\n      instance.value = newValue;\n      context[nodeInstanceCompleteName(instance)] = instance.value;\n      context.$value = instance.value;\n    }\n    return {changed: newValue !== oldValue, value: newValue};\n  }\n  return {changed: false, value: instance.value};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\n\n/**\n * If nextSlideCondition of instance is defined return the evaluateExpression of nextSlideCondition\n * else return false.\n */\nexport function updateNextSlideCondition(instance: AjfFieldInstance, context: AjfContext): boolean {\n  if (instance.nextSlideCondition != null) {\n    return evaluateExpression(instance.nextSlideCondition.condition, context);\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\n/**\n * It evaluates validation and returns an AjfValidationResult.\n */\nexport function evaluateValidation(\n  validation: AjfValidation,\n  context?: AjfContext,\n  forceFormula?: string,\n): AjfValidationResult {\n  return {\n    result: evaluateExpression(validation.condition, context, forceFormula),\n    error: validation.errorMessage,\n    clientValidation: validation.clientValidation,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * It applies evaluateValidation to every validation condition and return it.\n */\nexport function evaluateValidationConditions(\n  validation: AjfValidationGroup,\n  context?: AjfContext,\n): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  (validation.conditions || []).forEach(cond => {\n    res.push(evaluateValidation(cond, context));\n  });\n  return res;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the maximum digit's length.\n * maxDigits is the associated AjfCondition\n */\nexport function evaluateValidationMaxDigits(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.maxDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length <= ${validation.maxDigits}`, ctx),\n      error: `Digits count must be <= ${validation.maxDigits}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.maxDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the maximum value of the digit\n * maxValue is the associated AjfCondition\n */\nexport function evaluateValidationMaxValue(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.maxValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.maxValue}`, ctx),\n      error: `Value must be <= ${validation.maxValue}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.maxValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the minimum digit's length.\n * minDigits is the associated AjfCondition\n */\nexport function evaluateValidationMinDigits(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.minDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length >= ${validation.minDigits}`, ctx),\n      error: `Digits count must be >= ${validation.minDigits}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.minDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the minimum value of the digit\n * minValue is the associated AjfCondition\n */\nexport function evaluateValidationMinValue(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.minValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.minValue}`, ctx),\n      error: `Value must be >= ${validation.minValue}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.minValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the value is not null\n * notEmpty is the associated AjfCondition\n */\nexport function evaluateValidationNotEmpty(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.notEmpty == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.notEmpty === 'boolean') {\n    return {\n      result: evaluateExpression(`notEmpty($value) === ${validation.notEmpty}`, ctx),\n      error: 'Value must not be empty',\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.notEmpty, ctx);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nimport {evaluateValidationConditions} from './evaluate-validation-conditions';\nimport {evaluateValidationMaxDigits} from './evaluate-validation-max-digits';\nimport {evaluateValidationMaxValue} from './evaluate-validation-max-value';\nimport {evaluateValidationMinDigits} from './evaluate-validation-min-digits';\nimport {evaluateValidationMinValue} from './evaluate-validation-min-value';\nimport {evaluateValidationNotEmpty} from './evaluate-validation-not-empty';\n\n/**\n * It evaluate AjfValidationGroup and returns an AjfValidationResult[].\n */\nexport function evaluateValidationGroup(\n  validation: AjfValidationGroup,\n  value: any,\n  context?: AjfContext,\n): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  let ctx = deepCopy(context);\n  ctx['$value'] = value;\n  res = evaluateValidationConditions(validation, ctx);\n  if (validation.maxValue) {\n    const maxValue = evaluateValidationMaxValue(validation, value);\n    if (maxValue != null) {\n      res.push(maxValue);\n    }\n  }\n  if (validation.minValue) {\n    const minValue = evaluateValidationMinValue(validation, value);\n    if (minValue != null) {\n      res.push(minValue);\n    }\n  }\n  if (validation.notEmpty) {\n    const notEmpty = evaluateValidationNotEmpty(validation, value);\n    if (notEmpty != null) {\n      res.push(notEmpty);\n    }\n  }\n  if (validation.maxDigits) {\n    const maxDigits = evaluateValidationMaxDigits(validation, value);\n    if (maxDigits != null) {\n      res.push(maxDigits);\n    }\n  }\n  if (validation.minDigits) {\n    const minDigits = evaluateValidationMinDigits(validation, value);\n    if (minDigits != null) {\n      res.push(minDigits);\n    }\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateValidationGroup} from '../validation/evaluate-validation-group';\n/**\n * it updates the instance.valid attribute.\n * If validation is not defined the instance.valid is true.\n * If valdiation.forceValue is true update context.\n * Updates instance.valid with the re-evaluation of validationResults in AND.\n */\nexport function updateValidation(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n  supplementaryInformations?: any,\n): void {\n  const validation = instance.validation;\n  if (validation == null) {\n    instance.valid = true;\n    return;\n  }\n  // TODO what is this??\n  if (supplementaryInformations) {\n    Object.keys(supplementaryInformations).forEach(key => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && validation && validation.forceValue) {\n    instance.value = evaluateExpression(validation.forceValue.condition, context);\n    context[completeName] = instance.value;\n    context.$value = instance.value;\n  }\n\n  instance.validationResults = evaluateValidationGroup(validation, context[completeName], context);\n  instance.valid = instance.validationResults.reduce(\n    (prev: boolean, x: AjfValidationResult) => prev && x.result,\n    true,\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\n\nexport function evaluateWarning(\n  warning: AjfWarning,\n  context?: AjfContext,\n  forceFormula?: string,\n): AjfWarningResult {\n  return {\n    result: evaluateExpression(warning.condition, context, forceFormula),\n    warning: warning.warningMessage,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarning} from './evaluate-warning';\n\nexport function evaluateWarningConditions(\n  warning: AjfWarningGroup,\n  context?: AjfContext,\n): AjfWarningResult[] {\n  return warning.conditions.map(cond => evaluateWarning(cond, context));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarningConditions} from './evaluate-warning-conditions';\n\nexport function evaluateWarningGroup(\n  warning: AjfWarningGroup,\n  context?: AjfContext,\n): AjfWarningResult[] {\n  return evaluateWarningConditions(warning, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateWarningGroup} from '../warning/evaluate-warning-group';\n\n/**\n * It Updates instance warining results.\n * If instance.warning in null return.\n * If nodeInstanceCompleteName is in context and warning is defined re-evaluate warning group\n */\nexport function updateWarning(instance: AjfFieldInstance, context: AjfContext): void {\n  const warning = instance.warning;\n  if (warning == null) {\n    return;\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && warning) {\n    instance.warningResults = evaluateWarningGroup(warning, context);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfFormulaFieldInstance} from '../../interface/fields-instances/formula-field-instance';\nimport {updateConditionalBranches} from '../nodes-instances/update-conditional-branches';\nimport {updateVisibility} from '../nodes-instances/update-visibility';\nimport {updateFormula} from './update-formula';\nimport {updateNextSlideCondition} from './update-next-slide-condition';\nimport {updateValidation} from './update-validation';\nimport {updateWarning} from './update-warning';\n\n/**\n * It grab all the field instance update functions.\n */\nexport function updateFieldInstanceState(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n  branchVisibility = true,\n): void {\n  updateVisibility(instance, context, branchVisibility);\n  updateConditionalBranches(instance, context);\n  updateFormula(instance as AjfFormulaFieldInstance, context);\n  updateValidation(instance, context);\n  updateWarning(instance, context);\n  updateNextSlideCondition(instance, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\n\nexport function updateFilteredChoices(\n  instance: AjfFieldWithChoicesInstance<any>,\n  context: AjfContext,\n): void {\n  if (instance.choicesFilter != null) {\n    instance.filteredChoices = instance.node.choicesOrigin.choices.filter(c => {\n      context.$choice = c;\n      context.$choiceValue = c.value;\n      return evaluateExpression(instance.choicesFilter!.formula, context);\n    });\n  } else {\n    instance.filteredChoices = instance.node.choicesOrigin.choices;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * It is true if at least one of the triggherate coditions is true\n */\nexport function updateTriggerConditions(\n  instance: AjfFieldWithChoicesInstance<any>,\n  context: AjfContext,\n): boolean {\n  if (instance.triggerConditions == null) {\n    return false;\n  }\n  const completeName = nodeInstanceCompleteName(instance);\n  if (instance.firstTriggerConditionDone[completeName]) {\n    return false;\n  }\n  let found = false;\n  const conditionsNum = instance.triggerConditions.length;\n  for (let i = 0; i < conditionsNum; i++) {\n    if (evaluateExpression(instance.triggerConditions[i].condition, context)) {\n      found = true;\n      break;\n    }\n  }\n  instance.firstTriggerConditionDone[completeName] = found;\n  return found;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport type AjfNodeCreate = Pick<AjfNode, 'nodeType' | 'id' | 'parent' | 'name'> & Partial<AjfNode>;\n/**\n * It creates an AjfNode by schema.\n * If conditionalBranches is not defined assign {condition: 'true'}.\n * If parentNode is not defined assign 0.\n * If label is not defined assign ''.\n * If visibility is not defined assign {condition: 'true'}.\n */\nexport function createNode(node: AjfNodeCreate): AjfNode {\n  const conditionalBranches =\n    node.conditionalBranches != null && node.conditionalBranches.length > 0\n      ? node.conditionalBranches\n      : [alwaysCondition()];\n  return {\n    ...node,\n    parentNode: node.parentNode != null ? node.parentNode : 0,\n    label: node.label || '',\n    visibility: node.visibility || alwaysCondition(),\n    conditionalBranches,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeCreate, createNode} from '../nodes/create-node';\n\nexport type AjfFieldCreate = Omit<AjfNodeCreate, 'nodeType'> &\n  Pick<AjfField, 'fieldType'> &\n  Partial<AjfField>;\n/**\n * It creates an AjfField.\n * If size is not defined apply 'normal'.\n * If defaultValue is not defined apply null.\n * If editable is not defined return true if field type is'nt formula or table\n */\nexport function createField(field: AjfFieldCreate): AjfField {\n  const node = createNode({...field, nodeType: AjfNodeType.AjfField});\n  const editable =\n    field.editable != null\n      ? field.editable\n      : field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;\n  return {\n    ...node,\n    ...field,\n    nodeType: AjfNodeType.AjfField,\n    editable,\n    defaultValue: field.defaultValue != null ? field.defaultValue : null,\n    size: field.size || 'normal',\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap} from '../../interface/fields/field-components-map';\n/**\n * The componentsMap is a dictionary key value\n * Represents the association between an AjfFieldType and the\n * components used to render it.\n */\nexport const componentsMap: AjfFieldComponentsMap = {};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {componentsMap} from './fields-map';\n/**\n * It is true if\n *  the field is a custom field (field.fieldType &gt; 100) and\n *  the field is not already present in the component map (componentsMap[field.fieldType] != null)\n * and the field is a fieldWithChoice (componentsMap[field.fieldType].isFieldWithChoice === true)\n */\nexport function isCustomFieldWithChoices(field: AjfField): boolean {\n  return (\n    field.fieldType > 100 &&\n    componentsMap[field.fieldType] != null &&\n    componentsMap[field.fieldType].isFieldWithChoice === true\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\n/**\n * It is true if node is AjfRepeatingSlide or AjfSlide.\n */\nexport function isSlidesNode(node: AjfNode): boolean {\n  return (\n    node != null &&\n    (node.nodeType === AjfNodeType.AjfRepeatingSlide || node.nodeType === AjfNodeType.AjfSlide)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {isSlidesNode} from './is-slides-node';\n/**\n * It is true if node is AjfNodeGroup or slides nodes.\n */\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (node.nodeType === AjfNodeType.AjfNodeGroup || isSlidesNode(node));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isContainerNode} from '../nodes/is-container-node';\n/**\n * It is true if nodeInstance is realtive to an AjfNodeGroup or slides nodes.\n */\nexport function isContainerNodeInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isContainerNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nimport {isContainerNodeInstance} from './is-container-node-instance';\nimport {isFieldInstance} from './is-field-instance';\n\n/**\n * It creates a one dimensional array of AjfNodeInstance.\n * If the node is a containerNode(has the nodes attribute)\n * recursively  concat their nodes.\n * If includeGroups is true the result also contains the containerNodeInstance.\n */\nexport function flattenNodesInstances(\n  nodes: AjfNodeInstance[],\n  includeGroups = false,\n): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isFieldInstance(nodeInstance)) {\n      flatNodes.push(nodeInstance);\n    }\n    if (isContainerNodeInstance(nodeInstance)) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(\n        flattenNodesInstances((nodeInstance as AjfContainerNodeInstance).nodes, includeGroups),\n      );\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesNode} from '../nodes/is-slides-node';\n\n/**\n * It is true if nodeInstance is relative to AjfRepeatingSlide node or AjfSlide node.\n */\nexport function isSlidesInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {flattenNodesInstances} from './flatten-nodes-instances';\nimport {isSlidesInstance} from './is-slides-instance';\n\n/**\n * It creates a one dimensional array of AjfSlideInstance.\n * If the node is a slides node recursively  concat their nodes.\n */\nexport function flattenNodesInstancesTree(nodes: AjfNodeInstance[]): AjfSlideInstance[] {\n  let flatTree: AjfSlideInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isSlidesInstance(nodeInstance)) {\n      const ni = nodeInstance as AjfSlideInstance;\n      flatTree.push(ni);\n      ni.flatNodes = flattenNodesInstances(ni.nodes);\n    }\n  });\n  return flatTree;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n/**\n * It is true if node is an AjfNodeGroup.\n */\nexport function isNodeGroup(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isNodeGroup} from '../nodes/is-node-group';\n\n/**\n * It is true if nodeInstance is relative to a AjfNodeGroup.\n */\nexport function isNodeGroupInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isNodeGroup(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\n/**\n * It is true if node is AjfSlide.\n */\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlideNode} from '../nodes/is-slide-node';\n\n/**\n * It is true if nodeInstance is relative to an AjfSlide node.\n */\nexport function isSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return nodeInstance != null && nodeInstance.node != null && isSlideNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nexport type AjfNodeInstanceCreate = Pick<AjfNodeInstance, 'node'> & Partial<AjfNodeInstance>;\n\n/**\n * It creates an AjfNodeInstance.\n * If instance.prefix is defined copy it else assign empty array.\n * If instance.visible is not defined assign true.\n * Assign empty array to conditionalBranches.\n * Assign new eventEmitter to updatedEvt.\n */\nexport function createNodeInstance(instance: AjfNodeInstanceCreate): AjfNodeInstance {\n  return {\n    node: instance.node,\n    prefix: instance.prefix ? [...instance.prefix] : [],\n    visible: instance.visible != null ? instance.visible : true,\n    conditionalBranches: [],\n    updatedEvt: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport type AjfFieldInstanceCreate = AjfNodeInstanceCreate & Partial<AjfFieldInstance>;\n\n/**\n * Create a field instance and init the value of the field by cascade conditions.\n *\n * First check if the value is in the context by node name.\n * Second check if the value is in the context by complete name.\n * Third check if the field has a default value.\n * Else value is null.\n *\n * If instance validationResultsis is not defined assign empty array.\n * If instance warningResults is not defined assign empty array.\n * Init valid with false.\n */\nexport function createFieldInstance(\n  instance: AjfFieldInstanceCreate,\n  context: AjfContext,\n): AjfFieldInstance {\n  const nodeInstance = createNodeInstance(instance);\n  let value: any = null;\n  if (nodeInstance.node != null && context != null) {\n    const completeName = nodeInstanceCompleteName(nodeInstance);\n    if (context[nodeInstance.node.name] != null) {\n      value = context[nodeInstance.node.name];\n    } else if (context[completeName] != null) {\n      value = context[completeName];\n    } else if (instance.node.defaultValue != null) {\n      context[completeName] = instance.node.defaultValue;\n      value = context[completeName];\n    }\n  }\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    value,\n    valid: false,\n    validationResults: instance.validationResults || [],\n    warningResults: instance.warningResults || [],\n    warningTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfFieldWithChoicesInstanceCreate<T> = AjfFieldInstanceCreate &\n  Partial<AjfFieldWithChoicesInstance<T>>;\n/**\n * Create a field with choices instance.\n * Extends simple field instance with\n * filteredChoices,firstTriggerConditionDone and selectionTrigger\n */\nexport function createFieldWithChoicesInstance<T>(\n  instance: AjfFieldWithChoicesInstanceCreate<T>,\n  context: AjfContext,\n): AjfFieldWithChoicesInstance<T> {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    filteredChoices: [...instance.node.choices],\n    firstTriggerConditionDone: {},\n    selectionTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\nimport {AjfTableCell, AjfTableField} from '../../interface/fields/table-field';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfTableFieldInstanceCreate = AjfFieldInstanceCreate & Partial<AjfTableFieldInstance>;\n/**\n * to mantain retrocompatibility with old string type convert string to AjfTableCell\n * check  node.rows: (string|AjfTableCell)[][];\n * if elem of map is string convert in to AjfTableCell object\n */\nfunction normalizeRows(node: AjfTableField): void {\n  node.rows.forEach((row, rowIdx) => {\n    row.forEach((elem, elemIdx) => {\n      if (typeof elem === 'string') {\n        node.rows[rowIdx][elemIdx] = {formula: elem, editable: node.editable} as AjfTableCell;\n      }\n    });\n  });\n}\n\n/**\n * Create an Table Fieldinstance.\n * Extends simple field instance with context,hideEmptyRows and controls.\n * If hideEmptyRows is not defined in instance set with false.\n * Assign empty array to controls\n */\nexport function createTableFieldInstance(\n  instance: AjfTableFieldInstanceCreate,\n  context: AjfContext,\n): AjfTableFieldInstance {\n  normalizeRows(instance.node as AjfTableField);\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    context,\n    hideEmptyRows: instance.hideEmptyRows || false,\n    controls: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from './create-node-instance';\n\nexport type AjfNodeGroupInstanceCreate = AjfNodeInstanceCreate & Partial<AjfNodeGroupInstance>;\n/**\n * It creates an AjfNodeGroupInstance.\n * It extends nodeInstance with (formulaReps,reps,nodes and flatNodes).\n * Init reps with 0.\n * Init nodes and flatNodes with empty array\n */\nexport function createNodeGroupInstance(\n  instance: AjfNodeGroupInstanceCreate,\n): AjfNodeGroupInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {neverCondition} from '@ajf/core/models';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {AjfBaseSlideInstanceCreate} from './base';\n\nexport type AjfSlideInstanceCreate = AjfBaseSlideInstanceCreate & Partial<AjfSlideInstance>;\n\n/**\n * It creates AjfSlideInstance.\n * Init nodes,slideNodes and flatNodes with empty array.\n * Init valid with false.\n * Init position with 0.\n */\nexport function createSlideInstance(instance: AjfSlideInstanceCreate): AjfSlideInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    nodes: [],\n    slideNodes: [],\n    flatNodes: [],\n    valid: false,\n    position: 0,\n    editable: instance.editable || true,\n    readonly: instance.node.readonly || neverCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstanceCreate, createSlideInstance} from './create-slide-instance';\n\nexport type AjfRepeatingSlideInstanceCreate = Omit<AjfSlideInstanceCreate, 'node'> &\n  Pick<AjfRepeatingSlideInstance, 'node'> &\n  Partial<AjfRepeatingSlideInstance>;\n\n/**\n * It creates AjfRepeatingSlideInstance.\n * Init slideNodes, nodes and flatNodes with empty array,\n * Init reps as with 0.\n */\nexport function createRepeatingSlideInstance(\n  instance: AjfRepeatingSlideInstanceCreate,\n): AjfRepeatingSlideInstance {\n  const {node, ...slideInstanceCreate} = instance;\n  const {nodeType, ...slideNode} = node;\n  const slideInstance = createSlideInstance({\n    ...slideInstanceCreate,\n    node: {nodeType: AjfNodeType.AjfSlide, ...slideNode},\n  });\n  return {\n    ...slideInstance,\n    node: instance.node,\n    slideNodes: [],\n    formulaReps: instance.formulaReps,\n    disableRemoval: instance.disableRemoval,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\n\n/**\n *  Create a AjfValidationGroup, apply conditions defaults when it missing\n */\nexport function createValidationGroup(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\n\n/**\n *  Create an AjfWarningGroup, apply conditions defaults when it missing\n */\nexport function createWarningGroup(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\n/**\n * It is true if node is AjfNodeGroup or AjfRepeatingSlide.\n */\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return (\n    node != null &&\n    (node.nodeType === AjfNodeType.AjfNodeGroup || node.nodeType === AjfNodeType.AjfRepeatingSlide)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\n/**\n * It returns all ancestor repeatingContainerNodes of the node.\n */\nexport function getAncestorRepeatingNodes(\n  allNodes: (AjfNode | AjfNodeInstance)[],\n  node: AjfNode,\n): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number | null = node.parent;\n  while (curParent != null) {\n    const curNode = allNodes\n      .map((n: AjfNode | AjfNodeInstance) => (n as AjfNodeInstance).node || (n as AjfNode))\n      .find(n => n.id == curParent);\n    if (curNode) {\n      if (isRepeatingContainerNode(curNode)) {\n        nodeGroups.push(curNode);\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return nodeGroups;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {isField} from '../nodes/is-field';\n\nimport {getAncestorRepeatingNodes} from './get-ancestor-repeating-nodes';\n\n/**\n * Returns all childs node.name of the node's ancestor (includes itself).\n * It is a key-value dictionary, key is the name of the node and\n * value is the position inside ancestorRepeatingNodes.\n */\nexport function getAncestorRepeatingNodesNames(\n  allNodes: (AjfNode | AjfNodeInstance)[],\n  node: AjfNode,\n): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  const nodeGroups = getAncestorRepeatingNodes(allNodes, node) as AjfNodeGroup[];\n  nodeGroups.forEach((n, idx) =>\n    (n.nodes || []).forEach(sn => {\n      if (isField(sn)) {\n        names[sn.name] = idx;\n      }\n    }),\n  );\n  return names;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceCondition(\n  condition: AjfCondition,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeExpression(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return {condition: newCondition};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {getInstanceCondition} from './get-instance-condition';\n\nexport function getInstanceConditions(\n  conditions: AjfCondition[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map(condition => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceFormula(\n  formula: AjfFormula,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return {formula: newFormula};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\n/**\n *  Create a AjfValidation, apply clientValidation and errorMessage defaults when it missing\n */\nexport function createValidation(\n  validation: Pick<AjfValidation, 'condition'> & Partial<AjfValidation>,\n): AjfValidation {\n  return {\n    ...validation,\n    clientValidation: validation.clientValidation || false,\n    errorMessage: validation.errorMessage || 'Undefined Error',\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from '../validation/create-validation';\n\nexport function getInstanceValidation(\n  validation: AjfValidation,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeExpression(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return createValidation({condition: newValidation});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {getInstanceValidation} from './get-instance-validation';\n\nexport function getInstanceValidations(\n  validations: AjfValidation[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfValidation[] {\n  let changed = false;\n  const newValidations = (validations || []).map(validation => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\n\nexport function createWarning(\n  warning: Pick<AjfWarning, 'condition'> & Partial<AjfWarning>,\n): AjfWarning {\n  return {...warning, warningMessage: warning.warningMessage || 'Undefined Warning'};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from '../warning/create-warning';\n\nexport function getInstanceWarning(\n  warning: AjfWarning,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeExpression(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return createWarning({condition: newWarning});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {getInstanceWarning} from './get-instance-warning';\n\nexport function getInstanceWarnings(\n  warnings: AjfWarning[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map(warning => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n\n/**\n * It is true if node is AjfRepeatingSlide.\n */\nexport function isRepeatingSlide(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isSlidesInstance} from '../nodes-instances/is-slides-instance';\nimport {isRepeatingSlide} from '../nodes/is-repeating-slide';\n\n/**\n * It is true if nodeInstance is a slide instance\n * and the relative node is AjfRepeatingSlide.\n */\nexport function isRepeatingSlideInstance(nodeInstance: AjfNodeInstance): boolean {\n  return (\n    nodeInstance != null &&\n    nodeInstance.node != null &&\n    isSlidesInstance(nodeInstance) &&\n    isRepeatingSlide(nodeInstance.node)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext,\n  alwaysCondition,\n  createCondition,\n  createFormula,\n  normalizeExpression,\n} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfTableField} from '../../interface/fields/table-field';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfRepeatingContainerNodeInstance} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {createFieldInstance} from '../fields-instances/create-field-instance';\nimport {createFieldWithChoicesInstance} from '../fields-instances/create-field-with-choices-instance';\nimport {createTableFieldInstance} from '../fields-instances/create-table-field-instance';\nimport {isFieldWithChoicesInstance} from '../fields-instances/is-field-with-choices-instance';\nimport {componentsMap} from '../fields/fields-map';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {createNodeGroupInstance} from '../nodes-instances/create-node-group-instance';\nimport {createRepeatingSlideInstance} from '../slides-instances/create-repeating-slide-instance';\nimport {createSlideInstance} from '../slides-instances/create-slide-instance';\nimport {createValidationGroup} from '../validation/create-validation-group';\nimport {createWarningGroup} from '../warning/create-warning-group';\n\nimport {getAncestorRepeatingNodesNames} from './get-ancestor-repeating-nodes-names';\nimport {getInstanceCondition} from './get-instance-condition';\nimport {getInstanceConditions} from './get-instance-conditions';\nimport {getInstanceFormula} from './get-instance-formula';\nimport {getInstanceValidations} from './get-instance-validations';\nimport {getInstanceWarnings} from './get-instance-warnings';\nimport {isFieldInstance} from './is-field-instance';\nimport {isNodeGroupInstance} from './is-node-group-instance';\nimport {isRepeatingSlideInstance} from './is-repeating-slide-instance';\n/**\n * It creates a nodeInstance relative to a node.\n * To create the instance it calls relative create builder by nodeType.\n * If the prefix is ​​defined all formulas and conditions are calculated based on it.\n */\nexport function nodeToNodeInstance(\n  allNodes: AjfNode[] | AjfNodeInstance[],\n  node: AjfNode,\n  prefix: number[],\n  context: AjfContext,\n): AjfNodeInstance | null {\n  let instance: AjfNodeInstance | null = null;\n  const nodeType = node.nodeType;\n  switch (nodeType) {\n    case AjfNodeType.AjfField:\n      const field = node as AjfField;\n      if (field.fieldType > 100) {\n        if (\n          componentsMap[field.fieldType] != null &&\n          componentsMap[field.fieldType].createInstance != null\n        ) {\n          instance = componentsMap[field.fieldType].createInstance!(\n            {node: node as AjfField, prefix},\n            context,\n          );\n        } else {\n          instance = createFieldInstance({node: node as AjfField, prefix}, context);\n        }\n      } else {\n        switch (field.fieldType) {\n          case AjfFieldType.SingleChoice:\n          case AjfFieldType.MultipleChoice:\n            instance = createFieldWithChoicesInstance(\n              {node: node as AjfFieldWithChoices<any>, prefix},\n              context,\n            );\n            break;\n          case AjfFieldType.Table:\n            instance = createTableFieldInstance({node: node as AjfTableField, prefix}, context);\n            break;\n          default:\n            instance = createFieldInstance({node: node as AjfField, prefix}, context);\n            break;\n        }\n      }\n      break;\n    case AjfNodeType.AjfNodeGroup:\n      instance = createNodeGroupInstance({node: node as AjfNodeGroup, prefix});\n      break;\n    case AjfNodeType.AjfRepeatingSlide:\n      instance = createRepeatingSlideInstance({node: node as AjfRepeatingSlide, prefix});\n      break;\n    case AjfNodeType.AjfSlide:\n      instance = createSlideInstance({node: node as AjfSlide, prefix});\n      break;\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeExpression(oldVisibility, ancestorsNames, prefix);\n        instance.visibility =\n          newVisibility !== oldVisibility\n            ? createCondition({condition: newVisibility})\n            : node.visibility;\n      }\n\n      const conditionalBranches =\n        instance.node.conditionalBranches != null && instance.node.conditionalBranches.length > 0\n          ? instance.node.conditionalBranches\n          : [alwaysCondition()];\n      instance.conditionalBranches = getInstanceConditions(\n        conditionalBranches,\n        ancestorsNames,\n        prefix,\n      );\n\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        const ngInstance = instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance;\n        const formulaReps = ngInstance.node.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n          ngInstance.formulaReps =\n            newFormula !== oldFormula ? createFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n        const fNode = fInstance.node;\n\n        if (fNode.formula) {\n          fInstance.formula = getInstanceFormula(fNode.formula, ancestorsNames, prefix);\n        }\n\n        if (fNode.validation != null) {\n          const newConditions = getInstanceValidations(\n            fNode.validation.conditions,\n            ancestorsNames,\n            prefix,\n          );\n          if (newConditions !== fNode.validation.conditions) {\n            fInstance.validation = createValidationGroup(fNode.validation);\n            fInstance.validation.conditions = newConditions;\n          } else {\n            fInstance.validation = fNode.validation;\n          }\n        }\n\n        if (fNode.warning != null) {\n          const newWarnings = getInstanceWarnings(fNode.warning.conditions, ancestorsNames, prefix);\n          if (newWarnings !== fNode.warning.conditions) {\n            fInstance.warning = createWarningGroup(fNode.warning);\n            fInstance.warning.conditions = newWarnings;\n          } else {\n            fInstance.warning = fNode.warning;\n          }\n        }\n\n        if (fNode.nextSlideCondition != null) {\n          fInstance.nextSlideCondition = getInstanceCondition(\n            fNode.nextSlideCondition,\n            ancestorsNames,\n            prefix,\n          );\n        }\n\n        if (isFieldWithChoices(fNode)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          const fwcNode = fwcInstance.node;\n          if (fwcNode.choicesFilter != null) {\n            fwcInstance.choicesFilter = getInstanceFormula(\n              fwcNode.choicesFilter,\n              ancestorsNames,\n              prefix,\n            );\n          }\n          if (fwcNode.triggerConditions != null) {\n            fwcInstance.triggerConditions = getInstanceConditions(\n              fwcNode.triggerConditions,\n              ancestorsNames,\n              prefix,\n            );\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      const conditionalBranches =\n        instance.node.conditionalBranches != null && instance.node.conditionalBranches.length > 0\n          ? instance.node.conditionalBranches\n          : [alwaysCondition()];\n      instance.conditionalBranches = conditionalBranches;\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const rgInstance = instance as AjfRepeatingContainerNodeInstance;\n        rgInstance.formulaReps = rgInstance.node.formulaReps;\n      } else if (isFieldInstance(instance)) {\n        const fInstance = instance as AjfFieldInstance;\n        fInstance.validation = fInstance.node.validation;\n        fInstance.warning = fInstance.node.warning;\n        fInstance.nextSlideCondition = fInstance.node.nextSlideCondition;\n        if (isFieldWithChoicesInstance(instance)) {\n          const fwcInstance = instance as AjfFieldWithChoicesInstance<any>;\n          fwcInstance.choicesFilter = fwcInstance.node.choicesFilter;\n          fwcInstance.triggerConditions = fwcInstance.node.triggerConditions;\n        }\n        fInstance.formula = fInstance.node.formula;\n      }\n    }\n  }\n  return instance;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\n\nexport function updateEditability(instance: AjfSlideInstance, context: AjfContext): boolean {\n  if (instance.readonly == null) {\n    instance.editable = true;\n    return true;\n  }\n  const readOnly: AjfCondition = instance.readonly;\n\n  const oldEditability: boolean = instance.editable;\n  let newEditability: boolean = !evaluateExpression(readOnly.condition, context);\n  if (newEditability !== instance.editable) {\n    instance.editable = newEditability;\n  }\n\n  return oldEditability !== newEditability;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from './is-container-node';\n/**\n * It creates an one dimensional array of AjfNode.\n * If the node is a containerNode(has the nodes attribute)\n * recursively  concat their nodes.\n */\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((node as AjfContainerNode).nodes));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\n\n/**\n * It is return a new orderered nodes.\n * The newNodes are ordered recursively by parentNode.\n * The sorting begins by parent\n */\nexport function orderedNodes(nodes: AjfNode[], parent: number | null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes\n    .filter((n: AjfNode) =>\n      parent != null ? n.parent == parent : n.parent == null || n.parent === 0,\n    )\n    .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n    .forEach((n: AjfNode) => {\n      newNodes.push(n);\n      newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n    });\n  return newNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfRepeatingNodeInstance} from '../../interface/nodes-instances/repeating-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * It upodates AjfRepeatingNodeInstance reps and it returns oldReps.\n */\nexport function updateRepsNum(instance: AjfRepeatingNodeInstance, context?: AjfContext): number {\n  const oldReps: number = instance.reps || 0;\n  context = context || {};\n  if (instance.node.formulaReps == null) {\n    const ctxReps = context[nodeInstanceCompleteName(instance)];\n    if (ctxReps != null) {\n      instance.reps = ctxReps;\n    } else if (oldReps == 0) {\n      instance.reps = 1;\n    }\n  } else {\n    let newReps = evaluateExpression(instance.node.formulaReps.formula, context);\n    if (newReps !== oldReps) {\n      instance.reps = newReps;\n    }\n  }\n  instance.canAdd = instance.node.maxReps === 0 || instance.reps < instance.node.maxReps;\n  instance.canRemove = instance.node.minReps === 0 || instance.reps > instance.node.minReps;\n  return oldReps;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseSlideInstance} from '../../interface/slides-instances/base-slide-instance';\n\n/**\n * It checks if the idx slide of\n *\n * @export\n * @param slide\n * @param idx\n * @return boolean\n */\nexport function validSlide(slide: AjfBaseSlideInstance, idx: number): boolean {\n  if (idx >= slide.slideNodes.length) {\n    return true;\n  }\n  return slide.slideNodes[idx]\n    .map(n => {\n      if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    })\n    .reduce((v1, v2) => v1 && v2, true);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'mm/dd/yyyy';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n    `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, threshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(threshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"mm\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the threshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var threshold = (res/counter)*coefficient || 0;\n          return threshold;\n        }\n      }`,\n    `var alert = function(source, property, threshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > threshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numbro(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'mm-dd-yyyy';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'mm';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`,\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfExpressionUtils.utils[name] === undefined) {\n      AjfExpressionUtils.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => (typeof f === 'string' ? f : f.toString()))\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfExpressionUtils.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, getCodeIdentifiers} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  of as obsOf,\n  Subject,\n  Subscriber,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  map,\n  pairwise,\n  publishReplay,\n  refCount,\n  scan,\n  share,\n  startWith,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFormulaFieldInstance} from './interface/fields-instances/formula-field-instance';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfEmptyField} from './interface/fields/empty-field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfTableCell} from './interface/fields/table-field';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingContainerNodeInstance} from './interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfNodeGroup} from './interface/nodes/node-group';\nimport {AjfNodeType} from './interface/nodes/node-type';\nimport {AjfNodesInstancesOperation} from './interface/operations/nodes-instances-operation';\nimport {AjfRendererUpdateMapOperation} from './interface/operations/renderer-update-map-operation';\nimport {AjfRendererUpdateMap} from './interface/renderer-maps/update-map';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {initChoicesOrigin} from './utils/choices/init-choices-origin';\nimport {isFieldWithChoicesInstance} from './utils/fields-instances/is-field-with-choices-instance';\nimport {isTableFieldInstance} from './utils/fields-instances/is-table-field-instance';\nimport {updateFieldInstanceState} from './utils/fields-instances/update-field-instance-state';\nimport {updateFilteredChoices} from './utils/fields-instances/update-filtered-choices';\nimport {updateFormula} from './utils/fields-instances/update-formula';\nimport {updateNextSlideCondition} from './utils/fields-instances/update-next-slide-condition';\nimport {updateTriggerConditions} from './utils/fields-instances/update-trigger-conditions';\nimport {updateValidation} from './utils/fields-instances/update-validation';\nimport {updateWarning} from './utils/fields-instances/update-warning';\nimport {createField} from './utils/fields/create-field';\nimport {isCustomFieldWithChoices} from './utils/fields/is-custom-field-with-choices';\nimport {isFieldWithChoices} from './utils/fields/is-field-with-choices';\nimport {flattenNodesInstances} from './utils/nodes-instances/flatten-nodes-instances';\nimport {flattenNodesInstancesTree} from './utils/nodes-instances/flatten-nodes-instances-tree';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\nimport {isNodeGroupInstance} from './utils/nodes-instances/is-node-group-instance';\nimport {isSlideInstance} from './utils/nodes-instances/is-slide-instance';\nimport {isSlidesInstance} from './utils/nodes-instances/is-slides-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\nimport {nodeInstanceSuffix} from './utils/nodes-instances/node-instance-suffix';\nimport {nodeToNodeInstance} from './utils/nodes-instances/node-to-node-instance';\nimport {updateConditionalBranches} from './utils/nodes-instances/update-conditional-branches';\nimport {updateEditability} from './utils/nodes-instances/update-editability';\nimport {updateVisibility} from './utils/nodes-instances/update-visibility';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isContainerNode} from './utils/nodes/is-container-node';\nimport {isRepeatingContainerNode} from './utils/nodes/is-repeating-container-node';\nimport {orderedNodes} from './utils/nodes/ordered-nodes';\nimport {updateRepsNum} from './utils/slides-instances/update-reps-num';\nimport {validSlide} from './utils/slides-instances/valid-slide';\nimport {AjfValidationService} from './validation-service';\n\nexport const enum AjfFormInitStatus {\n  Initializing,\n  Complete,\n}\n\nconst updateSlideValidity = (slide: AjfRepeatingSlideInstance | AjfSlideInstance) => {\n  const subNodesNum = slide.flatNodes.length;\n  let valid = true;\n  for (let i = 0; i < subNodesNum; i++) {\n    const subNode = slide.flatNodes[i];\n    if (subNode.visible && isFieldInstance(subNode) && !(subNode as AjfFieldInstance).valid) {\n      valid = false;\n      break;\n    }\n  }\n  if (slide.valid !== valid) {\n    slide.valid = valid;\n  }\n};\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _editabilityNodesMap: Observable<AjfRendererUpdateMap>;\n  private _editabilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _visibilityNodesMap: Observable<AjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap: Observable<AjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap: Observable<AjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap: Observable<AjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap: Observable<AjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap: Observable<AjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap: Observable<AjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap: Observable<AjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this\n    ._formInitEvent as Observable<AjfFormInitStatus>;\n\n  private _formGroup: BehaviorSubject<FormGroup | null> = new BehaviorSubject<FormGroup | null>(\n    null,\n  );\n  readonly formGroup: Observable<FormGroup | null> = this\n    ._formGroup as Observable<FormGroup | null>;\n\n  private _form: BehaviorSubject<{form: AjfForm | null; context?: AjfContext} | null> =\n    new BehaviorSubject<{form: AjfForm | null; context?: AjfContext} | null>(null);\n  private _nodes: Observable<AjfNodeInstance[]>;\n  private _flatNodes: Observable<AjfNodeInstance[]>;\n  private _flatNodesTree: Observable<AjfSlideInstance[]>;\n  private _nodesUpdates: Subject<AjfNodesInstancesOperation> =\n    new Subject<AjfNodesInstancesOperation>();\n  private _errorPositions: Observable<number[]>;\n  private _errors: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps: Observable<AjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this\n    ._nextSlideTrigger as Observable<AjfNodeInstance>;\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum as Observable<number>;\n\n  get nodesTree(): Observable<AjfSlideInstance[]> {\n    return this._flatNodesTree;\n  }\n  get errorPositions(): Observable<number[]> {\n    return this._errorPositions;\n  }\n  get errors(): Observable<number> {\n    return this._errors;\n  }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm | null, context: AjfContext = {}) {\n    this._initUpdateMapStreams();\n    if (\n      form != null &&\n      Object.keys(context).length === 0 &&\n      Object.keys(form.initContext || {}).length > 0\n    ) {\n      context = form.initContext || {};\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) {\n      return {};\n    }\n    let res = deepCopy(formGroup.value);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group.node.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group.node.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(\n      map(f => {\n        const fieldName = nodeInstanceCompleteName(field);\n        return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n      }),\n    );\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n      withLatestFrom(this._nodes, this._form),\n      filter(\n        ([_, __, form]) =>\n          form != null &&\n          (\n            form as {\n              form: AjfForm | null;\n              context?: AjfContext;\n            }\n          ).form != null,\n      ),\n      map(([_, nodes, formDef]) => {\n        const form = (\n          formDef as {\n            form: AjfForm | null;\n            context?: AjfContext;\n          }\n        ).form as AjfForm;\n        let currentPosition = 0;\n        const errors: number[] = [];\n        (nodes as AjfNodeInstance[]).forEach(node => {\n          if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n            const rsNode = node as AjfRepeatingSlideInstance;\n            for (let i = 0; i < rsNode.reps; i++) {\n              if (node.visible) {\n                currentPosition++;\n                if (i == 0) {\n                  rsNode.position = currentPosition;\n                }\n                if (!validSlide(rsNode, i)) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n            const sNode = node as AjfSlideInstance;\n            if (sNode.visible) {\n              currentPosition++;\n              sNode.position = currentPosition;\n              if (!sNode.valid) {\n                errors.push(currentPosition);\n              }\n            }\n          }\n        });\n        form.valid = errors.length == 0;\n        this._slidesNum.next(currentPosition);\n        return errors;\n      }),\n      publishReplay(),\n      refCount(),\n    );\n    this._errors = this._errorPositions.pipe(\n      map(e => (e != null ? e.length : 0)),\n      startWith(0),\n      publishReplay(),\n      refCount(),\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    this._editabilityNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._editabilityNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._visibilityNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._visibilityNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._repetitionNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._repetitionNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._conditionalBranchNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._conditionalBranchNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._formulaNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._formulaNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._validationNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._validationNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._warningNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._warningNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._filteredChoicesNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._filteredChoicesNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._triggerConditionsNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._triggerConditionsNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n    this._nextSlideConditionsNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._nextSlideConditionsNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith({} as AjfRendererUpdateMap),\n      share(),\n    );\n\n    this._nodesMaps = [\n      this._editabilityNodesMap,\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap,\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = this._form;\n    formObs\n      .pipe(\n        map(_form => {\n          return this._initFormGroupStreams(new FormGroup({}));\n        }),\n      )\n      .subscribe(this._formGroup);\n    formObs\n      .pipe(\n        switchMap(form => {\n          if (form == null || form.form == null) {\n            return obsOf(form);\n          }\n          const choicesOrigins = form.form.choicesOrigins || [];\n          if (choicesOrigins.length === 0) {\n            return obsOf(form);\n          }\n          return from(Promise.all(choicesOrigins.map(co => initChoicesOrigin(co)))).pipe(\n            map(() => form),\n          );\n        }),\n        map(formDef => {\n          return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n            let nodes: AjfNodeInstance[];\n            if (\n              formDef != null &&\n              (\n                formDef as {\n                  form: AjfForm | null;\n                  context?: AjfContext;\n                }\n              ).form != null\n            ) {\n              const form = formDef as {\n                form: AjfForm;\n                context: AjfContext;\n              };\n              const baseNodes = form.form.nodes;\n              nodes = this._orderedNodesInstancesTree(\n                flattenNodes(baseNodes),\n                baseNodes,\n                undefined,\n                [],\n                form.context || {},\n              );\n            } else {\n              nodes = [];\n            }\n            let currentPosition = 0;\n            nodes.forEach(node => {\n              if (node.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n                const rsNode = node as AjfRepeatingSlideInstance;\n                for (let i = 0; i < rsNode.reps; i++) {\n                  if (node.visible) {\n                    currentPosition++;\n                    if (i == 0) {\n                      rsNode.position = currentPosition;\n                    }\n                  }\n                }\n              } else if (node.node.nodeType === AjfNodeType.AjfSlide) {\n                const sNode = node as AjfSlideInstance;\n                if (sNode.visible) {\n                  currentPosition++;\n                  sNode.position = currentPosition;\n                }\n              }\n            });\n            return nodes;\n          };\n        }),\n      )\n      .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    node: AjfNode,\n    prefix: number[],\n    context: AjfContext,\n    branchVisibility = true,\n  ): AjfNodeInstance | null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance != null) {\n      const nodeType = instance.node.nodeType;\n      if (nodeType === AjfNodeType.AjfNodeGroup || nodeType === AjfNodeType.AjfRepeatingSlide) {\n        this._explodeRepeatingNode(\n          allNodes,\n          instance as AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n          context,\n        );\n      } else if (nodeType === AjfNodeType.AjfSlide) {\n        const sInstance = instance as AjfSlideInstance;\n        sInstance.nodes = this._orderedNodesInstancesTree(\n          allNodes,\n          sInstance.node.nodes,\n          sInstance.node.id,\n          prefix,\n          context,\n        );\n      }\n      updateVisibility(instance, context, branchVisibility);\n      updateConditionalBranches(instance, context);\n      if (nodeType === AjfNodeType.AjfField) {\n        const fInstance = instance as AjfFieldInstance;\n\n        if (isCustomFieldWithChoices(fInstance.node) || isFieldWithChoices(fInstance.node)) {\n          updateFilteredChoices(fInstance as AjfFieldWithChoicesInstance<any>, context);\n        } else {\n          if (isTableFieldInstance(fInstance)) {\n            const tfInstance = fInstance as AjfTableFieldInstance;\n            const tNode = tfInstance.node;\n            tfInstance.context = context[nodeInstanceCompleteName(tfInstance)] || context;\n            const formGroup = this._formGroup.getValue();\n            let controlsWithLabels: [string, (string | AjfTableFormControl)[]][] = [];\n            controlsWithLabels.push([node.label, tNode.columnLabels]);\n            if (formGroup != null) {\n              tNode.rows.forEach((row, rowIdx) => {\n                let r: AjfTableFormControl[] = [];\n                (row as AjfTableCell[]).forEach((cell, idx) => {\n                  /*\n                  every control is registered with the cell position\n                  inside the form control matrix\n                  with this mask `${tNode.name}__${rowIdx}__${idx}`\n                  */\n                  const name = `${tNode.name}__${rowIdx}__${idx}`;\n                  const type = (tNode.columnTypes && tNode.columnTypes[idx]) || 'number';\n                  const tableFormControl: AjfTableFormControl = {\n                    control: new FormControl(),\n                    show: false,\n                    type,\n                  };\n                  const value =\n                    tfInstance.context[cell.formula] && type === 'number'\n                      ? +tfInstance.context[cell.formula]\n                      : tfInstance.context[cell.formula];\n                  tableFormControl.control.setValue(value);\n                  formGroup.registerControl(name, tableFormControl.control);\n                  r.push(tableFormControl);\n                  /* create a object that respect the instance interface\n                  with the minimum defined properties to allow to run addToNodeFormula map*/\n                  const fakeInstance = {\n                    formula: {formula: cell.formula},\n                    node: {name, nodeType: 0, editable: false},\n                    visible: true,\n                    prefix: [],\n                    conditionalBranches: [],\n                    updatedEvt: new EventEmitter<void>(),\n                  } as unknown as AjfNodeInstance;\n                  this._addToNodesFormulaMap(fakeInstance, cell.formula);\n                });\n                controlsWithLabels.push([tNode.rowLabels[rowIdx], r]);\n              });\n              tfInstance.controls = controlsWithLabels;\n            }\n          } else {\n            fInstance.value = context[nodeInstanceCompleteName(instance)];\n          }\n        }\n        updateFieldInstanceState(fInstance, context);\n      }\n      if (nodeType === AjfNodeType.AjfSlide) {\n        updateEditability(instance as AjfSlideInstance, context);\n      }\n      this._addNodeInstance(instance);\n    }\n    return instance;\n  }\n\n  private _adjustReps(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfRepeatingContainerNodeInstance,\n    oldReps: number,\n    context: AjfContext,\n  ): {added: AjfNodeInstance[] | null; removed: AjfNodeInstance[] | null} {\n    const newReps = instance.reps;\n    const result: {added: AjfNodeInstance[] | null; removed: AjfNodeInstance[] | null} = {\n      added: null,\n      removed: null,\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        const node = createField({\n          id: 999,\n          name: '',\n          parent: -1,\n          fieldType: AjfFieldType.Empty,\n          label: instance.node.label,\n        }) as AjfEmptyField;\n        const newInstance = this._initNodeInstance(\n          allNodes,\n          node,\n          instance.prefix.slice(0),\n          context,\n        );\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps; i < newReps; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance.node;\n        prefix.push(i);\n        const orderedListNodes = orderedNodes(group.nodes, instance.node.id);\n        orderedListNodes.forEach(n => {\n          const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n          if (newInstance != null) {\n            newNodes.push(newInstance);\n            instance.nodes.push(newInstance);\n          }\n        });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        nodesNum++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach(n => {\n        this._removeNodeInstance(n);\n      });\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      const completeName = nodeInstanceCompleteName(instance);\n      if (fg != null && fg.contains(completeName)) {\n        fg.controls[completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (instance.node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      const rsInstance = instance as AjfRepeatingSlideInstance;\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide =\n        rsInstance.nodes != null ? rsInstance.nodes.length / rsInstance.reps : 0;\n      for (let i = 0; i < instance.reps; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      rsInstance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates\n      .pipe(\n        withLatestFrom(this._formGroup),\n        filter(([_, fg]) => fg !== null),\n      )\n      .subscribe(([_, fg]) => {\n        const form = fg as FormGroup;\n        form.updateValueAndValidity();\n      });\n  }\n\n  private _explodeRepeatingNode(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    context: AjfContext,\n  ) {\n    const oldReps = updateRepsNum(instance, context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    nodes: AjfNode[],\n    parent: number | null = null,\n    prefix: number[] = [],\n    context: AjfContext,\n  ): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent).forEach((node: AjfNode) => {\n      const parentNodeInstance = nodesInstances.find(\n        ni => ni.node.id == node.parent && nodeInstanceSuffix(ni) == curSuffix,\n      );\n      const branchVisibility =\n        parentNodeInstance != null\n          ? parentNodeInstance.verifiedBranch != null &&\n            parentNodeInstance.verifiedBranch == node.parentNode\n          : true;\n      const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n      if (nni != null) {\n        nodesInstances.push(nni);\n      }\n    });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    return Object.keys(newValue).filter(k => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: FormGroup): FormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription = formGroup.valueChanges\n      .pipe(\n        startWith({} as any),\n        pairwise(),\n        debounceTime(200),\n        withLatestFrom<\n          [any, any],\n          [\n            [any, any],\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfNodeInstance[],\n          ]\n        >(...this._nodesMaps, this._flatNodes),\n      )\n      .subscribe(\n        (\n          v: [\n            [any, any],\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfRendererUpdateMap,\n            AjfNodeInstance[],\n          ],\n        ) => {\n          const oldFormValue = (init && {}) || v[0][0];\n          init = false;\n          const newFormValue = v[0][1];\n          const editability = v[1];\n          const visibilityMap = v[2];\n          const repetitionMap = v[3];\n          const conditionalBranchesMap = v[4];\n          const formulaMap = v[5];\n          const validationMap = v[6];\n          const warningMap = v[7];\n          const nextSlideConditionsMap = v[8];\n          const filteredChoicesMap = v[9];\n          const triggerConditionsMap = v[10];\n          const nodes = v[11];\n\n          // takes the names of the fields that have changed\n          const delta = this._formValueDelta(oldFormValue, newFormValue);\n          const deltaLen = delta.length;\n          let updatedNodes: AjfNodeInstance[] = [];\n\n          /*\n                        for each field update all properties map\n                        with the following rule  \"if fieldname is in map update it\" and\n                        push on updateNodes the node instance that wrap field\n                      */\n          delta.forEach(fieldName => {\n            updatedNodes = updatedNodes.concat(\n              nodes.filter(n => nodeInstanceCompleteName(n) === fieldName),\n            );\n            if (editability[fieldName] != null) {\n              editability[fieldName].forEach(nodeInstance => {\n                if (isSlideInstance(nodeInstance)) {\n                  const slideInstance = nodeInstance as AjfSlideInstance;\n                  updateEditability(slideInstance, newFormValue);\n                }\n              });\n            }\n            if (visibilityMap[fieldName] != null) {\n              visibilityMap[fieldName].forEach(nodeInstance => {\n                const completeName = nodeInstanceCompleteName(nodeInstance);\n                const visibilityChanged = updateVisibility(nodeInstance, newFormValue);\n                const isField = isFieldInstance(nodeInstance);\n                if (visibilityChanged && !nodeInstance.visible) {\n                  const fg = this._formGroup.getValue();\n                  if (fg != null) {\n                    const s = timer(200).subscribe(() => {\n                      if (s && !s.closed) {\n                        s.unsubscribe();\n                      }\n                      fg.controls[completeName].setValue(null);\n                    });\n                  }\n                  if (isField) {\n                    (nodeInstance as AjfFieldInstance).value = null;\n                  }\n                } else if (visibilityChanged && nodeInstance.visible && isField) {\n                  const fg = this._formGroup.getValue();\n                  const res = updateFormula(nodeInstance as AjfFieldInstance, newFormValue);\n                  if (fg != null && res.changed) {\n                    fg.controls[completeName].setValue(res.value);\n                  }\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (repetitionMap[fieldName] != null) {\n              repetitionMap[fieldName].forEach(nodeInstance => {\n                if (isRepeatingContainerNode(nodeInstance.node)) {\n                  const rnInstance = nodeInstance as AjfRepeatingContainerNodeInstance;\n                  const oldReps = updateRepsNum(rnInstance, newFormValue);\n                  if (oldReps !== rnInstance.reps) {\n                    this._adjustReps(nodes, rnInstance, oldReps, newFormValue);\n                  }\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (conditionalBranchesMap[fieldName] != null) {\n              conditionalBranchesMap[fieldName].forEach(nodeInstance => {\n                // const branchChanged =\n                // nodeInstance.updateConditionalBranches(newFormValue);\n                updateConditionalBranches(nodeInstance, newFormValue);\n                // if (branchChanged) {\n                const verifiedBranch = nodeInstance.verifiedBranch;\n                nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n                  if (idx == verifiedBranch) {\n                    this._showSubtree(newFormValue, nodes, nodeInstance, idx);\n                  } else {\n                    this._hideSubtree(newFormValue, nodes, nodeInstance, idx);\n                  }\n                });\n                // }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (formulaMap[fieldName] != null) {\n              formulaMap[fieldName].forEach(nodeInstance => {\n                if (isFieldInstance(nodeInstance)) {\n                  const fInstance = nodeInstance as AjfFieldInstance;\n                  const res = updateFormula(fInstance, newFormValue);\n                  const fg = this._formGroup.getValue();\n                  if (fg != null && res.changed) {\n                    updateValidation(fInstance, newFormValue);\n                    fg.controls[nodeInstanceCompleteName(nodeInstance)].setValue(res.value);\n                  }\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (validationMap[fieldName] != null) {\n              validationMap[fieldName].forEach(nodeInstance => {\n                if (isFieldInstance(nodeInstance)) {\n                  const fInstance = nodeInstance as AjfFieldInstance;\n                  newFormValue.$value = newFormValue[nodeInstanceCompleteName(nodeInstance)];\n                  updateValidation(fInstance, newFormValue, this.currentSupplementaryInformations);\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (warningMap[fieldName] != null) {\n              warningMap[fieldName].forEach(nodeInstance => {\n                if (isFieldInstance(nodeInstance)) {\n                  const fInstance = nodeInstance as AjfFieldInstance;\n                  updateWarning(fInstance, newFormValue);\n                  if (\n                    fInstance.warningResults != null &&\n                    fInstance.warningResults.filter(warning => warning.result).length > 0\n                  ) {\n                    fInstance.warningTrigger.emit();\n                  }\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n              if (\n                nextSlideConditionsMap[fieldName].filter(nodeInstance => {\n                  if (isFieldInstance(nodeInstance)) {\n                    const fInstance = nodeInstance as AjfFieldInstance;\n                    return updateNextSlideCondition(fInstance, newFormValue);\n                  }\n                  return false;\n                }).length == 1\n              ) {\n                this._nextSlideTrigger.emit();\n              }\n            }\n\n            if (filteredChoicesMap[fieldName] != null) {\n              filteredChoicesMap[fieldName].forEach(nodeInstance => {\n                if (isFieldInstance(nodeInstance)) {\n                  const fInstance = nodeInstance as AjfFieldInstance;\n                  if (isFieldWithChoices(fInstance.node)) {\n                    updateFilteredChoices(\n                      fInstance as AjfFieldWithChoicesInstance<any>,\n                      newFormValue,\n                    );\n                  }\n                }\n                if (updatedNodes.indexOf(nodeInstance) === -1) {\n                  updatedNodes.push(nodeInstance);\n                }\n              });\n            }\n\n            if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n              const res = triggerConditionsMap[fieldName].filter(nodeInstance => {\n                if (!isFieldInstance(nodeInstance)) {\n                  return false;\n                }\n                const fInstance = nodeInstance as AjfFieldInstance;\n                if (!isFieldWithChoices(fInstance.node)) {\n                  return false;\n                }\n                return updateTriggerConditions(\n                  fInstance as AjfFieldWithChoicesInstance<any>,\n                  newFormValue,\n                );\n              });\n              if (res.length == 1) {\n                (res[0] as AjfFieldWithChoicesInstance<any>).selectionTrigger.emit();\n              }\n            }\n          });\n          updatedNodes.forEach(n => {\n            const nodeIdx = nodes.indexOf(n);\n            let idx = nodeIdx - 1;\n            while (idx >= 0) {\n              const curNode = nodes[idx];\n              if (isSlidesInstance(curNode)) {\n                updateSlideValidity(curNode as AjfRepeatingSlideInstance | AjfSlideInstance);\n                curNode.updatedEvt.emit();\n              }\n              idx--;\n            }\n            n.updatedEvt.emit();\n          });\n          if (initForm) {\n            initForm = false;\n            this._formInitEvent.emit(AjfFormInitStatus.Complete);\n          }\n          this._valueChanged.next();\n        },\n      );\n    return formGroup;\n  }\n\n  private _showSubtree(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    visible: boolean,\n    branch?: number,\n  ) {\n    let subNodes: AjfNodeInstance[];\n    const nodeSuffix = nodeInstanceSuffix(node);\n    if (branch != null) {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id && n.node.parentNode == branch;\n      });\n    } else {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id;\n      });\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach(n => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        updateVisibility(n, context, visible);\n        updateFormula(n as AjfFormulaFieldInstance, context);\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = this._nodesUpdates.pipe(\n      scan((nodes: AjfNodeInstance[], op: AjfNodesInstancesOperation) => {\n        return op(nodes);\n      }, []),\n      share(),\n    );\n    this._flatNodesTree = this._nodes.pipe(\n      map(nodes => flattenNodesInstancesTree(nodes)),\n      share(),\n    );\n    this._flatNodes = this._flatNodesTree.pipe(\n      map(slides => {\n        let nodes: AjfNodeInstance[] = [];\n        slides.forEach(s => {\n          nodes.push(s);\n          nodes = nodes.concat(s.flatNodes);\n          updateSlideValidity(s);\n        });\n        return nodes;\n      }),\n      share(),\n    );\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstanceCompleteName(nodeInstance);\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (isSlidesInstance(nodeInstance)) {\n      this._removeNodesEditabilityMapIndex(nodeName);\n      return this._removeSlideInstance(nodeInstance as AjfBaseSlideInstance);\n    } else if (isRepeatingContainerNode(nodeInstance.node)) {\n      this._removeNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      this._removeFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfBaseSlideInstance): AjfBaseSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(\n    nodeGroupInstance: AjfRepeatingContainerNodeInstance,\n  ): AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          delete vmap[fieldInstanceName];\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    // TODO: check this, probably is never verified\n    if (isRepeatingContainerNode(fieldInstance.node)) {\n      const rcInstance = fieldInstance as AjfNodeInstance as AjfRepeatingContainerNodeInstance;\n      if (rcInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, rcInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach(condition => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach(condition => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance,\n        fieldInstance.nextSlideCondition.condition,\n      );\n    }\n\n    if (isFieldWithChoices(fieldInstance.node)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._removeFromNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n        if (fwcInstance.triggerConditions != null) {\n          fwcInstance.triggerConditions.forEach(condition => {\n            this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n          });\n        }\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (isRepeatingContainerNode(nodeInstance.node)) {\n      return this._addNodeGroupInstance(nodeInstance as AjfRepeatingContainerNodeInstance);\n    } else if (isSlideInstance(nodeInstance)) {\n      return this._addSlideInstance(nodeInstance as AjfSlideInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      return this._addFieldInstance(nodeInstance as AjfFieldInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new FormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          vmap[fieldInstanceName] = [];\n        }\n        if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n          vmap[fieldInstanceName].push(fieldInstance);\n        }\n        return vmap;\n      });\n    } else {\n      fieldInstance.valid = true;\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (isNodeGroupInstance(fieldInstance)) {\n      const ngInstance = fieldInstance as AjfNodeInstance as AjfNodeGroupInstance;\n      if (ngInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, ngInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach(condition => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach(condition => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance,\n        fieldInstance.nextSlideCondition.condition,\n      );\n    }\n\n    if (isCustomFieldWithChoices(fieldInstance.node) || isFieldWithChoicesInstance(fieldInstance)) {\n      const fwcInstance = fieldInstance as AjfFieldWithChoicesInstance<any>;\n      if (fwcInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fwcInstance.choicesFilter.formula);\n      }\n      if (fwcInstance.triggerConditions != null) {\n        fwcInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.readonly != null) {\n      this._addToNodesEditabilityMap(slideInstance, slide.readonly.condition);\n    }\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(\n    nodeGroupInstance: AjfRepeatingContainerNodeInstance,\n  ): AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeInstanceCompleteName(nodeGroupInstance);\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new FormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n  private _removeNodesEditabilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._editabilityNodesMapUpdates, index);\n  }\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<AjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n    nodesMap: Subject<AjfRendererUpdateMapOperation>,\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    const tokens = getCodeIdentifiers(formula);\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach(token => {\n          if (vmap[token] != null) {\n            const idx = vmap[token].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[token].splice(idx, 1);\n              if (vmap[token].length == 0) {\n                delete vmap[token];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesEditabilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._editabilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n    nodesMap: Subject<AjfRendererUpdateMapOperation>,\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    const tokens = getCodeIdentifiers(formula);\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach(token => {\n          if (vmap[token] == null) {\n            vmap[token] = [];\n          }\n          if (vmap[token].indexOf(nodeInstance) === -1) {\n            vmap[token].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It rappresents the base field component, the first overlay of ajfFieldInstance.\n * It keeps a reference to the relative control of the form.\n * It manages the component update in conjunction with the instance update.\n * It manages the warningTrigger of the instance by displaying a confirmation\n * popup when an alert event is triggered.\n * @export\n * @abstract\n * @class AjfBaseFieldComponent\n * @template T\n */\n@Directive()\nexport abstract class AjfBaseFieldComponent<T extends AjfFieldInstance = AjfFieldInstance>\n  implements OnDestroy, OnInit\n{\n  private _instance: T;\n  get instance(): T {\n    return this._instance;\n  }\n  set instance(instance: T) {\n    if (instance !== this._instance) {\n      this._instance = instance;\n      this._setUpInstanceUpdate();\n      this._onInstanceChange();\n    }\n  }\n\n  private _control: Observable<FormControl | null>;\n  get control(): Observable<FormControl | null> {\n    return this._control;\n  }\n\n  private _warningTriggerSub: Subscription = Subscription.EMPTY;\n  private _instanceUpdateSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    protected _changeDetectorRef: ChangeDetectorRef,\n    private _service: AjfFormRendererService,\n    private _warningAlertService: AjfWarningAlertService,\n  ) {\n    this._control = defer(() =>\n      this._service\n        .getControl(this.instance)\n        .pipe(map(ctrl => (ctrl || new FormControl()) as FormControl)),\n    ) as Observable<FormControl | null>;\n  }\n\n  ngOnInit(): void {\n    if (this.instance != null) {\n      this._warningTriggerSub = this.instance.warningTrigger\n        .pipe(\n          withLatestFrom(this.control),\n          filter(([_, ctrl]) => ctrl != null),\n        )\n        .subscribe(([_, ctrl]) => {\n          if (this.instance.warningResults == null) {\n            return;\n          }\n          const control = ctrl as FormControl;\n          const s = this._warningAlertService\n            .showWarningAlertPrompt(\n              this.instance.warningResults.filter(w => w.result).map(w => w.warning),\n            )\n            .subscribe(\n              (r: AjfFieldWarningAlertResult) => {\n                if (r.result) {\n                  control!.setValue(null);\n                }\n              },\n              (_e: any) => {\n                if (s) {\n                  s.unsubscribe();\n                }\n              },\n              () => {\n                if (s) {\n                  s.unsubscribe();\n                }\n              },\n            );\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._warningTriggerSub.unsubscribe();\n    this._instanceUpdateSub.unsubscribe();\n  }\n  // TODO: why?\n  protected _onInstanceChange(): void {}\n\n  private _setUpInstanceUpdate(): void {\n    this._instanceUpdateSub.unsubscribe();\n    if (this._instance != null) {\n      this._instanceUpdateSub = this._instance.updatedEvt.subscribe(() => {\n        if (this._changeDetectorRef) {\n          try {\n            this._changeDetectorRef.detectChanges();\n          } catch (e) {}\n        }\n      });\n    } else {\n      this._instanceUpdateSub = Subscription.EMPTY;\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It casts a boolean as number.\n */\n@Pipe({name: 'ajfBoolToInt'})\nexport class AjfBoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a Date.\n * if date is 'today' it return a now Date.\n */\n@Pipe({name: 'ajfDateValue'})\nexport class AjfDateValuePipe implements PipeTransform {\n  transform(date: Date | 'today' | undefined): Date | null {\n    if (date == null) {\n      return null;\n    }\n    return date === 'today' ? new Date() : (date as Date);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport {format} from 'date-fns';\n\n/**\n * It formats Date with 'yyyy-MM-dd'\n * @param date the date to format\n * @return the format date\n */\n@Injectable()\n@Pipe({name: 'ajfDateValueString'})\nexport class AjfDateValueStringPipe implements PipeTransform {\n  transform(date: Date | 'today' | undefined): string | undefined {\n    if (date == null) {\n      return undefined;\n    }\n    const dateObj = date === 'today' ? new Date() : date;\n    return format(dateObj, 'yyyy-MM-dd');\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  override get name(): string {\n    return 'AjfInvalidFieldDefinitionError';\n  }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\n\n/**\n * It returns true if AjfFieldWithChoices is forceExpanded and filteredChoices length is\n * less than equal threshold.\n */\n@Pipe({name: 'ajfExpandFieldWithChoices'})\nexport class AjfExpandFieldWithChoicesPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, threshold: number): boolean {\n    return (\n      !instance.node.forceNarrow &&\n      (instance.node.forceExpanded ||\n        (instance.filteredChoices && instance.filteredChoices.length <= threshold))\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n/**\n * It Applies a viewContainerRef to a component selector.\n */\n@Directive({selector: '[ajf-field-host]'})\nexport class AjfFieldHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\n\n/**\n * It is a base wrapper of every ajfField.\n * It manages what type of component to load(editable component or readonly component)\n * by input instance.\n *\n * @export\n * @abstract\n * @class AjfFormField\n */\n@Directive()\nexport abstract class AjfFormField implements OnDestroy, OnInit {\n  @ViewChild(AjfFieldHost, {static: true}) fieldHost: AjfFieldHost;\n\n  private _instance: AjfFieldInstance;\n  get instance(): AjfFieldInstance {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfFieldInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      if (this._instance.node && !this._instance.node.editable) {\n        this._readonly = true;\n      }\n      if (this._init) {\n        this._loadComponent();\n      }\n    }\n  }\n\n  /**\n   * if true mean that component need to be a readonly component\n   *\n   * @private\n   */\n  private _readonly: boolean;\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  @Input()\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    if (!this._readonly && this._instance.node && !this._instance.node.editable) {\n      this._readonly = true;\n    }\n    if (this._init) {\n      this._loadComponent();\n    }\n  }\n\n  private _componentInstance: AjfBaseFieldComponent<AjfFieldInstance>;\n  private _init: boolean = false;\n\n  protected abstract componentsMap: AjfFieldComponentsMap;\n  private _updatedSub = Subscription.EMPTY;\n\n  constructor(private _cdr: ChangeDetectorRef, private _cfr: ComponentFactoryResolver) {}\n\n  ngOnDestroy(): void {\n    this._updatedSub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this._init = true;\n    this._loadComponent();\n  }\n\n  /**\n   * It builds a new AjfField component by fieldType and binds it to the fieldHost.\n   *\n   * @private\n   * @return {*}\n   */\n  private _loadComponent(): void {\n    this._updatedSub.unsubscribe();\n    this._updatedSub = Subscription.EMPTY;\n    if (this._instance == null || this.fieldHost == null) {\n      return;\n    }\n\n    const vcr = this.fieldHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.componentsMap[this._instance.node.fieldType];\n    if (componentDef == null) {\n      return;\n    }\n    const component =\n      this._readonly && componentDef.readOnlyComponent\n        ? componentDef.readOnlyComponent\n        : componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      this._componentInstance = componentRef.instance;\n      this._componentInstance.instance = this._instance;\n\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in this._componentInstance) {\n            (this._componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n      this._instance.updatedEvt.subscribe(() => this._cdr.markForCheck());\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './interface/fields/field-type';\n\n/**\n *\n * @return a string that indetified the icon relative to type\n * ex. ajf-icon-field-string, ajf-icon-field-number, ajf-icon-field-text ecc.\n */\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${\n    typeof AjfFieldType[type] === 'string' ? AjfFieldType[type].toLowerCase() : type\n  }`;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\n\n/**\n *\n *\n * @param Field.\n *\n * @return An icon class name relative to the AjfType.\n */\n@Pipe({name: 'ajfFieldIcon'})\nexport class AjfFieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(\n      (field as AjfField).fieldType ? (field as AjfField).fieldType : (field as AjfFieldType),\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\n\nimport {AjfValidationResult} from './interface/validation/validation-results';\n\n/**\n * It returns true if all validationResults are true.\n *\n */\n@Pipe({name: 'ajfFieldIsValid'})\nexport class AjfFieldIsValidPipe {\n  transform(validationResults?: AjfValidationResult[]): boolean {\n    return validationResults != null && validationResults.filter(f => !f.result).length === 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstanceCreate} from './utils/fields-instances/create-field-instance';\nimport {componentsMap} from './utils/fields/fields-map';\n\nexport abstract class AjfFieldService {\n  readonly componentsMap: AjfFieldComponentsMap = componentsMap;\n\n  /**\n   * It allows to register custom fields inside an Ajf form.\n   * @param fieldType is the field type of the custom field. Values from 0 to 100 are reserved to\n   *     Ajf.\n   * @param component It is the custom component that implement an AjfBaseFieldComponent.\n   * @param readOnlyComponent It is the readonly custom component that implement an\n   *     AjfBaseFieldComponent.\n   * @createInstance The signature and return type of the method used for create Instance.\n   * @isFieldWithChoice If true, the field has choices.\n   */\n  registerCustomField(field: {\n    fieldType: number;\n    component: Type<AjfBaseFieldComponent>;\n    readOnlyComponent?: Type<AjfBaseFieldComponent>;\n    createInstance?: (instance: AjfFieldInstanceCreate, context: AjfContext) => AjfFieldInstance;\n    isFieldWithChoice?: boolean;\n  }): void {\n    const {fieldType, component} = field;\n    if (fieldType < 100) {\n      throw new Error('Invalid custom field type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom field component');\n    }\n    this.componentsMap[fieldType] = field;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It rappresents the base componet for every ajf fields with choiches.\n *\n * @export\n * @abstract\n * @class AjfFieldWithChoicesComponent\n * @template T\n */\nexport abstract class AjfFieldWithChoicesComponent<T> extends AjfBaseFieldComponent<\n  AjfFieldWithChoicesInstance<T>\n> {\n  private _searchThreshold: number = 6;\n\n  /**\n   * It represents the threshold below which the choices are displayed\n   * in expanded mode.\n   *\n   * @readonly\n   */\n  get searchThreshold(): number {\n    return this._searchThreshold;\n  }\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    warningAlertService: AjfWarningAlertService,\n    searchThreshold: number,\n  ) {\n    super(cdr, service, warningAlertService);\n    if (searchThreshold != null) {\n      this._searchThreshold = searchThreshold;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\n\nexport interface AjfWarningAlertService {\n  showWarningAlertPrompt(warnings: string[]): Observable<AjfFieldWarningAlertResult>;\n}\n\nexport const AJF_WARNING_ALERT_SERVICE = new InjectionToken<AjfWarningAlertService>(\n  'ajf-warning-alert-service',\n);\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It allows the loading of files inside an AjfForm through an AjfFileInput.\n *\n * @export\n * @class AjfFileFieldComponent\n */\n@Component({\n  selector: 'ajf-file-field',\n  templateUrl: 'file-field.html',\n  styleUrls: ['file-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFileFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-file-input *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-file-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\n\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\nexport class AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\n@Directive()\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // formGroup is an Observable FormGroup type\n  readonly formGroup: Observable<FormGroup | null>;\n\n  //  slides is an observable AjfSlide array type\n  readonly slides: Observable<AjfSlideInstance[]>;\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  // ajfFieldTypes [ Text, Number, Boolean, SingleChoice, MultipleChoice,\n  // Formula, Empty, Composed, LENGTH ]\n  readonly ajfFieldTypes = AjfFieldType;\n\n  @Input() title: string;\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation> =\n    new EventEmitter<AjfPageSliderOrientation>();\n  @Output()\n  readonly orientationChange: Observable<AjfPageSliderOrientation> = this\n    ._orientationChange as Observable<AjfPageSliderOrientation>;\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean {\n    return this._saveDisabled;\n  }\n  @Input()\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean {\n    return this._hasStartMessage;\n  }\n  @Input()\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean {\n    return this._hasEndMessage;\n  }\n  @Input()\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean {\n    return this._hideTopToolbar;\n  }\n  @Input()\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean {\n    return this._hideBottomToolbar;\n  }\n  @Input()\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean {\n    return this._hideNavigationButtons;\n  }\n  @Input()\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean {\n    return this._fixedOrientation;\n  }\n  @Input()\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _readonly = false;\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  @Input()\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation {\n    return this._orientation;\n  }\n  @Input()\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') {\n      return;\n    }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  @ViewChild('formSlider', {static: false}) formSlider: AjfPageSlider;\n  @ViewChildren(AjfFormField) fields: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // _errorPositions is a private subject structure that contains next and prev\n  private _errorPositions: Observable<number[]>;\n\n  // _form is a private ajFForm\n  private _form: AjfForm;\n  // _init is a private boolean\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  @Output()\n  readonly formAction: Observable<AjfFormActionEvent> = this\n    ._formAction as Observable<AjfFormActionEvent>;\n\n  @Input()\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete),\n    );\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void {\n    this._errorMoveEvent.emit(true);\n  }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void {\n    this._errorMoveEvent.emit(false);\n  }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfSlideInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService\n      .addGroup(nodeGroup as AjfNodeGroupInstance)\n      .pipe(delayWhen(() => this.formSlider.pageScrollFinish))\n      .subscribe(\n        r => {\n          if (r && this.formSlider != null) {\n            this.formSlider.slide({dir: 'down'});\n          }\n        },\n        _e => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n        () => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n      );\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(\n    nodeGroup: AjfNodeGroupInstance | AjfSlideInstance | AjfRepeatingSlideInstance,\n  ): void {\n    let s = this._rendererService\n      .removeGroup(nodeGroup as AjfNodeGroupInstance)\n      .pipe(delayWhen(() => this.formSlider.pageScrollFinish))\n      .subscribe(\n        r => {\n          if (r && this.formSlider != null) {\n            this.formSlider.slide({dir: 'up'});\n          }\n        },\n        _e => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n        () => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n      );\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue(),\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action,\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent)\n        .pipe(withLatestFrom(this._errorPositions))\n        .subscribe(([move, errs]) => {\n          const currentPosition = this.formSlider.currentPage - +this.hasStartMessage + 1;\n          if (errs == null) {\n            return;\n          }\n          const errors = errs as number[];\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1});\n          this._changeDetectorRef.detectChanges();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  scrollToSlide(slide: AjfSlideInstance): void {\n    this.formSlider.slide({to: slide.position - 1});\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return nodeInstanceCompleteName(node);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext,\n  buildStringIdentifier,\n  buildStringIdentifierOpts,\n  BuildStringIdentifierOpts,\n} from '@ajf/core/common';\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfMultipleChoiceField} from '../../interface/fields/multiple-choice-field';\nimport {AjfSingleChoiceField} from '../../interface/fields/single-choice-field';\nimport {AjfForm} from '../../interface/forms/form';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {flattenNodes} from '../nodes/flatten-nodes';\nimport {isField} from '../nodes/is-field';\n\n/**\n * It builds a string that contains information preview about the form and its context.\n */\nexport const buildFormStringIdentifier = (\n  form: AjfForm,\n  context: AjfContext,\n  opts?: BuildStringIdentifierOpts,\n): string => {\n  if (form == null) {\n    return '';\n  }\n  const stringIdentifier = form.stringIdentifier || [];\n  if (stringIdentifier.length === 0) {\n    return '';\n  }\n  const fields = flattenNodes(form.nodes).filter(\n    n => isField(n) && isFieldWithChoices(n as AjfField),\n  ) as AjfFieldWithChoices<unknown>[];\n  if (fields.length > 0) {\n    context = {...context};\n    fields.forEach(field => {\n      const value = context[field.name];\n      if (value == null) {\n        return;\n      }\n      if (field.fieldType === AjfFieldType.SingleChoice) {\n        const singleChoiceField = field as AjfSingleChoiceField<unknown>;\n        const choice = singleChoiceField.choicesOrigin.choices.find(c => c.value === value);\n        if (choice == null) {\n          return;\n        }\n        context[field.name] = choice.label;\n      } else if (\n        field.fieldType === AjfFieldType.MultipleChoice &&\n        Array.isArray(value) &&\n        value.length > 0\n      ) {\n        const strings = buildStringIdentifierOpts(opts);\n        const multipleChoiceField = field as AjfMultipleChoiceField<unknown>;\n        const choices = multipleChoiceField.choicesOrigin.choices.filter(\n          c => value.indexOf(c.value) > -1,\n        );\n        context[field.name] = choices.map(c => c.label).join(strings.valuesDivider);\n      }\n    });\n  }\n  return buildStringIdentifier(stringIdentifier, context, opts);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, BuildStringIdentifierOpts} from '@ajf/core/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfForm} from './interface/forms/form';\nimport {buildFormStringIdentifier} from './utils/forms/build-form-string-identifier';\n\n/**\n * it returns a form string identifier.\n *\n * @export\n * @class AjfFormStringIdentifierPipe\n */\n@Pipe({name: 'ajfFormStringIdentifier'})\nexport class AjfFormStringIdentifierPipe implements PipeTransform {\n  transform(form: AjfForm, context: AjfContext, opts?: BuildStringIdentifierOpts): string {\n    return buildFormStringIdentifier(form, context, opts);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\n\n/**\n * It filters the type of ctrl.\n * return null or a valid AjfTableFormControl.\n *\n * @export\n * @class AjfGetTableCellControlPipe\n */\n@Pipe({name: 'ajfGetTableCellControl'})\nexport class AjfGetTableCellControlPipe implements PipeTransform {\n  transform(ctrl: null | string | AjfTableFormControl): AjfTableFormControl | null {\n    if (ctrl == null || typeof ctrl === 'string') {\n      return null;\n    }\n    return ctrl as AjfTableFormControl;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It allows the loading of image url inside an AjfForm.\n *\n * @export\n * @class AjfImageFieldComponent\n */\n@Component({\n  selector: 'ajf-image-field',\n  templateUrl: 'image-field.html',\n  styleUrls: ['image-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfImageFieldComponent extends AjfBaseFieldComponent {\n  readonly imageUrl: Observable<SafeResourceUrl>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as FormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.imageUrl = fileStream.pipe(\n      map(file => domSanitizer.bypassSecurityTrustResourceUrl((file as AjfFile).content)),\n    );\n  }\n}\n","<ajf-file-input *ngIf=\"control|async as ctrl\" accept=\"image/*\" [formControl]=\"ctrl!\">\n  <div ajfFilePreview class=\"ajf-image-preview\">\n    <img [src]=\"imageUrl|async\">\n  </div>\n</ajf-file-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It increments the value parameter by increment offset parameter.\n *\n * @export\n * @class AjfIncrementPipe\n */\n@Pipe({name: 'ajfIncrement'})\nexport class AjfIncrementPipe implements PipeTransform {\n  transform(value: number, increment: number = 1): number {\n    return value + increment;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfTableCell} from './interface/fields/table-field';\n\n/**\n * it checks if the cell parameter is an editable AjfTableCell.\n *\n * @export\n * @class AjfIsCellEditablePipe\n */\n@Pipe({name: 'ajfIsCellEditable'})\nexport class AjfIsCellEditablePipe implements PipeTransform {\n  transform(cell: string | AjfTableCell): boolean {\n    if (cell == null || typeof cell === 'string') {\n      return false;\n    }\n    return cell.editable === true;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\n\n/**\n * It checks if the AjfNodeInstance parameter is an Formula AjfField.\n *\n * @export\n * @class AjfIsReadonlyInputFieldPipe\n */\n@Pipe({name: 'ajfIsReadonlyInputField'})\nexport class AjfIsReadonlyInputFieldPipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return (\n      isFieldInstance(instance) &&\n      (instance as AjfFieldInstance).node.fieldType === AjfFieldType.Formula\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\n\n/**\n * It checks if the AjfNodeInstance parameter is an isRepeatingSlideInstance.\n *\n * @export\n * @class AjfIsRepeatingSlideInstancePipe\n */\n@Pipe({name: 'ajfIsRepeatingSlideInstance'})\nexport class AjfIsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isRepeatingSlideInstance(instance);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\n/**\n * It returns a completeName of AjfNodeInstance paramenter.\n *\n * @export\n * @class AjfNodeCompleteNamePipe\n */\n@Pipe({name: 'ajfNodeCompleteName'})\nexport class AjfNodeCompleteNamePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string {\n    return instance ? nodeInstanceCompleteName(instance) : '';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a array of numbers.\n * The numbers are incremental by step.\n *\n * @export\n * @class AjfRangePipe\n */\n@Pipe({name: 'ajfRange'})\nexport class AjfRangePipe implements PipeTransform {\n  transform(size: number = 0, start: number = 1, step: number = 1): number[] {\n    const range: number[] = [];\n    for (let length = 0; length < size; ++length) {\n      range.push(start);\n      start += step;\n    }\n    return range;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseFieldComponent} from './base-field';\n\n/**\n * It is an AjfBaseFieldComponent where the type can be only text or number.\n * Type is text by default.\n *\n * @export\n * @abstract\n * @class AjfInputFieldComponent\n */\nexport abstract class AjfInputFieldComponent extends AjfBaseFieldComponent {\n  type: 'text' | 'number' = 'text';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfInputFieldComponent as CoreComponent} from './input-field';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * this component show the control value inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-field',\n  templateUrl: 'read-only-field.html',\n  styleUrls: ['read-only-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyFieldComponent extends CoreComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<span *ngIf=\"control|async as ctrl\">{{ctrl.value}}</span>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile, fileIcon} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to download the file contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyFileFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-file-field',\n  templateUrl: 'read-only-file-field.html',\n  styleUrls: ['read-only-file-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyFileFieldComponent extends AjfBaseFieldComponent {\n  readonly fileIcon: SafeResourceUrl;\n  readonly fileUrl: Observable<SafeResourceUrl>;\n  readonly fileName: Observable<string>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    this.fileIcon = domSanitizer.bypassSecurityTrustResourceUrl(fileIcon);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as FormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.fileUrl = fileStream.pipe(\n      map(file => domSanitizer.bypassSecurityTrustResourceUrl((file as AjfFile).content)),\n    );\n    this.fileName = fileStream.pipe(map(file => (file as AjfFile).name));\n  }\n}\n","<a *ngIf=\"fileUrl|async as fu ; else noFile\" [href]=\"fu\" [download]=\"fileName|async\">\n  <img [src]=\"fileIcon\"> {{ fileName|async }}\n</a>\n<ng-template #noFile>\n  <div class=\"ajf-no-file-placeholder\"></div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the image related to url contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyImageFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-image-field',\n  templateUrl: 'read-only-image-field.html',\n  styleUrls: ['read-only-image-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyImageFieldComponent extends AjfBaseFieldComponent {\n  readonly imageUrl: Observable<SafeResourceUrl>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as FormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.imageUrl = fileStream.pipe(\n      map(file => domSanitizer.bypassSecurityTrustResourceUrl((file as AjfFile).content)),\n    );\n  }\n}\n","<img *ngIf=\"imageUrl|async as iu ; else noImage\" [src]=\"imageUrl|async\">\n<ng-template #noImage>\n  <div class=\"ajf-no-image-placeholder\"></div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the values of AjfFieldWithChoicesInstance\n * contained in the control of the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlySelectFieldComponent\n */\n@Component({\n  templateUrl: 'read-only-select-field.html',\n  styleUrls: ['read-only-select-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlySelectFieldComponent extends AjfBaseFieldComponent<\n  AjfFieldWithChoicesInstance<String | number>\n> {\n  readonly multiple: Observable<boolean>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n\n    this.multiple = this.control.pipe(\n      filter(control => control != null),\n      map(() => this.instance.node.fieldType === AjfFieldType.MultipleChoice),\n    );\n  }\n}\n","<ng-container *ngIf=\"control|async as ctrl\">\n    <ng-container *ngFor=\"let choice of instance.filteredChoices; let idx = index\">\n        <ng-container *ngIf=\"multiple|async; else singleChoice\">\n            <span *ngIf=\"ctrl.value && ctrl.value?.indexOf(choice.value) > -1\">\n                {{choice.label|transloco}}{{ctrl.value[ctrl.value.length - 1] !== choice.value ? ', ': ''}}\n            </span>\n        </ng-container>\n        <ng-template #singleChoice>\n            <span *ngIf=\"ctrl.value === choice.value\">{{choice.label|transloco}}</span>\n        </ng-template>\n    </ng-container>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a string that indetifies if the value is even or odd.\n *\n * @export\n * @class AjfTableRowClass\n */\n@Pipe({name: 'ajfTableRowClass'})\nexport class AjfTableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to shows the values contained in the controls of\n * the form inherited from AjfBaseFieldComponent with AjfTableFieldInstance.\n *\n * @export\n * @class AjfReadOnlyTableFieldComponent\n */\n@Component({\n  templateUrl: 'read-only-table-field.html',\n  styleUrls: ['read-only-table-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyTableFieldComponent extends AjfBaseFieldComponent<AjfTableFieldInstance> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<table class=\"ajf-table-field\">\n  <ng-container *ngIf=\"instance.node as node\">\n    <ng-container *ngFor=\"let columns of instance.controls; let row = index\">\n      <tr [ngClass]=\"row | ajfTableRowClass\">\n        <td>\n          <ng-container *ngIf=\"columns && columns.length > 0 && columns[0] != null\">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n          </ng-container>\n        </td>\n        <ng-container *ngIf=\"columns && columns.length > 1 && columns[1] != null\">\n          <td *ngFor=\"let c of columns[1]; let column = index\">\n            <ng-container *ngIf=\"c|ajfGetTableCellControl as contr\">\n              <ng-container *ngIf=\"contr != null\">\n                <span *ngIf=\"row > 0; else labelCell\"\n                  class=\"ajf-table-cell\">{{ contr.control!.value | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}</span>\n                <ng-template #labelCell>{{ contr | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}</ng-template>\n              </ng-container>\n            </ng-container>\n          </td>\n        </ng-container>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HttpClient} from '@angular/common/http';\nimport {ChangeDetectorRef, Directive, Inject} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable, of as obsOf} from 'rxjs';\nimport {catchError, filter, map, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\nexport type AjfVideoProvider = 'youtube' | 'vimeo';\n\ninterface VideoInfo {\n  provider: AjfVideoProvider;\n  id: string;\n}\n\n/**\n * It allows the loading of video(youtube or vimeo) url inside an AjfForm.\n *\n * @export\n * @class AjfVideoUrlFieldComponent\n */\n@Directive()\nexport class AjfVideoUrlFieldComponent extends AjfBaseFieldComponent {\n  readonly validUrl: Observable<boolean>;\n  readonly videoThumbnail: Observable<SafeResourceUrl>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n    httpClient: HttpClient,\n  ) {\n    super(cdr, service, was);\n\n    const video = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as FormControl;\n        return control.valueChanges.pipe(startWith(control.value));\n      }),\n      filter(value => value != null),\n      map(value => getVideoProviderAndId(value as string)),\n    );\n    this.validUrl = video.pipe(map(v => v != null));\n    this.videoThumbnail = video.pipe(\n      filter(info => info != null),\n      switchMap(info => videoPreviewUrl(httpClient, info as VideoInfo)),\n      filter(url => url != null),\n      map(url => domSanitizer.bypassSecurityTrustResourceUrl(url as string)),\n    );\n  }\n}\n\n/**\n * it returns a url of thumbnail related to video or null.\n *\n * @param httpClient\n * @param video\n * @return {*}\n */\nfunction videoPreviewUrl(httpClient: HttpClient, video: VideoInfo): Observable<string | null> {\n  if (video.provider === 'youtube') {\n    return obsOf(`https://img.youtube.com/vi/${video.id}/default.jpg`);\n  }\n  if (video.provider === 'vimeo') {\n    return httpClient\n      .get<{thumbnail_url: string}>(\n        `https://vimeo.com/api/oembed.json?url=https://vimeo.com/${video.id}`,\n      )\n      .pipe(\n        map(response => response.thumbnail_url),\n        catchError(() => obsOf(null)),\n      ) as Observable<string | null>;\n  }\n  return obsOf('');\n}\n\n/**\n * It checks the url param, if url is an youtube o vimeo domain return\n * an videoInfo else null\n *\n * @param url\n * @return {*}\n */\nfunction getVideoProviderAndId(url: string): VideoInfo | null {\n  let provider: AjfVideoProvider | null = null;\n  let id: string | null = null;\n  if (/youtube|youtu\\.be|y2u\\.be|i.ytimg\\./.test(url)) {\n    provider = 'youtube';\n    id = getYouTubeVideoId(url);\n  } else if (/vimeo/.test(url)) {\n    provider = 'vimeo';\n    id = getVimeoVideoId(url);\n  }\n  if (provider == null || id == null) {\n    return null;\n  }\n  return {provider, id};\n}\n\n/**\n * it gets the id of vimeo video url.\n *\n * @param url\n * @return {*}\n */\nfunction getVimeoVideoId(url: string): string | null {\n  if (url.includes('#')) {\n    url = url.split('#')[0];\n  }\n  if (url.includes('?') && !url.includes('clip_id=')) {\n    url = url.split('?')[0];\n  }\n\n  let id: string | null = null;\n  let arr: string[];\n\n  const vimeoPipe = [\n    'https?://vimeo.com/[0-9]+$',\n    'https?://player.vimeo.com/video/[0-9]+$',\n    'https?://vimeo.com/channels',\n    'groups',\n    'album',\n  ].join('|');\n\n  const vimeoRegex = new RegExp(vimeoPipe, 'gim');\n\n  if (vimeoRegex.test(url)) {\n    arr = url.split('/');\n    if (arr && arr.length) {\n      id = arr.pop() as string;\n    }\n  } else if (/clip_id=/gim.test(url)) {\n    arr = url.split('clip_id=');\n    if (arr && arr.length) {\n      id = arr[1].split('&')[0];\n    }\n  }\n\n  return id;\n}\n\n/**\n * it gets the id of youtube video url.\n *\n * @param url\n * @return {*}\n */\nfunction getYouTubeVideoId(url: string): string | null {\n  const shortcode = /youtube:\\/\\/|https?:\\/\\/youtu\\.be\\/|http:\\/\\/y2u\\.be\\//g;\n  if (shortcode.test(url)) {\n    const shortcodeId = url.split(shortcode)[1];\n    return stripParameters(shortcodeId);\n  }\n  // /v/ or /vi/\n  const inlinev = /\\/v\\/|\\/vi\\//g;\n\n  if (inlinev.test(url)) {\n    const inlineId = url.split(inlinev)[1];\n    return stripParameters(inlineId);\n  }\n\n  // v= or vi=\n  const parameterV = /v=|vi=/g;\n\n  if (parameterV.test(url)) {\n    const arr = url.split(parameterV);\n    return arr[1].split('&')[0];\n  }\n\n  // v= or vi=\n  const parameterWebp = /\\/an_webp\\//g;\n\n  if (parameterWebp.test(url)) {\n    const webp = url.split(parameterWebp)[1];\n    return stripParameters(webp);\n  }\n\n  // embed\n  const embedReg = /\\/embed\\//g;\n\n  if (embedReg.test(url)) {\n    const embedId = url.split(embedReg)[1];\n    return stripParameters(embedId);\n  }\n\n  // ignore /user/username pattern\n  const usernameReg = /\\/user\\/([a-zA-Z0-9]*)$/g;\n\n  if (usernameReg.test(url)) {\n    return null;\n  }\n\n  // user\n  const userReg = /\\/user\\/(?!.*videos)/g;\n\n  if (userReg.test(url)) {\n    const elements = url.split('/');\n    return stripParameters(elements.pop() as string);\n  }\n\n  // attribution_link\n  const attrReg = /\\/attribution_link\\?.*v%3D([^%&]*)(%26|&|$)/;\n\n  if (attrReg.test(url)) {\n    return (url.match(attrReg) as string[])[1];\n  }\n\n  return null;\n}\n\nfunction stripParameters(url: string): string {\n  // Split parameters or split folder separator\n  if (url.includes('?')) {\n    return url.split('?')[0];\n  } else if (url.includes('/')) {\n    return url.split('/')[0];\n  }\n  return url;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HttpClient} from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the video related to url contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyVideoUrlFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-video-url-field',\n  templateUrl: 'read-only-video-url-field.html',\n  styleUrls: ['read-only-video-url-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyVideoUrlFieldComponent extends AjfVideoUrlFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n    httpClient: HttpClient,\n  ) {\n    super(cdr, service, was, domSanitizer, httpClient);\n  }\n}\n","<div *ngIf=\"control|async as ctrl\" class=\"ajf-video-thumbnail\">\n  <ng-container *ngIf=\"validUrl|async\">\n    <a target=\"_blank\" [href]=\"ctrl.value\">\n      <img *ngIf=\"videoThumbnail|async as thumb\" [src]=\"thumb\" class=\"\" alt=\"\">\n    </a>\n  </ng-container>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\n\n/**\n * It returns all visible columns of form table.\n *\n * @export\n * @class AjfTableVisibleColumnsPipe\n */\n// TODO helpful? currently not used\n@Pipe({name: 'ajfTableVisibleColumns'})\nexport class AjfTableVisibleColumnsPipe implements PipeTransform {\n  transform(instance: AjfTableFieldInstance): (string | number | AjfTableFormControl)[][] {\n    if (!instance.node.editable) {\n      const val = instance.value || [];\n      return instance.hideEmptyRows\n        ? val\n            .filter(col =>\n              col[1].reduce((prev: boolean, cur) => {\n                return prev || (cur != null && cur !== '' && cur !== 0 && cur !== '0');\n              }, false),\n            )\n            .map(v => [v[0], ...v[1]])\n        : val.map(v => [v[0], ...v[1]]);\n    }\n    return ((instance.controls as [string, (string | AjfTableFormControl)[]][]) || []).map(v => [\n      v[0],\n      ...v[1],\n    ]);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {validSlide} from './utils/slides-instances/valid-slide';\n\n/**\n * It checks if idx is a valid index for slide parameter.\n *\n * @export\n * @class AjfValidSlidePipe\n */\n@Pipe({name: 'ajfValidSlide', pure: false})\nexport class AjfValidSlidePipe implements PipeTransform {\n  transform(slide: AjfBaseSlideInstance, idx: number): boolean {\n    if (idx == null || typeof idx !== 'number') {\n      return false;\n    }\n    return validSlide(slide, idx);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfFileInputModule} from '@ajf/core/file-input';\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {AjfAsFieldInstancePipe} from './as-field-instance';\nimport {AjfAsRepeatingSlideInstancePipe} from './as-repeating-slide-instance';\nimport {AjfBoolToIntPipe} from './bool-to-int';\nimport {AjfDateValuePipe} from './date-value';\nimport {AjfDateValueStringPipe} from './date-value-string';\nimport {AjfExpandFieldWithChoicesPipe} from './expand-input-with-choices';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFileFieldComponent} from './file-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFormStringIdentifierPipe} from './form-string-identifier';\nimport {AjfGetTableCellControlPipe} from './get-table-cell-control';\nimport {AjfImageFieldComponent} from './image-field';\nimport {AjfIncrementPipe} from './increment';\nimport {AjfIsCellEditablePipe} from './is-cell-editable';\nimport {AjfIsReadonlyInputFieldPipe} from './is-readonly-input-field';\nimport {AjfIsRepeatingSlideInstancePipe} from './is-repeating-slide';\nimport {AjfNodeCompleteNamePipe} from './node-complete-name';\nimport {AjfRangePipe} from './range';\nimport {AjfReadOnlyFieldComponent} from './read-only-field';\nimport {AjfReadOnlyFileFieldComponent} from './read-only-file-field';\nimport {AjfReadOnlyImageFieldComponent} from './read-only-image-field';\nimport {AjfReadOnlySelectFieldComponent} from './read-only-select-field';\nimport {AjfReadOnlyTableFieldComponent} from './read-only-table-field';\nimport {AjfReadOnlyVideoUrlFieldComponent} from './read-only-video-url-field';\nimport {AjfTableRowClass} from './table-row-class';\nimport {AjfTableVisibleColumnsPipe} from './table-visible-columns';\nimport {AjfValidSlidePipe} from './valid-slide';\nimport {AjfValidationService} from './validation-service';\n\n@NgModule({\n  declarations: [\n    AjfAsFieldInstancePipe,\n    AjfAsRepeatingSlideInstancePipe,\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfFileFieldComponent,\n    AjfFormStringIdentifierPipe,\n    AjfGetTableCellControlPipe,\n    AjfImageFieldComponent,\n    AjfIncrementPipe,\n    AjfIsCellEditablePipe,\n    AjfIsReadonlyInputFieldPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfReadOnlyFieldComponent,\n    AjfReadOnlyFileFieldComponent,\n    AjfReadOnlyImageFieldComponent,\n    AjfReadOnlySelectFieldComponent,\n    AjfReadOnlyTableFieldComponent,\n    AjfReadOnlyVideoUrlFieldComponent,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  imports: [\n    AjfCommonModule,\n    AjfFileInputModule,\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AjfTranslocoModule,\n  ],\n  exports: [\n    AjfAsFieldInstancePipe,\n    AjfAsRepeatingSlideInstancePipe,\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfFileFieldComponent,\n    AjfFormStringIdentifierPipe,\n    AjfGetTableCellControlPipe,\n    AjfImageFieldComponent,\n    AjfIncrementPipe,\n    AjfIsCellEditablePipe,\n    AjfIsReadonlyInputFieldPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfReadOnlyFieldComponent,\n    AjfReadOnlyFileFieldComponent,\n    AjfReadOnlyImageFieldComponent,\n    AjfReadOnlySelectFieldComponent,\n    AjfReadOnlyTableFieldComponent,\n    AjfReadOnlyVideoUrlFieldComponent,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  entryComponents: [\n    AjfFileFieldComponent,\n    AjfImageFieldComponent,\n    AjfReadOnlyFieldComponent,\n    AjfReadOnlyFileFieldComponent,\n    AjfReadOnlyImageFieldComponent,\n    AjfReadOnlySelectFieldComponent,\n    AjfReadOnlyTableFieldComponent,\n    AjfReadOnlyVideoUrlFieldComponent,\n  ],\n  providers: [AjfDateValueStringPipe, AjfFormRendererService, AjfValidationService],\n})\nexport class AjfFormsModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport const AJF_SEARCH_ALERT_THRESHOLD = new InjectionToken<number>('AJF_SEARCH_ALERT_THRESHOLD');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../../interface/attachments/attachments-origin';\n\nexport type AjfAttachmentsOriginCreate<T> = Pick<AjfAttachmentsOrigin<T>, 'name'> &\n  Partial<AjfAttachmentsOrigin<T>>;\n/**\n *  Create a attachmentsOrigin&lt;T&gt;, apply attachments defaults when it missing\n */\nexport function createAttachmentsOrigin<T>(\n  origin: AjfAttachmentsOriginCreate<T>,\n): AjfAttachmentsOrigin<T> {\n  return {\n    ...origin,\n    attachments: origin.attachments || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {\n  AjfAttachmentsOriginCreate,\n  createAttachmentsOrigin,\n} from '../utils/attachments/create-attachments-origin';\n\n/**\n *  Create an AjfAttachmentsOrigin by json schema, throw error if name isn't defined\n */\nexport class AjfAttachmentsOriginSerializer {\n  static fromJson(origin: Partial<AjfAttachmentsOrigin<any>>): AjfAttachmentsOrigin<any> {\n    if (origin.name == null) {\n      throw new Error('Malformed attachments origin');\n    }\n    return createAttachmentsOrigin(origin as AjfAttachmentsOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n\nexport type AjfChoicesOriginCreate<T> = Pick<AjfChoicesOrigin<any>, 'type' | 'name'> &\n  Partial<AjfChoicesOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply label and choices defaults when it missing\n */\nexport function createChoicesOrigin<T>(origin: AjfChoicesOriginCreate<T>): AjfChoicesOrigin<T> {\n  return {\n    ...origin,\n    type: origin.type, // TODO why?\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from '../utils/choices/create-choices-origin';\n/**\n *  Create an AjfChoicesOrigin by json schema, apply a default value for type and name\n */\nexport class AjfChoicesOriginSerializer {\n  static fromJson(origin: Partial<AjfChoicesOrigin<any>>): AjfChoicesOrigin<any> {\n    return createChoicesOrigin<any>({\n      ...origin,\n      type: origin.type || 'fixed',\n      name: origin.name || '',\n    } as AjfChoicesOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldCreate, createField} from './create-field';\n\nexport type AjfFieldWithChoicesCreate<T> = AjfFieldCreate &\n  Pick<AjfFieldWithChoices<T>, 'fieldType' | 'choicesOrigin'> &\n  Partial<AjfFieldWithChoices<T>>;\n/**\n * Create an AjfFieldWithChoice.\n * If choices is not defined apply empty array.\n * If forceExpanded is not defined apply false.\n * If forceNarrow is not defined apply false.\n */\nexport function createFieldWithChoices<T>(\n  field: AjfFieldWithChoicesCreate<T>,\n): AjfFieldWithChoices<T> {\n  const node = createField({...field});\n  return {\n    ...node,\n    ...field,\n    choices: field.choices || [],\n    forceExpanded: field.forceExpanded || false,\n    forceNarrow: field.forceNarrow || false,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfContainerNodeCreate = AjfNodeCreate & Partial<AjfContainerNode>;\n/**\n * It creates an AjfContainerNode by schema.\n * Extends AjfNode with nodes.\n * if nodes is not defined assign empty array\n */\nexport function createContainerNode(containerNode: AjfContainerNodeCreate): AjfContainerNode {\n  const node = createNode(containerNode);\n  return {\n    ...node,\n    nodes: containerNode.nodes || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfRepeatingNodeCreate = AjfNodeCreate & Partial<AjfRepeatingNode>;\n/**\n * It creates an AjfRepeatingNode.\n * It extends AjfNode with formulaReps, minReps, maxReps by schema.\n * If minReps is not defined assign 1.\n * If maxReps is not defined assign 0.\n */\nexport function createRepeatingNode(repeatingNode: AjfRepeatingNodeCreate): AjfRepeatingNode {\n  const node = createNode(repeatingNode);\n  return {\n    ...repeatingNode,\n    ...node,\n    minReps: repeatingNode.minReps != null ? repeatingNode.minReps : 1,\n    maxReps: repeatingNode.maxReps != null ? repeatingNode.maxReps : 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfContainerNodeCreate, createContainerNode} from './create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from './create-repeating-node';\n\nexport type AjfNodeGroupCreate = AjfContainerNodeCreate & AjfRepeatingNodeCreate;\n\n/**\n * It creates a AjfNodeGroup\n * set nodeType to AjfNodeType.AjfNodeGroup = 2.\n * Extends an AjfNode with the merging of containerNode  attributes(nodes)\n * with repeatingNode attributes(formulaReps, minReps, maxReps)\n */\nexport function createNodeGroup(nodeGroup: AjfNodeGroupCreate): AjfNodeGroup {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfNodeGroup,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from '../nodes/create-repeating-node';\n\nexport type AjfRepeatingSlideCreate = AjfContainerNodeCreate & AjfRepeatingNodeCreate;\n/**\n * It creates a AjfRepeatingSlide as the composition of createContainerNode and\n * createRepeatingNode and set AjfRepeatingSlide as nodeType\n */\nexport function createRepeatingSlide(nodeGroup: AjfRepeatingSlideCreate): AjfRepeatingSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfRepeatingSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {neverCondition} from '@ajf/core/models';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\n\nexport type AjfSlideCreate = AjfContainerNodeCreate;\n\n/**\n * It creates AjfSlide.\n */\nexport function createSlide(nodeGroup: AjfSlideCreate): AjfSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    nodeType: AjfNodeType.AjfSlide,\n    readonly: nodeGroup.readonly || neverCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../interface/validation/validation-group';\nimport {createValidationGroup} from '../utils/validation/create-validation-group';\n\n/**\n *  Create an AjfValidationGroup by json schema\n */\nexport class AjfValidationGroupSerializer {\n  static fromJson(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n    return createValidationGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../interface/warning/warning-group';\nimport {createWarningGroup} from '../utils/warning/create-warning-group';\n\n/**\n *  Create an AjfWarningGroup by json schema\n */\nexport class AjfWarningGroupSerializer {\n  static fromJson(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n    return createWarningGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../interface/fields/field-with-choices';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfContainerNode} from '../interface/nodes/container-node';\nimport {AjfNode} from '../interface/nodes/node';\nimport {AjfNodeGroup} from '../interface/nodes/node-group';\nimport {AjfFieldNodeLink} from '../interface/nodes/node-link';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingNode} from '../interface/nodes/repeating-node';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfFieldCreate, createField} from '../utils/fields/create-field';\nimport {createFieldWithChoices} from '../utils/fields/create-field-with-choices';\nimport {componentsMap} from '../utils/fields/fields-map';\nimport {createContainerNode} from '../utils/nodes/create-container-node';\nimport {AjfNodeCreate, createNode} from '../utils/nodes/create-node';\nimport {createNodeGroup} from '../utils/nodes/create-node-group';\nimport {createRepeatingNode} from '../utils/nodes/create-repeating-node';\nimport {createRepeatingSlide} from '../utils/slides/create-repeating-slide';\nimport {createSlide} from '../utils/slides/create-slide';\n\nimport {AjfValidationGroupSerializer} from './validation-group-serializer';\nimport {AjfWarningGroupSerializer} from './warning-group-serializer';\n\n/**\n * Create an AjfNode by json schema,\n * apply a default value for name\n * throw new error if id,parent or nodeType attribute missed\n */\nexport class AjfNodeSerializer {\n  static fromJson(\n    json: Partial<AjfNode>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfNode {\n    const err = 'Malformed node';\n    const obj = {...json} as AjfNodeCreate;\n    obj.name = obj.name ?? '';\n    if (obj.id == null || obj.parent == null || obj.nodeType == null) {\n      throw new Error(err);\n    }\n    if (obj.visibility) {\n      obj.visibility = AjfConditionSerializer.fromJson(obj.visibility);\n    }\n    obj.conditionalBranches = (obj.conditionalBranches || []).map(c =>\n      AjfConditionSerializer.fromJson(c),\n    );\n    // call serializer by nodeType and cast obj with the right interface\n    switch (obj.nodeType) {\n      case AjfNodeType.AjfField:\n        return AjfNodeSerializer._fieldFromJson(\n          obj as AjfNodeCreate & Partial<AjfField>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfFieldNodeLink:\n        return AjfNodeSerializer._fieldNodeLinkFromJson(\n          obj as AjfNodeCreate & Partial<AjfFieldNodeLink>,\n        );\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeSerializer._nodeGroupFromJson(\n          obj as AjfNodeCreate & Partial<AjfNodeGroup>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfNodeSerializer._repeatingSlideFromJson(\n          obj as AjfNodeCreate & Partial<AjfRepeatingSlide>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfSlide:\n        const slideObj = obj as AjfNodeCreate & Partial<AjfSlide>;\n        if (slideObj.readonly) {\n          slideObj.readonly = AjfConditionSerializer.fromJson(slideObj.readonly);\n        }\n        return AjfNodeSerializer._slideFromJson(\n          slideObj as AjfNodeCreate & Partial<AjfSlide>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n    }\n    throw new Error(err);\n  }\n\n  private static _containerNodeFromJson(\n    json: AjfNodeCreate & Partial<AjfContainerNode>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfContainerNode {\n    json.nodes = (json.nodes || []).map(n =>\n      AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins),\n    );\n    return createContainerNode(json);\n  }\n\n  private static _fieldFromJson(\n    json: AjfNodeCreate & Partial<AjfField> & Partial<{attachmentsOriginRef: string}>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfField {\n    if (json.fieldType == null) {\n      throw new Error('Malformed field');\n    }\n    const obj = json as AjfFieldCreate;\n    if (obj.validation) {\n      obj.validation = AjfValidationGroupSerializer.fromJson(obj.validation);\n    }\n    if (obj.warning) {\n      obj.warning = AjfWarningGroupSerializer.fromJson(obj.warning);\n    }\n    if (json.attachmentsOriginRef) {\n      obj.attachmentOrigin = (attachmentsOrigins || []).find(\n        a => a.name === json.attachmentsOriginRef,\n      );\n    }\n    if (obj.nextSlideCondition) {\n      obj.nextSlideCondition = AjfConditionSerializer.fromJson(obj.nextSlideCondition);\n    }\n    const isCustomFieldWithChoice =\n      obj.fieldType > 100 &&\n      componentsMap[obj.fieldType] != null &&\n      componentsMap[obj.fieldType].isFieldWithChoice === true;\n    if (isCustomFieldWithChoice) {\n      return AjfNodeSerializer._fieldWithChoicesFromJson(\n        json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n        choicesOrigins,\n      );\n    }\n\n    switch (obj.fieldType) {\n      case AjfFieldType.Formula:\n        return AjfNodeSerializer._formulaFieldFromJson(\n          json as AjfFieldCreate & Partial<AjfFormulaField>,\n        );\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return AjfNodeSerializer._fieldWithChoicesFromJson(\n          json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n          choicesOrigins,\n        );\n    }\n    return createField(obj);\n  }\n\n  private static _fieldNodeLinkFromJson(\n    json: AjfNodeCreate & Partial<AjfFieldNodeLink>,\n  ): AjfFieldNodeLink {\n    return {...createNode(json), nodeType: AjfNodeType.AjfFieldNodeLink};\n  }\n\n  private static _fieldWithChoicesFromJson(\n    json: AjfFieldCreate & Partial<AjfFieldWithChoices<any>> & Partial<{choicesOriginRef: string}>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n  ): AjfFieldWithChoices<any> {\n    const err = 'Malformed field with choices';\n    if (json.choicesOriginRef == null) {\n      throw new Error(err);\n    }\n    const choicesOrigin = (choicesOrigins || []).find(c => c.name === json.choicesOriginRef);\n    if (choicesOrigin == null) {\n      throw new Error(err);\n    }\n    if (json.choicesFilter) {\n      json.choicesFilter = AjfFormulaSerializer.fromJson(json.choicesFilter);\n    }\n    if (json.triggerConditions) {\n      json.triggerConditions = json.triggerConditions.map(t => AjfConditionSerializer.fromJson(t));\n    }\n    return createFieldWithChoices<any>({...json, choicesOrigin});\n  }\n\n  private static _formulaFieldFromJson(\n    json: AjfFieldCreate & Partial<AjfFormulaField>,\n  ): AjfFormulaField {\n    if (json.formula) {\n      json.formula = AjfFormulaSerializer.fromJson(json.formula);\n    }\n    return {\n      ...createField(json),\n      fieldType: AjfFieldType.Formula,\n    };\n  }\n\n  private static _nodeGroupFromJson(\n    json: AjfNodeCreate & Partial<AjfNodeGroup>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfNodeGroup {\n    return createNodeGroup({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _repeatingNodeFromJson(\n    json: AjfNodeCreate & Partial<AjfRepeatingNode>,\n  ): AjfRepeatingNode {\n    if (json.formulaReps) {\n      json.formulaReps = AjfFormulaSerializer.fromJson(json.formulaReps);\n    }\n    return createRepeatingNode(json);\n  }\n\n  private static _repeatingSlideFromJson(\n    json: AjfNodeCreate & Partial<AjfRepeatingSlide>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfRepeatingSlide {\n    return createRepeatingSlide({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _slideFromJson(\n    json: AjfNodeCreate & Partial<AjfSlide>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfSlide {\n    return createSlide(\n      AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfAttachmentsOriginSerializer} from './attachments-origin-serializer';\nimport {AjfChoicesOriginSerializer} from './choices-origin-serializer';\nimport {AjfNodeSerializer} from './node-serializer';\n\n/**\n *  Create an AjfForm by json schema, apply a default value for stringIdentifier and initContext\n */\nexport class AjfFormSerializer {\n  static fromJson(form: Partial<AjfForm>, context?: AjfContext): AjfForm {\n    /**\n     * create choicesOrigins by serializer\n     */\n    const choicesOrigins = (form.choicesOrigins || []).map(c =>\n      AjfChoicesOriginSerializer.fromJson(c),\n    );\n    /**\n     * create attachmentsOrigins by serializer\n     */\n    const attachmentsOrigins = (form.attachmentsOrigins || []).map(a =>\n      AjfAttachmentsOriginSerializer.fromJson(a),\n    );\n    /**\n     * create nodes by serializer\n     */\n    const nodes = (form.nodes || []).map(n =>\n      AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins),\n    ) as (AjfRepeatingSlide | AjfSlide)[];\n    return {\n      ...form,\n      choicesOrigins,\n      attachmentsOrigins,\n      nodes,\n      stringIdentifier: form.stringIdentifier || [],\n      initContext: deepCopy(context || {}),\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, Inject} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component manages the table field data.\n * It exposes methods for managing the display of controllers.\n *\n *\n * @export\n * @abstract\n * @class AjfTableFieldComponent\n */\n@Directive()\nexport abstract class AjfTableFieldComponent extends AjfBaseFieldComponent<AjfTableFieldInstance> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n\n  /**\n   *  set the current cell show to false and set the next cell show to true.\n   *\n   * @param ev\n   * @param row\n   * @param column\n   * @return {*}\n   */\n  goToNextCell(ev: Event, row: number, column: number): void {\n    if (\n      this.instance.controls.length < row ||\n      (this.instance.controls.length >= row && this.instance.controls[row].length < 1) ||\n      this.instance.controls[row][1].length < column\n    ) {\n      return;\n    }\n    const rowLength = this.instance.controls[row][1].length;\n    const currentCell = this.instance.controls[row][1][column] as AjfTableFormControl;\n    if (column + 1 >= rowLength) {\n      column = 0;\n      if (row + 1 >= this.instance.controls.length) {\n        row = 1;\n      } else {\n        row += 1;\n      }\n    } else {\n      column += 1;\n    }\n    if (typeof currentCell !== 'string') {\n      currentCell.show = false;\n    }\n    this._showCell(row, column);\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /**\n   * It resets all control.show to false and sets the control.show\n   * (identified by row and column) to true.\n   *\n   * @param row\n   * @param column\n   */\n  goToCell(row: number, column: number): void {\n    this._resetControls();\n    this._showCell(row, column);\n  }\n\n  /**\n   * it sets all controls show to false.\n   *\n   * @private\n   */\n  private _resetControls(): void {\n    this.instance.controls.forEach(row =>\n      row[1].forEach(cell => {\n        if (typeof cell !== 'string') {\n          (cell as AjfTableFormControl).show = false;\n        }\n      }),\n    );\n  }\n\n  /**\n   * It sets the control.show (identified by row and column) to true.\n   *\n   * @private\n   * @param row\n   * @param column\n   * @return {*}\n   */\n  private _showCell(row: number, column: number): void {\n    if (row >= this.instance.controls.length || column >= this.instance.controls[row][1].length) {\n      return;\n    }\n    const nextCell = this.instance.controls[row][1][column] as AjfTableFormControl;\n    if (typeof nextCell !== 'string') {\n      nextCell.show = true;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/common';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfFieldWithChoices} from './interface/fields/field-with-choices';\nimport {AjfRangeField} from './interface/fields/range-field';\nimport {AjfFormSerializer} from './serializers/form-serializer';\nimport {AjfFormCreate} from './utils/forms/create-form';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isField} from './utils/nodes/is-field';\n\nexport function generateRandomCtx(formSchema: AjfFormCreate): AjfContext[] {\n  const ctxMap: AjfContext[] = [];\n  const allFields: AjfField[] = flattenNodes(formSchema.nodes!).filter(f =>\n    isField(f),\n  ) as AjfField[];\n  const generateRandomNumberOfContext = Math.floor(Math.random() * 100) + 1;\n  for (let i = 0; i < generateRandomNumberOfContext; i++) {\n    const ctx: AjfContext = {};\n    allFields.forEach(field => {\n      switch (field.fieldType) {\n        default:\n          ctx[field.name] = 0;\n          break;\n        case AjfFieldType.Number:\n          ctx[field.name] = Math.floor(Math.random() * 1000) + 1;\n          break;\n        case AjfFieldType.Boolean:\n          ctx[field.name] = Math.random() < 0.5;\n          break;\n        case AjfFieldType.SingleChoice:\n          const singleChoices = (field as AjfFieldWithChoices<any>).choicesOrigin.choices.map(\n            c => c.value,\n          );\n          ctx[field.name] = singleChoices[Math.floor(Math.random() * singleChoices.length)];\n          break;\n        case AjfFieldType.MultipleChoice:\n          const multipleChoices = (field as AjfFieldWithChoices<any>).choicesOrigin.choices.map(\n            c => c.value,\n          );\n          ctx[field.name] = [\n            multipleChoices[Math.floor(Math.random() * multipleChoices.length)],\n            multipleChoices[Math.floor(Math.random() * multipleChoices.length)],\n          ];\n          break;\n        case AjfFieldType.Range:\n          const rangeField = field as AjfRangeField;\n          const end = rangeField.end ?? 10;\n          const start = rangeField.start ?? 1;\n          const value = Math.floor(start + Math.random() * (end + 1 - start));\n          ctx[field.name] = value;\n      }\n    });\n    ctxMap.push(ctx);\n  }\n  return ctxMap;\n}\n\nexport function buildformDatas(formSchemas: {[name: string]: AjfFormCreate}): {\n  [name: string]: AjfContext[];\n} {\n  const forms: {[name: string]: AjfContext[]} = {};\n  Object.keys(formSchemas).forEach(nameSchema => {\n    forms[nameSchema] = generateRandomCtx(AjfFormSerializer.fromJson(formSchemas[nameSchema]));\n  });\n  return forms;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {\n  createPdf,\n  Content,\n  PageOrientation,\n  TCreatedPdf,\n  TDocumentDefinitions,\n} from '@ajf/core/pdfmake';\n\nimport {AjfChoice} from '../interface/choices/choice';\nimport {AjfEmptyField} from '../interface/fields/empty-field';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfTableCell, AjfTableField} from '../interface/fields/table-field';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\n\nexport function createFormPdf(\n  form: AjfForm,\n  translate?: (s: string) => string,\n  orientation?: PageOrientation,\n  header?: Content[],\n  context?: AjfContext,\n): TCreatedPdf {\n  const t = translate ? translate : (s: string) => s;\n  const pdfDef = formToPdf(form, t, orientation, header, context);\n  return createPdf(pdfDef);\n}\n\n// ChoicesMap maps a choicesOriginRef to the list the choices.\ninterface ChoicesMap {\n  [name: string]: AjfChoice<any>[];\n}\n\nfunction stripHTML(s: string): string {\n  return s.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n\n// Given a context, lookupStringFunction returns a function that allows to retrieve\n// the field values from the context. The values are returned as print-friendly strings.\n// rep is the index of the repeating slide, if the field belongs to one.\nfunction lookupStringFunction(context?: AjfContext, rep?: number): (name: string) => string {\n  if (context == null) {\n    return (_: string) => ' ';\n  }\n  return (name: string) => {\n    if (name == null) {\n      return ' ';\n    }\n    if (rep != null) {\n      name = name + '__' + rep;\n    }\n    const val = context[name];\n    if (val == null) {\n      return ' ';\n    }\n    if (val === true) {\n      return 'yes';\n    }\n    if (val === false) {\n      return 'no';\n    }\n    return String(val);\n  };\n}\n\n// Analogous to lookupStringFunction, but for multiple-choice questions,\n// returning an array of values.\nfunction lookupArrayFunction(context?: AjfContext, rep?: number): (name: string) => string[] {\n  if (context == null) {\n    return (_: string) => [];\n  }\n  return (name: string) => {\n    if (name == null) {\n      return [];\n    }\n    if (rep != null) {\n      name = name + '__' + rep;\n    }\n    const val = context[name];\n    if (Array.isArray(val)) {\n      return val;\n    }\n    return [];\n  };\n}\n\n// Given an AjfForm, returns its pdfmake pdf document definition.\nfunction formToPdf(\n  form: AjfForm,\n  translate: (s: string) => string,\n  orientation?: PageOrientation,\n  header?: Content[],\n  context?: AjfContext,\n): TDocumentDefinitions {\n  const choicesMap: ChoicesMap = {};\n  for (const o of form.choicesOrigins) {\n    choicesMap[o.name] = o.choices;\n  }\n\n  const content = header ? [...header] : [];\n  for (const slide of form.nodes) {\n    if (slide.nodeType === AjfNodeType.AjfSlide) {\n      content.push(...slideToPdf(slide as AjfSlide, choicesMap, translate, context));\n    } else if (slide.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      content.push(\n        ...repeatingSlideToPdf(slide as AjfRepeatingSlide, choicesMap, translate, context),\n      );\n    }\n  }\n  return {content, pageOrientation: orientation};\n}\n\nfunction slideToPdf(\n  slide: AjfSlide | AjfRepeatingSlide,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n  rep?: number,\n): Content[] {\n  let label = translate(slide.label);\n  if (rep != null) {\n    label = `${label} (${translate('repeat')} ${rep})`;\n  }\n  const content: Content[] = [{text: label, fontSize: 18, bold: true, margin: [0, 15, 0, 10]}];\n  for (const field of slide.nodes as AjfField[]) {\n    content.push(...fieldToPdf(field, choicesMap, translate, context, rep));\n  }\n  return content;\n}\n\nfunction repeatingSlideToPdf(\n  slide: AjfRepeatingSlide,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n): Content[] {\n  let repeats = 3; // default, if no formData\n  const maxRepeats = 20;\n  if (context != null && slide.name != null) {\n    const r = context[slide.name];\n    if (typeof r === 'number') {\n      repeats = Math.min(r, maxRepeats);\n    }\n  }\n\n  const content = [];\n  for (let r = 0; r < repeats; r++) {\n    content.push(...slideToPdf(slide, choicesMap, translate, context, r));\n  }\n  return content;\n}\n\nfunction borderlessCell(text: string, bold?: boolean): Content {\n  return {table: {body: [[{text, bold, border: [false, false, false, false]}]]}};\n}\n\nfunction fieldToPdf(\n  field: AjfField,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n  rep?: number,\n): Content[] {\n  if (field.nodeType !== AjfNodeType.AjfField) {\n    throw new Error('not a field');\n  }\n\n  const visible =\n    context == null /* form not compiled, show all fields */ ||\n    field.visibility == null ||\n    evaluateExpression(field.visibility.condition, context);\n  if (!visible) {\n    return [];\n  }\n\n  const lookupString = lookupStringFunction(context, rep);\n\n  switch (field.fieldType) {\n    case AjfFieldType.String:\n    case AjfFieldType.Text:\n      return [\n        borderlessCell(translate(field.label)),\n        {table: {widths: ['*'], body: [[lookupString(field.name)]]}, margin: [5, 0, 0, 5]},\n      ];\n    case AjfFieldType.Formula:\n      const formula = ((field as AjfFormulaField).formula as AjfFormula).formula;\n      const value = evaluateExpression(formula, context);\n      return [\n        borderlessCell(translate(field.label)),\n        {table: {widths: ['*'], body: [[String(value)]]}, margin: [5, 0, 0, 5]},\n      ];\n    case AjfFieldType.Number:\n    case AjfFieldType.Boolean:\n    case AjfFieldType.DateInput:\n    case AjfFieldType.Time:\n      let val = lookupString(field.name);\n      // for boolean fields in compiled forms, a null value is printed as 'no':\n      if (field.fieldType === AjfFieldType.Boolean && context != null && val === ' ') {\n        val = 'no';\n      }\n      return [\n        {\n          table: {\n            widths: ['*', '*'],\n            body: [[{text: translate(field.label), border: [false, false, false, false]}, val]],\n          },\n        },\n      ];\n    case AjfFieldType.SingleChoice:\n    case AjfFieldType.MultipleChoice:\n      const choices = choicesMap[(field as any).choicesOriginRef];\n      if (context == null) {\n        // empty form\n        return choiceToPdf(field, choices, translate);\n      }\n      // compiled form, only print choices that are selected\n      const selectedValues =\n        field.fieldType === AjfFieldType.SingleChoice\n          ? [lookupString(field.name)]\n          : lookupArrayFunction(context, rep)(field.name);\n      let selectedChoices = selectedValues\n        .map(v => choices.find(c => c.value === v))\n        .filter(c => c) as AjfChoice<any>[];\n      if (selectedChoices.length === 0) {\n        selectedChoices = selectedValues.map(\n          v =>\n            ({\n              label: v,\n              value: v,\n            } as AjfChoice<string>),\n        );\n      }\n      return choiceToPdf(field, selectedChoices, translate, context);\n    case AjfFieldType.Empty:\n      const text = stripHTML(translate((field as AjfEmptyField).HTML));\n      return [borderlessCell(text, true)];\n    case AjfFieldType.Table:\n      return tableToPdf(field as AjfTableField, lookupString, translate);\n    default:\n      // yet unsupported field type\n      return [];\n  }\n}\n\nfunction choiceToPdf(\n  field: AjfField,\n  choices: AjfChoice<any>[],\n  translate: (s: string) => string,\n  context?: AjfContext,\n): Content[] {\n  let choiceLabels: string[];\n  if (choices == null || choices.length === 0) {\n    choiceLabels = [' '];\n  } else {\n    choiceLabels = choices.map(c => c.label);\n  }\n  const body = [];\n  for (const c of choiceLabels) {\n    body.push([translate(c)]);\n  }\n  let question = translate(field.label);\n  // If the form is empty (to be compiled),\n  // help the user distinguish between single- and multiple-choice questions:\n  if (context == null && field.fieldType === AjfFieldType.SingleChoice) {\n    question += ` (${translate('single choice')})`;\n  }\n  if (context == null && field.fieldType === AjfFieldType.MultipleChoice) {\n    question += ` (${translate('multipe choice')})`;\n  }\n  return [\n    {\n      columns: [\n        borderlessCell(question),\n        {\n          table: {widths: ['*'], body},\n        },\n      ],\n      margin: [0, 0, 0, 5],\n    },\n  ];\n}\n\nfunction tableToPdf(\n  table: AjfTableField,\n  lookupString: (s: string) => string,\n  translate: (s: string) => string,\n): Content[] {\n  const body: string[][] = [['', ...table.columnLabels.map(translate)]];\n  for (let i = 0; i < table.rows.length; i++) {\n    const row = [...table.rows[i]];\n    for (let j = 0; j < row.length; j++) {\n      if (typeof row[j] !== 'string') {\n        row[j] = (row[j] as AjfTableCell).formula;\n      }\n    }\n    const valsRow = (row as string[]).map(lookupString).map(translate);\n    body.push([translate(table.rowLabels[i]), ...valsRow]);\n  }\n  return [\n    borderlessCell(translate(table.label)),\n    {table: {body, widths: Array(table.columnLabels.length + 1).fill('*')}, margin: [5, 0, 0, 5]},\n  ];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from '../../interface/choices/choices-fixed-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from './create-choices-origin';\n\nexport type AjfChoicesFixedOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Partial<AjfChoicesFixedOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'fixed'\n */\nexport function createChoicesFixedOrigin<T = string | number>(\n  origin: AjfChoicesFixedOriginCreate<T>,\n): AjfChoicesFixedOrigin<T> {\n  const type = 'fixed';\n  return {...createChoicesOrigin({...origin, type}), type};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesFunctionOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesFunctionOrigin<T>, 'generator'> &\n  Partial<AjfChoicesFunctionOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'function'\n *  apply default value for label and choices\n */\nexport function createChoicesFunctionOrigin<T>(\n  origin: AjfChoicesFunctionOriginCreate<T>,\n): AjfChoicesFunctionOrigin<T> {\n  return {\n    ...origin,\n    type: 'function',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableArrayOrigin} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableArrayOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesObservableArrayOrigin<T>, 'generator'> &\n  Partial<AjfChoicesObservableArrayOrigin<T>>;\n\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'observableArray'\n *  apply default value for label and choices\n */\nexport function createChoicesObservableArrayOrigin<T>(\n  origin: AjfChoicesObservableArrayOriginCreate<T>,\n): AjfChoicesObservableArrayOrigin<T> {\n  return {\n    ...origin,\n    type: 'observableArray',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesObservableOrigin<T>, 'generator'> &\n  Partial<AjfChoicesObservableOrigin<T>>;\n\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'observable'\n *  apply default value for label and choices\n */\nexport function createChoicesObservableOrigin<T>(\n  origin: AjfChoicesObservableOriginCreate<T>,\n): AjfChoicesObservableOrigin<T> {\n  return {\n    ...origin,\n    type: 'observable',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesPromiseOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesPromiseOrigin<T>, 'generator'> &\n  Partial<AjfChoicesPromiseOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'promise'\n *  apply default value for label and choices\n */\nexport function createChoicesPromiseOrigin<T>(\n  origin: AjfChoicesPromiseOriginCreate<T>,\n): AjfChoicesPromiseOrigin<T> {\n  return {\n    ...origin,\n    type: 'promise',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * isChoicesOrigin check if co parameter is defined and if correctly implements choicheOrigin\n * interface\n */\nexport function isChoicesOrigin(co: any): boolean {\n  return (\n    co != null &&\n    typeof co === 'object' &&\n    co.name != null &&\n    typeof co.name === 'string' &&\n    co.label != null &&\n    typeof co.label === 'string' &&\n    ['fixed', 'promise', 'observable', 'observableArray', 'function'].indexOf(co.type) > -1 &&\n    co.choices instanceof Array\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {isChoicesOrigin} from './is-choices-origin';\n\n/**\n * isChoicesFixedOrigin check if origin parameter is ChoicesOrigin and  type is 'fixed'\n */\nexport function isChoicesFixedOrigin(origin: AjfChoicesOrigin<any>): boolean {\n  return isChoicesOrigin(origin) && origin.type === 'fixed';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is Number.\n */\nexport function isNumberField(field: AjfField): boolean {\n  return field.fieldType === AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '../../interface/forms/form';\nimport {AjfFormStringIdentifier} from '../../interface/forms/form-string-identifier';\n\nexport type AjfFormCreate = Partial<AjfForm>;\n\n/**\n * It creates an Ajf form.\n * Any missing mandatory attributes are initialized with the respective\n * empty object\n *\n * @export\n * @param [form={}]\n * @return {*}\n */\nexport function createForm(form: AjfFormCreate = {}): AjfForm {\n  return {\n    nodes: form.nodes || [],\n    choicesOrigins: form.choicesOrigins || [],\n    attachmentsOrigins: form.attachmentsOrigins || [],\n    initContext: form.initContext || {},\n    stringIdentifier: form.stringIdentifier || ([] as AjfFormStringIdentifier[]),\n    supplementaryInformations: form.supplementaryInformations,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the length of digits is less than or equal to maxValue and returns\n * an AjfValidation.\n */\nexport function maxDigitsValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length <= ${maxValue.toString()} : false`,\n    errorMessage: 'Digits count must be <= ' + maxValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the value is less than or equal to maxValue and returns\n * an AjfValidation.\n */\nexport function maxValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value <= ' + maxValue.toString(),\n    errorMessage: 'Value must be <= ' + maxValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the length of digits is greater than or equal to minValue and returns\n * an AjfValidation.\n */\nexport function minDigitsValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + minValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the value is geater than or equal to minValue and returns\n * an AjfValidation.\n */\nexport function minValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + minValue.toString(),\n    errorMessage: 'Value must be >= ' + minValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It creates an AjfValidation with notEmpty condition.\n */\nexport function notEmptyValidation(): AjfValidation {\n  return createValidation({condition: `notEmpty($value)`, errorMessage: `Value must not be empty`});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from './create-warning';\n\nexport function notEmptyWarning(): AjfWarning {\n  return createWarning({condition: 'notEmpty($value)', warningMessage: 'Value must not be empty'});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './as-field-instance';\nexport * from './as-repeating-slide-instance';\nexport * from './base-field';\nexport * from './bool-to-int';\nexport * from './date-value';\nexport * from './date-value-string';\nexport * from './errors';\nexport * from './expand-input-with-choices';\nexport * from './field';\nexport * from './field-host';\nexport * from './field-icon';\nexport * from './field-is-valid';\nexport * from './field-service';\nexport * from './field-utils';\nexport * from './field-warning-alert-result';\nexport * from './field-with-choices';\nexport * from './file-field';\nexport * from './form';\nexport * from './form-renderer';\nexport * from './form-string-identifier';\nexport * from './forms-module';\nexport * from './get-table-cell-control';\nexport * from './increment';\nexport * from './input-field';\nexport * from './image-field';\nexport * from './is-cell-editable';\nexport * from './is-readonly-input-field';\nexport * from './is-repeating-slide';\nexport * from './node-complete-name';\nexport * from './range';\nexport * from './read-only-file-field';\nexport * from './read-only-image-field';\nexport * from './read-only-select-field';\nexport * from './read-only-video-url-field';\nexport * from './search-alert-threshold';\nexport * from './serializers/attachments-origin-serializer';\nexport * from './serializers/choices-origin-serializer';\nexport * from './serializers/form-serializer';\nexport * from './serializers/node-serializer';\nexport * from './serializers/validation-group-serializer';\nexport * from './serializers/warning-group-serializer';\nexport * from './table-field';\nexport * from './table-row-class';\nexport * from './table-visible-columns';\nexport * from './valid-slide';\nexport * from './validation-service';\nexport * from './video-url-field';\nexport * from './warning-alert-service';\nexport * from './random-ajf-context-generator';\nexport * from './read-only-field';\nexport * from './read-only-table-field';\n\nexport * from './form-to-pdf/form-to-pdf';\n\nexport * from './interface/attachments/attachment';\nexport * from './interface/attachments/attachments-fixed-origin';\nexport * from './interface/attachments/attachments-origin';\nexport * from './interface/attachments/attachments-type';\nexport * from './interface/choices/choice';\nexport * from './interface/choices/choices-fixed-origin';\nexport * from './interface/choices/choices-function';\nexport * from './interface/choices/choices-function-origin';\nexport * from './interface/choices/choices-observable-array-origin';\nexport * from './interface/choices/choices-observable-origin';\nexport * from './interface/choices/choices-origin';\nexport * from './interface/choices/choices-origin-type';\nexport * from './interface/choices/choices-promise-origin';\nexport * from './interface/choices/choices-type';\nexport * from './interface/fields/boolean-field';\nexport * from './interface/fields/date-field';\nexport * from './interface/fields/date-input-field';\nexport * from './interface/fields/empty-field';\nexport * from './interface/fields/field';\nexport * from './interface/fields/field-components-map';\nexport * from './interface/fields/field-size';\nexport * from './interface/fields/field-type';\nexport * from './interface/fields/field-with-choices';\nexport * from './interface/fields/file-field';\nexport * from './interface/fields/formula-field';\nexport * from './interface/fields/multiple-choice-field';\nexport * from './interface/fields/number-field';\nexport * from './interface/fields/range-field';\nexport * from './interface/fields/single-choice-field';\nexport * from './interface/fields/string-field';\nexport * from './interface/fields/table-field';\nexport * from './interface/fields/text-field';\nexport * from './interface/fields/time-field';\nexport * from './interface/fields-instances/date-field-instance';\nexport * from './interface/fields-instances/date-input-field-instance';\nexport * from './interface/fields-instances/empty-field-instance';\nexport * from './interface/fields-instances/field-instance';\nexport * from './interface/fields-instances/field-state';\nexport * from './interface/fields-instances/field-with-choices-instance';\nexport * from './interface/fields-instances/formula-field-instance';\nexport * from './interface/fields-instances/range-field-instance';\nexport * from './interface/fields-instances/table-field-instance';\nexport * from './interface/forms/form';\nexport * from './interface/forms/form-string-identifier';\nexport * from './interface/nodes/container-node';\nexport * from './interface/nodes/node';\nexport * from './interface/nodes/node-group';\nexport * from './interface/nodes/node-link';\nexport * from './interface/nodes/node-type';\nexport * from './interface/nodes/repeating-container-node';\nexport * from './interface/nodes/repeating-node';\nexport * from './interface/nodes-instances/container-node-instance';\nexport * from './interface/nodes-instances/node-group-instance';\nexport * from './interface/nodes-instances/node-instance';\nexport * from './interface/nodes-instances/repeating-container-node-instance';\nexport * from './interface/nodes-instances/repeating-node-instance';\nexport * from './interface/operations/nodes-instances-operation';\nexport * from './interface/operations/nodes-operation';\nexport * from './interface/operations/renderer-update-map-operation';\nexport * from './interface/renderer-maps/update-map';\nexport * from './interface/slides/repeating-slide';\nexport * from './interface/slides/slide';\nexport * from './interface/slides-instances/base-slide-instance';\nexport * from './interface/slides-instances/repeating-slide-instance';\nexport * from './interface/slides-instances/slide-instance';\nexport * from './interface/validation/validation';\nexport * from './interface/validation/validation-group';\nexport * from './interface/validation/validation-results';\nexport * from './interface/warning/warning';\nexport * from './interface/warning/warning-group';\nexport * from './interface/warning/warning-result';\n\nexport * from './utils/choices/create-choices-fixed-origin';\nexport * from './utils/choices/create-choices-function-origin';\nexport * from './utils/choices/create-choices-observable-array-origin';\nexport * from './utils/choices/create-choices-observable-origin';\nexport * from './utils/choices/create-choices-origin';\nexport * from './utils/choices/create-choices-promise-origin';\nexport * from './utils/choices/init-choices-origin';\nexport * from './utils/choices/is-choices-fixed-origin';\nexport * from './utils/choices/is-choices-origin';\nexport * from './utils/fields/create-field';\nexport * from './utils/fields/is-custom-field-with-choices';\nexport * from './utils/fields/is-field-with-choices';\nexport * from './utils/fields/is-number-field';\nexport * from './utils/fields-instances/create-field-instance';\nexport * from './utils/fields-instances/create-field-with-choices-instance';\nexport * from './utils/forms/build-form-string-identifier';\nexport * from './utils/forms/create-form';\nexport * from './utils/nodes/create-container-node';\nexport * from './utils/nodes/create-node';\nexport * from './utils/nodes/flatten-nodes';\nexport * from './utils/nodes/is-container-node';\nexport * from './utils/nodes/is-field';\nexport * from './utils/nodes/is-repeating-container-node';\nexport * from './utils/nodes/is-slides-node';\nexport * from './utils/nodes-instances/create-node-instance';\nexport * from './utils/validation/create-validation';\nexport * from './utils/validation/create-validation-group';\nexport * from './utils/warning/create-warning';\nexport * from './utils/warning/create-warning-group';\nexport * from './utils/validation/max-digits-validation';\nexport * from './utils/validation/max-validation';\nexport * from './utils/validation/min-digits-validation';\nexport * from './utils/validation/min-validation';\nexport * from './utils/validation/not-empty-validation';\nexport * from './utils/warning/not-empty-warning';\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["obsOf","CoreComponent"],"mappings":"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"}