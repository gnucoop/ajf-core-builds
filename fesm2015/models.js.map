{"version":3,"file":"models.js","sources":["../../../../../../src/core/models/context.ts","../../../../../../src/core/models/error.ts","../../../../../../src/core/models/interface/condition.ts","../../../../../../src/core/models/interface/formula.ts","../../../../../../src/core/models/interface/validation-function.ts","../../../../../../src/core/models/utils/create-condition.ts","../../../../../../src/core/models/serializers/condition-serializer.ts","../../../../../../src/core/models/utils/create-formula.ts","../../../../../../src/core/models/serializers/formula-serializer.ts","../../../../../../src/core/models/utils/always-condition.ts","../../../../../../src/core/models/utils/expression-utils.ts","../../../../../../src/core/models/utils/get-context-string.ts","../../../../../../src/core/models/utils/never-condition.ts","../../../../../../src/core/models/utils/normalize-expression.ts","../../../../../../src/core/models/utils/validate-expression.ts","../../../../../../src/core/models/public-api.ts","../../../../../../src/core/models/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfContext = import('@ajf/core/common').AjfContext;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport class AjfError extends Error {\n  stack: string;\n  get name(): string {\n    return 'AjfError';\n  }\n  get message(): string {\n    return this._message;\n  }\n  // this private string is the error message\n  private _message: string;\n  /**\n   * this constructor will init the message error\n   */\n  constructor(message?: string) {\n    super(message);\n\n    // Set the prototype explicitly. Workaround needed in TS >= 2.1 when extending built-ins\n    // See: https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md\n    Object.setPrototypeOf(this, AjfError.prototype);\n\n    this._message = message || '';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * A string expression representing a condition to be evaluated\n * (eg. for a visibility or validation check)\n */\nexport interface AjfCondition {\n  /**\n   * The string expression to be evaluated\n   */\n  condition: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfFormula {\n  formula: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfValidationFn = {\n  fn: any\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '../interface/condition';\n\n/**\n * It Creates an AjfCondition by conditio.\n * If condition.condition is not defined will be assigned ''.\n */\nexport function createCondition(condition: Partial<AjfCondition> = {}): AjfCondition {\n  return {condition: condition.condition || ''};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '../interface/condition';\nimport {createCondition} from '../utils/create-condition';\n\nexport class AjfConditionSerializer {\n  static fromJson(json: Partial<AjfCondition>): AjfCondition {\n    return createCondition(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '../interface/formula';\n\n/**\n * It Creates an AjfFormula.\n * If formula.formula is not defined will be assigned ''.\n */\nexport function createFormula(formula: Partial<AjfFormula> = {}): AjfFormula {\n  return {formula: formula.formula || ''};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '../interface/formula';\nimport {createFormula} from '../utils/create-formula';\n\nexport class AjfFormulaSerializer {\n  static fromJson(json: Partial<AjfFormula>): AjfFormula {\n    return createFormula(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '../interface/condition';\nimport {createCondition} from './create-condition';\n/**\n * It creates a true AjfCondidion.\n */\nexport function alwaysCondition(): AjfCondition {\n  return createCondition({condition: 'true'});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/common';\nimport * as dateFns from 'date-fns';\nimport {tokenize} from 'esprima';\nimport * as numbroMod from 'numbro';\n\nimport {AjfValidationFn} from '../interface/validation-function';\n\nlet execContext: any = {};\n\nconst numbro = numbroMod.default || numbroMod;\nexport interface Form {\n  [key: string]: string|number|null;\n}\n\nconst MAX_REPS = 30;\n\nexport const dateUtils = {\n  addDays: dateFns.addDays,\n  addMonths: dateFns.addMonths,\n  addYears: dateFns.addYears,\n  endOfISOWeek: dateFns.endOfISOWeek,\n  format: dateFns.format,\n  getDay: dateFns.getDay,\n  parse: dateFns.parseISO,\n  startOfMonth: dateFns.startOfMonth,\n  startOfISOWeek: dateFns.startOfISOWeek\n};\n\nexport class AjfExpressionUtils {\n  // TODO what is it for\n  static UTIL_FUNCTIONS = '';\n  /**\n   * It is a key-value dictionary, that mapping all Ajf validation functions.\n   */\n  static utils: {[name: string]: AjfValidationFn} = {\n    digitCount: {fn: digitCount},\n    decimalCount: {fn: decimalCount},\n    isInt: {fn: isInt},\n    notEmpty: {fn: notEmpty},\n    valueInChoice: {fn: valueInChoice},\n    scanGroupField: {fn: scanGroupField},\n    sum: {fn: sum},\n    dateOperations: {fn: dateOperations},\n    round: {fn: round},\n    extractArray: {fn: extractArray},\n    extractSum: {fn: extractSum},\n    extractArraySum: {fn: extractArraySum},\n    drawThreshold: {fn: drawThreshold},\n    extractDates: {fn: extractDates},\n    lastProperty: {fn: lastProperty},\n    sumLastProperties: {fn: sumLastProperties},\n    calculateTrendProperty: {fn: calculateTrendProperty},\n    calculateTrendByProperties: {fn: calculateTrendByProperties},\n    calculateAvgProperty: {fn: calculateAvgProperty},\n    calculateAvgPropertyArray: {fn: calculateAvgPropertyArray},\n    alert: {fn: alert},\n    formatNumber: {fn: formatNumber},\n    formatDate: {fn: formatDate},\n    isoMonth: {fn: isoMonth},\n    getCoordinate: {fn: getCoordinate},\n    Math: {fn: Math},\n    parseInt: {fn: parseInt},\n    parseFloat: {fn: parseFloat},\n    parseDate: {fn: dateUtils.parse},\n    Date: {fn: Date},\n    COUNTFORMS: {fn: COUNTFORMS},\n    COUNTFORMS_UNIQUE: {fn: COUNTFORMS_UNIQUE},\n    SUM: {fn: SUM},\n    MEAN: {fn: MEAN},\n    PERCENT: {fn: PERCENT},\n    LAST: {fn: LAST},\n    MAX: {fn: MAX},\n    MEDIAN: {fn: MEDIAN},\n    MODE: {fn: MODE},\n  };\n}\n\nexport function evaluateExpression(\n    expression: string, context?: AjfContext, forceFormula?: string): any {\n  let formula = forceFormula || expression || '';\n  if (formula === '') {\n    return '';\n  }\n  if (formula === 'true') {\n    return true;\n  }\n  if (formula === 'false') {\n    return false;\n  }\n  if (context != null && context[formula] !== undefined) {\n    return context[formula];\n  }\n  if (/^\"[^\"]*\"$/.test(formula)) {\n    return formula.replace(/^\"+|\"+$/g, '');\n  }\n  const identifiers =\n      tokenize(formula).filter((t: any) => t.type === 'Identifier').map((t: any) => t.value);\n  const ctx: any[] = [];\n  identifiers.forEach((key: string) => {\n    let val: any = null;\n    if (context != null && context[key] !== undefined) {\n      val = context[key];\n    } else if (AjfExpressionUtils.utils[key] !== undefined) {\n      const util = AjfExpressionUtils.utils[key];\n      val = util.fn;\n    }\n    ctx.push(val);\n  });\n  identifiers.push('execContext');\n  ctx.push(execContext);\n\n  try {\n    let f = new Function(...identifiers, `return ${formula}`);\n    const res = f(...ctx);\n    f = <any>null;\n    return res;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * It returns the count of digit inside x.\n */\nexport function digitCount(x: number): number {\n  if (isNaN(x) || typeof (x) !== 'number') {\n    return 0;\n  }\n  if (!isFinite(x)) {\n    return Infinity;\n  }\n  return x.toString().replace(/[^0-9]/g, '').length;\n}\n/**\n * It is count the count of decimal digit inside s.\n */\nexport function decimalCount(x: string|number): number {\n  if (typeof x === 'string') {\n    x = parseFloat(x);\n  }\n  if (typeof x !== 'number' || isNaN(x)) {\n    return 0;\n  }\n  const parts = x.toString().split('.');\n  return parts.length > 1 ? parts[1].length : 0;\n}\n/**\n * It is true if x is an integer.\n */\nexport function isInt(x: string|number): boolean {\n  if (typeof (x) === 'string') {\n    return /^-?\\d+$/.test(x);\n  }\n  if (typeof (x) === 'number') {\n    return Math.round(x) === x;\n  }\n  return false;\n}\n/**\n * It is true if x is not empty.\n */\nexport function notEmpty(x: any): boolean {\n  return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n}\n/**\n * It is true if array contains x or array is equal to x.\n */\nexport function valueInChoice(array: any[], x: any): boolean {\n  return (array || []).indexOf(x) > -1 || array === x;\n}\n/**\n * It applies callback for reps times and accumulate the result in acc.\n */\nexport function scanGroupField(reps: number, acc: any, callback: any): any {\n  for (let i = 0; i < reps; i++) {\n    acc = callback(acc, i);\n  }\n  return acc;\n}\n/**\n * It returns the sum of the array values.\n */\nexport function sum(array: any[]): any {\n  return array.reduce((a, b) => a + b, 0);\n}\n/**\n * It applies add/remove(operation) v (day/month/year)period to dstring and return new format date.\n */\n// TODO check if deprecated instead refacotoring parameter type\n// TODO (dString: string|null, period:'day'|'month'|'year',\n// TODO operation: 'add/remove' = 'add', v:number)\nexport function dateOperations(dString: string, period: string, operation: string, v: any): string {\n  const fmt = 'mm/dd/yyyy';\n  let d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n  if (operation == 'remove') {\n    v = -v;\n  }\n  let dateOp;\n  switch (period) {\n    case 'day':\n      dateOp = dateUtils.addDays;\n      break;\n    case 'month':\n      dateOp = dateUtils.addMonths;\n      break;\n    case 'year':\n      dateOp = dateUtils.addYears;\n      break;\n    default:\n      return '';\n  }\n  return dateUtils.format(dateOp(d, v), fmt);\n}\n/**\n * It rounds the num with the value of digits\n */\nexport function round(num: number|string, digits: number): number {\n  digits = digits || 0;\n  let f;\n  if (typeof num !== 'number') {\n    try {\n      f = parseFloat(num);\n    } catch (e) {\n    }\n  } else {\n    f = num;\n  }\n  if (f == null || isNaN(f)) {\n    f = 0;\n  }\n  const m = Math.pow(10, digits);\n  return Math.round(f * m) / m;\n}\n/**\n * It extracts property from source.\n * for every element of source if property and property2 are defined return the sum\n * else if only property is defined return him.\n */\nexport function extractArray(source: any[], property: string, property2?: string): any[] {\n  source = (source || []).slice(0);\n  const l = source.length;\n  const res: any[] = [];\n  for (let i = 0; i < l; i++) {\n    if (source[i][property] != null && property2 != null && source[i][property2] != null) {\n      res.push(Number(source[i][property]) + Number(source[i][property2]));\n    } else if (source[i][property] != null) {\n      res.push(source[i][property]);\n    }\n  }\n  return res;\n}\n/**\n * It returns the sum of all defined properties of each element of source.\n */\nexport function extractSum(source: any[], properties: string[]): number {\n  let sumVal = 0;\n  properties = (properties || []).slice(0);\n  const l = properties.length;\n\n  for (let i = 0; i < l; i++) {\n    const array = extractArray(source, properties[i]);\n    const leng = array.length;\n    for (let j = 0; j < leng; j++) {\n      if (!isNaN(Number(array[j]))) {\n        sumVal += Number(array[j]);\n      }\n    }\n  }\n  return sumVal;\n}\n/**\n * It returns a number array that contains the sum of properties value inside the source.\n * extractArraySum([{a: 5}, {b: 1}, {a: 5, b: 1}], ['a', 'b']); =&gt; [6,6]\n */\nexport function extractArraySum(source: any[], properties: string[]): any[] {\n  const arrays: any[] = [];\n  properties = (properties || []).slice(0);\n\n  for (let i = 0; i < properties.length; i++) {\n    const array = extractArray(source, properties[i]);\n    arrays.push(array);\n  }\n\n  const res: any[] = [];\n  if (arrays.length > 0) {\n    for (let weekI = 0; weekI < arrays[0].length; weekI++) {\n      let sumVal = 0;\n      for (let propI = 0; propI < properties.length; propI++) {\n        sumVal = sumVal + Number(arrays[propI][weekI]);\n      }\n      res.push(sumVal);\n    }\n  }\n  return res;\n}\n/**\n * Draw a threshold line on chart related to the property.\n */\nexport function drawThreshold(source: any[], property: string, threshold: any[]): any[] {\n  source = (source || []).slice(0);\n  threshold = threshold || [0];\n  if (!(threshold instanceof Array)) {\n    threshold = [threshold];\n  }\n  const l = source.length;\n  const res: any[] = [];\n  let count = 0;\n  for (let i = 0; i < l; i++) {\n    if (source[i][property] != null) {\n      if (threshold.length > count) {\n        res.push(threshold[count]);\n      } else {\n        res.push(threshold[0]);\n      }\n      count++;\n    }\n  }\n  return res;\n}\n/**\n * Extract the dates of the source object with property != null\n */\nexport function extractDates(source: any[], property: string, fmt: string): string[] {\n  source = (source || []).slice(0);\n  const l = source.length;\n  const res: any = [];\n  let prefix = '';\n  for (let i = 0; i < l; i++) {\n    if (source[i][property] != null) {\n      switch (fmt) {\n        case 'WW':\n        case 'ww':\n          prefix = 'W';\n          res.push(prefix + formatDate(source[i]['date_start'], fmt));\n          break;\n        case 'MM':\n        case 'mm':\n          prefix = 'M';\n          res.push(prefix + isoMonth(source[i]['date_start'], fmt));\n          break;\n        default:\n          prefix = '';\n          res.push(prefix + formatDate(source[i]['date_start'], fmt));\n      }\n    }\n  }\n  return res;\n}\n/**\n * Extract the last property contains in source != null\n */\nexport function lastProperty(source: any, property: string): any {\n  source = (source || []).slice(0);\n  let l = source.length - 1;\n\n  while (l >= 0 && source[l][property] == null) {\n    l--;\n    if (l < 0) {\n      return '';\n    }\n  }\n  return l >= 0 ? source[l][property] : '';\n}\n/**\n * It sum the LAst properties of source.\n */\nexport function sumLastProperties(source: any[], properties: string[]): number {\n  source = (source || []).slice(0);\n  let sumVal = 0;\n  let val = 0;\n  for (let i = 0; i < properties.length; i++) {\n    val = Number(lastProperty(source, properties[i]));\n    if (!isNaN(val)) {\n      sumVal += val;\n    }\n  }\n  return sumVal;\n}\n/**\n * Compute the trend of the property contained on the source.\n */\nexport function calculateTrendProperty(source: any[], property: string): string {\n  source = (source || []).slice(0);\n  let last = source.length - 1;\n  while (source[last][property] == null) {\n    if (last == 0) {\n      break;\n    }\n    last--;\n  }\n  let lastLast = last - 1;\n  if (last == 0) {\n    lastLast = last;\n  } else {\n    while (source[lastLast][property] == null) {\n      if (lastLast == 0) {\n        lastLast = last;\n        break;\n      }\n      lastLast--;\n    }\n  }\n\n  const lastProp = source[last] ? (source[last][property] || 0) : 0;\n  const lastLastProp = source[lastLast] ? (source[lastLast][property] || 0) : 0;\n\n  if (lastProp == lastLastProp) {\n    return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n  } else if (lastProp > lastLastProp) {\n    return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n  } else {\n    return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n  }\n}\n/**\n * Compute the average value of the property contained on the source.\n */\nexport function calculateTrendByProperties(source: any[], properties: string[]): string {\n  const arraysum = extractArraySum(source, properties);\n\n  const lastProp = arraysum.length > 0 ? (arraysum[arraysum.length - 1] || 0) : 0;\n  const lastLastProp = arraysum.length > 1 ? (arraysum[arraysum.length - 2] || 0) : lastProp;\n\n  if (lastProp == lastLastProp) {\n    return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n  } else if (lastProp > lastLastProp) {\n    return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n  } else {\n    return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n  }\n}\n/**\n *\n */\nexport function calculateAvgProperty(\n    source: any[], property: string, range: number, coefficient: number): number {\n  source = (source || []).slice(0);\n\n  coefficient = coefficient || 1;\n  range = range || 12;\n\n  let l = source.length;\n  let res = 0;\n  let counter = 0;\n  let noZero = 0;\n\n  if (l < range) {\n    range = l;\n  }\n\n  while (range != 0) {\n    if (source[l - 1][property] != null) {\n      counter++;\n      res += Number(source[l - 1][property]);\n\n      if (source[l - 1][property] > 0) {\n        noZero++;\n      }\n    }\n    l--;\n    range--;\n  }\n\n  if (coefficient == 0) {\n    return noZero;\n  } else {\n    return round((res / counter) * coefficient, 2) || 0;\n  }\n}\n\nexport function calculateAvgPropertyArray(\n    source: any[], properties: string[], range: number, coefficient: number): number[] {\n  source = (source || []).slice(0);\n  const resArr: any[] = [];\n\n  if (properties && properties.length > 0) {\n    let avg = 0;\n\n    coefficient = coefficient || 1;\n    range = range || 12;\n\n    const sourceArr = properties.length > 1 ? extractArraySum(source, properties) :\n                                              extractArray(source, properties[0]);\n\n    let l = sourceArr.length;\n\n    for (let len = l; len > 0; len--) {\n      let res = 0;\n      let counter = 0;\n      let noZero = 0;\n\n      if (len < range) {\n        range = len;\n      }\n\n      for (let r = 1; r <= range; r++) {\n        let val = sourceArr[len - r];\n        if (val != null) {\n          counter++;\n          res += Number(val);\n          if (val > 0) {\n            noZero++;\n          }\n        }\n      }\n\n      if (counter > 0) {\n        if (coefficient == 0) {\n          avg = noZero;\n        } else {\n          avg = (res / counter) * coefficient || 0;\n        }\n        resArr.push(round(avg, 2));\n      }\n    }\n  }\n  return resArr.reverse();\n}\n\nexport function alert(source: any[], property: string, threshold: number): string {\n  source = (source || []).slice(0);\n\n  if (lastProperty(source, property) > threshold) {\n    return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n  } else {\n    return '<p></p>';\n  }\n}\n\nexport function formatNumber(num: number, fmt?: string): string {\n  fmt = fmt || '0,0[.]0';\n  return numbro(num).format(fmt);\n}\n\nexport function formatDate(date: Date|string, fmt?: string): string {\n  fmt = fmt || 'mm-DD-yyyy';\n  return dateUtils.format(typeof date === 'string' ? dateUtils.parse(date) : date, fmt);\n}\n\nexport function isoMonth(date: Date, fmt?: string): string {\n  fmt = fmt || 'mm';\n  const du = dateUtils;\n  return du.format(du.addDays(du.startOfISOWeek(date), 3), fmt);\n}\n\nexport function getCoordinate(source: any, zoom?: number): [number, number, number] {\n  zoom = zoom || 6;\n  if (source == null) {\n    return [51.505, -0.09, zoom];\n  } else {\n    return [source[0], source[1], zoom];\n  }\n}\n\n/**\n * Counts the collected forms. The form name must be specified. An optional condition can be added\n * to discriminate which forms to count in.\n */\nexport function COUNTFORMS(forms: Form[], expression: string = 'true'): number {\n  forms = (forms || []).slice(0);\n  if (expression === 'true') {\n    return forms.length;\n  }\n  if (forms.length === 0) {\n    return 0;\n  }\n  const isInRepeatingSlide = expression.includes(`__`);\n  if (isInRepeatingSlide) {\n    let count = 0;\n\n    forms.forEach(f => {\n      for (let i = 0; i <= MAX_REPS; i++) {\n        if (Object.keys(f).filter(key => key.includes(`__${i}`)).length === 0) {\n          break;\n        }\n        if (evaluateExpression(expression.replace('__', `__${i}`)), f) {\n          count++;\n        }\n      }\n    });\n\n    return count;\n\n  } else {\n    return forms.filter((f) => evaluateExpression(expression, f)).length;\n  }\n}\n\n/**\n * Counts the amount of unique form values for a specific field. The form name must be specified. An\n * optional condition can be added to discriminate which forms to count in\n */\nexport function COUNTFORMS_UNIQUE(forms: Form[], fieldName: string, expression?: string): number {\n  forms = (forms || []).slice(0);\n  const values: string|number[] = [];\n\n  if (expression != null) {\n    forms = forms.filter(f => evaluateExpression(expression as string, f));\n  }\n\n  forms.forEach(f => {\n    values.push(evaluateExpression(fieldName, f));\n  });\n\n  return Array.from(new Set(values)).length;\n}\n\n/**\n * Aggregates and sums the values of one or more. An optional condition can be added to discriminate\n * which forms to take for the sum.\n */\nexport function SUM(forms: Form[], expression: string, condition?: string): number {\n  let acc = 0;\n  forms = (forms || []).slice(0);\n\n  if (expression == null) {\n    return 0;\n  }\n  if (condition != null) {\n    forms = forms.filter((f) => evaluateExpression(condition, f));\n  }\n  const isInRepeatingSlide = expression.includes(`__`);\n  if (isInRepeatingSlide) {\n    forms.forEach(f => {\n      for (let i = 0; i <= MAX_REPS; i++) {\n        if (Object.keys(f).filter(key => key.includes(`__${i}`)).length === 0) {\n          break;\n        }\n        const evaluatedExpression = evaluateExpression(expression.replace('__', `__${i}`), f);\n        if (Number.isFinite(evaluateExpression)) {\n          acc += evaluatedExpression;\n        }\n      }\n    });\n  } else {\n    forms.forEach((f) => acc += evaluateExpression(expression, f));\n  }\n\n  return acc;\n}\n\n/**\n * Calculates the mean of a simple or derived value. An optional condition can be added to\n * discriminate which forms to take for the sum.\n */\nexport function MEAN(forms: Form[], expression: string): number {\n  forms = (forms || []).slice(0);\n  expression = (expression || '');\n  const length = forms.length;\n  if (length === 0) {\n    return 0;\n  }\n  let acc = 0;\n  forms.forEach((f) => {\n    acc += evaluateExpression(expression, f);\n  });\n  return Math.trunc(acc / length);\n}\n\n/**\n * Calculates the % between two members.\n */\nexport function PERCENT(value1: number, value2: number): string {\n  const res = +value1 / +value2;\n\n  return Number.isFinite(res) ? `${res}%` : 'err';\n}\n\n/**\n * Calculates the expression in the last form by date.\n */\nexport function LAST(forms: Form[], expression: string, date = 'date_end'): number {\n  forms = (forms || []).slice(0).sort((a, b) => {\n    const dateA = new Date(b[date] as string).getTime();\n    const dateB = new Date(a[date] as string).getTime();\n    return dateA - dateB;\n  });\n  if (forms.length > 0 && expression != null) {\n    const lastForm = forms[forms.length - 1] || [];\n    return evaluateExpression(expression, lastForm);\n  }\n  return 0;\n}\n\n/**\n * Calculates the max value of the field.\n */\nexport function MAX(forms: Form[], fieldName: string): number {\n  forms = (forms || []).slice(0);\n  let max = 0;\n  forms.forEach(form => {\n    if (form[fieldName] != null && !isNaN(form[fieldName] as number) &&\n        (form[fieldName] as number) > max) {\n      max = form[fieldName] as number;\n    }\n  });\n  return max;\n}\n\n/**\n * Calculates the median value of the field.\n */\nexport function MEDIAN(forms: Form[], fieldName: string): number {\n  forms = (forms || []).slice(0);\n  const numbers: number[] =\n      forms.filter(f => f[fieldName] != null && !isNaN(f[fieldName] as number))\n          .map(f => f[fieldName] as number)\n          .sort((a, b) => a - b)\n          .filter((item, pos, self) => self.indexOf(item) == pos);\n\n  return Number.isInteger(numbers.length / 2) ?\n      numbers[numbers.length / 2] :\n      (numbers[+parseInt(`${numbers.length - 1 / 2}`) / 2] +\n       numbers[+parseInt(`${numbers.length - 1 / 2}`) / 2 + 1]) /\n          2;\n}\n\n/**\n * Calculates the mode value of the field.\n */\nexport function MODE(forms: Form[], fieldName: string): number[] {\n  forms = (forms || []).slice(0);\n  let maxCount = 0;\n  const map: {[key: number]: number} = {};\n  forms.forEach(f => {\n    const value = f[fieldName] as number;\n    if (value != null) {\n      map[value] = map[value] != null ? map[value] + 1 : 1;\n    }\n    if (map[value] > maxCount) {\n      maxCount = map[value];\n    }\n  });\n  return Object.keys(map).filter(v => map[+v] === maxCount).map(v => +v);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/common';\n\nimport {AjfExpressionUtils} from './expression-utils';\n\nexport function getContextString(context?: AjfContext): string {\n  let fstr = AjfExpressionUtils.UTIL_FUNCTIONS;\n  if (context instanceof Array) {\n    for (let i = 0; i < context.length; i++) {\n      fstr = `${fstr}var ${context[i]} = true;`;\n    }\n  } else if (context != null) {\n    Object.keys(context).forEach(x => {\n      let val: any = context[x];\n      if (val == null || isNaN(Number(val)) || val === '' || val instanceof Array) {\n        if (val instanceof Array) {\n          for (let i = 0; i < val.length; i++) {\n            val[i] =\n                (val == null || isNaN(Number(val[i])) || val[i] === '') && val[i] || Number(val[i]);\n          }\n        }\n        val = JSON.stringify(val);\n      } else {\n        val = Number(val);\n      }\n      fstr = `${fstr}var ${x} = ${val}; `;\n    });\n  }\n  return fstr;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '../interface/condition';\nimport {createCondition} from './create-condition';\n\n/**\n * It creates a false AjfCondidion.\n */\nexport function neverCondition(): AjfCondition {\n  return createCondition({condition: 'false'});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {tokenize} from 'esprima';\n\nexport function normalizeExpression(\n    formula: string, ancestorsNames: {[prop: string]: number}, prefix: number[]): string {\n  const ancestorsNameStrings = Object.keys(ancestorsNames);\n  const tokens = tokenize(formula)\n                     .filter((token: any) => token.type == 'Identifier' && token.value != '$value')\n                     .map((token: any) => token.value);\n  tokens.forEach((t: any) => {\n    if (ancestorsNameStrings.indexOf(t) > -1) {\n      formula = formula.replace(\n          new RegExp(`\\\\b${t}\\\\b`, 'g'), `${t}__${prefix.slice(ancestorsNames[t]).join('__')}`);\n    }\n  });\n  return formula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/common';\n\nimport {getContextString} from './get-context-string';\n\nlet cachedContext: any = {};\nlet cachedContextString = '{}';\n\nexport function validateExpression(str: string, context?: AjfContext): boolean {\n  if (context === cachedContext) {\n    console.log('cache hit');\n  } else {\n    cachedContext = context;\n    cachedContextString = getContextString(context);\n  }\n  let ctx = cachedContextString;\n  try {\n    let f = new Function(`${ctx}${str}`);\n    f();\n    f = <any>null;\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './context';\nexport * from './error';\nexport * from './interface/condition';\nexport * from './interface/formula';\nexport * from './interface/validation-function';\nexport * from './serializers/condition-serializer';\nexport * from './serializers/formula-serializer';\nexport * from './utils/always-condition';\nexport * from './utils/create-condition';\nexport * from './utils/create-formula';\nexport * from './utils/expression-utils';\nexport * from './utils/get-context-string';\nexport * from './utils/never-condition';\nexport * from './utils/normalize-expression';\nexport * from './utils/validate-expression';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}