{"version":3,"file":"reports.js","sources":["../../../../../../src/core/reports/base-widget.ts","../../../../../../src/core/reports/interface/charts/chart-type.ts","../../../../../../src/core/reports/chart-utils.ts","../../../../../../src/core/reports/get-column-content.ts","../../../../../../src/core/reports/interface/aggregation/aggregation.ts","../../../../../../src/core/reports/interface/aggregation/aggregation-type.ts","../../../../../../src/core/reports/interface/dataset/chart-dataset.ts","../../../../../../src/core/reports/interface/dataset/chart-dataset-options.ts","../../../../../../src/core/reports/interface/dataset/dataset.ts","../../../../../../src/core/reports/interface/dataset/table-dataset.ts","../../../../../../src/core/reports/interface/reports/report.ts","../../../../../../src/core/reports/interface/reports/report-container.ts","../../../../../../src/core/reports/interface/reports/report-string-identifier.ts","../../../../../../src/core/reports/interface/reports/report-variable.ts","../../../../../../src/core/reports/interface/reports-instances/report-container-instance.ts","../../../../../../src/core/reports/interface/reports-instances/report-instance.ts","../../../../../../src/core/reports/interface/styles.ts","../../../../../../src/core/reports/interface/widgets/chart-widget.ts","../../../../../../src/core/reports/interface/widgets/column-widget.ts","../../../../../../src/core/reports/interface/widgets/custom-widget.ts","../../../../../../src/core/reports/interface/widgets/data-widget.ts","../../../../../../src/core/reports/interface/widgets/formula-widget.ts","../../../../../../src/core/reports/interface/widgets/image-container-widget.ts","../../../../../../src/core/reports/interface/widgets/image-widget.ts","../../../../../../src/core/reports/interface/widgets/layout-widget.ts","../../../../../../src/core/reports/interface/widgets/map-widget.ts","../../../../../../src/core/reports/interface/widgets/page-break-widget.ts","../../../../../../src/core/reports/interface/widgets/table-widget.ts","../../../../../../src/core/reports/interface/widgets/text-widget.ts","../../../../../../src/core/reports/interface/widgets/widget.ts","../../../../../../src/core/reports/interface/widgets/widget-type.ts","../../../../../../src/core/reports/interface/widgets/widget-with-content.ts","../../../../../../src/core/reports/interface/widgets-instances/chart-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/column-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/data-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/formula-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/image-container-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/image-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/layout-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/map-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/page-break-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/table-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/text-widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/widget-instance.ts","../../../../../../src/core/reports/interface/widgets-instances/widget-with-content-instance.ts","../../../../../../src/core/reports/report.ts","../../../../../../src/core/reports/utils/reports/build-report-string-identifier.ts","../../../../../../src/core/reports/report-string-identifier.ts","../../../../../../src/core/reports/widget-export.ts","../../../../../../src/core/reports/widget-host.ts","../../../../../../src/core/reports/reports-module.ts","../../../../../../src/core/reports/utils/aggregation/create-aggregation.ts","../../../../../../src/core/reports/serializers/aggregation-serializer.ts","../../../../../../src/core/reports/utils/dataset/create-dataset.ts","../../../../../../src/core/reports/serializers/dataset-serializer.ts","../../../../../../src/core/reports/utils/widgets/create-widget.ts","../../../../../../src/core/reports/serializers/widget-serializer.ts","../../../../../../src/core/reports/serializers/report-container-serializer.ts","../../../../../../src/core/reports/utils/reports/create-report.ts","../../../../../../src/core/reports/serializers/report-serializer.ts","../../../../../../src/core/reports/widget.ts","../../../../../../src/core/reports/interface/widgets/widget-components-map.ts","../../../../../../src/core/reports/utils/widgets/widgets-map.ts","../../../../../../src/core/reports/widget-service.ts","../../../../../../src/core/reports/utils/aggregation/evaluate-aggregation.ts","../../../../../../src/core/reports/utils/widgets-instances/create-widget-instance.ts","../../../../../../src/core/reports/utils/widgets-instances/widget-instance-utils.ts","../../../../../../src/core/reports/utils/widgets-instances/widget-to-widget-instance.ts","../../../../../../src/core/reports/utils/reports-instances/create-report-container-instance.ts","../../../../../../src/core/reports/utils/reports-instances/create-report-instance.ts","../../../../../../src/core/reports/report-to-pdf/load-report-images.ts","../../../../../../src/core/reports/report-to-pdf/report-to-pdf.ts","../../../../../../src/core/reports/public-api.ts","../../../../../../src/core/reports/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\nexport abstract class AjfBaseWidgetComponent<T extends AjfWidgetInstance = AjfWidgetInstance> {\n  private _instance: T;\n  get instance(): T {\n    return this._instance;\n  }\n  set instance(instance: T) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._cdr.detectChanges();\n    }\n  }\n\n  constructor(private _cdr: ChangeDetectorRef, readonly el: ElementRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './interface/charts/chart-type';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n  switch (chartType) {\n    case AjfChartType.Line:\n      return 'line';\n    case AjfChartType.Bar:\n      return 'bar';\n    case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n    case AjfChartType.Radar:\n      return 'radar';\n    case AjfChartType.Scatter:\n      return 'scatter';\n    case AjfChartType.Doughnut:\n      return 'doughnut';\n    case AjfChartType.Pie:\n      return 'pie';\n    case AjfChartType.PolarArea:\n      return 'polarArea';\n    case AjfChartType.Bubble:\n      return 'bubble';\n    default:\n      return 'line';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfLayoutWidgetInstance} from './interface/widgets-instances/layout-widget-instance';\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\n@Pipe({name: 'ajfGetColumnContent'})\nexport class AjfGetColumnContentPipe {\n  transform(instance: AjfLayoutWidgetInstance, column: number): AjfWidgetInstance|null {\n    return column >= 0 && column < instance.content.length ? instance.content[column] : null;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregationType} from './aggregation-type';\n\nexport interface AjfAggregation {\n  aggregation: AjfAggregationType;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfChartType} from '../charts/chart-type';\nimport {AjfChartDatasetOptions} from './chart-dataset-options';\nimport {AjfDataset} from './dataset';\n\nexport interface AjfChartDataset extends AjfDataset {\n  formula: AjfFormula[];\n  chartType?: AjfChartType;\n  options?: AjfChartDatasetOptions;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChartColor} from 'chart.js';\n\nexport interface AjfChartDatasetOptions {\n  backgroundColor?: ChartColor|ChartColor[];\n  borderWidth?: number;\n  borderColor?: ChartColor;\n  borderCapStyle?: string;\n  borderDash?: number[];\n  borderDashOffset?: number;\n  borderJoinStyle?: string;\n  fill?: boolean;\n  label?: string;\n  lineTension?: number;\n  pointBorderColor?: ChartColor|ChartColor[];\n  pointBackgroundColor?: ChartColor|ChartColor[];\n  pointBorderWidth?: number|number[];\n  pointRadius?: number|number[];\n  pointHoverRadius?: number|number[];\n  pointHitRadius?: number|number[];\n  pointHoverBackgroundColor?: ChartColor|ChartColor[];\n  pointHoverBorderColor?: ChartColor|ChartColor[];\n  pointHoverBorderWidth?: number|number[];\n  pointStyle?: string|string[]|HTMLImageElement|HTMLImageElement[];\n  xAxisID?: string;\n  yAxisID?: string;\n  type?: string;\n  hidden?: boolean;\n  hideInLegendAndTooltip?: boolean;\n  stack?: string;\n  datalabels?: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfAggregation} from '../aggregation/aggregation';\n\nexport interface AjfDataset {\n  formula?: AjfFormula|AjfFormula[];\n  aggregation: AjfAggregation;\n  label?: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfDataset} from './dataset';\n\nexport interface AjfTableDataset extends AjfDataset {\n  formula: AjfFormula;\n  colspan: number;\n  rowspan: number;\n  style: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfStyles} from '../styles';\nimport {AjfReportContainer} from './report-container';\nimport {AjfReportStringIdentifier} from './report-string-identifier';\nimport {AjfReportVariable} from './report-variable';\n\nexport interface AjfReport {\n  header?: AjfReportContainer;\n  content?: AjfReportContainer;\n  footer?: AjfReportContainer;\n  styles?: AjfStyles;\n  forms?: AjfForm[];\n  variables?: AjfReportVariable[];\n  stringIdentifier?: AjfReportStringIdentifier[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles} from '../styles';\nimport {AjfWidget} from '../widgets/widget';\n\nexport interface AjfReportContainer {\n  content: AjfWidget[];\n  styles: AjfStyles;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStringIdentifier} from '@ajf/core/common';\n\nexport type AjfReportStringIdentifier = AjfStringIdentifier;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\n\nexport interface AjfReportVariable {\n  name: string;\n  formula: AjfFormula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportContainer} from '../reports/report-container';\nimport {AjfStyles} from '../styles';\nimport {AjfWidgetInstance} from '../widgets-instances/widget-instance';\n\nexport interface AjfReportContainerInstance {\n  container: AjfReportContainer;\n  content: AjfWidgetInstance[];\n  styles: AjfStyles;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../reports/report';\nimport {AjfStyles} from '../styles';\nimport {AjfReportContainerInstance} from './report-container-instance';\n\nexport interface AjfReportInstance {\n  report: AjfReport;\n  header?: AjfReportContainerInstance;\n  content?: AjfReportContainerInstance;\n  footer?: AjfReportContainerInstance;\n  styles: AjfStyles;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfStyles {\n  [style: string]: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {ChartOptions} from 'chart.js';\n\nimport {AjfChartType} from '../charts/chart-type';\nimport {AjfChartDataset} from '../dataset/chart-dataset';\n\nimport {AjfDataWidget} from './data-widget';\n\nexport interface AjfChartWidget extends AjfDataWidget {\n  chartType: AjfChartType;\n  type?: AjfChartType;\n  labels: AjfFormula|AjfFormula[];\n  dataset: AjfChartDataset[];\n  options: ChartOptions;\n  exportable?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetWithContent} from './widget-with-content';\n\nexport type AjfColumnWidget = AjfWidgetWithContent;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfCustomWidget {\n  json: string;\n  type: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDataset} from '../dataset/dataset';\nimport {AjfWidget} from './widget';\n\nexport interface AjfDataWidget extends AjfWidget {\n  dataset: AjfDataset[]|AjfDataset[][];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfWidget} from './widget';\n\nexport interface AjfFormulaWidget extends AjfWidget {\n  formula: AjfFormula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfWidget} from './widget';\n\nexport interface AjfImageContainerWidget extends AjfWidget {\n  imageType: AjfImageType;\n  icons?: AjfFormula|AjfFormula[];\n  flags?: AjfFormula|AjfFormula[];\n  urls?: AjfFormula|AjfFormula[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfWidget} from './widget';\n\nexport interface AjfImageWidget extends AjfWidget {\n  imageType: AjfImageType;\n  icon?: AjfFormula;\n  flag?: AjfFormula;\n  url?: AjfFormula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetWithContent} from './widget-with-content';\n\nexport interface AjfLayoutWidget extends AjfWidgetWithContent {\n  columns: number[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfDataWidget} from './data-widget';\n\nexport interface AjfMapWidget extends AjfDataWidget {\n  coordinate: AjfFormula;\n  tileLayer: string;\n  attribution: string;\n  disabled: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from './widget';\n\nexport type AjfPageBreakWidget = AjfWidget;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableDataset} from '../dataset/table-dataset';\nimport {AjfDataWidget} from './data-widget';\n\nexport interface AjfTableWidget extends AjfDataWidget {\n  cellStyles: any;\n  dataset: AjfTableDataset[][];\n  exportable?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from './widget';\n\nexport interface AjfTextWidget extends AjfWidget {\n  htmlText: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\n\nimport {AjfStyles} from '../styles';\n\nimport {AjfWidgetType} from './widget-type';\n\nexport interface AjfWidget {\n  widgetType: AjfWidgetType;\n  styles: AjfStyles;\n  visibility: AjfCondition;\n  repetitions?: AjfFormula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  DynamicTable,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from './widget';\n\nexport interface AjfWidgetWithContent extends AjfWidget {\n  content: AjfWidget[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {ChartData, ChartDataSets} from 'chart.js';\n\nimport {AjfChartWidget} from '../widgets/chart-widget';\n\nimport {AjfDataWidgetInstance} from './data-widget-instance';\n\nexport interface AjfChartWidgetInstance extends AjfDataWidgetInstance {\n  widget: AjfChartWidget;\n  datasets: ChartDataSets[];\n  chartType: ExtendedChartType;\n  exportable: boolean;\n  data: ChartData;\n  labels: string[];\n  canvasDataUrl?(): string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfColumnWidget} from '../widgets/column-widget';\nimport {AjfWidgetWithContentInstance} from './widget-with-content-instance';\n\nexport interface AjfColumnWidgetInstance extends AjfWidgetWithContentInstance {\n  widget: AjfColumnWidget;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDataWidget} from '../widgets/data-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfDataWidgetInstance extends AjfWidgetInstance {\n  widget: AjfDataWidget;\n  dataset: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaWidget} from '../widgets/formula-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfFormulaWidgetInstance extends AjfWidgetInstance {\n  widget: AjfFormulaWidget;\n  formula: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon} from '@ajf/core/image';\n\nimport {AjfImageContainerWidget} from '../widgets/image-container-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfImageContainerWidgetInstance extends AjfWidgetInstance {\n  widget: AjfImageContainerWidget;\n  icons: AjfImageIcon[];\n  flags: string[];\n  urls: string[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageIcon} from '@ajf/core/image';\n\nimport {AjfImageWidget} from '../widgets/image-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfImageWidgetInstance extends AjfWidgetInstance {\n  widget: AjfImageWidget;\n  icon: AjfImageIcon;\n  flag: string;\n  url: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfLayoutWidget} from '../widgets/layout-widget';\nimport {AjfWidgetWithContentInstance} from './widget-with-content-instance';\n\nexport interface AjfLayoutWidgetInstance extends AjfWidgetWithContentInstance {\n  widget: AjfLayoutWidget;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfMapWidget} from '../widgets/map-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfMapWidgetInstance extends AjfWidgetInstance {\n  widget: AjfMapWidget;\n  coordinate: number[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageBreakWidget} from '../widgets/page-break-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfPageBreakWidgetInstance extends AjfWidgetInstance {\n  widget: AjfPageBreakWidget;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableCell} from '@ajf/core/table';\nimport {Subject} from 'rxjs';\n\nimport {AjfTableWidget} from '../widgets/table-widget';\n\nimport {AjfDataWidgetInstance} from './data-widget-instance';\n\nexport interface AjfTableWidgetInstance extends AjfDataWidgetInstance {\n  widget: AjfTableWidget;\n  data: AjfTableCell[][];\n  recalcEvt: Subject<boolean>;\n  exportable: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTextWidget} from '../widgets/text-widget';\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfTextWidgetInstance extends AjfWidgetInstance {\n  widget: AjfTextWidget;\n  htmlText: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles} from '../styles';\nimport {AjfWidget} from '../widgets/widget';\nimport {AjfWidgetType} from '../widgets/widget-type';\n\nexport interface AjfWidgetInstance {\n  widget: AjfWidget;\n  visible: boolean;\n  styles: AjfStyles;\n  widgetType: AjfWidgetType;\n  repetitions?: number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetInstance} from './widget-instance';\n\nexport interface AjfWidgetWithContentInstance extends AjfWidgetInstance {\n  content: AjfWidgetInstance[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, Input} from '@angular/core';\n\nimport {AjfReportInstance} from './interface/reports-instances/report-instance';\nimport {AjfReport} from './interface/reports/report';\n\n@Directive()\nexport abstract class AjfReportRenderer {\n  private _instance: AjfReportInstance;\n  get instance(): AjfReportInstance {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfReportInstance) {\n    this._instance = instance;\n    this._report = instance != null ? instance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport|null;\n  get report(): AjfReport|null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext,\n  buildStringIdentifier,\n  BuildStringIdentifierOpts,\n} from '@ajf/core/common';\n\nimport {AjfReport} from '../../interface/reports/report';\n\nexport const buildReportStringIdentifier =\n    (report: AjfReport, context: AjfContext, opts?: BuildStringIdentifierOpts): string => {\n      if (report == null) {\n        return '';\n      }\n      const stringIdentifier = report.stringIdentifier || [];\n      if (stringIdentifier.length === 0) {\n        return '';\n      }\n      return buildStringIdentifier(stringIdentifier, context, opts);\n    };\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, BuildStringIdentifierOpts} from '@ajf/core/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfReport} from './interface/reports/report';\nimport {buildReportStringIdentifier} from './utils/reports/build-report-string-identifier';\n\n@Pipe({name: 'ajfReportStringIdentifier'})\nexport class AjfReportStringIdentifierPipe implements PipeTransform {\n  transform(report: AjfReport, context: AjfContext, opts?: BuildStringIdentifierOpts): string {\n    return buildReportStringIdentifier(report, context, opts);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableCell} from '@ajf/core/table';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ChartData} from 'chart.js';\nimport {format} from 'date-fns';\nimport * as XLSX from 'xlsx';\n\nconst xlsxMod = ((XLSX as any).default || XLSX) as typeof XLSX;\n\nimport {AjfWidgetType} from '../reports/interface/widgets/widget-type';\n\n\n@Component({\n  selector: 'ajf-widget-export',\n  templateUrl: 'widget-export.html',\n  styleUrls: ['widget-export.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AjfWidgetExport {\n  @Input() widgetType: AjfWidgetType;\n  @Input() data: ChartData|AjfTableCell[][];\n  @Input() overlay = true;\n  @Input() enable = false;\n\n  constructor() {}\n\n  /**\n   * Export widget data in CSV format\n   * @deprecated Use `AjfWidgetExport.export` with 'csv' parameter.\n   * @breaking-change 13.0.0\n   */\n  exportCsv(): void {\n    this.export('csv');\n  }\n\n  /**\n   * Export widget data in Xlsx format\n   * @deprecated Use `AjfWidgetExport.export` with 'xlsx' parameter.\n   * @breaking-change 13.0.0\n   */\n  exportXlsx(): void {\n    this.export('xlsx');\n  }\n\n  /**\n   * Export widget data in CSV or Xlsx format\n   */\n  export(bookType: 'csv'|'xlsx'): void {\n    const sheetName = this._buildTitle(this.widgetType);\n    const sheets: {[sheet: string]: XLSX.WorkSheet} = {};\n    sheets[sheetName] = xlsxMod.utils.aoa_to_sheet(this._buildXlsxData());\n    const workBook: XLSX.WorkBook = {Sheets: sheets, SheetNames: [sheetName]};\n    xlsxMod.writeFile(workBook, `${sheetName}.${bookType}`, {\n      bookType,\n      type: 'array',\n    });\n  }\n\n  private _buildXlsxData(): unknown[][] {\n    let xlsxData: unknown[][] = [];\n    let labels: string[] = [];\n    switch (this.widgetType) {\n      default:\n      case AjfWidgetType.Chart:\n        this.data = this.data as ChartData;\n        const datasets = this.data.datasets || [];\n        labels = ['name'].concat(this.data.labels as string[]);\n        xlsxData.push(labels);\n        for (let i = 0; i < datasets.length; i++) {\n          const row: unknown[] = [];\n          const data = datasets[i].data || [];\n          row.push(datasets[i].label);\n          for (let j = 0; j < data.length; j++) {\n            row.push(data[j]);\n          }\n          xlsxData.push(row);\n        }\n        break;\n      case AjfWidgetType.Table:\n        this.data = this.data as AjfTableCell[][];\n        this.data.forEach((row: AjfTableCell[], idxRow: number) => {\n          const res: unknown[] = [];\n          if (idxRow === 0) {\n            row.forEach((elem: AjfTableCell) => {\n              labels.push(elem.value.changingThisBreaksApplicationSecurity);\n              if (elem.colspan && elem.colspan > 1) {\n                for (let i = 1; i < elem.colspan; i++) {\n                  labels.push(' ');\n                }\n              }\n            });\n            xlsxData.push(labels);\n          } else {\n            row.forEach((elem: AjfTableCell) => {\n              res.push(elem.value.changingThisBreaksApplicationSecurity);\n            });\n            xlsxData.push(res);\n          }\n        });\n        break;\n    }\n\n    return xlsxData;\n  }\n\n  private _buildTitle(widgetType: AjfWidgetType): string {\n    return `${AjfWidgetType[widgetType]} ${format(new Date(), `yyyy-MM-dd`)}`;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({selector: '[ajf-widget-host]'})\nexport class AjfWidgetHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {AjfGetColumnContentPipe} from './get-column-content';\nimport {AjfReportStringIdentifierPipe} from './report-string-identifier';\nimport {AjfWidgetExport} from './widget-export';\nimport {AjfWidgetHost} from './widget-host';\n\n@NgModule({\n  declarations: [\n    AjfGetColumnContentPipe,\n    AjfReportStringIdentifierPipe,\n    AjfWidgetHost,\n    AjfWidgetExport,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    AjfGetColumnContentPipe,\n    AjfReportStringIdentifierPipe,\n    AjfWidgetHost,\n    AjfWidgetExport,\n  ],\n})\nexport class AjfReportsModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport type AjfAggregationCreate = Partial<AjfAggregation>;\n\nexport function createAggregation(aggregation: AjfAggregationCreate): AjfAggregation {\n  return {\n    ...aggregation,\n    aggregation: aggregation.aggregation || AjfAggregationType.None,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../interface/aggregation/aggregation';\nimport {createAggregation} from '../utils/aggregation/create-aggregation';\n\nexport class AjfAggregationSerializer {\n  static fromJson(json: Partial<AjfAggregation>): AjfAggregation {\n    if (json.aggregation == null) {\n      throw new Error('Malformed aggregation');\n    }\n    return createAggregation({...json, aggregation: json.aggregation});\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\nimport {AjfDataset} from '../../interface/dataset/dataset';\nimport {createAggregation} from '../aggregation/create-aggregation';\n\nexport function createDataset(dataset: Partial<AjfDataset>): AjfDataset {\n  return {\n    ...dataset,\n    aggregation: dataset.aggregation || createAggregation({aggregation: AjfAggregationType.None}),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {createDataset} from '../utils/dataset/create-dataset';\n\nimport {AjfAggregationSerializer} from './aggregation-serializer';\n\nexport class AjfDatasetSerializer {\n  static fromJson(json: Partial<AjfDataset>): AjfDataset {\n    if (json.formula == null || json.aggregation == null || json.label == null) {\n      throw new Error('Malformed dataset');\n    }\n    json.formula = json.formula instanceof Array ?\n        json.formula = json.formula.map(f => AjfFormulaSerializer.fromJson(f)) :\n        AjfFormulaSerializer.fromJson(json.formula);\n    json.aggregation = AjfAggregationSerializer.fromJson(json.aggregation);\n    return createDataset(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\nimport {AjfWidget} from '../../interface/widgets/widget';\n\nexport type AjfWidgetCreate = Pick<AjfWidget, 'widgetType'>&Partial<AjfWidget>;\n\nexport function createWidget(widget: AjfWidgetCreate): AjfWidget {\n  return {\n    ...widget,\n    styles: widget.styles || {},\n    visibility: widget.visibility || alwaysCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer, alwaysCondition} from '@ajf/core/models';\n\nimport {AjfChartDataset} from '../interface/dataset/chart-dataset';\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {AjfTableDataset} from '../interface/dataset/table-dataset';\nimport {AjfChartWidget} from '../interface/widgets/chart-widget';\nimport {AjfDataWidget} from '../interface/widgets/data-widget';\nimport {AjfMapWidget} from '../interface/widgets/map-widget';\nimport {AjfWidget} from '../interface/widgets/widget';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {AjfWidgetWithContent} from '../interface/widgets/widget-with-content';\nimport {createWidget} from '../utils/widgets/create-widget';\n\nimport {AjfDatasetSerializer} from './dataset-serializer';\n\nexport class AjfWidgetSerializer {\n  static fromJson(json: Partial<AjfWidget>): AjfWidget {\n    if (json.widgetType == null) {\n      throw new Error('Malformed widget');\n    }\n    json.visibility =\n        json.visibility ? AjfConditionSerializer.fromJson(json.visibility) : alwaysCondition();\n    json.styles = json.styles || {};\n    const obj = json as AjfWidget;\n    if (obj.widgetType === AjfWidgetType.Layout || obj.widgetType === AjfWidgetType.Column) {\n      return AjfWidgetSerializer._widgetWithContentFromJson(obj);\n    }\n    if (obj.widgetType === AjfWidgetType.Chart || obj.widgetType === AjfWidgetType.Table) {\n      const w = AjfWidgetSerializer._dataWidgetFromJson(obj);\n      if (obj.widgetType === AjfWidgetType.Chart) {\n        const cw = w as AjfChartWidget;\n        if (cw.labels instanceof Array) {\n          cw.labels.map(l => AjfFormulaSerializer.fromJson(l));\n        } else if (cw.labels != null) {\n          cw.labels = AjfFormulaSerializer.fromJson(cw.labels);\n        }\n      }\n      return w;\n    }\n    if (obj.widgetType === AjfWidgetType.Map) {\n      const mw = obj as AjfMapWidget;\n      mw.coordinate = AjfFormulaSerializer.fromJson(mw.coordinate);\n    }\n    return obj;\n  }\n\n  private static _dataWidgetFromJson(json: AjfWidget&Partial<AjfDataWidget>): AjfDataWidget {\n    let dataset: AjfDataset[]|AjfDataset[][];\n    if (json.dataset == null) {\n      dataset = [];\n    } else {\n      if (json.widgetType === AjfWidgetType.Table) {\n        dataset = (json.dataset as AjfTableDataset[][])\n                      .map(row => row.map(cell => AjfDatasetSerializer.fromJson(cell)));\n      } else {\n        dataset = (json.dataset as AjfChartDataset[]).map(d => AjfDatasetSerializer.fromJson(d));\n      }\n    }\n    return {...createWidget(json), dataset};\n  }\n\n  private static _widgetWithContentFromJson(json: AjfWidget&\n                                            Partial<AjfWidgetWithContent>): AjfWidgetWithContent {\n    const content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...createWidget(json), content};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {AjfWidgetSerializer} from './widget-serializer';\n\nexport class AjfReportContainerSerializer {\n  static fromJson(json: Partial<AjfReportContainer>): AjfReportContainer {\n    json.content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...json, content: json.content!, styles: json.styles || {}};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../../interface/reports/report';\n\nexport type AjfReportCreate = Partial<AjfReport>;\n\nexport function createReport(report: AjfReportCreate): AjfReport {\n  return {...report};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../interface/reports/report';\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {createReport} from '../utils/reports/create-report';\nimport {AjfReportContainerSerializer} from './report-container-serializer';\n\nexport class AjfReportSerializer {\n  static fromJson(json: Partial<AjfReport>): AjfReport {\n    const containers: (keyof AjfReport)[] = ['header', 'footer', 'content'];\n    containers.forEach(c => {\n      if (json[c]) {\n        (json[c] as AjfReportContainer) =\n            AjfReportContainerSerializer.fromJson(json[c] as Partial<AjfReportContainer>);\n      }\n    });\n    return createReport(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\nimport {AjfWidgetComponentsMap} from './interface/widgets/widget-components-map';\nimport {AjfWidgetHost} from './widget-host';\n\n@Directive()\nexport abstract class AjfReportWidget implements OnInit {\n  @ViewChild(AjfWidgetHost, {static: true}) widgetHost: AjfWidgetHost;\n\n  private _instance: AjfWidgetInstance;\n  get instance(): AjfWidgetInstance {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfWidgetInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      if (this._init) {\n        this._loadComponent();\n      }\n    }\n  }\n\n  protected abstract widgetsMap: AjfWidgetComponentsMap;\n\n  private _init = false;\n\n  constructor(private _cfr: ComponentFactoryResolver, private _renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this._init = true;\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    if (!this._init || this._instance == null || this.widgetHost == null ||\n        !this.instance.visible) {\n      return;\n    }\n\n    const vcr = this.widgetHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.widgetsMap[this._instance.widget.widgetType];\n    if (componentDef == null) {\n      return;\n    }\n    const component = componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      const componentInstance = componentRef.instance;\n\n      Object.keys(this._instance.widget.styles).forEach((style: string) => {\n        try {\n          this._renderer.setStyle(\n              componentInstance.el.nativeElement, style, `${this._instance.widget.styles[style]}`);\n        } catch (e) {\n        }\n      });\n\n      componentInstance.instance = this._instance;\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            (componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n    } catch (e) {\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfBaseWidgetComponent} from '../../base-widget';\nimport {AjfWidgetInstance} from '../widgets-instances/widget-instance';\n\nexport interface AjfWidgetComponentsMap {\n  [key: number]: {\n    component: Type<AjfBaseWidgetComponent>,\n    inputs?: {[key: string]: any},\n    initInstance?: (widgetInstance: AjfWidgetInstance, context: AjfContext,\n                    translateService: TranslateService) => AjfWidgetInstance;\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetComponentsMap} from '../../interface/widgets/widget-components-map';\n\nexport const componentsMap: AjfWidgetComponentsMap = {};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Type} from '@angular/core';\n\nimport {AjfBaseWidgetComponent} from './base-widget';\nimport {AjfWidgetComponentsMap} from './interface/widgets/widget-components-map';\nimport {componentsMap} from './utils/widgets/widgets-map';\n\nexport abstract class AjfWidgetService {\n  readonly componentsMap: AjfWidgetComponentsMap = componentsMap;\n\n  constructor(defaultWidgets: AjfWidgetComponentsMap) {\n    if (defaultWidgets != null) {\n      for (const key in defaultWidgets) {\n        const nKey = parseInt(key, 10);\n        this.componentsMap[nKey] = defaultWidgets[key];\n      }\n    }\n  }\n\n  registerCustomWidget(widget: {\n    widgetType: number,\n    component: Type<AjfBaseWidgetComponent>,\n    inputs?: {[key: string]: any},\n  }): void {\n    const {widgetType, component} = widget;\n    if (widgetType < 100) {\n      throw new Error('Invalid custom widget type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom widget component');\n    }\n    this.componentsMap[widgetType] = widget;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport function evaluateAggregation(\n    aggregation: AjfAggregation, formulas: AjfFormula[], context: AjfContext): number[] {\n  const data: any[] = formulas.map(f => evaluateExpression(f.formula, context));\n  switch (aggregation.aggregation) {\n    case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n    case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n    case AjfAggregationType.Average:\n    case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n    default:\n      return [];\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {AjfWidget} from '../../interface/widgets/widget';\n\nexport function createWidgetInstance(\n    widget: AjfWidget, context: AjfContext, _ts: TranslateService): AjfWidgetInstance {\n  return {\n    widget,\n    widgetType: widget.widgetType,\n    visible: evaluateExpression(widget.visibility.condition, context),\n    styles: widget.styles || {},\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport function trFormula(f: AjfFormula, context: AjfContext, ts: TranslateService): any {\n  let formula = f.formula;\n  if (formula.substr(0, 1) === '\"' || formula.substr(0, 1) === '\\'') {\n    const ft = formula.slice(1, -1);\n    const transFt =\n        ft != null && typeof ft === 'string' && ft.trim().length > 0 ? ts.instant(ft) : ft;\n    if (ft.length > 0) {\n      formula = `\"${transFt}\"`;\n    }\n  } else {\n    formula = formula != null && typeof formula === 'string' && formula.trim().length > 0 ?\n        ts.instant(formula) :\n        formula;\n  }\n  return evaluateExpression(formula, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, createFormula, evaluateExpression} from '@ajf/core/models';\nimport {AjfTableCell} from '@ajf/core/table';\nimport {deepCopy} from '@ajf/core/utils';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {chartToChartJsType} from '../../chart-utils';\nimport {AjfTableDataset} from '../../interface/dataset/table-dataset';\nimport {AjfChartWidgetInstance} from '../../interface/widgets-instances/chart-widget-instance';\nimport {AjfFormulaWidgetInstance} from '../../interface/widgets-instances/formula-widget-instance';\nimport {\n  AjfImageContainerWidgetInstance\n} from '../../interface/widgets-instances/image-container-widget-instance';\nimport {AjfImageWidgetInstance} from '../../interface/widgets-instances/image-widget-instance';\nimport {AjfMapWidgetInstance} from '../../interface/widgets-instances/map-widget-instance';\nimport {AjfTableWidgetInstance} from '../../interface/widgets-instances/table-widget-instance';\nimport {AjfTextWidgetInstance} from '../../interface/widgets-instances/text-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {\n  AjfWidgetWithContentInstance\n} from '../../interface/widgets-instances/widget-with-content-instance';\nimport {AjfChartWidget} from '../../interface/widgets/chart-widget';\nimport {AjfDynamicTableWidget} from '../../interface/widgets/dynamic-table-widget';\nimport {AjfFormulaWidget} from '../../interface/widgets/formula-widget';\nimport {AjfImageContainerWidget} from '../../interface/widgets/image-container-widget';\nimport {AjfImageWidget} from '../../interface/widgets/image-widget';\nimport {AjfMapWidget} from '../../interface/widgets/map-widget';\nimport {AjfTableWidget} from '../../interface/widgets/table-widget';\nimport {AjfTextWidget} from '../../interface/widgets/text-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\nimport {AjfWidgetWithContent} from '../../interface/widgets/widget-with-content';\nimport {evaluateAggregation} from '../aggregation/evaluate-aggregation';\nimport {componentsMap} from '../widgets/widgets-map';\n\nimport {createWidgetInstance} from './create-widget-instance';\nimport {trFormula} from './widget-instance-utils';\n\nexport function widgetToWidgetInstance(\n    widget: AjfWidget, context: AjfContext, ts: TranslateService): AjfWidgetInstance {\n  const wi = createWidgetInstance(widget, context, ts);\n\n  if (widget.widgetType === AjfWidgetType.Column || widget.widgetType === AjfWidgetType.Layout) {\n    const wwc = widget as AjfWidgetWithContent;\n    const wwci = wi as AjfWidgetWithContentInstance;\n    let content = [] as AjfWidgetInstance[];\n    wwc.content.forEach(c => {\n      if (wwc.repetitions != null) {\n        wwci.repetitions = evaluateExpression(wwc.repetitions.formula, context);\n        if (typeof wwci.repetitions === 'number' && wwci.repetitions > 0) {\n          for (let i = 0; i < wwci.repetitions; i++) {\n            content.push(widgetToWidgetInstance(c, {...context, '$repetition': i}, ts));\n          }\n        }\n      } else {\n        content.push(widgetToWidgetInstance(c, context, ts));\n      }\n      wwci.content = content;\n    });\n  } else if (widget.widgetType === AjfWidgetType.Chart) {\n    const cw = widget as AjfChartWidget;\n    const cwi = wi as AjfChartWidgetInstance;\n    const labels = cw.labels instanceof Array ? cw.labels : [cw.labels];\n    const evLabels = labels.map(l => {\n      let evf = evaluateExpression(l.formula, context);\n      try {\n        if (evf instanceof Array) {\n          evf = evf.map(\n              v => v != null && typeof v === 'string' && v.trim().length > 0 ? ts.instant(v) : v);\n        } else {\n          evf = evf != null && typeof evf === 'string' && evf.trim().length > 0 ? ts.instant(evf) :\n                                                                                  evf;\n        }\n      } catch (_e) {\n      }\n      return evf;\n    });\n    cwi.labels = cw.labels instanceof Array ? evLabels : evLabels[0];\n    cwi.datasets = cw.dataset.map(d => {\n      let ds: any = {\n        ...d.options || {},\n        data: evaluateAggregation(d.aggregation, d.formula, context),\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds, chartType: ct, type: ct};\n      }\n      if (d.options != null) {\n        ds = {...ds, options: d.options};\n      }\n      if (d.label != null) {\n        ds = {...ds, label: d.label.trim().length > 0 ? ts.instant(d.label) : d.label};\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    });\n    cwi.data = {labels: cwi.labels, datasets: cwi.datasets};\n    cwi.chartType = chartToChartJsType(cw.type || cw.chartType);\n    cwi.exportable =\n        cw.exportable && (cw.exportable === true || cw.exportable === 'true') ? true : false;\n    if (cw.options != null && cw.options.plugins != null) {\n      const plugins = cw.options.plugins;\n      const pluginNames = Object.keys(plugins);\n      pluginNames.forEach((pluginName) => {\n        const plugin = plugins[pluginName];\n        const pluginOptions = Object.keys(plugin);\n        pluginOptions.forEach((pluginOptionName: string) => {\n          const pluginOption = plugin[pluginOptionName];\n          if (typeof pluginOption !== 'string' && pluginOption != null &&\n              pluginOption.formula != null) {\n            plugin[pluginOptionName] = evaluateExpression(pluginOption.formula, context);\n          }\n        });\n      });\n    }\n  } else if (widget.widgetType === AjfWidgetType.Table) {\n    const tw = widget as AjfTableWidget;\n    const twi = wi as AjfTableWidgetInstance;\n\n    twi.dataset = tw.dataset.map(row => row.map(cell => {\n      return cell.formula instanceof Array ?\n          cell.formula.map(f => trFormula(f as AjfFormula, context as AjfContext, ts)) :\n          trFormula(cell.formula!, context as AjfContext, ts);\n    }));\n    twi.exportable =\n        tw.exportable && (tw.exportable === true || tw.exportable === 'true') ? true : false;\n    twi.data = (tw.dataset || []).map(row => row.map(cell => {\n      let evf = '';\n      try {\n        evf = cell.formula instanceof Array ?\n            cell.formula.map(f => trFormula(f as AjfFormula, context as AjfContext, ts)) :\n            trFormula(cell.formula!, context as AjfContext, ts);\n      } catch (_e) {\n      }\n      return ({\n        value: evf,\n        style: {...tw.cellStyles, ...cell.style},\n        rowspan: cell.rowspan,\n        colspan: cell.colspan,\n      });\n    }));\n  } else if (widget.widgetType === AjfWidgetType.DynamicTable) {\n    const tdw = widget as AjfDynamicTableWidget;\n    const tdwi = wi as AjfTableWidgetInstance;\n\n    tdwi.dataset = tdw.dataset.map((cell: AjfTableDataset) => {\n      return cell.formula instanceof Array ?\n          cell.formula.map(f => trFormula(f as AjfFormula, context, ts)) :\n          trFormula(cell.formula!, context, ts);\n    });\n    tdwi.exportable =\n        tdw.exportable && (tdw.exportable === true || tdw.exportable === 'true') ? true : false;\n\n    let dataset: AjfTableCell[][] = evaluateExpression(tdw.rowDefinition.formula, context) || [];\n    dataset = (dataset || []).map((row: AjfTableCell[]) => row.map(cell => {\n      let trf = cell.value;\n      try {\n        if (trf instanceof Array) {\n          trf = trf.map(\n              v => v != null && typeof v === 'string' && v.trim().length > 0 ? ts.instant(v) : v);\n        } else {\n          trf = trf != null && typeof trf === 'string' && trf.trim().length > 0 ? ts.instant(trf) :\n                                                                                  trf;\n        }\n      } catch (_e) {\n      }\n      return ({...cell, value: trf});\n    }));\n\n    const header = (tdw.dataset || []).map(cell => {\n      let evf = '';\n      try {\n        evf = cell.formula instanceof Array ?\n            cell.formula.map(f => trFormula(f as AjfFormula, context as AjfContext, ts)) :\n            trFormula(cell.formula!, context as AjfContext, ts);\n      } catch (_e) {\n      }\n      return ({\n        value: evf,\n        style: {...tdw.cellStyles, ...cell.style},\n        rowspan: cell.rowspan,\n        colspan: cell.colspan,\n      });\n    });\n    tdwi.data = [[...header], ...dataset];\n  } else if (widget.widgetType === AjfWidgetType.Image) {\n    const iw = widget as AjfImageWidget;\n    const iwi = wi as AjfImageWidgetInstance;\n    if (iw.flag) {\n      iwi.flag = evaluateExpression(iw.flag.formula, context);\n    }\n    if (iw.icon) {\n      iwi.icon = evaluateExpression(iw.icon.formula, context);\n    }\n    if (iw.url) {\n      iwi.url = evaluateExpression(iw.url.formula, context);\n    }\n  } else if (widget.widgetType === AjfWidgetType.ImageContainer) {\n    const icw = widget as AjfImageContainerWidget;\n    const icwi = wi as AjfImageContainerWidgetInstance;\n    if (icw.flags) {\n      icwi.flags = icw.flags instanceof Array ?\n          icw.flags.map(f => evaluateExpression(f.formula, context)) :\n          evaluateExpression(icw.flags.formula, context);\n    }\n    if (icw.icons) {\n      icwi.icons = icw.icons instanceof Array ?\n          icw.icons.map(f => evaluateExpression(f.formula, context)) :\n          evaluateExpression(icw.icons.formula, context);\n    }\n    if (icw.urls) {\n      icwi.urls = icw.urls instanceof Array ?\n          icw.urls.map(f => evaluateExpression(f.formula, context)) :\n          evaluateExpression(icw.urls.formula, context);\n    }\n  } else if (widget.widgetType === AjfWidgetType.Text) {\n    const tew = widget as AjfTextWidget;\n    const tewi = wi as AjfTextWidgetInstance;\n    const formulaRegEx: RegExp = /\\[{2}(.+?)\\]{2}/g;\n    const matches: {idx: number, len: number, formula: AjfFormula}[] = [];\n    let match: RegExpExecArray|null;\n    let htmlText = tew.htmlText;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match.index;\n      const len = match[0].length;\n      const formula = createFormula({formula: match[1]});\n      matches.push({idx, len, formula});\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = evaluateExpression(m.formula.formula, context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    tewi.htmlText = htmlText != null && htmlText.length > 0 ? ts.instant(htmlText) : htmlText;\n  } else if (widget.widgetType === AjfWidgetType.Formula) {\n    const fw = widget as AjfFormulaWidget;\n    const fwi = wi as AjfFormulaWidgetInstance;\n    fwi.formula = evaluateExpression(fw.formula.formula, context);\n  } else if (widget.widgetType === AjfWidgetType.Map) {\n    const mw = widget as AjfMapWidget;\n    const mwi = wi as AjfMapWidgetInstance;\n    mwi.coordinate = evaluateExpression(mw.coordinate.formula, context);\n  } else if (widget.widgetType > 100) {\n    const iiFn = componentsMap[widget.widgetType] != null ?\n        componentsMap[widget.widgetType].initInstance :\n        null;\n    if (iiFn != null) {\n      return iiFn(wi, context, ts);\n    }\n  }\n  return wi;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {\n  AjfReportContainerInstance\n} from '../../interface/reports-instances/report-container-instance';\nimport {AjfReportContainer} from '../../interface/reports/report-container';\nimport {widgetToWidgetInstance} from '../widgets-instances/widget-to-widget-instance';\n\nexport function createReportContainerInstance(\n    container: AjfReportContainer, context: AjfContext,\n    ts: TranslateService): AjfReportContainerInstance {\n  const content = container.content.map(c => widgetToWidgetInstance(c, context, ts));\n  return {\n    container,\n    content,\n    styles: container.styles,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfReportInstance} from '../../interface/reports-instances/report-instance';\nimport {AjfReport} from '../../interface/reports/report';\n\nimport {createReportContainerInstance} from './create-report-container-instance';\n\nexport function createReportInstance(\n    report: AjfReport, context: AjfContext, ts: TranslateService): AjfReportInstance {\n  (report.variables || []).forEach(variable => {\n    context[variable.name] = evaluateExpression(variable.formula.formula, context);\n  });\n  return {\n    report,\n    header: report.header ? createReportContainerInstance(report.header, context, ts) : undefined,\n    content: report.content ? createReportContainerInstance(report.content, context, ts) :\n                              undefined,\n    footer: report.footer ? createReportContainerInstance(report.footer, context, ts) : undefined,\n    styles: report.styles || {},\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageWidgetInstance} from '../interface/widgets-instances/image-widget-instance';\nimport {AjfReportContainerInstance} from '../interface/reports-instances/report-container-instance';\nimport {AjfReportInstance} from '../interface/reports-instances/report-instance';\nimport {AjfWidgetInstance} from '../interface/widgets-instances/widget-instance';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {\n  AjfWidgetWithContentInstance\n} from '../interface/widgets-instances/widget-with-content-instance';\n\nimport {AjfImageType} from '@ajf/core/image';\n\n// ImageMap maps image urls to dataurls, like:\n// 'http://whatever.com/image.png': 'data:image/png;base64,...'\nexport interface ImageMap {\n  [url: string]: string;\n}\n\nexport function loadReportImages(report: AjfReportInstance): Promise<ImageMap> {\n  const promises: Promise<ImageMap>[] = [];\n  if (report.header != null) {\n    promises.push(loadContainerImages(report.header));\n  }\n  if (report.content != null) {\n    promises.push(loadContainerImages(report.content));\n  }\n  if (report.footer != null) {\n    promises.push(loadContainerImages(report.footer));\n  }\n  return new Promise<ImageMap>(resolve => {\n    Promise.all(promises).then(maps => {\n      let map: ImageMap = {};\n      for (const m of maps) {\n        map = {...map, ...m};\n      }\n      resolve(map);\n    });\n  });\n}\n\nfunction loadContainerImages(container: AjfReportContainerInstance|AjfWidgetWithContentInstance):\n  Promise<ImageMap> {\n  const promises: Promise<ImageMap>[] = [];\n  for (let widget of container.content) {\n    promises.push(loadWidgetImages(widget));\n  }\n  return new Promise<ImageMap>(resolve => {\n    Promise.all(promises).then(maps => {\n      let map: ImageMap = {};\n      for (const m of maps) {\n        map = {...map, ...m};\n      }\n      resolve(map);\n    });\n  });\n}\n\nfunction loadWidgetImages(widget: AjfWidgetInstance): Promise<ImageMap> {\n  switch (widget.widgetType) {\n  case AjfWidgetType.Layout:\n  case AjfWidgetType.Column:\n    return loadContainerImages(widget as AjfWidgetWithContentInstance);\n  case AjfWidgetType.Image:\n    const image = widget as AjfImageWidgetInstance;\n    if (image.widget.imageType !== AjfImageType.Image) {\n      break;\n    }\n    return new Promise<ImageMap>(resolve => {\n      const req = new XMLHttpRequest();\n      req.onerror = () => resolve({}); // ignore 404's\n      req.onload = () => {\n        const r = new FileReader();\n        r.onerror = () => resolve({});\n        r.onloadend = () => {\n          const result = r.result as string;\n          if (result.startsWith('data:image')) {\n            const map: ImageMap = {};\n            map[image.url] = result;\n            resolve(map);\n          } else {\n            resolve({});\n          }\n        };\n        r.readAsDataURL(req.response);\n      };\n      req.open('GET', image.url);\n      req.responseType = 'blob';\n      req.send();\n    });\n  }\n  return new Promise<ImageMap>(resolve => resolve({}));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {vfsFonts, vfsFontsMap} from '@ajf/core/vfs-fonts';\nimport {createPdf, TCreatedPdf} from 'pdfmake/build/pdfmake';\nimport {\n  Column,\n  Content,\n  ContentStack,\n  PageOrientation,\n  TableCell,\n  TDocumentDefinitions\n} from 'pdfmake/interfaces';\n\nimport {AjfReportContainerInstance} from '../interface/reports-instances/report-container-instance';\nimport {AjfReportInstance} from '../interface/reports-instances/report-instance';\nimport {AjfChartWidgetInstance} from '../interface/widgets-instances/chart-widget-instance';\nimport {AjfColumnWidgetInstance} from '../interface/widgets-instances/column-widget-instance';\nimport {AjfFormulaWidgetInstance} from '../interface/widgets-instances/formula-widget-instance';\nimport {AjfImageWidgetInstance} from '../interface/widgets-instances/image-widget-instance';\nimport {AjfLayoutWidgetInstance} from '../interface/widgets-instances/layout-widget-instance';\nimport {AjfTableWidgetInstance} from '../interface/widgets-instances/table-widget-instance';\nimport {AjfTextWidgetInstance} from '../interface/widgets-instances/text-widget-instance';\nimport {AjfWidgetInstance} from '../interface/widgets-instances/widget-instance';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\n\nimport {ImageMap, loadReportImages} from './load-report-images';\n\nexport function openReportPdf(report: AjfReportInstance, orientation?: PageOrientation) {\n  createReportPdf(report, orientation).then(pdf => {\n    pdf.open();\n  });\n}\n\nexport function createReportPdf(\n    report: AjfReportInstance, orientation?: PageOrientation): Promise<TCreatedPdf> {\n  return new Promise<TCreatedPdf>(resolve => {\n    loadReportImages(report).then(images => {\n      let width = 595.28 - 40 * 2;  // A4 page width - margins\n      if (orientation === 'landscape') {\n        width = 841.89 - 40 * 2;\n      }\n      const pdfDef = reportToPdf(report, images, width);\n      pdfDef.pageOrientation = orientation;\n      resolve(createPdf(pdfDef, undefined, vfsFontsMap, vfsFonts));\n    });\n  });\n}\n\nfunction reportToPdf(\n    report: AjfReportInstance, images: ImageMap, width: number): TDocumentDefinitions {\n  const stack: Content[] = [];\n  if (report.header != null) {\n    stack.push(containerToPdf(report.header, images, width));\n  }\n  if (report.content != null) {\n    stack.push(containerToPdf(report.content, images, width));\n  }\n  if (report.footer != null) {\n    stack.push(containerToPdf(report.footer, images, width));\n  }\n  return {content: {stack}};\n}\n\nfunction containerToPdf(\n    container: AjfReportContainerInstance, images: ImageMap, width: number): Content {\n  return {stack: container.content.map(w => widgetToPdf(w, images, width))};\n}\n\nconst marginBetweenWidgets = 10;\n\nfunction widgetToPdf(widget: AjfWidgetInstance, images: ImageMap, width: number): Content {\n  switch (widget.widget.widgetType) {\n    case AjfWidgetType.Layout:\n      return layoutToPdf(widget as AjfLayoutWidgetInstance, images, width);\n    case AjfWidgetType.PageBreak:\n      return {text: '', pageBreak: 'after'};\n    case AjfWidgetType.Image:\n      return imageToPdf(widget as AjfImageWidgetInstance, images, width);\n    case AjfWidgetType.Text:\n      return textToPdf(widget as AjfTextWidgetInstance);\n    case AjfWidgetType.Chart:\n      const chart = widget as AjfChartWidgetInstance;\n      const dataUrl = chart.canvasDataUrl == null ? '' : chart.canvasDataUrl();\n      if (dataUrl === '') {\n        return {text: '[chart with no attached canvas]'};\n      }\n      return {image: dataUrl, width, margin: [0, 0, 0, marginBetweenWidgets]};\n    case AjfWidgetType.Table:\n      return tableToPdf(widget as AjfTableWidgetInstance);\n    case AjfWidgetType.Column:\n      const cw = widget as AjfColumnWidgetInstance;\n      return {stack: cw.content.map(w => widgetToPdf(w, images, width))};\n    case AjfWidgetType.Formula:\n      const fw = widget as AjfFormulaWidgetInstance;\n      return {text: fw.formula, margin: [0, 0, 0, marginBetweenWidgets]};\n    default:\n      return {text: ''};\n  }\n}\n\nfunction layoutToPdf(lw: AjfLayoutWidgetInstance, images: ImageMap, width: number): Content {\n  const columns = [...lw.widget.columns];\n  while (columns.length < lw.content.length) {\n    columns.push(1);\n  }\n  const childWidth = width / (columns.length || 1);\n  const children = [];\n  for (let i = 0; i < lw.content.length; i++) {\n    let child = widgetToPdf(lw.content[i], images, childWidth) as ContentStack;\n    // Children of Layout widgets are supposed to be Columns. If they aren't,\n    // we must wrap them to avoid problems like images having an 'auto' width.\n    if (child.stack == null) {\n      child = {stack: [child]};\n    }\n    (child as Column).width = columns[i] === -1 ? 'auto' : '*';\n    children.push(child);\n  }\n  return {columns: children};\n}\n\nfunction imageToPdf(image: AjfImageWidgetInstance, images: ImageMap, width: number): Content {\n  if (image.widget.imageType !== AjfImageType.Image) {\n    // Can't get icons to work, pdfs with multiple fonts don't seem to be working\n    return {text: ''};\n  }\n  const dataUrl = images[image.url];\n  if (dataUrl == null) {\n    return {text: ''};\n  }\n  const w = image.styles.width;\n  if (typeof (w) === 'string' && w.endsWith('px')) {\n    width = Number(w.slice(0, -2));\n  }\n  return {image: dataUrl, width, margin: [0, 0, 0, marginBetweenWidgets]};\n}\n\nfunction textToPdf(tw: AjfTextWidgetInstance): Content {\n  const text: Content = {\n    text: stripHTML(tw.htmlText),\n    margin: [0, 0, 0, marginBetweenWidgets],\n  };\n  if (tw.htmlText.startsWith('<h1>')) {\n    text.fontSize = 20;\n    text.margin = [0, 10, 0, marginBetweenWidgets];\n  } else if (tw.htmlText.startsWith('<h2>')) {\n    text.fontSize = 15;\n    text.margin = [0, 5, 0, marginBetweenWidgets];\n  }\n  return text;\n}\n\nfunction tableToPdf(table: AjfTableWidgetInstance): Content {\n  if (table.data == null || table.data.length === 0) {\n    return {text: ''};\n  }\n  const body: TableCell[][] = [];\n  for (let i = 0; i < table.data.length; i++) {\n    const dataRow = table.data[i];\n    const bodyRow: TableCell[] = [];\n    for (let j = 0; j < dataRow.length; j++) {\n      const cell = dataRow[j];\n      bodyRow.push({text: table.dataset[i][j], colSpan: cell.colspan});\n      // pdfmake wants placeholder cells after cells with colspan > 1:\n      for (let k = 1; k < (cell.colspan || 1); k++) {\n        bodyRow.push({text: ''});\n      }\n    }\n    body.push(bodyRow);\n  }\n  return {table: {headerRows: 0, body}, margin: [0, 0, 0, marginBetweenWidgets]};\n}\n\nfunction stripHTML(s: string): string {\n  return s.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './base-widget';\nexport * from './chart-utils';\nexport * from './get-column-content';\nexport * from './interface/aggregation/aggregation';\nexport * from './interface/aggregation/aggregation-type';\nexport * from './interface/charts/chart-type';\nexport * from './interface/dataset/chart-dataset';\nexport * from './interface/dataset/chart-dataset-options';\nexport * from './interface/dataset/dataset';\nexport * from './interface/dataset/table-dataset';\nexport * from './interface/reports/report';\nexport * from './interface/reports/report-container';\nexport * from './interface/reports/report-string-identifier';\nexport * from './interface/reports/report-variable';\nexport * from './interface/reports-instances/report-container-instance';\nexport * from './interface/reports-instances/report-instance';\nexport * from './interface/styles';\nexport * from './interface/widgets/chart-widget';\nexport * from './interface/widgets/column-widget';\nexport * from './interface/widgets/custom-widget';\nexport * from './interface/widgets/data-widget';\nexport * from './interface/widgets/formula-widget';\nexport * from './interface/widgets/image-container-widget';\nexport * from './interface/widgets/image-widget';\nexport * from './interface/widgets/layout-widget';\nexport * from './interface/widgets/map-widget';\nexport * from './interface/widgets/page-break-widget';\nexport * from './interface/widgets/table-widget';\nexport * from './interface/widgets/text-widget';\nexport * from './interface/widgets/widget';\nexport * from './interface/widgets/widget-type';\nexport * from './interface/widgets/widget-with-content';\nexport * from './interface/widgets-instances/chart-widget-instance';\nexport * from './interface/widgets-instances/column-widget-instance';\nexport * from './interface/widgets-instances/data-widget-instance';\nexport * from './interface/widgets-instances/formula-widget-instance';\nexport * from './interface/widgets-instances/image-container-widget-instance';\nexport * from './interface/widgets-instances/image-widget-instance';\nexport * from './interface/widgets-instances/layout-widget-instance';\nexport * from './interface/widgets-instances/map-widget-instance';\nexport * from './interface/widgets-instances/page-break-widget-instance';\nexport * from './interface/widgets-instances/table-widget-instance';\nexport * from './interface/widgets-instances/text-widget-instance';\nexport * from './interface/widgets-instances/widget-instance';\nexport * from './interface/widgets-instances/widget-with-content-instance';\nexport * from './report';\nexport * from './report-string-identifier';\nexport * from './reports-module';\nexport * from './serializers/aggregation-serializer';\nexport * from './serializers/dataset-serializer';\nexport * from './serializers/report-container-serializer';\nexport * from './serializers/report-serializer';\nexport * from './serializers/widget-serializer';\nexport * from './widget';\nexport * from './interface/widgets/widget-components-map';\nexport * from './widget-export';\nexport * from './widget-host';\nexport * from './widget-service';\n\nexport * from './utils/aggregation/create-aggregation';\nexport * from './utils/reports-instances/create-report-instance';\nexport * from './utils/widgets/create-widget';\nexport * from './utils/widgets-instances/create-widget-instance';\nexport * from './utils/widgets-instances/widget-to-widget-instance';\n\nexport * from './report-to-pdf/report-to-pdf';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;MAyBsB,sBAAsB;IAY1C,YAAoB,IAAuB,EAAW,EAAc;QAAhD,SAAI,GAAJ,IAAI,CAAmB;QAAW,OAAE,GAAF,EAAE,CAAY;KAAI;IAVxE,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,QAAW;QACtB,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;SAC3B;KACF;;;ACnCH;;;;;;;;;;;;;;;;;;;;;AAsBA;IACY;AAAZ,WAAY,YAAY;IACtB,+CAAI,CAAA;IACJ,6CAAG,CAAA;IACH,iEAAa,CAAA;IACb,iDAAK,CAAA;IACL,qDAAO,CAAA;IACP,uDAAQ,CAAA;IACR,6CAAG,CAAA;IACH,yDAAS,CAAA;IACT,mDAAM,CAAA;IACN,mDAAM,CAAA;AACR,CAAC,EAXW,YAAY,KAAZ,YAAY;;ACvBxB;;;;;;;;;;;;;;;;;;;;;SAyBgB,kBAAkB,CAAC,SAAwB;IACzD,QAAQ,SAAS;QACf,KAAK,YAAY,CAAC,IAAI;YACpB,OAAO,MAAM,CAAC;QAChB,KAAK,YAAY,CAAC,GAAG;YACnB,OAAO,KAAK,CAAC;QACf,KAAK,YAAY,CAAC,aAAa;YAC7B,OAAO,eAAe,CAAC;QACzB,KAAK,YAAY,CAAC,KAAK;YACrB,OAAO,OAAO,CAAC;QACjB,KAAK,YAAY,CAAC,OAAO;YACvB,OAAO,SAAS,CAAC;QACnB,KAAK,YAAY,CAAC,QAAQ;YACxB,OAAO,UAAU,CAAC;QACpB,KAAK,YAAY,CAAC,GAAG;YACnB,OAAO,KAAK,CAAC;QACf,KAAK,YAAY,CAAC,SAAS;YACzB,OAAO,WAAW,CAAC;QACrB,KAAK,YAAY,CAAC,MAAM;YACtB,OAAO,QAAQ,CAAC;QAClB;YACE,OAAO,MAAM,CAAC;KACjB;AACH;;AChDA;;;;;;;;;;;;;;;;;;;;;MA2Ba,uBAAuB;IAClC,SAAS,CAAC,QAAiC,EAAE,MAAc;QACzD,OAAO,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;KAC1F;;;YAJF,IAAI,SAAC,EAAC,IAAI,EAAE,qBAAqB,EAAC;;;AC1BnC;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;AAsBA;IACY;AAAZ,WAAY,kBAAkB;IAC5B,2DAAI,CAAA;IACJ,yDAAG,CAAA;IACH,iEAAO,CAAA;IACP,iFAAe,CAAA;IACf,+DAAM,CAAA;AACR,CAAC,EANW,kBAAkB,KAAlB,kBAAkB;;ACvsBA;IACY;AAAZ,WAAY,aAAa;IACvB,qDAAM,CAAA;IACN,2DAAS,CAAA;IACT,mDAAK,CAAA;IACL,iDAAI,CAAA;IACJ,mDAAK,CAAA;IACL,mDAAK,CAAA;IACL,+CAAG,CAAA;IACH,qDAAM,CAAA;IACN,uDAAO,CAAA;IACP,qEAAc,CAAA;IACd,kEAAY,CAAA;IACZ,sDAAM,CAAA;AACR,CAAC,EAbW,aAAa,KAAb,aAAa;;ACvBzB;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;MA4BsB,iBAAiB;IAiBrC,YAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;KAAI;IAf/C,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IACI,QAAQ,CAAC,QAA2B;QACtC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC1B;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;YAhBF,SAAS;;;YALF,iBAAiB;;;uBAWtB,KAAK;;;ACjCR;;;;;;;;;;;;;;;;;;;;;AA8BO,MAAM,2BAA2B,GACpC,CAAC,MAAiB,EAAE,OAAmB,EAAE,IAAgC;IACvE,IAAI,MAAM,IAAI,IAAI,EAAE;QAClB,OAAO,EAAE,CAAC;KACX;IACD,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,EAAE,CAAC;IACvD,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;QACjC,OAAO,EAAE,CAAC;KACX;IACD,OAAO,qBAAqB,CAAC,gBAAgB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAChE,CAAC;;ACxCL;;;;;;;;;;;;;;;;;;;;;MA6Ba,6BAA6B;IACxC,SAAS,CAAC,MAAiB,EAAE,OAAmB,EAAE,IAAgC;QAChF,OAAO,2BAA2B,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;KAC3D;;;YAJF,IAAI,SAAC,EAAC,IAAI,EAAE,2BAA2B,EAAC;;;AC5BzC;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAM,OAAO,IAAK,IAAY,CAAC,OAAO,IAAI,IAAI,CAAgB,CAAC;MAYlD,eAAe;IAM1B;QAHS,YAAO,GAAG,IAAI,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;KAER;;;;;;IAOhB,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACpB;;;;;;IAOD,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACrB;;;;IAKD,MAAM,CAAC,QAAsB;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,MAAM,GAAsC,EAAE,CAAC;QACrD,MAAM,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QACtE,MAAM,QAAQ,GAAkB,EAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,SAAS,CAAC,EAAC,CAAC;QAC1E,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,SAAS,IAAI,QAAQ,EAAE,EAAE;YACtD,QAAQ;YACR,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;KACJ;IAEO,cAAc;QACpB,IAAI,QAAQ,GAAgB,EAAE,CAAC;QAC/B,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,QAAQ,IAAI,CAAC,UAAU;YACrB,QAAQ;YACR,KAAK,aAAa,CAAC,KAAK;gBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAiB,CAAC;gBACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;gBAC1C,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAkB,CAAC,CAAC;gBACvD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,MAAM,GAAG,GAAc,EAAE,CAAC;oBAC1B,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;oBACpC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACpC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnB;oBACD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACpB;gBACD,MAAM;YACR,KAAK,aAAa,CAAC,KAAK;gBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAwB,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAmB,EAAE,MAAc;oBACpD,MAAM,GAAG,GAAc,EAAE,CAAC;oBAC1B,IAAI,MAAM,KAAK,CAAC,EAAE;wBAChB,GAAG,CAAC,OAAO,CAAC,CAAC,IAAkB;4BAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;4BAC9D,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;gCACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;oCACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iCAClB;6BACF;yBACF,CAAC,CAAC;wBACH,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACvB;yBAAM;wBACL,GAAG,CAAC,OAAO,CAAC,CAAC,IAAkB;4BAC7B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;yBAC5D,CAAC,CAAC;wBACH,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACpB;iBACF,CAAC,CAAC;gBACH,MAAM;SACT;QAED,OAAO,QAAQ,CAAC;KACjB;IAEO,WAAW,CAAC,UAAyB;QAC3C,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC;KAC3E;;;YAhGF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,6SAAiC;gBAEjC,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAChD;;;;yBAEE,KAAK;mBACL,KAAK;sBACL,KAAK;qBACL,KAAK;;;AC5CR;;;;;;;;;;;;;;;;;;;;;MAyBa,aAAa;IACxB,YAAqB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;;;YAF5D,SAAS,SAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAC;;;YAFvB,gBAAgB;;;ACtBnC;;;;;;;;;;;;;;;;;;;;;MA+Ca,gBAAgB;;;YAjB5B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,uBAAuB;oBACvB,6BAA6B;oBAC7B,aAAa;oBACb,eAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uBAAuB;oBACvB,6BAA6B;oBAC7B,aAAa;oBACb,eAAe;iBAChB;aACF;;;AC9CD;;;;;;;;;;;;;;;;;;;;;SA2BgB,iBAAiB,CAAC,WAAiC;IACjE,uCACK,WAAW,KACd,WAAW,EAAE,WAAW,CAAC,WAAW,IAAI,kBAAkB,CAAC,IAAI,IAC/D;AACJ;;AChCA;;;;;;;;;;;;;;;;;;;;;MAyBa,wBAAwB;IACnC,OAAO,QAAQ,CAAC,IAA6B;QAC3C,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;QACD,OAAO,iBAAiB,iCAAK,IAAI,KAAE,WAAW,EAAE,IAAI,CAAC,WAAW,IAAE,CAAC;KACpE;;;AC/BH;;;;;;;;;;;;;;;;;;;;;SA0BgB,aAAa,CAAC,OAA4B;IACxD,uCACK,OAAO,KACV,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,iBAAiB,CAAC,EAAC,WAAW,EAAE,kBAAkB,CAAC,IAAI,EAAC,CAAC,IAC7F;AACJ;;AC/BA;;;;;;;;;;;;;;;;;;;;;MA6Ba,oBAAoB;IAC/B,OAAO,QAAQ,CAAC,IAAyB;QACvC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YAC1E,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,YAAY,KAAK;YACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtE,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvE,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;KAC5B;;;ACvCH;;;;;;;;;;;;;;;;;;;;;SA2BgB,YAAY,CAAC,MAAuB;IAClD,uCACK,MAAM,KACT,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,EAAE,EAC3B,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,eAAe,EAAE,IAClD;AACJ;;ACjCA;;;;;;;;;;;;;;;;;;;;;MAqCa,mBAAmB;IAC9B,OAAO,QAAQ,CAAC,IAAwB;QACtC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,UAAU;YACX,IAAI,CAAC,UAAU,GAAG,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,eAAe,EAAE,CAAC;QAC3F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAChC,MAAM,GAAG,GAAG,IAAiB,CAAC;QAC9B,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,EAAE;YACtF,OAAO,mBAAmB,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;SAC5D;QACD,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;YACpF,MAAM,CAAC,GAAG,mBAAmB,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;gBAC1C,MAAM,EAAE,GAAG,CAAmB,CAAC;gBAC/B,IAAI,EAAE,CAAC,MAAM,YAAY,KAAK,EAAE;oBAC9B,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtD;qBAAM,IAAI,EAAE,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC5B,EAAE,CAAC,MAAM,GAAG,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;iBACtD;aACF;YACD,OAAO,CAAC,CAAC;SACV;QACD,IAAI,GAAG,CAAC,UAAU,KAAK,aAAa,CAAC,GAAG,EAAE;YACxC,MAAM,EAAE,GAAG,GAAmB,CAAC;YAC/B,EAAE,CAAC,UAAU,GAAG,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;SAC9D;QACD,OAAO,GAAG,CAAC;KACZ;IAEO,OAAO,mBAAmB,CAAC,IAAsC;QACvE,IAAI,OAAoC,CAAC;QACzC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,OAAO,GAAG,EAAE,CAAC;SACd;aAAM;YACL,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;gBAC3C,OAAO,GAAI,IAAI,CAAC,OAA+B;qBAChC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjF;iBAAM;gBACL,OAAO,GAAI,IAAI,CAAC,OAA6B,CAAC,GAAG,CAAC,CAAC,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1F;SACF;QACD,uCAAW,YAAY,CAAC,IAAI,CAAC,KAAE,OAAO,IAAE;KACzC;IAEO,OAAO,0BAA0B,CAAC,IAC6B;QACrE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,uCAAW,YAAY,CAAC,IAAI,CAAC,KAAE,OAAO,IAAE;KACzC;;;ACvFH;;;;;;;;;;;;;;;;;;;;;MAyBa,4BAA4B;IACvC,OAAO,QAAQ,CAAC,IAAiC;QAC/C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,uCAAW,IAAI,KAAE,OAAO,EAAE,IAAI,CAAC,OAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,EAAE,IAAE;KACrE;;;AC7BH;;;;;;;;;;;;;;;;;;;;;SA0BgB,YAAY,CAAC,MAAuB;IAClD,yBAAW,MAAM,EAAE;AACrB;;AC5BA;;;;;;;;;;;;;;;;;;;;;MA2Ba,mBAAmB;IAC9B,OAAO,QAAQ,CAAC,IAAwB;QACtC,MAAM,UAAU,GAAwB,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QACxE,UAAU,CAAC,OAAO,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;gBACV,IAAI,CAAC,CAAC,CAAwB;oBAC3B,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAgC,CAAC,CAAC;aACnF;SACF,CAAC,CAAC;QACH,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;KAC3B;;;ACrCH;;;;;;;;;;;;;;;;;;;;;MAoCsB,eAAe;IAqBnC,YAAoB,IAA8B,EAAU,SAAoB;QAA5D,SAAI,GAAJ,IAAI,CAA0B;QAAU,cAAS,GAAT,SAAS,CAAW;QAFxE,UAAK,GAAG,KAAK,CAAC;KAE8D;IAjBpF,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IACI,QAAQ,CAAC,QAA2B;QACtC,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;KACF;IAQD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI;YAChE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;QAC7C,GAAG,CAAC,KAAK,EAAE,CAAC;QACZ,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACvE,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,OAAO;SACR;QACD,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzC,IAAI;YACF,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;YACtE,MAAM,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAC3D,MAAM,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;YAEhD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAa;gBAC9D,IAAI;oBACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CACnB,iBAAiB,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBAC1F;gBAAC,OAAO,CAAC,EAAE;iBACX;aACF,CAAC,CAAC;YAEH,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAC5C,IAAI,YAAY,CAAC,MAAM,EAAE;gBACvB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG;oBAC1C,IAAI,GAAG,IAAI,iBAAiB,EAAE;wBAC3B,iBAAyB,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC;qBAC7D;iBACF,CAAC,CAAC;aACJ;SACF;QAAC,OAAO,CAAC,EAAE;SACX;KACF;;;YAjEF,SAAS;;;YAZR,wBAAwB;YAIxB,SAAS;;;yBAUR,SAAS,SAAC,aAAa,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;uBAMvC,KAAK;;;AC3CR;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;AAwBO,MAAM,aAAa,GAA2B,EAAE;;ACxBvD;;;;;;;;;;;;;;;;;;;;;MA4BsB,gBAAgB;IAGpC,YAAY,cAAsC;QAFzC,kBAAa,GAA2B,aAAa,CAAC;QAG7D,IAAI,cAAc,IAAI,IAAI,EAAE;YAC1B,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;gBAChC,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;aAChD;SACF;KACF;IAED,oBAAoB,CAAC,MAIpB;QACC,MAAM,EAAC,UAAU,EAAE,SAAS,EAAC,GAAG,MAAM,CAAC;QACvC,IAAI,UAAU,GAAG,GAAG,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;SAC5E;QACD,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;KACzC;;;ACrDH;;;;;;;;;;;;;;;;;;;;;SA0BgB,mBAAmB,CAC/B,WAA2B,EAAE,QAAsB,EAAE,OAAmB;IAC1E,MAAM,IAAI,GAAU,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC9E,QAAQ,WAAW,CAAC,WAAW;QAC7B,KAAK,kBAAkB,CAAC,IAAI;YAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;aACxC;YACD,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,kBAAkB,CAAC,GAAG;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtE,KAAK,kBAAkB,CAAC,OAAO,CAAC;QAChC,KAAK,kBAAkB,CAAC,eAAe;YACrC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAM;gBACrB,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnD,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;aAC1B,CAAC,CAAC;QACL;YACE,OAAO,EAAE,CAAC;KACb;AACH;;AC9CA;;;;;;;;;;;;;;;;;;;;;SA4BgB,oBAAoB,CAChC,MAAiB,EAAE,OAAmB,EAAE,GAAqB;IAC/D,OAAO;QACL,MAAM;QACN,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,OAAO,EAAE,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC;QACjE,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,EAAE;KAC5B,CAAC;AACJ;;ACpCA;;;;;;;;;;;;;;;;;;;;;SAyBgB,SAAS,CAAC,CAAa,EAAE,OAAmB,EAAE,EAAoB;IAChF,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;IACxB,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QACjE,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,OAAO,GACT,EAAE,IAAI,IAAI,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACvF,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC;SAC1B;KACF;SAAM;QACL,OAAO,GAAG,OAAO,IAAI,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC;YACjF,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;YACnB,OAAO,CAAC;KACb;IACD,OAAO,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC9C;;ACxCA;;;;;;;;;;;;;;;;;;;;;SA2DgB,sBAAsB,CAClC,MAAiB,EAAE,OAAmB,EAAE,EAAoB;IAC9D,MAAM,EAAE,GAAG,oBAAoB,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAErD,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,EAAE;QAC5F,MAAM,GAAG,GAAG,MAA8B,CAAC;QAC3C,MAAM,IAAI,GAAG,EAAkC,CAAC;QAChD,IAAI,OAAO,GAAG,EAAyB,CAAC;QACxC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC3B,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACxE,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;oBAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;wBACzC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,kCAAM,OAAO,KAAE,aAAa,EAAE,CAAC,KAAG,EAAE,CAAC,CAAC,CAAC;qBAC7E;iBACF;aACF;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB,CAAC,CAAC;KACJ;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;QACpD,MAAM,EAAE,GAAG,MAAwB,CAAC;QACpC,MAAM,GAAG,GAAG,EAA4B,CAAC;QACzC,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,YAAY,KAAK,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACpE,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,GAAG,GAAG,kBAAkB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACjD,IAAI;gBACF,IAAI,GAAG,YAAY,KAAK,EAAE;oBACxB,GAAG,GAAG,GAAG,CAAC,GAAG,CACT,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzF;qBAAM;oBACL,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;wBACf,GAAG,CAAC;iBAC7E;aACF;YAAC,OAAO,EAAE,EAAE;aACZ;YACD,OAAO,GAAG,CAAC;SACZ,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,YAAY,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjE,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,EAAE,mCACD,CAAC,CAAC,OAAO,IAAI,EAAE,KAClB,IAAI,EAAE,mBAAmB,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,GAC7D,CAAC;YACF,IAAI,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE;gBACvB,MAAM,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC3C,EAAE,mCAAO,EAAE,KAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAC,CAAC;aACvC;YACD,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI,EAAE;gBACrB,EAAE,mCAAO,EAAE,KAAE,OAAO,EAAE,CAAC,CAAC,OAAO,GAAC,CAAC;aAClC;YACD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBACnB,EAAE,mCAAO,EAAE,KAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,GAAC,CAAC;aAChF;YACD,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,EAAE;gBACxB,EAAE,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACxC;YACD,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QACH,GAAG,CAAC,IAAI,GAAG,EAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAC,CAAC;QACxD,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;QAC5D,GAAG,CAAC,UAAU;YACV,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,UAAU,KAAK,IAAI,IAAI,EAAE,CAAC,UAAU,KAAK,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QACzF,IAAI,EAAE,CAAC,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE;YACpD,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;YACnC,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU;gBAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;gBACnC,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1C,aAAa,CAAC,OAAO,CAAC,CAAC,gBAAwB;oBAC7C,MAAM,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;oBAC9C,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,IAAI,IAAI;wBACxD,YAAY,CAAC,OAAO,IAAI,IAAI,EAAE;wBAChC,MAAM,CAAC,gBAAgB,CAAC,GAAG,kBAAkB,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;qBAC9E;iBACF,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;KACF;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;QACpD,MAAM,EAAE,GAAG,MAAwB,CAAC;QACpC,MAAM,GAAG,GAAG,EAA4B,CAAC;QAEzC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI;YAC9C,OAAO,IAAI,CAAC,OAAO,YAAY,KAAK;gBAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAe,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;gBAC5E,SAAS,CAAC,IAAI,CAAC,OAAQ,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;SACzD,CAAC,CAAC,CAAC;QACJ,GAAG,CAAC,UAAU;YACV,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,UAAU,KAAK,IAAI,IAAI,EAAE,CAAC,UAAU,KAAK,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QACzF,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI;YACnD,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI;gBACF,GAAG,GAAG,IAAI,CAAC,OAAO,YAAY,KAAK;oBAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAe,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;oBAC5E,SAAS,CAAC,IAAI,CAAC,OAAQ,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;aACzD;YAAC,OAAO,EAAE,EAAE;aACZ;YACD,QAAQ;gBACN,KAAK,EAAE,GAAG;gBACV,KAAK,kCAAM,EAAE,CAAC,UAAU,GAAK,IAAI,CAAC,KAAK,CAAC;gBACxC,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,EAAE;SACJ,CAAC,CAAC,CAAC;KACL;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,YAAY,EAAE;QAC3D,MAAM,GAAG,GAAG,MAA+B,CAAC;QAC5C,MAAM,IAAI,GAAG,EAA4B,CAAC;QAE1C,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAqB;YACnD,OAAO,IAAI,CAAC,OAAO,YAAY,KAAK;gBAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAe,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;gBAC9D,SAAS,CAAC,IAAI,CAAC,OAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,UAAU;YACX,GAAG,CAAC,UAAU,KAAK,GAAG,CAAC,UAAU,KAAK,IAAI,IAAI,GAAG,CAAC,UAAU,KAAK,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QAE5F,IAAI,OAAO,GAAqB,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;QAC7F,OAAO,GAAG,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,GAAmB,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI;YACjE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,IAAI;gBACF,IAAI,GAAG,YAAY,KAAK,EAAE;oBACxB,GAAG,GAAG,GAAG,CAAC,GAAG,CACT,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzF;qBAAM;oBACL,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;wBACf,GAAG,CAAC;iBAC7E;aACF;YAAC,OAAO,EAAE,EAAE;aACZ;YACD,wCAAY,IAAI,KAAE,KAAK,EAAE,GAAG,KAAG;SAChC,CAAC,CAAC,CAAC;QAEJ,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,OAAO,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI;YACzC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI;gBACF,GAAG,GAAG,IAAI,CAAC,OAAO,YAAY,KAAK;oBAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAe,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;oBAC5E,SAAS,CAAC,IAAI,CAAC,OAAQ,EAAE,OAAqB,EAAE,EAAE,CAAC,CAAC;aACzD;YAAC,OAAO,EAAE,EAAE;aACZ;YACD,QAAQ;gBACN,KAAK,EAAE,GAAG;gBACV,KAAK,kCAAM,GAAG,CAAC,UAAU,GAAK,IAAI,CAAC,KAAK,CAAC;gBACzC,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,EAAE;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC;KACvC;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,KAAK,EAAE;QACpD,MAAM,EAAE,GAAG,MAAwB,CAAC;QACpC,MAAM,GAAG,GAAG,EAA4B,CAAC;QACzC,IAAI,EAAE,CAAC,IAAI,EAAE;YACX,GAAG,CAAC,IAAI,GAAG,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACzD;QACD,IAAI,EAAE,CAAC,IAAI,EAAE;YACX,GAAG,CAAC,IAAI,GAAG,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACzD;QACD,IAAI,EAAE,CAAC,GAAG,EAAE;YACV,GAAG,CAAC,GAAG,GAAG,kBAAkB,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACvD;KACF;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,cAAc,EAAE;QAC7D,MAAM,GAAG,GAAG,MAAiC,CAAC;QAC9C,MAAM,IAAI,GAAG,EAAqC,CAAC;QACnD,IAAI,GAAG,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK;gBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC1D,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACpD;QACD,IAAI,GAAG,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK;gBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC1D,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACpD;QACD,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,YAAY,KAAK;gBACjC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACzD,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACnD;KACF;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,IAAI,EAAE;QACnD,MAAM,GAAG,GAAG,MAAuB,CAAC;QACpC,MAAM,IAAI,GAAG,EAA2B,CAAC;QACzC,MAAM,YAAY,GAAW,kBAAkB,CAAC;QAChD,MAAM,OAAO,GAAsD,EAAE,CAAC;QACtE,IAAI,KAA2B,CAAC;QAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC5B,OAAO,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC1C,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC5B,MAAM,OAAO,GAAG,aAAa,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YACnD,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;SACnC;QACD,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,SAAS,CAAC;YACd,IAAI;gBACF,SAAS,GAAG,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC5D;YAAC,OAAO,CAAC,EAAE;gBACV,SAAS,GAAG,EAAE,CAAC;aAChB;YACD,QAAQ,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;SACxF,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;KAC3F;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,OAAO,EAAE;QACtD,MAAM,EAAE,GAAG,MAA0B,CAAC;QACtC,MAAM,GAAG,GAAG,EAA8B,CAAC;QAC3C,GAAG,CAAC,OAAO,GAAG,kBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC/D;SAAM,IAAI,MAAM,CAAC,UAAU,KAAK,aAAa,CAAC,GAAG,EAAE;QAClD,MAAM,EAAE,GAAG,MAAsB,CAAC;QAClC,MAAM,GAAG,GAAG,EAA0B,CAAC;QACvC,GAAG,CAAC,UAAU,GAAG,kBAAkB,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACrE;SAAM,IAAI,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE;QAClC,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI;YACjD,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY;YAC7C,IAAI,CAAC;QACT,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,OAAO,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;SAC9B;KACF;IACD,OAAO,EAAE,CAAC;AACZ;;ACtRA;;;;;;;;;;;;;;;;;;;;;SA+BgB,6BAA6B,CACzC,SAA6B,EAAE,OAAmB,EAClD,EAAoB;IACtB,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACnF,OAAO;QACL,SAAS;QACT,OAAO;QACP,MAAM,EAAE,SAAS,CAAC,MAAM;KACzB,CAAC;AACJ;;ACxCA;;;;;;;;;;;;;;;;;;;;;SA8BgB,oBAAoB,CAChC,MAAiB,EAAE,OAAmB,EAAE,EAAoB;IAC9D,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,EAAE,OAAO,CAAC,QAAQ;QACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAChF,CAAC,CAAC;IACH,OAAO;QACL,MAAM;QACN,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,6BAA6B,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS;QAC7F,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,6BAA6B,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC;YAC1D,SAAS;QACnC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,6BAA6B,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,SAAS;QAC7F,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,EAAE;KAC5B,CAAC;AACJ;;AC3CA;;;;;;;;;;;;;;;;;;;;;SAuCgB,gBAAgB,CAAC,MAAyB;IACxD,MAAM,QAAQ,GAAwB,EAAE,CAAC;IACzC,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;QACzB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KACnD;IACD,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;QAC1B,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;KACpD;IACD,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;QACzB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KACnD;IACD,OAAO,IAAI,OAAO,CAAW,OAAO;QAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI;YAC7B,IAAI,GAAG,GAAa,EAAE,CAAC;YACvB,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;gBACpB,GAAG,mCAAO,GAAG,GAAK,CAAC,CAAC,CAAC;aACtB;YACD,OAAO,CAAC,GAAG,CAAC,CAAC;SACd,CAAC,CAAC;KACJ,CAAC,CAAC;AACL,CAAC;AAED,SAAS,mBAAmB,CAAC,SAAkE;IAE7F,MAAM,QAAQ,GAAwB,EAAE,CAAC;IACzC,KAAK,IAAI,MAAM,IAAI,SAAS,CAAC,OAAO,EAAE;QACpC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;KACzC;IACD,OAAO,IAAI,OAAO,CAAW,OAAO;QAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI;YAC7B,IAAI,GAAG,GAAa,EAAE,CAAC;YACvB,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;gBACpB,GAAG,mCAAO,GAAG,GAAK,CAAC,CAAC,CAAC;aACtB;YACD,OAAO,CAAC,GAAG,CAAC,CAAC;SACd,CAAC,CAAC;KACJ,CAAC,CAAC;AACL,CAAC;AAED,SAAS,gBAAgB,CAAC,MAAyB;IACjD,QAAQ,MAAM,CAAC,UAAU;QACzB,KAAK,aAAa,CAAC,MAAM,CAAC;QAC1B,KAAK,aAAa,CAAC,MAAM;YACvB,OAAO,mBAAmB,CAAC,MAAsC,CAAC,CAAC;QACrE,KAAK,aAAa,CAAC,KAAK;YACtB,MAAM,KAAK,GAAG,MAAgC,CAAC;YAC/C,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,KAAK,EAAE;gBACjD,MAAM;aACP;YACD,OAAO,IAAI,OAAO,CAAW,OAAO;gBAClC,MAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;gBACjC,GAAG,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;gBAChC,GAAG,CAAC,MAAM,GAAG;oBACX,MAAM,CAAC,GAAG,IAAI,UAAU,EAAE,CAAC;oBAC3B,CAAC,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;oBAC9B,CAAC,CAAC,SAAS,GAAG;wBACZ,MAAM,MAAM,GAAG,CAAC,CAAC,MAAgB,CAAC;wBAClC,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;4BACnC,MAAM,GAAG,GAAa,EAAE,CAAC;4BACzB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;4BACxB,OAAO,CAAC,GAAG,CAAC,CAAC;yBACd;6BAAM;4BACL,OAAO,CAAC,EAAE,CAAC,CAAC;yBACb;qBACF,CAAC;oBACF,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAC/B,CAAC;gBACF,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC1B,GAAG,CAAC,IAAI,EAAE,CAAC;aACZ,CAAC,CAAC;KACJ;IACD,OAAO,IAAI,OAAO,CAAW,OAAO,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD;;AChHA;;;;;;;;;;;;;;;;;;;;;SAgDgB,aAAa,CAAC,MAAyB,EAAE,WAA6B;IACpF,eAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;QAC3C,GAAG,CAAC,IAAI,EAAE,CAAC;KACZ,CAAC,CAAC;AACL,CAAC;SAEe,eAAe,CAC3B,MAAyB,EAAE,WAA6B;IAC1D,OAAO,IAAI,OAAO,CAAc,OAAO;QACrC,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM;YAClC,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5B,IAAI,WAAW,KAAK,WAAW,EAAE;gBAC/B,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC;aACzB;YACD,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,eAAe,GAAG,WAAW,CAAC;YACrC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;KACJ,CAAC,CAAC;AACL,CAAC;AAED,SAAS,WAAW,CAChB,MAAyB,EAAE,MAAgB,EAAE,KAAa;IAC5D,MAAM,KAAK,GAAc,EAAE,CAAC;IAC5B,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;QACzB,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KAC1D;IACD,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;QAC1B,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KAC3D;IACD,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;QACzB,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KAC1D;IACD,OAAO,EAAC,OAAO,EAAE,EAAC,KAAK,EAAC,EAAC,CAAC;AAC5B,CAAC;AAED,SAAS,cAAc,CACnB,SAAqC,EAAE,MAAgB,EAAE,KAAa;IACxE,OAAO,EAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,EAAC,CAAC;AAC5E,CAAC;AAED,MAAM,oBAAoB,GAAG,EAAE,CAAC;AAEhC,SAAS,WAAW,CAAC,MAAyB,EAAE,MAAgB,EAAE,KAAa;IAC7E,QAAQ,MAAM,CAAC,MAAM,CAAC,UAAU;QAC9B,KAAK,aAAa,CAAC,MAAM;YACvB,OAAO,WAAW,CAAC,MAAiC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACvE,KAAK,aAAa,CAAC,SAAS;YAC1B,OAAO,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAC,CAAC;QACxC,KAAK,aAAa,CAAC,KAAK;YACtB,OAAO,UAAU,CAAC,MAAgC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACrE,KAAK,aAAa,CAAC,IAAI;YACrB,OAAO,SAAS,CAAC,MAA+B,CAAC,CAAC;QACpD,KAAK,aAAa,CAAC,KAAK;YACtB,MAAM,KAAK,GAAG,MAAgC,CAAC;YAC/C,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;YACzE,IAAI,OAAO,KAAK,EAAE,EAAE;gBAClB,OAAO,EAAC,IAAI,EAAE,iCAAiC,EAAC,CAAC;aAClD;YACD,OAAO,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,EAAC,CAAC;QAC1E,KAAK,aAAa,CAAC,KAAK;YACtB,OAAO,UAAU,CAAC,MAAgC,CAAC,CAAC;QACtD,KAAK,aAAa,CAAC,MAAM;YACvB,MAAM,EAAE,GAAG,MAAiC,CAAC;YAC7C,OAAO,EAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,EAAC,CAAC;QACrE,KAAK,aAAa,CAAC,OAAO;YACxB,MAAM,EAAE,GAAG,MAAkC,CAAC;YAC9C,OAAO,EAAC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,EAAC,CAAC;QACrE;YACE,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;KACrB;AACH,CAAC;AAED,SAAS,WAAW,CAAC,EAA2B,EAAE,MAAgB,EAAE,KAAa;IAC/E,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACvC,OAAO,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE;QACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,MAAM,UAAU,GAAG,KAAK,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC1C,IAAI,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAiB,CAAC;;;QAG3E,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;YACvB,KAAK,GAAG,EAAC,KAAK,EAAE,CAAC,KAAK,CAAC,EAAC,CAAC;SAC1B;QACA,KAAgB,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;QAC3D,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtB;IACD,OAAO,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC;AAC7B,CAAC;AAED,SAAS,UAAU,CAAC,KAA6B,EAAE,MAAgB,EAAE,KAAa;IAChF,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,YAAY,CAAC,KAAK,EAAE;;QAEjD,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;KACnB;IACD,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;KACnB;IACD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAC7B,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC/C,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,OAAO,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,EAAC,CAAC;AAC1E,CAAC;AAED,SAAS,SAAS,CAAC,EAAyB;IAC1C,MAAM,IAAI,GAAY;QACpB,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC;QAC5B,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC;KACxC,CAAC;IACF,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QAClC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,oBAAoB,CAAC,CAAC;KAChD;SAAM,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QACzC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,CAAC;KAC/C;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,UAAU,CAAC,KAA6B;IAC/C,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACjD,OAAO,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC;KACnB;IACD,MAAM,IAAI,GAAkB,EAAE,CAAC;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,OAAO,GAAgB,EAAE,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;;YAEjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;aAC1B;SACF;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB;IACD,OAAO,EAAC,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,oBAAoB,CAAC,EAAC,CAAC;AACjF,CAAC;AAED,SAAS,SAAS,CAAC,CAAS;IAC1B,OAAO,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;AAC1C;;ACnMA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;"}