{"version":3,"file":"ajf-core-barcode.mjs","sources":["../../../projects/core/barcode/src/barcode.ts","../../../projects/core/barcode/src/public_api.ts","../../../projects/core/barcode/src/ajf-core-barcode.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, EventEmitter, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {BrowserMultiFormatReader} from '@zxing/browser';\nimport {Result} from '@zxing/library';\nimport {from, Observable, of, Subscription} from 'rxjs';\nimport {catchError, debounceTime, switchMap} from 'rxjs/operators';\n\n@Directive()\nexport abstract class AjfBarcode implements ControlValueAccessor, OnDestroy {\n  readonly codeReader = new BrowserMultiFormatReader();\n\n  readonly startDetection = new EventEmitter<void>();\n  readonly startCalculation = new EventEmitter<string>();\n\n  readonly _startDetectionSub: Subscription = Subscription.EMPTY;\n  readonly _startCalculationSub: Subscription = Subscription.EMPTY;\n\n  private _canvas?: HTMLCanvasElement;\n  get canvasCtx(): CanvasRenderingContext2D | undefined {\n    return this._canvas?.getContext('2d')!;\n  }\n\n  /**\n   * A html video element created at runtime\n   *\n   * @memberof AjfBarcode\n   */\n  private _video?: HTMLVideoElement;\n  get videoSource(): HTMLVideoElement | undefined {\n    return this._video;\n  }\n\n  /**\n   * implement the control form value.\n   * rappresent the barcode value.\n   *\n   * @memberof AjfBarcode\n   */\n  private _barcodeValue = '';\n  get value(): string {\n    return this._barcodeValue;\n  }\n  set value(value: string) {\n    if (this._barcodeValue !== value) {\n      this._barcodeValue = value;\n      this._cdr.detectChanges();\n      this._onChangeCallback(value);\n    }\n  }\n\n  private _toggle = 'drop';\n  get toggle() {\n    return this._toggle;\n  }\n  set toggle(val: string) {\n    this._toggle = val;\n    this._cdr.markForCheck();\n  }\n\n  private _onChangeCallback = (_: any) => {};\n  private _onTouchedCallback = () => {};\n\n  constructor(private _cdr: ChangeDetectorRef, private _renderer: Renderer2) {\n    this._init();\n\n    if (this.videoSource != null) {\n      this._startDetectionSub = (this.startDetection as Observable<void>)\n        .pipe(\n          debounceTime(300),\n          switchMap(() => {\n            const data: string = this._getDataFromVideo(this.videoSource!);\n            return this._readBarcodeFromData(data);\n          }),\n          catchError(() => {\n            return of({} as Result);\n          }),\n        )\n        .subscribe((result: any) => {\n          if (!result.text) {\n            this.startDetection.emit();\n          } else {\n            this.toggle = 'drop';\n            this.value = result.text;\n          }\n        });\n    }\n\n    this._startCalculationSub = (this.startCalculation as Observable<string>)\n      .pipe(\n        switchMap((data: string) => {\n          return this._readBarcodeFromData(data);\n        }),\n      )\n      .subscribe((result: any) => {\n        if (result.text) {\n          this.toggle = 'drop';\n          this.value = result.text;\n        }\n      });\n  }\n\n  reset(): void {\n    this.value = '';\n    this._onTouchedCallback();\n  }\n\n  takeSnapshot(): void {\n    this.startDetection.emit();\n  }\n\n  onSelectFile(evt: Event): void {\n    if (evt == null || evt.target == null) {\n      return;\n    }\n    const target = evt.target as HTMLInputElement;\n    const files = target.files as FileList;\n    this._onSelect(files);\n  }\n\n  onSelectDrop(files: FileList): void {\n    if (files == null) {\n      return;\n    }\n    this._onSelect(files);\n  }\n\n  /** ControlValueAccessor implements */\n  writeValue(value: string) {\n    this._barcodeValue = value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouchedCallback = fn;\n  }\n\n  ngOnDestroy(): void {\n    this._startCalculationSub.unsubscribe();\n    this._startDetectionSub.unsubscribe();\n  }\n\n  private _init(): void {\n    this._initCanvas();\n    this._initVideo();\n  }\n\n  private _initCanvas(): void {\n    this._canvas = this._renderer.createElement('canvas');\n    if (this._canvas == null) {\n      return;\n    }\n    this._canvas.height = 480;\n    this._canvas.width = 640;\n  }\n\n  private _initVideo(): void {\n    this._video = this._renderer.createElement('video');\n    if (this._video == null) {\n      return;\n    }\n    this._video.height = 480;\n    this._video.width = 640;\n  }\n\n  private _onSelect(files: FileList): void {\n    if (files != null && files.length > 0 && files[0]) {\n      let reader = new FileReader();\n\n      reader.readAsDataURL(files[0]);\n      reader.onload = (ev: ProgressEvent) => {\n        const data: string = (ev.target as FileReader).result as string;\n        this.startCalculation.emit(data);\n        this._cdr.detectChanges();\n      };\n    }\n  }\n\n  /**\n   * write a frame of HTMLVideoElement into HTMLCanvasElement and\n   * return the result of toDataURL('image/png')\n   *\n   * @param video\n   * @memberof AjfBarcode\n   */\n  private _getDataFromVideo(video: HTMLVideoElement): string {\n    if (this.canvasCtx == null || this._canvas == null) {\n      return '';\n    }\n    this.canvasCtx.drawImage(video, 0, 0, 640, 480);\n    return this._canvas.toDataURL('image/png');\n  }\n\n  /**\n   * call @zxing library method with HTMLImageElement as parameter\n   *\n   * @param img\n   * @memberof AjfBarcode\n   */\n  private _readBarcodeFromImage(img: HTMLImageElement): Observable<Result> {\n    const decode = from(this.codeReader.decodeFromImageElement(img)) as Observable<Result>;\n    return decode.pipe(catchError(e => of(e))) as Observable<Result>;\n  }\n\n  /**\n   * build an image by data and call _readBarcodeFromImage\n   *\n   * @param data\n   * @memberof AjfBarcode\n   */\n  private _readBarcodeFromData(data: string): Observable<Result> {\n    const image: HTMLImageElement = this._createImage(data);\n    return this._readBarcodeFromImage(image);\n  }\n\n  /**\n   * build an image by data\n   *\n   * @param data\n   * @memberof AjfBarcode\n   */\n  private _createImage(data: string): HTMLImageElement {\n    const image: HTMLImageElement = this._renderer.createElement('img');\n    if (data !== null && typeof data === 'string') {\n      image.src = data;\n    }\n    return image;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './barcode';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}