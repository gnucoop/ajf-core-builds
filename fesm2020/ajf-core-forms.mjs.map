{"version":3,"file":"ajf-core-forms.mjs","sources":["../../../projects/core/forms/src/as-validation-errors-string.ts","../../../projects/core/forms/src/as-field-instance.ts","../../../projects/core/forms/src/as-repeating-slide-instance.ts","../../../projects/core/forms/src/interface/fields/field-type.ts","../../../projects/core/forms/src/interface/nodes/node-type.ts","../../../projects/core/forms/src/utils/choices/init-choices-origin.ts","../../../projects/core/forms/src/utils/fields/fields-map.ts","../../../projects/core/forms/src/utils/fields/is-custom-field-with-choices.ts","../../../projects/core/forms/src/utils/fields/is-field-with-choices.ts","../../../projects/core/forms/src/utils/nodes/is-field.ts","../../../projects/core/forms/src/utils/nodes-instances/is-field-instance.ts","../../../projects/core/forms/src/utils/fields-instances/is-field-with-choices-instance.ts","../../../projects/core/forms/src/utils/fields/is-table-field.ts","../../../projects/core/forms/src/utils/fields-instances/is-table-field-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/update-conditional-branches.ts","../../../projects/core/forms/src/utils/nodes-instances/update-visibility.ts","../../../projects/core/forms/src/utils/nodes-instances/node-instance-suffix.ts","../../../projects/core/forms/src/utils/nodes-instances/node-instance-complete-name.ts","../../../projects/core/forms/src/utils/fields-instances/update-formula.ts","../../../projects/core/forms/src/utils/fields-instances/update-next-slide-condition.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-conditions.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-max-digits.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-max-value.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-min-digits.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-min-value.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-not-empty.ts","../../../projects/core/forms/src/utils/validation/evaluate-validation-group.ts","../../../projects/core/forms/src/utils/fields-instances/update-validation.ts","../../../projects/core/forms/src/utils/warning/evaluate-warning.ts","../../../projects/core/forms/src/utils/warning/evaluate-warning-conditions.ts","../../../projects/core/forms/src/utils/warning/evaluate-warning-group.ts","../../../projects/core/forms/src/utils/fields-instances/update-warning.ts","../../../projects/core/forms/src/utils/fields-instances/update-field-instance-state.ts","../../../projects/core/forms/src/utils/fields-instances/update-filtered-choices.ts","../../../projects/core/forms/src/utils/fields-instances/update-trigger-conditions.ts","../../../projects/core/forms/src/utils/nodes/create-node.ts","../../../projects/core/forms/src/utils/fields/create-field.ts","../../../projects/core/forms/src/utils/nodes/is-slides-node.ts","../../../projects/core/forms/src/utils/nodes/is-container-node.ts","../../../projects/core/forms/src/utils/nodes-instances/is-container-node-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/flatten-nodes-instances.ts","../../../projects/core/forms/src/utils/nodes-instances/is-slides-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/flatten-nodes-instances-tree.ts","../../../projects/core/forms/src/utils/nodes/is-node-group.ts","../../../projects/core/forms/src/utils/nodes-instances/is-node-group-instance.ts","../../../projects/core/forms/src/utils/nodes/is-repeating-container-node.ts","../../../projects/core/forms/src/utils/nodes-instances/is-repeating-container-node-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/is-repeating-group-instance.ts","../../../projects/core/forms/src/utils/nodes/is-repeating-slide.ts","../../../projects/core/forms/src/utils/nodes-instances/is-repeating-slide-instance.ts","../../../projects/core/forms/src/utils/nodes/is-slide-node.ts","../../../projects/core/forms/src/utils/nodes-instances/is-slide-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/create-node-instance.ts","../../../projects/core/forms/src/utils/fields-instances/create-field-instance.ts","../../../projects/core/forms/src/utils/fields-instances/create-field-with-choices-instance.ts","../../../projects/core/forms/src/utils/fields-instances/create-table-field-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/create-node-group-instance.ts","../../../projects/core/forms/src/utils/slides-instances/create-slide-instance.ts","../../../projects/core/forms/src/utils/slides-instances/create-repeating-slide-instance.ts","../../../projects/core/forms/src/utils/validation/create-validation-group.ts","../../../projects/core/forms/src/utils/warning/create-warning-group.ts","../../../projects/core/forms/src/utils/nodes-instances/get-ancestor-repeating-nodes.ts","../../../projects/core/forms/src/utils/nodes-instances/get-ancestor-repeating-nodes-names.ts","../../../projects/core/forms/src/utils/nodes-instances/get-container-node.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-condition.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-conditions.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-formula.ts","../../../projects/core/forms/src/utils/validation/create-validation.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-validation.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-validations.ts","../../../projects/core/forms/src/utils/warning/create-warning.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-warning.ts","../../../projects/core/forms/src/utils/nodes-instances/get-instance-warnings.ts","../../../projects/core/forms/src/utils/nodes-instances/node-to-node-instance.ts","../../../projects/core/forms/src/utils/nodes-instances/update-editability.ts","../../../projects/core/forms/src/utils/nodes/flatten-nodes.ts","../../../projects/core/forms/src/utils/nodes/ordered-nodes.ts","../../../projects/core/forms/src/utils/slides-instances/update-reps-num.ts","../../../projects/core/forms/src/utils/slides-instances/valid-slide.ts","../../../projects/core/forms/src/validation-service.ts","../../../projects/core/forms/src/form-renderer.ts","../../../projects/core/forms/src/base-field.ts","../../../projects/core/forms/src/bool-to-int.ts","../../../projects/core/forms/src/date-value.ts","../../../projects/core/forms/src/date-value-string.ts","../../../projects/core/forms/src/errors.ts","../../../projects/core/forms/src/expand-input-with-choices.ts","../../../projects/core/forms/src/field-host.ts","../../../projects/core/forms/src/field.ts","../../../projects/core/forms/src/field-utils.ts","../../../projects/core/forms/src/field-icon.ts","../../../projects/core/forms/src/field-is-valid.ts","../../../projects/core/forms/src/field-service.ts","../../../projects/core/forms/src/field-warning-alert-result.ts","../../../projects/core/forms/src/field-with-choices.ts","../../../projects/core/forms/src/warning-alert-service.ts","../../../projects/core/forms/src/file-field.ts","../../../projects/core/forms/src/file-field.html","../../../projects/core/forms/src/form.ts","../../../projects/core/forms/src/utils/fields/is-multiple-choice-field.ts","../../../projects/core/forms/src/utils/fields/is-single-choice-field.ts","../../../projects/core/forms/src/utils/forms/build-form-string-identifier.ts","../../../projects/core/forms/src/form-string-identifier.ts","../../../projects/core/forms/src/get-table-cell-control.ts","../../../projects/core/forms/src/image-field.ts","../../../projects/core/forms/src/image-field.html","../../../projects/core/forms/src/increment.ts","../../../projects/core/forms/src/is-cell-editable.ts","../../../projects/core/forms/src/is-readonly-input-field.ts","../../../projects/core/forms/src/is-repeating-slide.ts","../../../projects/core/forms/src/node-complete-name.ts","../../../projects/core/forms/src/range.ts","../../../projects/core/forms/src/input-field.ts","../../../projects/core/forms/src/read-only-field.ts","../../../projects/core/forms/src/read-only-field.html","../../../projects/core/forms/src/read-only-date-field.ts","../../../projects/core/forms/src/read-only-date-field.html","../../../projects/core/forms/src/read-only-file-field.ts","../../../projects/core/forms/src/read-only-file-field.html","../../../projects/core/forms/src/read-only-geolocation-field.ts","../../../projects/core/forms/src/read-only-geolocation-field.html","../../../projects/core/forms/src/read-only-image-field.ts","../../../projects/core/forms/src/read-only-image-field.html","../../../projects/core/forms/src/read-only-select-field.ts","../../../projects/core/forms/src/read-only-select-field.html","../../../projects/core/forms/src/table-row-class.ts","../../../projects/core/forms/src/read-only-table-field.ts","../../../projects/core/forms/src/read-only-table-field.html","../../../projects/core/forms/src/video-url-field.ts","../../../projects/core/forms/src/read-only-video-url-field.ts","../../../projects/core/forms/src/read-only-video-url-field.html","../../../projects/core/forms/src/table-visible-columns.ts","../../../projects/core/forms/src/valid-slide.ts","../../../projects/core/forms/src/forms-module.ts","../../../projects/core/forms/src/search-alert-threshold.ts","../../../projects/core/forms/src/utils/attachments/create-attachments-origin.ts","../../../projects/core/forms/src/serializers/attachments-origin-serializer.ts","../../../projects/core/forms/src/utils/choices/create-choices-origin.ts","../../../projects/core/forms/src/serializers/choices-origin-serializer.ts","../../../projects/core/forms/src/utils/fields/create-field-with-choices.ts","../../../projects/core/forms/src/utils/nodes/create-container-node.ts","../../../projects/core/forms/src/utils/nodes/create-repeating-node.ts","../../../projects/core/forms/src/utils/nodes/create-node-group.ts","../../../projects/core/forms/src/utils/slides/create-repeating-slide.ts","../../../projects/core/forms/src/utils/slides/create-slide.ts","../../../projects/core/forms/src/serializers/validation-group-serializer.ts","../../../projects/core/forms/src/serializers/warning-group-serializer.ts","../../../projects/core/forms/src/serializers/node-serializer.ts","../../../projects/core/forms/src/serializers/form-serializer.ts","../../../projects/core/forms/src/table-field.ts","../../../projects/core/forms/src/random-ajf-context-generator.ts","../../../projects/core/forms/src/form-to-pdf/form-to-pdf.ts","../../../projects/core/forms/src/interface/attachments/attachment.ts","../../../projects/core/forms/src/interface/attachments/attachments-fixed-origin.ts","../../../projects/core/forms/src/interface/attachments/attachments-origin.ts","../../../projects/core/forms/src/interface/attachments/attachments-type.ts","../../../projects/core/forms/src/interface/choices/base-choices-origin.ts","../../../projects/core/forms/src/interface/choices/choice.ts","../../../projects/core/forms/src/interface/choices/choices-fixed-origin.ts","../../../projects/core/forms/src/interface/choices/choices-function.ts","../../../projects/core/forms/src/interface/choices/choices-function-origin.ts","../../../projects/core/forms/src/interface/choices/choices-observable-array-origin.ts","../../../projects/core/forms/src/interface/choices/choices-observable-origin.ts","../../../projects/core/forms/src/interface/choices/choices-origin.ts","../../../projects/core/forms/src/interface/choices/choices-origin-type.ts","../../../projects/core/forms/src/interface/choices/choices-promise-origin.ts","../../../projects/core/forms/src/interface/choices/choices-type.ts","../../../projects/core/forms/src/interface/fields/base-field.ts","../../../projects/core/forms/src/interface/fields/boolean-field.ts","../../../projects/core/forms/src/interface/fields/date-field.ts","../../../projects/core/forms/src/interface/fields/date-input-field.ts","../../../projects/core/forms/src/interface/fields/empty-field.ts","../../../projects/core/forms/src/interface/fields/field.ts","../../../projects/core/forms/src/interface/fields/field-components-map.ts","../../../projects/core/forms/src/interface/fields/field-size.ts","../../../projects/core/forms/src/interface/fields/field-with-choices.ts","../../../projects/core/forms/src/interface/fields/file-field.ts","../../../projects/core/forms/src/interface/fields/formula-field.ts","../../../projects/core/forms/src/interface/fields/multiple-choice-field.ts","../../../projects/core/forms/src/interface/fields/number-field.ts","../../../projects/core/forms/src/interface/fields/range-field.ts","../../../projects/core/forms/src/interface/fields/single-choice-field.ts","../../../projects/core/forms/src/interface/fields/string-field.ts","../../../projects/core/forms/src/interface/fields/table-field.ts","../../../projects/core/forms/src/interface/fields/text-field.ts","../../../projects/core/forms/src/interface/fields/time-field.ts","../../../projects/core/forms/src/interface/fields-instances/date-field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/date-input-field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/empty-field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/field-state.ts","../../../projects/core/forms/src/interface/fields-instances/field-with-choices-instance.ts","../../../projects/core/forms/src/interface/fields-instances/formula-field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/range-field-instance.ts","../../../projects/core/forms/src/interface/fields-instances/table-field-instance.ts","../../../projects/core/forms/src/interface/forms/form.ts","../../../projects/core/forms/src/interface/forms/form-string-identifier.ts","../../../projects/core/forms/src/interface/nodes/base-node.ts","../../../projects/core/forms/src/interface/nodes/container-node.ts","../../../projects/core/forms/src/interface/nodes/node-group.ts","../../../projects/core/forms/src/interface/nodes/node-link.ts","../../../projects/core/forms/src/interface/nodes/repeating-container-node.ts","../../../projects/core/forms/src/interface/nodes/repeating-node.ts","../../../projects/core/forms/src/interface/nodes-instances/base-node-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/base-repeating-container-node-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/container-node-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/node-group-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/node-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/repeating-container-node-instance.ts","../../../projects/core/forms/src/interface/nodes-instances/repeating-node-instance.ts","../../../projects/core/forms/src/interface/operations/nodes-instances-operation.ts","../../../projects/core/forms/src/interface/operations/nodes-operation.ts","../../../projects/core/forms/src/interface/operations/renderer-update-map-operation.ts","../../../projects/core/forms/src/interface/renderer-maps/update-map.ts","../../../projects/core/forms/src/interface/slides/repeating-slide.ts","../../../projects/core/forms/src/interface/slides/slide.ts","../../../projects/core/forms/src/interface/slides-instances/base-slide-instance.ts","../../../projects/core/forms/src/interface/slides-instances/repeating-slide-instance.ts","../../../projects/core/forms/src/interface/validation/validation.ts","../../../projects/core/forms/src/interface/validation/validation-group.ts","../../../projects/core/forms/src/interface/validation/validation-results.ts","../../../projects/core/forms/src/interface/warning/warning.ts","../../../projects/core/forms/src/interface/warning/warning-group.ts","../../../projects/core/forms/src/interface/warning/warning-result.ts","../../../projects/core/forms/src/utils/choices/create-choices-fixed-origin.ts","../../../projects/core/forms/src/utils/choices/create-choices-function-origin.ts","../../../projects/core/forms/src/utils/choices/create-choices-observable-array-origin.ts","../../../projects/core/forms/src/utils/choices/create-choices-observable-origin.ts","../../../projects/core/forms/src/utils/choices/create-choices-promise-origin.ts","../../../projects/core/forms/src/utils/choices/is-choices-origin.ts","../../../projects/core/forms/src/utils/choices/is-choices-fixed-origin.ts","../../../projects/core/forms/src/utils/fields/is-number-field.ts","../../../projects/core/forms/src/utils/fields/is-range-field.ts","../../../projects/core/forms/src/utils/forms/create-form.ts","../../../projects/core/forms/src/utils/validation/max-digits-validation.ts","../../../projects/core/forms/src/utils/validation/max-validation.ts","../../../projects/core/forms/src/utils/validation/min-digits-validation.ts","../../../projects/core/forms/src/utils/validation/min-validation.ts","../../../projects/core/forms/src/utils/validation/not-empty-validation.ts","../../../projects/core/forms/src/utils/warning/not-empty-warning.ts","../../../projects/core/forms/src/public_api.ts","../../../projects/core/forms/src/ajf-core-forms.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\n\n/**\n * It casts an AjfNodeInstance as a string of all validation errors of an AjfFieldInstance.\n */\n@Pipe({name: 'ajfAsFieldInstanceErrors'})\nexport class AjfAsFieldInstanceErrorsPipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string | null {\n    const fieldInstance = instance as AjfFieldInstance;\n    if (fieldInstance.valid || !fieldInstance.validationResults) return null;\n    const errors = fieldInstance.validationResults.filter(res => !res.result);\n    return errors.map(vr => vr.error).join(', ');\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\n\n/**\n * It casts an AjfNodeInstance as AjfFieldInstance.\n */\n@Pipe({name: 'ajfAsFieldInstance'})\nexport class AjfAsFieldInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): AjfFieldInstance {\n    return instance as AjfFieldInstance;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\n\n/**\n * It casts an AjfSlideInstance as AjfRepeatingSlideInstance.\n */\n@Pipe({name: 'ajfAsRepeatingSlideInstance'})\nexport class AjfAsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfSlideInstance): AjfRepeatingSlideInstance {\n    return instance as unknown as AjfRepeatingSlideInstance;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * The available ajf field types.\n */\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfFieldType {\n  String,\n  Text,\n  Number,\n  Boolean,\n  SingleChoice,\n  MultipleChoice,\n  Formula,\n  Empty,\n  Date,\n  DateInput,\n  Time,\n  Table,\n  Geolocation,\n  Barcode,\n  File,\n  Image,\n  VideoUrl,\n  Range,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * An enum containing all the available NodeTypes\n */\n// tslint:disable-next-line:prefer-const-enum\nexport enum AjfNodeType {\n  AjfField,\n  AjfFieldNodeLink,\n  AjfNodeGroup,\n  AjfSlide,\n  AjfRepeatingSlide,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {firstValueFrom} from 'rxjs';\nimport {toArray} from 'rxjs/operators';\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n/**\n * Called by form-rederer\n * take as param an AjfChoicesOrigin&lt;any&gt; and return an Promise&lt;void&gt; for handling async\n * event\n */\nexport async function initChoicesOrigin(origin: AjfChoicesOrigin<any>): Promise<void> {\n  /** fixed don't use async evente the promise is resolved */\n  if (origin.type === 'fixed') {\n    return;\n  }\n  /** apply function and than return resolve promise */\n  if (origin.type === 'function') {\n    origin.choices = origin.generator();\n    return;\n  }\n  /** modify origin.choices with result of resolved promise */\n  if (origin.type === 'promise') {\n    return origin.generator.then(choices => (origin.choices = choices)).then();\n  }\n  /** modify origin.choices with result of subscribed observable */\n  if (origin.type === 'observable') {\n    if (origin.generator != null) {\n      origin.choices = [];\n      return firstValueFrom(origin.generator.pipe(toArray()))\n        .then(choices => (origin.choices = choices))\n        .then();\n    }\n  }\n  /** modify origin.choices with result of subscribed observable */\n  if (origin.type === 'observableArray') {\n    if (origin.generator != null) {\n      origin.choices = [];\n      return firstValueFrom(origin.generator)\n        .then(choices => (origin.choices = choices))\n        .then();\n    }\n  }\n  return;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap} from '../../interface/fields/field-components-map';\n/**\n * The componentsMap is a dictionary key value\n * Represents the association between an AjfFieldType and the\n * components used to render it.\n */\nexport const componentsMap: AjfFieldComponentsMap = {};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {componentsMap} from './fields-map';\n/**\n * It is true if\n *  the field is a custom field (field.fieldType &gt; 100) and\n *  the field is not already present in the component map (componentsMap[field.fieldType] != null)\n * and the field is a fieldWithChoice (componentsMap[field.fieldType].isFieldWithChoice === true)\n */\nexport function isCustomFieldWithChoices(field: AjfField): boolean {\n  return (\n    field.fieldType > 100 &&\n    componentsMap[field.fieldType] != null &&\n    componentsMap[field.fieldType].isFieldWithChoice === true\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is a SingleChoice or MultipleChoice.\n */\nexport function isFieldWithChoices<T = any>(field: AjfField): field is AjfFieldWithChoices<T> {\n  return (\n    field.fieldType === AjfFieldType.SingleChoice || field.fieldType === AjfFieldType.MultipleChoice\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n/**\n * It is true if node is an AjfField.\n */\nexport function isField(node: AjfNode): node is AjfField {\n  return node != null && node.nodeType === AjfNodeType.AjfField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isField} from '../nodes/is-field';\n\n/**\n * It is true if the nodeInstance is relative to a AjfField.\n */\nexport function isFieldInstance(nodeInstance: AjfNodeInstance): nodeInstance is AjfFieldInstance {\n  return nodeInstance != null && nodeInstance.node != null && isField(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isCustomFieldWithChoices} from '../fields/is-custom-field-with-choices';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\n/**\n * It is true if the nodeInstance is a fieldInstance and\n * if the node of instance is a field with choices.\n */\nexport function isFieldWithChoicesInstance(\n  instance: AjfNodeInstance,\n): instance is AjfFieldWithChoicesInstance<any> {\n  return (\n    instance != null &&\n    isFieldInstance(instance) &&\n    (isCustomFieldWithChoices(instance.node) || isFieldWithChoices(instance.node))\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfTableField} from '../../interface/fields/table-field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is Table.\n */\nexport function isTableField(field: AjfField): field is AjfTableField {\n  return field.fieldType === AjfFieldType.Table;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isTableField} from '../fields/is-table-field';\nimport {isFieldInstance} from '../nodes-instances/is-field-instance';\n\n/**\n * It is true if the instance is a fieldInstance and\n * if the node of instance is a Table field.\n */\nexport function isTableFieldInstance(instance: AjfNodeInstance): instance is AjfTableFieldInstance {\n  return instance != null && isFieldInstance(instance) && isTableField(instance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\n/**\n * It updates instance.verifiedBranch with the idx of the last branch verified.\n * If instance.verifiedBranch value changes return true\n */\nexport function updateConditionalBranches(instance: AjfNodeInstance, context: AjfContext): boolean {\n  const conditionalBranches = instance.conditionalBranches;\n\n  if (conditionalBranches != null) {\n    const oldBranch = instance.verifiedBranch;\n    let idx = 0;\n    let found = false;\n    while (idx < conditionalBranches.length && !found) {\n      let verified: boolean = evaluateExpression(conditionalBranches[idx].condition, context);\n      if (verified) {\n        found = true;\n        if (idx !== instance.verifiedBranch) {\n          instance.verifiedBranch = idx;\n        }\n      }\n      idx++;\n    }\n\n    if (oldBranch !== instance.verifiedBranch) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\n/**\n * It updates instance.visible with the result of evaluating instance.visibility.condition.\n * If instance.visibility is null instance.visible is false and it returns false.\n * If instance.visible changes return true.\n */\nexport function updateVisibility(\n  instance: AjfNodeInstance,\n  context: AjfContext,\n  branchVisibility = true,\n): boolean {\n  if (instance.visibility == null) {\n    instance.visible = false;\n    return false;\n  }\n  const visibility: AjfCondition = instance.visibility;\n\n  const oldVisibility: boolean = instance.visible;\n  let newVisibility: boolean =\n    branchVisibility && evaluateExpression(visibility.condition, context);\n  if (newVisibility !== instance.visible) {\n    instance.visible = newVisibility;\n  }\n\n  return oldVisibility !== newVisibility;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseNodeInstance} from '../../interface/nodes-instances/base-node-instance';\n\n// TODO: add details\n/**\n * It creates the node instance suffix.\n */\nexport function nodeInstanceSuffix(instance: AjfBaseNodeInstance): string {\n  if (instance.prefix == null || instance.prefix.length == 0) {\n    return '';\n  }\n  return `__${instance.prefix.join('__')}`;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseNodeInstance} from '../../interface/nodes-instances/base-node-instance';\nimport {nodeInstanceSuffix} from './node-instance-suffix';\n\n// TODO: add details\n/**\n * It creates the complete name of the instance.\n */\nexport function nodeInstanceCompleteName(instance: AjfBaseNodeInstance): string {\n  return instance != null && instance.node != null\n    ? `${instance.node.name}${nodeInstanceSuffix(instance)}`\n    : '';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * update the relative instance value and the context\n * if !editable evaluate expression once one time and flag changed is false\n */\nexport function updateFormula(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n): {changed: boolean; value: any} {\n  const formula = instance.formula;\n  const editable = instance.node.editable;\n  if (formula != null && instance.visible && (!editable || (editable && instance.value == null))) {\n    let newValue: any = evaluateExpression(formula.formula, context);\n    const oldValue = instance.value;\n    if (newValue !== instance.value) {\n      instance.value = newValue;\n      context[nodeInstanceCompleteName(instance)] = instance.value;\n      context['$value'] = instance.value;\n    }\n    return {changed: newValue !== oldValue, value: newValue};\n  }\n  return {changed: false, value: instance.value};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\n\n/**\n * If nextSlideCondition of instance is defined return the evaluateExpression of nextSlideCondition\n * else return false.\n */\nexport function updateNextSlideCondition(instance: AjfFieldInstance, context: AjfContext): boolean {\n  if (instance.nextSlideCondition != null) {\n    return evaluateExpression(instance.nextSlideCondition.condition, context);\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\n/**\n * It evaluates validation and returns an AjfValidationResult.\n */\nexport function evaluateValidation(\n  validation: AjfValidation,\n  context?: AjfContext,\n): AjfValidationResult {\n  return {\n    result: evaluateExpression(validation.condition, context),\n    error: validation.errorMessage,\n    clientValidation: validation.clientValidation,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * It applies evaluateValidation to every validation condition and return it.\n */\nexport function evaluateValidationConditions(\n  validation: AjfValidationGroup,\n  context?: AjfContext,\n): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  (validation.conditions || []).forEach(cond => {\n    res.push(evaluateValidation(cond, context));\n  });\n  return res;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the maximum digit's length.\n * maxDigits is the associated AjfCondition\n */\nexport function evaluateValidationMaxDigits(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.maxDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length <= ${validation.maxDigits}`, ctx),\n      error: `Digits count must be <= ${validation.maxDigits}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.maxDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the maximum value of the digit\n * maxValue is the associated AjfCondition\n */\nexport function evaluateValidationMaxValue(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.maxValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.maxValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.maxValue}`, ctx),\n      error: `Value must be <= ${validation.maxValue}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.maxValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the minimum digit's length.\n * minDigits is the associated AjfCondition\n */\nexport function evaluateValidationMinDigits(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.minDigits == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minDigits === 'number') {\n    return {\n      result: evaluateExpression(`$value.toString().length >= ${validation.minDigits}`, ctx),\n      error: `Digits count must be >= ${validation.minDigits}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.minDigits, ctx);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {evaluateExpression} from '@ajf/core/models';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the minimum value of the digit\n * minValue is the associated AjfCondition\n */\nexport function evaluateValidationMinValue(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  if (validation.minValue == null) {\n    return null;\n  }\n  const ctx = {'$value': value};\n  if (typeof validation.minValue === 'number') {\n    return {\n      result: evaluateExpression(`$value.length <= ${validation.minValue}`, ctx),\n      error: `Value must be >= ${validation.minValue}`,\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(validation.minValue, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {notEmpty} from '@ajf/core/models';\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {evaluateValidation} from './evaluate-validation';\n\n/**\n * Basic validation function that cheecks the value is not null\n * notEmpty is the associated AjfCondition\n */\nexport function evaluateValidationNotEmpty(\n  validation: AjfValidationGroup,\n  value: any,\n): AjfValidationResult | null {\n  const ne = validation.notEmpty as AjfValidation | boolean | undefined;\n  if (ne == null || ne === false) {\n    return null;\n  }\n  if (ne === true) {\n    return {\n      result: notEmpty(value),\n      error: validation.notEmptyMessage || 'Value must not be empty',\n      clientValidation: false,\n    };\n  }\n  return evaluateValidation(ne, {'$value': value});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\n\nimport {evaluateValidationConditions} from './evaluate-validation-conditions';\nimport {evaluateValidationMaxDigits} from './evaluate-validation-max-digits';\nimport {evaluateValidationMaxValue} from './evaluate-validation-max-value';\nimport {evaluateValidationMinDigits} from './evaluate-validation-min-digits';\nimport {evaluateValidationMinValue} from './evaluate-validation-min-value';\nimport {evaluateValidationNotEmpty} from './evaluate-validation-not-empty';\n\n/**\n * It evaluate AjfValidationGroup and returns an AjfValidationResult[].\n */\nexport function evaluateValidationGroup(\n  validation: AjfValidationGroup,\n  value: any,\n  context?: AjfContext,\n): AjfValidationResult[] {\n  let res: AjfValidationResult[] = [];\n  let ctx = deepCopy(context);\n  ctx['$value'] = value;\n  res = evaluateValidationConditions(validation, ctx);\n  if (validation.maxValue) {\n    const maxValue = evaluateValidationMaxValue(validation, value);\n    if (maxValue != null) {\n      res.push(maxValue);\n    }\n  }\n  if (validation.minValue) {\n    const minValue = evaluateValidationMinValue(validation, value);\n    if (minValue != null) {\n      res.push(minValue);\n    }\n  }\n  if (validation.notEmpty) {\n    const notEmpty = evaluateValidationNotEmpty(validation, value);\n    if (notEmpty != null) {\n      res.push(notEmpty);\n    }\n  }\n  if (validation.maxDigits) {\n    const maxDigits = evaluateValidationMaxDigits(validation, value);\n    if (maxDigits != null) {\n      res.push(maxDigits);\n    }\n  }\n  if (validation.minDigits) {\n    const minDigits = evaluateValidationMinDigits(validation, value);\n    if (minDigits != null) {\n      res.push(minDigits);\n    }\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfValidationResult} from '../../interface/validation/validation-results';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateValidationGroup} from '../validation/evaluate-validation-group';\n/**\n * it updates the instance.valid attribute.\n * If validation is not defined the instance.valid is true.\n * If valdiation.forceValue is true update context.\n * Updates instance.valid with the re-evaluation of validationResults in AND.\n */\nexport function updateValidation(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n  supplementaryInformations?: any,\n): void {\n  const validation = instance.validation;\n  if (validation == null) {\n    instance.valid = true;\n    return;\n  }\n  // TODO what is this??\n  if (supplementaryInformations) {\n    Object.keys(supplementaryInformations).forEach(key => {\n      context[`__supplementary__${key}__`] = supplementaryInformations[key];\n    });\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && validation && validation.forceValue) {\n    instance.value = evaluateExpression(validation.forceValue.condition, context);\n    context[completeName] = instance.value;\n    context['$value'] = instance.value;\n  }\n\n  instance.validationResults = evaluateValidationGroup(validation, context[completeName], context);\n  instance.valid = instance.validationResults.reduce(\n    (prev: boolean, x: AjfValidationResult) => prev && x.result,\n    true,\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\n\nexport function evaluateWarning(\n  warning: AjfWarning,\n  context?: AjfContext,\n): AjfWarningResult {\n  return {\n    result: evaluateExpression(warning.condition, context),\n    warning: warning.warningMessage,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarning} from './evaluate-warning';\n\nexport function evaluateWarningConditions(\n  warning: AjfWarningGroup,\n  context?: AjfContext,\n): AjfWarningResult[] {\n  return warning.conditions.map(cond => evaluateWarning(cond, context));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\nimport {AjfWarningResult} from '../../interface/warning/warning-result';\nimport {evaluateWarningConditions} from './evaluate-warning-conditions';\n\nexport function evaluateWarningGroup(\n  warning: AjfWarningGroup,\n  context?: AjfContext,\n): AjfWarningResult[] {\n  return evaluateWarningConditions(warning, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\nimport {evaluateWarningGroup} from '../warning/evaluate-warning-group';\n\n/**\n * It Updates instance warining results.\n * If instance.warning in null return.\n * If nodeInstanceCompleteName is in context and warning is defined re-evaluate warning group\n */\nexport function updateWarning(instance: AjfFieldInstance, context: AjfContext): void {\n  const warning = instance.warning;\n  if (warning == null) {\n    return;\n  }\n\n  const completeName = nodeInstanceCompleteName(instance);\n\n  if (context[completeName] != null && warning) {\n    instance.warningResults = evaluateWarningGroup(warning, context);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {updateConditionalBranches} from '../nodes-instances/update-conditional-branches';\nimport {updateVisibility} from '../nodes-instances/update-visibility';\nimport {updateFormula} from './update-formula';\nimport {updateNextSlideCondition} from './update-next-slide-condition';\nimport {updateValidation} from './update-validation';\nimport {updateWarning} from './update-warning';\n\n/**\n * It grab all the field instance update functions.\n */\nexport function updateFieldInstanceState(\n  instance: AjfFieldInstance,\n  context: AjfContext,\n  branchVisibility = true,\n): void {\n  updateVisibility(instance, context, branchVisibility);\n  updateConditionalBranches(instance, context);\n  updateFormula(instance, context);\n  updateValidation(instance, context);\n  updateWarning(instance, context);\n  updateNextSlideCondition(instance, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\n\nexport function updateFilteredChoices(\n  instance: AjfFieldWithChoicesInstance<any>,\n  context: AjfContext,\n): void {\n  if (instance.choicesFilter != null) {\n    instance.filteredChoices = instance.node.choicesOrigin.choices.filter(c => {\n      context['$choice'] = c;\n      context['$choiceValue'] = c.value;\n      return evaluateExpression(instance.choicesFilter!.formula, context);\n    });\n  } else {\n    instance.filteredChoices = instance.node.choicesOrigin.choices;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * It is true if at least one of the triggherate coditions is true\n */\nexport function updateTriggerConditions(\n  instance: AjfFieldWithChoicesInstance<any>,\n  context: AjfContext,\n): boolean {\n  if (instance.triggerConditions == null) {\n    return false;\n  }\n  const completeName = nodeInstanceCompleteName(instance);\n  if (instance.firstTriggerConditionDone[completeName]) {\n    return false;\n  }\n  let found = false;\n  const conditionsNum = instance.triggerConditions.length;\n  for (let i = 0; i < conditionsNum; i++) {\n    if (evaluateExpression(instance.triggerConditions[i].condition, context)) {\n      found = true;\n      break;\n    }\n  }\n  instance.firstTriggerConditionDone[completeName] = found;\n  return found;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\n\nimport {AjfNode} from '../../interface/nodes/node';\n\nexport type AjfNodeCreate = Pick<AjfNode, 'nodeType' | 'id' | 'parent' | 'name'> & Partial<AjfNode>;\n/**\n * It creates an AjfNode by schema.\n * If conditionalBranches is not defined assign {condition: 'true'}.\n * If parentNode is not defined assign 0.\n * If label is not defined assign ''.\n * If visibility is not defined assign {condition: 'true'}.\n */\nexport function createNode(node: AjfNodeCreate): AjfNode {\n  const conditionalBranches =\n    node.conditionalBranches != null && node.conditionalBranches.length > 0\n      ? node.conditionalBranches\n      : [alwaysCondition()];\n  return {\n    ...node,\n    parentNode: node.parentNode != null ? node.parentNode : 0,\n    label: node.label || '',\n    visibility: node.visibility || alwaysCondition(),\n    conditionalBranches,\n  } as AjfNode;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from '../../interface/fields/base-field';\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeCreate, createNode} from '../nodes/create-node';\n\nexport type AjfFieldCreate = Omit<AjfNodeCreate, 'nodeType'> &\n  Pick<AjfBaseField, 'fieldType'> &\n  Partial<AjfBaseField>;\n/**\n * It creates an AjfField.\n * If size is not defined apply 'normal'.\n * If defaultValue is not defined apply null.\n * If editable is not defined return true if field type is'nt formula or table\n */\nexport function createField<T extends AjfField = AjfField>(field: AjfFieldCreate): T {\n  const node = createNode({...field, nodeType: AjfNodeType.AjfField});\n  const editable =\n    field.editable != null\n      ? field.editable\n      : field.fieldType !== AjfFieldType.Formula && field.fieldType !== AjfFieldType.Table;\n  return {\n    ...node,\n    ...field,\n    nodeType: AjfNodeType.AjfField,\n    editable,\n    defaultValue: field.defaultValue != null ? field.defaultValue : null,\n    size: field.size || 'normal',\n  } as T;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\n\n/**\n * It is true if node is AjfRepeatingSlide or AjfSlide.\n */\nexport function isSlidesNode(node: AjfNode): node is AjfRepeatingSlide | AjfSlide {\n  return (\n    node != null &&\n    (node.nodeType === AjfNodeType.AjfRepeatingSlide || node.nodeType === AjfNodeType.AjfSlide)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {isSlidesNode} from './is-slides-node';\n/**\n * It is true if node is AjfNodeGroup or slides nodes.\n */\nexport function isContainerNode(node: AjfNode): node is AjfContainerNode {\n  return node != null && (node.nodeType === AjfNodeType.AjfNodeGroup || isSlidesNode(node));\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {isContainerNode} from '../nodes/is-container-node';\n/**\n * It is true if nodeInstance is realtive to an AjfNodeGroup or slides nodes.\n */\nexport function isContainerNodeInstance(\n  nodeInstance: AjfNodeInstance,\n): nodeInstance is AjfContainerNodeInstance {\n  return nodeInstance != null && nodeInstance.node != null && isContainerNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../../interface/nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\n\nimport {isContainerNodeInstance} from './is-container-node-instance';\nimport {isFieldInstance} from './is-field-instance';\n\n/**\n * It creates a one dimensional array of AjfNodeInstance.\n * If the node is a containerNode(has the nodes attribute)\n * recursively  concat their nodes.\n * If includeGroups is true the result also contains the containerNodeInstance.\n */\nexport function flattenNodesInstances(\n  nodes: AjfNodeInstance[],\n  includeGroups = false,\n): AjfNodeInstance[] {\n  let flatNodes: AjfNodeInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isFieldInstance(nodeInstance)) {\n      flatNodes.push(nodeInstance);\n    }\n    if (isContainerNodeInstance(nodeInstance)) {\n      if (includeGroups) {\n        flatNodes.push(nodeInstance);\n      }\n      flatNodes = flatNodes.concat(\n        flattenNodesInstances((nodeInstance as AjfContainerNodeInstance).nodes, includeGroups),\n      );\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {isSlidesNode} from '../nodes/is-slides-node';\n\n/**\n * It is true if nodeInstance is relative to AjfRepeatingSlide node or AjfSlide node.\n */\nexport function isSlidesInstance(\n  nodeInstance: AjfNodeInstance,\n): nodeInstance is AjfRepeatingSlideInstance | AjfSlideInstance {\n  return nodeInstance != null && nodeInstance.node != null && isSlidesNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {flattenNodesInstances} from './flatten-nodes-instances';\nimport {isSlidesInstance} from './is-slides-instance';\n\n/**\n * It creates a one dimensional array of AjfSlideInstance.\n * If the node is a slides node recursively  concat their nodes.\n */\nexport function flattenNodesInstancesTree(nodes: AjfNodeInstance[]): AjfSlideInstance[] {\n  let flatTree: AjfSlideInstance[] = [];\n  nodes.forEach((nodeInstance: AjfNodeInstance) => {\n    if (isSlidesInstance(nodeInstance)) {\n      flatTree.push(nodeInstance as AjfSlideInstance);\n      nodeInstance.flatNodes = flattenNodesInstances(nodeInstance.nodes);\n    }\n  });\n  return flatTree;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\n/**\n * It is true if node is an AjfNodeGroup.\n */\nexport function isNodeGroup(node: AjfNode): boolean {\n  return node != null && node.nodeType === AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {isNodeGroup} from '../nodes/is-node-group';\n\n/**\n * It is true if nodeInstance is relative to a AjfNodeGroup.\n */\nexport function isNodeGroupInstance(\n  nodeInstance: AjfNodeInstance,\n): nodeInstance is AjfNodeGroupInstance {\n  return nodeInstance != null && nodeInstance.node != null && isNodeGroup(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingContainerNode} from '../../interface/nodes/repeating-container-node';\n\n/**\n * It is true if node is AjfNodeGroup or AjfRepeatingSlide.\n */\nexport function isRepeatingContainerNode(node: AjfNode): node is AjfRepeatingContainerNode {\n  return (\n    node != null &&\n    (node.nodeType === AjfNodeType.AjfNodeGroup || node.nodeType === AjfNodeType.AjfRepeatingSlide)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfRepeatingContainerNodeInstance} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\n/**\n * It is true if nodeInstance is a repeating container node instance.\n */\nexport function isRepeatingContainerNodeInstance(\n  nodeInstance: AjfNodeInstance,\n): nodeInstance is AjfRepeatingContainerNodeInstance {\n  return (\n    nodeInstance != null && nodeInstance.node != null && isRepeatingContainerNode(nodeInstance.node)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\n\n/**\n * It is true if nodeInstance is a repeating group instance\n */\nexport function isRepeatingGroupInstance(\n  nodeInstance: AjfNodeInstance,\n): nodeInstance is AjfNodeGroupInstance | AjfRepeatingSlideInstance {\n  return (\n    nodeInstance != null &&\n    nodeInstance.node != null &&\n    (nodeInstance.node.nodeType === AjfNodeType.AjfNodeGroup ||\n      nodeInstance.node.nodeType === AjfNodeType.AjfRepeatingSlide)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\n\n/**\n * It is true if node is AjfRepeatingSlide.\n */\nexport function isRepeatingSlide(node: AjfNode): node is AjfRepeatingSlide {\n  return node != null && node.nodeType === AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {isSlidesInstance} from '../nodes-instances/is-slides-instance';\nimport {isRepeatingSlide} from '../nodes/is-repeating-slide';\n\n/**\n * It is true if instance is a slide instance\n * and the relative node is AjfRepeatingSlide.\n */\nexport function isRepeatingSlideInstance(\n  instance: AjfNodeInstance,\n): instance is AjfRepeatingSlideInstance {\n  return (\n    instance != null &&\n    instance.node != null &&\n    isSlidesInstance(instance) &&\n    isRepeatingSlide(instance.node)\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\n\n/**\n * It is true if node is AjfSlide.\n */\nexport function isSlideNode(node: AjfNode): node is AjfSlide {\n  return node != null && node.nodeType === AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {isSlideNode} from '../nodes/is-slide-node';\n\n/**\n * It is true if nodeInstance is relative to an AjfSlide node.\n */\nexport function isSlideInstance(nodeInstance: AjfNodeInstance): nodeInstance is AjfSlideInstance {\n  return nodeInstance != null && nodeInstance.node != null && isSlideNode(nodeInstance.node);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {AjfBaseNodeInstance} from '../../interface/nodes-instances/base-node-instance';\n\nexport type AjfNodeInstanceCreate = Pick<AjfBaseNodeInstance, 'node'> &\n  Partial<AjfBaseNodeInstance>;\n\n/**\n * It creates an AjfNodeInstance.\n * If instance.prefix is defined copy it else assign empty array.\n * If instance.visible is not defined assign true.\n * Assign empty array to conditionalBranches.\n * Assign new eventEmitter to updatedEvt.\n */\nexport function createNodeInstance(instance: AjfNodeInstanceCreate): AjfBaseNodeInstance {\n  return {\n    node: instance.node,\n    prefix: instance.prefix ? [...instance.prefix] : [],\n    visible: instance.visible != null ? instance.visible : true,\n    conditionalBranches: [],\n    updatedEvt: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldInstance} from '../../interface/fields-instances/field-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeInstanceCreate, createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\nexport type AjfFieldInstanceCreate = AjfNodeInstanceCreate & Partial<AjfFieldInstance>;\n\n/**\n * Create a field instance and init the value of the field by cascade conditions.\n *\n * First check if the value is in the context by node name.\n * Second check if the value is in the context by complete name.\n * Third check if the field has a default value.\n * Else value is null.\n *\n * If instance validationResultsis is not defined assign empty array.\n * If instance warningResults is not defined assign empty array.\n * Init valid with false.\n */\nexport function createFieldInstance(\n  instance: AjfFieldInstanceCreate,\n  context: AjfContext,\n  containerNode?: AjfNode | null,\n): AjfFieldInstance {\n  const nodeInstance = createNodeInstance(instance);\n  let value: any = null;\n  if (nodeInstance.node != null && context != null) {\n    const completeName = nodeInstanceCompleteName(nodeInstance);\n    if (context[nodeInstance.node.name] != null) {\n      value = context[nodeInstance.node.name];\n    } else if (context[completeName] != null) {\n      value = context[completeName];\n    } else if (instance.node.defaultValue != null) {\n      if (instance.node.defaultValue.formula != null) {\n        let visibility: boolean = nodeInstance.visible ? nodeInstance.visible : false;\n        if (visibility && containerNode && containerNode.visibility) {\n          visibility = evaluateExpression(containerNode.visibility.condition, context);\n        }\n        if (visibility) {\n          context[completeName] = evaluateExpression(instance.node.defaultValue.formula, context);\n        }\n      } else {\n        context[completeName] = instance.node.defaultValue;\n      }\n      value = context[completeName];\n    }\n  }\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    value,\n    valid: false,\n    validationResults: instance.validationResults || [],\n    warningResults: instance.warningResults || [],\n    warningTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfFieldWithChoicesInstance} from '../../interface/fields-instances/field-with-choices-instance';\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfFieldWithChoicesInstanceCreate<T> = AjfFieldInstanceCreate &\n  Partial<AjfFieldWithChoicesInstance<T>>;\n/**\n * Create a field with choices instance.\n * Extends simple field instance with\n * filteredChoices,firstTriggerConditionDone and selectionTrigger\n */\nexport function createFieldWithChoicesInstance<T>(\n  instance: AjfFieldWithChoicesInstanceCreate<T>,\n  context: AjfContext,\n): AjfFieldWithChoicesInstance<T> {\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    filteredChoices: [...instance.node.choices],\n    firstTriggerConditionDone: {},\n    selectionTrigger: new EventEmitter<void>(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfTableFieldInstance} from '../../interface/fields-instances/table-field-instance';\nimport {AjfTableField} from '../../interface/fields/table-field';\n\nimport {AjfFieldInstanceCreate, createFieldInstance} from './create-field-instance';\n\nexport type AjfTableFieldInstanceCreate = AjfFieldInstanceCreate & Partial<AjfTableFieldInstance>;\n/**\n * to mantain retrocompatibility with old string type convert string to AjfTableCell\n * check  node.rows: (string|AjfTableCell)[][];\n * if elem of map is string convert in to AjfTableCell object\n */\nfunction normalizeRows(node: AjfTableField): void {\n  node.rows.forEach((row, rowIdx) => {\n    row.forEach((elem, elemIdx) => {\n      if (typeof elem === 'string') {\n        node.rows[rowIdx][elemIdx] = {formula: elem, editable: node.editable};\n      }\n    });\n  });\n}\n\n/**\n * Create an Table Fieldinstance.\n * Extends simple field instance with context,hideEmptyRows and controls.\n * If hideEmptyRows is not defined in instance set with false.\n * Assign empty array to controls\n */\nexport function createTableFieldInstance(\n  instance: AjfTableFieldInstanceCreate,\n  context: AjfContext,\n): AjfTableFieldInstance {\n  instance = deepCopy(instance);\n  normalizeRows(instance.node as AjfTableField);\n  const fieldInstance = createFieldInstance(instance, context);\n  return {\n    ...fieldInstance,\n    node: instance.node,\n    context,\n    hideEmptyRows: instance.hideEmptyRows || false,\n    controls: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroupInstance} from '../../interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstanceCreate, createNodeInstance} from './create-node-instance';\n\nexport type AjfNodeGroupInstanceCreate = AjfNodeInstanceCreate & Partial<AjfNodeGroupInstance>;\n/**\n * It creates an AjfNodeGroupInstance.\n * It extends nodeInstance with (formulaReps,reps,nodes and flatNodes).\n * Init reps with 0.\n * Init nodes and flatNodes with empty array\n */\nexport function createNodeGroupInstance(\n  instance: AjfNodeGroupInstanceCreate,\n): AjfNodeGroupInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    formulaReps: instance.formulaReps,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {neverCondition} from '@ajf/core/models';\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\nimport {createNodeInstance} from '../nodes-instances/create-node-instance';\nimport {AjfBaseSlideInstanceCreate} from './base';\n\nexport type AjfSlideInstanceCreate = AjfBaseSlideInstanceCreate & Partial<AjfSlideInstance>;\n\n/**\n * It creates AjfSlideInstance.\n * Init nodes,slideNodes and flatNodes with empty array.\n * Init valid with false.\n * Init position with 0.\n */\nexport function createSlideInstance(instance: AjfSlideInstanceCreate): AjfSlideInstance {\n  const nodeInstance = createNodeInstance(instance);\n  return {\n    ...nodeInstance,\n    node: instance.node,\n    nodes: [],\n    slideNodes: [],\n    flatNodes: [],\n    valid: false,\n    position: 0,\n    editable: instance.editable || true,\n    readonly: instance.node.readonly || neverCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlideInstance} from '../../interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstanceCreate, createSlideInstance} from './create-slide-instance';\n\nexport type AjfRepeatingSlideInstanceCreate = Omit<AjfSlideInstanceCreate, 'node'> &\n  Pick<AjfRepeatingSlideInstance, 'node'> &\n  Partial<AjfRepeatingSlideInstance>;\n\n/**\n * It creates AjfRepeatingSlideInstance.\n * Init slideNodes, nodes and flatNodes with empty array,\n * Init reps as with 0.\n */\nexport function createRepeatingSlideInstance(\n  instance: AjfRepeatingSlideInstanceCreate,\n): AjfRepeatingSlideInstance {\n  const {node, ...slideInstanceCreate} = instance;\n  const {nodeType, ...slideNode} = node;\n  const slideInstance = createSlideInstance({\n    ...slideInstanceCreate,\n    node: {nodeType: AjfNodeType.AjfSlide, ...slideNode},\n  });\n  return {\n    ...slideInstance,\n    node: instance.node,\n    slideNodes: [],\n    formulaReps: instance.formulaReps,\n    disableRemoval: instance.disableRemoval,\n    reps: 0,\n    nodes: [],\n    flatNodes: [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../../interface/validation/validation-group';\n\n/**\n *  Create a AjfValidationGroup, apply conditions defaults when it missing\n */\nexport function createValidationGroup(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../../interface/warning/warning-group';\n\n/**\n *  Create an AjfWarningGroup, apply conditions defaults when it missing\n */\nexport function createWarningGroup(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n  return {...group, conditions: group.conditions || []};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isRepeatingContainerNode} from '../nodes/is-repeating-container-node';\n\n/**\n * It returns all ancestor repeatingContainerNodes of the node.\n */\nexport function getAncestorRepeatingNodes(\n  allNodes: (AjfNode | AjfNodeInstance)[],\n  node: AjfNode,\n): AjfNode[] {\n  let nodeGroups: AjfNode[] = [];\n  let curParent: number | null = node.parent;\n  while (curParent != null) {\n    const curNode = allNodes\n      .map((n: AjfNode | AjfNodeInstance) => (n as AjfNodeInstance).node || (n as AjfNode))\n      .find(n => n.id == curParent);\n    if (curNode) {\n      if (isRepeatingContainerNode(curNode)) {\n        nodeGroups.push(curNode);\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return nodeGroups;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {isField} from '../nodes/is-field';\n\nimport {getAncestorRepeatingNodes} from './get-ancestor-repeating-nodes';\n\n/**\n * Returns all childs node.name of the node's ancestor (includes itself).\n * It is a key-value dictionary, key is the name of the node and\n * value is the position inside ancestorRepeatingNodes.\n */\nexport function getAncestorRepeatingNodesNames(\n  allNodes: (AjfNode | AjfNodeInstance)[],\n  node: AjfNode,\n): {[prop: string]: number} {\n  let names: {[prop: string]: number} = {};\n  const nodeGroups = getAncestorRepeatingNodes(allNodes, node) as AjfNodeGroup[];\n  nodeGroups.forEach((n, idx) =>\n    (n.nodes || []).forEach(sn => {\n      if (isField(sn)) {\n        names[sn.name] = idx;\n      }\n    }),\n  );\n  return names;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from '../nodes/is-container-node';\n\n/**\n * It returns the container node of the node.\n */\nexport function getContainerNode(\n  allNodes: (AjfNode | AjfNodeInstance)[],\n  node: AjfNode,\n): AjfNode | null {\n  let parentNode: AjfNode | null = null;\n  let curParent: number | null = node.parent;\n  while (curParent != null && parentNode == null) {\n    const curNode = allNodes\n      .map((n: AjfNode | AjfNodeInstance) => (n as AjfNodeInstance).node || (n as AjfNode))\n      .find(n => n.id == curParent);\n    if (curNode) {\n      if (isContainerNode(curNode)) {\n        parentNode = curNode;\n      }\n    }\n    curParent = curNode != null ? curNode.parent : null;\n  }\n  return parentNode;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceCondition(\n  condition: AjfCondition,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfCondition {\n  const oldCondition = condition.condition;\n  let newCondition = normalizeExpression(oldCondition, ancestorsNames, prefix);\n  if (newCondition === oldCondition) {\n    return condition;\n  }\n  return {condition: newCondition};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {getInstanceCondition} from './get-instance-condition';\n\nexport function getInstanceConditions(\n  conditions: AjfCondition[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfCondition[] {\n  let changed = false;\n  const newConditions = conditions.map(condition => {\n    const newCondition = getInstanceCondition(condition, ancestorsNames, prefix);\n    if (newCondition !== condition) {\n      changed = true;\n    }\n    return newCondition;\n  });\n  return changed ? newConditions : conditions;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula, normalizeExpression} from '@ajf/core/models';\n\nexport function getInstanceFormula(\n  formula: AjfFormula,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfFormula {\n  const oldFormula = formula.formula;\n  let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n  if (newFormula === oldFormula) {\n    return formula;\n  }\n  return {formula: newFormula};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\n/**\n *  Create a AjfValidation, apply clientValidation and errorMessage defaults when it missing\n */\nexport function createValidation(\n  validation: Pick<AjfValidation, 'condition'> & Partial<AjfValidation>,\n): AjfValidation {\n  return {\n    ...validation,\n    clientValidation: validation.clientValidation || false,\n    errorMessage: validation.errorMessage || 'Undefined Error',\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from '../validation/create-validation';\n\nexport function getInstanceValidation(\n  validation: AjfValidation,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfValidation {\n  const oldValidation = validation.condition;\n  let newValidation = normalizeExpression(oldValidation, ancestorsNames, prefix);\n  if (newValidation === oldValidation) {\n    return validation;\n  }\n  return createValidation({condition: newValidation});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {getInstanceValidation} from './get-instance-validation';\n\nexport function getInstanceValidations(\n  validations: AjfValidation[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfValidation[] {\n  let changed = false;\n  const newValidations = (validations || []).map(validation => {\n    const newValidation = getInstanceValidation(validation, ancestorsNames, prefix);\n    if (newValidation !== validation) {\n      changed = true;\n    }\n    return newValidation;\n  });\n  return changed ? newValidations : validations;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\n\nexport function createWarning(\n  warning: Pick<AjfWarning, 'condition'> & Partial<AjfWarning>,\n): AjfWarning {\n  return {...warning, warningMessage: warning.warningMessage || 'Undefined Warning'};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {normalizeExpression} from '@ajf/core/models';\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from '../warning/create-warning';\n\nexport function getInstanceWarning(\n  warning: AjfWarning,\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfWarning {\n  const oldWarning = warning.condition;\n  let newWarning = normalizeExpression(oldWarning, ancestorsNames, prefix);\n  if (newWarning === oldWarning) {\n    return warning;\n  }\n  return createWarning({condition: newWarning});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {getInstanceWarning} from './get-instance-warning';\n\nexport function getInstanceWarnings(\n  warnings: AjfWarning[],\n  ancestorsNames: {[prop: string]: number},\n  prefix: number[],\n): AjfWarning[] {\n  let changed = false;\n  const newWarnings = warnings.map(warning => {\n    const newWarning = getInstanceWarning(warning, ancestorsNames, prefix);\n    if (newWarning !== warning) {\n      changed = true;\n    }\n    return newWarning;\n  });\n  return changed ? newWarnings : warnings;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext,\n  alwaysCondition,\n  createCondition,\n  createFormula,\n  normalizeExpression,\n} from '@ajf/core/models';\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\nimport {AjfNodeInstance} from '../../interface/nodes-instances/node-instance';\nimport {AjfRepeatingContainerNodeInstance} from '../../interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from '../../interface/nodes/node';\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {createFieldInstance} from '../fields-instances/create-field-instance';\nimport {createFieldWithChoicesInstance} from '../fields-instances/create-field-with-choices-instance';\nimport {createTableFieldInstance} from '../fields-instances/create-table-field-instance';\nimport {isFieldWithChoicesInstance} from '../fields-instances/is-field-with-choices-instance';\nimport {componentsMap} from '../fields/fields-map';\nimport {createNodeGroupInstance} from '../nodes-instances/create-node-group-instance';\nimport {createRepeatingSlideInstance} from '../slides-instances/create-repeating-slide-instance';\nimport {createSlideInstance} from '../slides-instances/create-slide-instance';\nimport {createValidationGroup} from '../validation/create-validation-group';\nimport {createWarningGroup} from '../warning/create-warning-group';\n\nimport {getAncestorRepeatingNodesNames} from './get-ancestor-repeating-nodes-names';\nimport {getContainerNode} from './get-container-node';\nimport {getInstanceCondition} from './get-instance-condition';\nimport {getInstanceConditions} from './get-instance-conditions';\nimport {getInstanceFormula} from './get-instance-formula';\nimport {getInstanceValidations} from './get-instance-validations';\nimport {getInstanceWarnings} from './get-instance-warnings';\nimport {isFieldInstance} from './is-field-instance';\nimport {isNodeGroupInstance} from './is-node-group-instance';\nimport {isRepeatingSlideInstance} from './is-repeating-slide-instance';\n\n/**\n * It creates a nodeInstance relative to a node.\n * To create the instance it calls relative create builder by nodeType.\n * If the prefix is ​​defined all formulas and conditions are calculated based on it.\n */\nexport function nodeToNodeInstance(\n  allNodes: AjfNode[] | AjfNodeInstance[],\n  node: AjfNode,\n  prefix: number[],\n  context: AjfContext,\n): AjfNodeInstance | null {\n  let instance: AjfNodeInstance | null = null;\n  const nodeType = node.nodeType;\n  switch (nodeType) {\n    case AjfNodeType.AjfField:\n      const field = node as AjfField;\n      if (field.fieldType > 100) {\n        if (\n          componentsMap[field.fieldType] != null &&\n          componentsMap[field.fieldType].createInstance != null\n        ) {\n          instance = componentsMap[field.fieldType].createInstance!({node: field, prefix}, context);\n        } else {\n          instance = createFieldInstance({node: field, prefix}, context);\n        }\n      } else {\n        switch (field.fieldType) {\n          case AjfFieldType.SingleChoice:\n          case AjfFieldType.MultipleChoice:\n            instance = createFieldWithChoicesInstance({node: field, prefix}, context);\n            break;\n          case AjfFieldType.Table:\n            instance = createTableFieldInstance({node: field, prefix}, context);\n            break;\n          default:\n            const containerNode = getContainerNode(allNodes, node);\n            instance = createFieldInstance({node: field, prefix}, context, containerNode);\n            break;\n        }\n      }\n      break;\n    case AjfNodeType.AjfNodeGroup:\n      instance = createNodeGroupInstance({node: node as AjfNodeGroup, prefix});\n      break;\n    case AjfNodeType.AjfRepeatingSlide:\n      instance = createRepeatingSlideInstance({node: node as AjfRepeatingSlide, prefix});\n      break;\n    case AjfNodeType.AjfSlide:\n      instance = createSlideInstance({node: node as AjfSlide, prefix});\n      break;\n  }\n  if (instance != null) {\n    const hasPrefix = prefix != null && prefix.length > 0;\n    if (hasPrefix) {\n      const ancestorsNames = getAncestorRepeatingNodesNames(allNodes, node);\n\n      if (node.visibility != null) {\n        const oldVisibility = node.visibility.condition;\n        const newVisibility = normalizeExpression(oldVisibility, ancestorsNames, prefix);\n        instance.visibility =\n          newVisibility !== oldVisibility\n            ? createCondition({condition: newVisibility})\n            : node.visibility;\n      }\n\n      const conditionalBranches =\n        instance.node.conditionalBranches != null && instance.node.conditionalBranches.length > 0\n          ? instance.node.conditionalBranches\n          : [alwaysCondition()];\n      instance.conditionalBranches = getInstanceConditions(\n        conditionalBranches,\n        ancestorsNames,\n        prefix,\n      );\n\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const formulaReps = instance.node.formulaReps;\n        if (formulaReps != null) {\n          const oldFormula = formulaReps.formula;\n          let newFormula = normalizeExpression(oldFormula, ancestorsNames, prefix);\n          instance.formulaReps =\n            newFormula !== oldFormula ? createFormula({formula: newFormula}) : formulaReps;\n        }\n      } else if (isFieldInstance(instance)) {\n        if (instance.node.formula) {\n          instance.formula = getInstanceFormula(instance.node.formula, ancestorsNames, prefix);\n        }\n\n        if (instance.node.validation != null) {\n          const newConditions = getInstanceValidations(\n            instance.node.validation.conditions,\n            ancestorsNames,\n            prefix,\n          );\n          if (newConditions !== instance.node.validation.conditions) {\n            instance.validation = createValidationGroup(instance.node.validation);\n            instance.validation.conditions = newConditions;\n          } else {\n            instance.validation = instance.node.validation;\n          }\n        }\n\n        if (instance.node.warning != null) {\n          const newWarnings = getInstanceWarnings(\n            instance.node.warning.conditions,\n            ancestorsNames,\n            prefix,\n          );\n          if (newWarnings !== instance.node.warning.conditions) {\n            instance.warning = createWarningGroup(instance.node.warning);\n            instance.warning.conditions = newWarnings;\n          } else {\n            instance.warning = instance.node.warning;\n          }\n        }\n\n        if (instance.node.nextSlideCondition != null) {\n          instance.nextSlideCondition = getInstanceCondition(\n            instance.node.nextSlideCondition,\n            ancestorsNames,\n            prefix,\n          );\n        }\n\n        if (isFieldWithChoicesInstance(instance)) {\n          if (instance.node.choicesFilter != null) {\n            instance.choicesFilter = getInstanceFormula(\n              instance.node.choicesFilter,\n              ancestorsNames,\n              prefix,\n            );\n          }\n          if (instance.node.triggerConditions != null) {\n            instance.triggerConditions = getInstanceConditions(\n              instance.node.triggerConditions,\n              ancestorsNames,\n              prefix,\n            );\n          }\n        }\n      }\n    } else {\n      instance.visibility = instance.node.visibility;\n      const conditionalBranches =\n        instance.node.conditionalBranches != null && instance.node.conditionalBranches.length > 0\n          ? instance.node.conditionalBranches\n          : [alwaysCondition()];\n      instance.conditionalBranches = conditionalBranches;\n      if (isNodeGroupInstance(instance) || isRepeatingSlideInstance(instance)) {\n        const rgInstance = instance as AjfRepeatingContainerNodeInstance;\n        rgInstance.formulaReps = rgInstance.node.formulaReps;\n      } else if (isFieldInstance(instance)) {\n        instance.validation = instance.node.validation;\n        instance.warning = instance.node.warning;\n        instance.nextSlideCondition = instance.node.nextSlideCondition;\n        if (isFieldWithChoicesInstance(instance)) {\n          instance.choicesFilter = instance.node.choicesFilter;\n          instance.triggerConditions = instance.node.triggerConditions;\n        }\n        instance.formula = instance.node.formula;\n      }\n    }\n  }\n  return instance;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfSlideInstance} from '../../interface/slides-instances/slide-instance';\n\nexport function updateEditability(instance: AjfSlideInstance, context: AjfContext): boolean {\n  if (instance.readonly == null) {\n    instance.editable = true;\n    return true;\n  }\n  const readOnly: AjfCondition = instance.readonly;\n\n  const oldEditability: boolean = instance.editable;\n  let newEditability: boolean = !evaluateExpression(readOnly.condition, context);\n  if (newEditability !== instance.editable) {\n    instance.editable = newEditability;\n  }\n\n  return oldEditability !== newEditability;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\nimport {isContainerNode} from './is-container-node';\n/**\n * It creates an one dimensional array of AjfNode.\n * If the node is a containerNode(has the nodes attribute)\n * recursively  concat their nodes.\n */\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n  nodes.forEach((node: AjfNode) => {\n    flatNodes.push(node);\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes(node.nodes));\n    }\n  });\n  return flatNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../../interface/nodes/node';\n\n/**\n * It is return a new orderered nodes.\n * The newNodes are ordered recursively by parentNode.\n * The sorting begins by parent\n */\nexport function orderedNodes(nodes: AjfNode[], parent: number | null): AjfNode[] {\n  let newNodes: AjfNode[] = [];\n  nodes\n    .filter((n: AjfNode) =>\n      parent != null ? n.parent == parent : n.parent == null || n.parent === 0,\n    )\n    .sort((n1: AjfNode, n2: AjfNode) => n1.parentNode - n2.parentNode)\n    .forEach((n: AjfNode) => {\n      newNodes.push(n);\n      newNodes = newNodes.concat(orderedNodes(nodes, n.id));\n    });\n  return newNodes;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\n\nimport {AjfRepeatingNodeInstance} from '../../interface/nodes-instances/repeating-node-instance';\nimport {nodeInstanceCompleteName} from '../nodes-instances/node-instance-complete-name';\n\n/**\n * It upodates AjfRepeatingNodeInstance reps and it returns oldReps.\n */\nexport function updateRepsNum(instance: AjfRepeatingNodeInstance, context?: AjfContext): number {\n  const oldReps: number = instance.reps || 0;\n  context = context || {};\n  if (instance.node.formulaReps == null) {\n    const ctxReps = context[nodeInstanceCompleteName(instance)];\n    if (ctxReps != null) {\n      instance.reps = ctxReps;\n    } else if (oldReps == 0) {\n      instance.reps = 1;\n    }\n  } else {\n    let newReps = evaluateExpression(instance.node.formulaReps.formula, context);\n    if (newReps !== oldReps) {\n      instance.reps = newReps;\n    }\n  }\n  instance.canAdd = instance.node.maxReps === 0 || instance.reps < instance.node.maxReps;\n  instance.canRemove = instance.node.minReps === 0 || instance.reps > instance.node.minReps;\n  return oldReps;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseSlideInstance} from '../../interface/slides-instances/base-slide-instance';\n\n/**\n * It checks if the idx slide of\n *\n * @export\n * @param slide\n * @param idx\n * @return boolean\n */\nexport function validSlide(slide: AjfBaseSlideInstance, idx: number): boolean {\n  if (idx >= slide.slideNodes.length) {\n    return true;\n  }\n  return slide.slideNodes[idx]\n    .map(n => {\n      if (n.visible && Object.keys(n).indexOf('valid') > -1) {\n        return (<any>n).valid;\n      }\n      return true;\n    })\n    .reduce((v1, v2) => v1 && v2, true);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AjfValidationService {\n  private _baseUtilFunctions: string[] = [\n    `/**\n        * count the number of digit contained on x.\n        * @param  x the value used for digit count\n        * @return the count of the digit\n      */\n    var digitCount = function(x) { return x.toString().length; }`,\n    `/**\n        * count the number of decimal contained on x.\n        * @param  x the value used for decimal count\n        * @return the count of the decimal\n      */\n    var decimalCount = function(x) {\n      return (parseFloat(x).toString().split('.')[1] || []).length;\n    }`,\n    `/**\n        * check if x is integer\n        * @param  x the value used for check\n        * @return true if x is a number\n      */\n    var isInt = function(x) { return !/[,.]/.test(x); }`,\n    `/**\n        * check if x is not empity\n        * @param  x the value used for check\n        * @return true if x defined and not null and the number of digit is > 0\n      */\n    var notEmpty = function (x) {\n      return (typeof x !== 'undefined' && x !== null ? x.toString().length > 0 : false);\n    }`,\n    `/**\n        * check if x is contained on array\n        * @param  x the value used for check\n        * @return the position of x on array or if array === x\n      */\n    var valueInChoice = function(array, x) { return array.indexOf(x) > -1 || array === x; }`,\n    `var scanGroupField = function(reps, acc, callback) {\n        for (var i = 0; i < reps; i++) {\n            acc = callback(acc, i);\n        }\n        return acc;\n    }`,\n    `/**\n        * sum the value contained on array\n        * @param  x the array\n        * @return the sum\n      */\n    var sum = function(array) {return array.reduce(function(a, b){ return a + b; }, 0); }`,\n    `var dateOperations = function(dString, period, operation, v) {\n        fmt = 'mm/dd/yyyy';\n        var d = (typeof dString !== 'undefined') ? dateUtils.parse(dString) : new Date();\n        if (operation == 'remove') {\n          v = -v;\n        }\n        var dateOp;\n        switch (period) {\n          case 'day':\n            dateOp = dateUtils.addDays;\n            break;\n          case 'month':\n            dateOp = dateUtils.addMonths;\n            break;\n          case 'year':\n            dateOp = dateUtils.addYears;\n            break;\n          default:\n            return -1;\n        }\n        return dateUtils.format(dateOp(d, v), fmt);\n      }`,\n    `/**\n        * round the num\n        * @param  num the value to round\n        * @param  digits how many digit\n        * @return num rounded\n      */\n      var round = function(num, digits) {\n        digits = digits || 0;\n        var f = 0;\n        try { f = parseFloat(num); } catch (e) { }\n        var m = Math.pow(10, digits);\n        return Math.round(f * m) / m;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var extractArray = function(source, property, property2) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null && source[i][property2] != null) {\n            res.push(source[i][property] + source[i][property2]);\n          }\n          else if (source[i][property] != null) {\n            res.push(source[i][property]);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the property of the source object with property != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractSum = function(source, properties) {\n        var sum = 0;\n        properties = (properties || []).slice(0);\n        var l = properties.length;\n\n        for (var i = 0; i < l ; i++) {\n          var array = extractArray(source, properties[i]);\n          var leng = array.length;\n          for(var j = 0; j < leng; i++) {\n            sum += array[j];\n          }\n        }\n        return sum;\n      }`,\n    `/**\n        * extract the array of sum for each week != null\n        * @param  source array of object wich contains property\n        * @param  propertues string array the properties to sum\n        * @return the sum\n      */\n      var extractArraySum = function(source, properties) {\n        var arrays = [];\n        properties = (properties || []).slice(0);\n\n        for (var propI = 0; propI < properties.length ; propI++) {\n          var array = extractArray(source, properties[propI]);\n          arrays.push(array);\n        }\n\n        var res = [];\n        for (var weekI = 0; weekI < array.length; weekI ++ ) {\n          var sum = 0;\n          for (var propI = 0; propI < properties.length ; propI++) {\n            sum = sum + arrays[propI][weekI]\n          }\n          res.push(sum);\n        }\n        return res;\n      }`,\n    `/**\n        * draw a threshold line on chart related to the property\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want filter\n        * @return array of dates\n      */\n      var drawThreshold = function(source, property, threshold) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            res.push(threshold);\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the dates of the source object with property != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property on wich we want to calculate dates\n        * @param  format the format of the date\n        * @return array of dates\n      */\n      var extractDates = function(source, property, format) {\n        source = (source || []).slice(0);\n        var l = source.length;\n        var res = [];\n        var prefix = '';\n        for (var i = 0; i < l ; i++) {\n          if (source[i][property] != null) {\n            switch(format) {\n              case \"WW\":\n                prefix = \"W\";\n                break;\n              case \"mm\":\n                prefix = \"M\";\n                break;\n              default:\n                prefix = \"\";\n            }\n            res.push(prefix + formatDate(source[i][\"date_start\"], format));\n          }\n        }\n        return res;\n      }`,\n    `/**\n        * extract the last property contains in source != null\n        * @param  source array of object wich contains property and date_start\n        * @param  property the property to find\n        * @return the last property != null\n      */\n      var lastProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var l = source.length -1;\n\n        while (l >= 0 && source[l][property] == null) {\n          l--;\n          if (l < 0) return 0;\n        }\n        return l >= 0 ? source[l][property] : 0;\n      }`,\n    `var sumLastProperties = function(source, properties) {\n        source = (source || []).slice(0);\n        var sum = 0;\n        for (var i = 0; i < properties.length; i++) {\n          sum += lastProperty(source, properties[i]);\n        }\n\n        return sum;\n      }`,\n    `/**\n        * compute the trend of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the trend\n        * @return an html icon that identifies the trend\n      */\n      var calculateTrendProperty = function(source, property) {\n        source = (source || []).slice(0);\n        var last = source.length - 1;\n        while (source[last][property] == null) {\n          if (last == 0) {\n            break;\n          }\n          last--;\n        }\n        var lastLast = last - 1;\n        if (last == 0) {\n          lastLast = last;\n        } else {\n          while (source[lastLast][property] == null) {\n            if (lastLast == 0) {\n              lastLast = last;\n              break;\n            }\n            lastLast--;\n          }\n        }\n\n        var lastProperty = source[last]?(source[last][property] || 0): 0;\n        var lastLastProperty = source[lastLast]?(source[lastLast][property] || 0): 0;\n\n        if (lastProperty == lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:blue\">trending_flat</i></p>';\n        } else if (lastProperty > lastLastProperty) {\n          return '<p><i class=\"material-icons\" style=\"color:green\">trending_up</i></p>';\n        } else {\n          return '<p><i class=\"material-icons\" style=\"color:red\">trending_down</i></p>';\n        }\n      }`,\n    `/**\n        * compute the average value of the property contained on the source.\n        * @param  source array of object wich contains property\n        * @param  property the property on wich we want to calculate the average\n        * @param  range the range on wich we want to calculate the average\n        * @param  coefficent the coefficent used for calculate the threshold\n                  if coefficent is 0 mean return the count of property > 0\n        * @return the average value || the count of property > 0\n      */\n      var calculateAvgProperty = function(source, property, range, coefficient) {\n        source = (source || []).slice(0);\n\n        source.pop();\n\n        coefficient = coefficient || 1;\n        range = range || 12;\n\n        var l = source.length;\n        var res = 0;\n        var counter = 0;\n        var noZero = 0;\n\n        if(l < range) {\n          range = l;\n        }\n\n        while (range != 0) {\n          counter++;\n          if (source[l - 1][property] != null) {\n            res += source[l - 1][property];\n\n            if (source[l - 1][property] > 0) {\n              noZero++;\n            }\n          }\n          l--;\n          range--;\n        }\n\n        if (coefficient == 0) {\n          return noZero;\n        } else {\n          var threshold = (res/counter)*coefficient || 0;\n          return threshold;\n        }\n      }`,\n    `var alert = function(source, property, threshold, fmt) {\n        source = (source || []).slice(0);\n        var l = source.length;\n\n        if ( lastProperty(source, property)  > threshold ) {\n          return '<p><i class=\"material-icons\" style=\"color:red\">warning</i></p>';\n          } else {\n            return '<p></p>';\n          }\n      }`,\n    `var formatNumber = function(num, fmt) {\n        fmt = fmt || '0,0[.]0';\n        return numbro(num).format(fmt);\n      }`,\n    `var formatDate = function(date, fmt) {\n        fmt = fmt || 'mm-dd-yyyy';\n        return dateUtils.format(date, fmt);\n      }`,\n    `var isoMonth = function(date, fmt) {\n        fmt = fmt || 'mm';\n        var du = dateUtils;\n        return du.format(du.addDays(du.startOfMonth(date), 4),fmt)\n      }`,\n    `var nextCounterValue = function(counterName, firstValue) {\n        firstValue = firstValue != null ? firstValue : 0;\n        if (execContext['$$'+counterName] == null) {\n          execContext['$$'+counterName] = firstValue;\n        } else {\n          execContext['$$'+counterName]++;\n        }\n        return execContext['$$'+counterName];\n      }`,\n    `var getCoordinate = function(source, zoom) {\n        zoom = zoom || 6;\n        if(source == null) {\n          return [51.505,-0.09, zoom];\n        } else {\n          return [source[0], source[1], zoom];\n        }\n      }`,\n  ];\n\n  private _functions: (Function | string)[] = [];\n  private _functionsStr: string = '';\n\n  constructor() {\n    this._initFunctions();\n  }\n\n  addFunction(f: Function | string): void {\n    this._functions.push(f);\n    this._initFunctions();\n  }\n\n  addFunctionHandler(name: string, fn: any): void {\n    if (AjfExpressionUtils.utils[name] === undefined) {\n      AjfExpressionUtils.utils[name] = {fn};\n    }\n  }\n\n  private _initFunctions(): void {\n    const functionsStr = this._functions\n      .map(f => (typeof f === 'string' ? f : f.toString()))\n      .join('; ');\n    this._functionsStr = `${this._baseUtilFunctions.join('; ')}; ${functionsStr}`;\n    AjfExpressionUtils.UTIL_FUNCTIONS = this._functionsStr;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfContext, getCodeIdentifiers} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {AbstractControl, UntypedFormControl, UntypedFormGroup} from '@angular/forms';\nimport {format} from 'date-fns';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  of as obsOf,\n  Subject,\n  Subscriber,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  pairwise,\n  scan,\n  share,\n  startWith,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingContainerNodeInstance} from './interface/nodes-instances/repeating-container-node-instance';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfNodeGroup} from './interface/nodes/node-group';\nimport {AjfNodeType} from './interface/nodes/node-type';\nimport {AjfNodesInstancesOperation} from './interface/operations/nodes-instances-operation';\nimport {AjfRendererUpdateMapOperation} from './interface/operations/renderer-update-map-operation';\nimport {AjfRendererUpdateMap} from './interface/renderer-maps/update-map';\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {initChoicesOrigin} from './utils/choices/init-choices-origin';\nimport {isFieldWithChoicesInstance} from './utils/fields-instances/is-field-with-choices-instance';\nimport {isTableFieldInstance} from './utils/fields-instances/is-table-field-instance';\nimport {updateFieldInstanceState} from './utils/fields-instances/update-field-instance-state';\nimport {updateFilteredChoices} from './utils/fields-instances/update-filtered-choices';\nimport {updateFormula} from './utils/fields-instances/update-formula';\nimport {updateNextSlideCondition} from './utils/fields-instances/update-next-slide-condition';\nimport {updateTriggerConditions} from './utils/fields-instances/update-trigger-conditions';\nimport {updateValidation} from './utils/fields-instances/update-validation';\nimport {updateWarning} from './utils/fields-instances/update-warning';\nimport {createField} from './utils/fields/create-field';\nimport {flattenNodesInstances} from './utils/nodes-instances/flatten-nodes-instances';\nimport {flattenNodesInstancesTree} from './utils/nodes-instances/flatten-nodes-instances-tree';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\nimport {isNodeGroupInstance} from './utils/nodes-instances/is-node-group-instance';\nimport {isRepeatingContainerNodeInstance} from './utils/nodes-instances/is-repeating-container-node-instance';\nimport {isRepeatingGroupInstance} from './utils/nodes-instances/is-repeating-group-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\nimport {isSlideInstance} from './utils/nodes-instances/is-slide-instance';\nimport {isSlidesInstance} from './utils/nodes-instances/is-slides-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\nimport {nodeInstanceSuffix} from './utils/nodes-instances/node-instance-suffix';\nimport {nodeToNodeInstance} from './utils/nodes-instances/node-to-node-instance';\nimport {updateConditionalBranches} from './utils/nodes-instances/update-conditional-branches';\nimport {updateEditability} from './utils/nodes-instances/update-editability';\nimport {updateVisibility} from './utils/nodes-instances/update-visibility';\nimport {flattenNodes} from './utils/nodes/flatten-nodes';\nimport {isContainerNode} from './utils/nodes/is-container-node';\nimport {orderedNodes} from './utils/nodes/ordered-nodes';\nimport {updateRepsNum} from './utils/slides-instances/update-reps-num';\nimport {validSlide} from './utils/slides-instances/valid-slide';\nimport {AjfValidationService} from './validation-service';\n\nexport const enum AjfFormInitStatus {\n  Initializing,\n  Complete,\n}\n\nconst updateSlideValidity = (slide: AjfRepeatingSlideInstance | AjfSlideInstance) => {\n  const subNodesNum = slide.flatNodes.length;\n  let valid = true;\n  for (let i = 0; i < subNodesNum; i++) {\n    const subNode = slide.flatNodes[i];\n    if (subNode.visible && isFieldInstance(subNode) && !subNode.valid) {\n      valid = false;\n      break;\n    }\n  }\n  if (slide.valid !== valid) {\n    slide.valid = valid;\n  }\n};\n\n@Injectable()\nexport class AjfFormRendererService {\n  private _editabilityNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _editabilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _visibilityNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _visibilityNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _repetitionNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _repetitionNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _conditionalBranchNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _conditionalBranchNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formulaNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _formulaNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _validationNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _validationNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _warningNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _warningNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _filteredChoicesNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _filteredChoicesNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _triggerConditionsNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _triggerConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _nextSlideConditionsNodesMap!: Observable<AjfRendererUpdateMap>;\n  private _nextSlideConditionsNodesMapUpdates: Subject<AjfRendererUpdateMapOperation> =\n    new Subject<AjfRendererUpdateMapOperation>();\n\n  private _formInitEvent: EventEmitter<AjfFormInitStatus> = new EventEmitter<AjfFormInitStatus>();\n  readonly formInitEvent: Observable<AjfFormInitStatus> = this\n    ._formInitEvent as Observable<AjfFormInitStatus>;\n\n  private _formGroup: BehaviorSubject<UntypedFormGroup | null> =\n    new BehaviorSubject<UntypedFormGroup | null>(null);\n  readonly formGroup: Observable<UntypedFormGroup | null> = this\n    ._formGroup as Observable<UntypedFormGroup | null>;\n\n  private _form: BehaviorSubject<{\n    form: AjfForm | null;\n    context?: AjfContext;\n  } | null> = new BehaviorSubject<{\n    form: AjfForm | null;\n    context?: AjfContext;\n  } | null>(null);\n  private _nodes!: Observable<AjfNodeInstance[]>;\n  private _flatNodes!: Observable<AjfNodeInstance[]>;\n  private _flatNodesTree!: Observable<AjfSlideInstance[]>;\n  private _nodesUpdates: Subject<AjfNodesInstancesOperation> =\n    new Subject<AjfNodesInstancesOperation>();\n  private _errorPositions!: Observable<number[]>;\n  private _errors!: Observable<number>;\n\n  private _formGroupSubscription: Subscription = Subscription.EMPTY;\n  private _valueChanged: Subject<void> = new Subject<void>();\n\n  private _nodesMaps!: Observable<AjfRendererUpdateMap>[];\n\n  private _nextSlideTrigger: EventEmitter<AjfNodeInstance> = new EventEmitter<AjfNodeInstance>();\n  readonly nextSlideTrigger: Observable<AjfNodeInstance> = this\n    ._nextSlideTrigger as Observable<AjfNodeInstance>;\n\n  private _slidesNum: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  readonly slidesNum: Observable<number> = this._slidesNum as Observable<number>;\n\n  get nodesTree(): Observable<AjfSlideInstance[]> {\n    return this._flatNodesTree;\n  }\n  get errorPositions(): Observable<number[]> {\n    return this._errorPositions;\n  }\n  get errors(): Observable<number> {\n    return this._errors;\n  }\n  get currentSupplementaryInformations(): any {\n    const form = this._form.getValue();\n    return form != null && form.form != null ? form.form.supplementaryInformations : null;\n  }\n\n  constructor(_: AjfValidationService) {\n    this._initUpdateMapStreams();\n    this._initNodesStreams();\n    this._initErrorsStreams();\n    this._initFormStreams();\n    this._updateFormValueAndValidity();\n  }\n\n  setForm(form: AjfForm | null, context: AjfContext = {}) {\n    this._initUpdateMapStreams();\n    if (\n      form != null &&\n      Object.keys(context).length === 0 &&\n      Object.keys(form.initContext || {}).length > 0\n    ) {\n      context = form.initContext || {};\n    }\n    const currentForm = this._form.getValue();\n    if (\n      (currentForm == null && form != null) ||\n      (currentForm != null && form !== currentForm.form)\n    ) {\n      this._form.next({form: form, context: context});\n    }\n  }\n\n  /**\n   * Replace date values in this format \"2023-03-28T22:00:00.000Z\" with \"yyyy-MM-dd\" format\n   * @param ctx\n   */\n  private _fixDates(ctx: any): void {\n    if (ctx) {\n      Object.keys(ctx).forEach(k => {\n        const v = ctx[k];\n        if (typeof v === 'string' && /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\.\\d\\d\\dZ$/.test(v)) {\n          const d = format(new Date(v), 'yyyy-MM-dd');\n          ctx[k] = d;\n        }\n      });\n    }\n  }\n\n  getFormValue(): any {\n    const formGroup = this._formGroup.getValue();\n    if (formGroup == null) {\n      return {};\n    }\n    let res = deepCopy(formGroup.value);\n    this._fixDates(res);\n    return res;\n  }\n\n  addGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const maxReps = group.node.maxReps;\n      if (maxReps > 0 && group.reps + 1 > maxReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps + 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        const flatNodes = flattenNodesInstances(nodes, true);\n        this._adjustReps(flatNodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  removeGroup(group: AjfNodeGroupInstance | AjfRepeatingSlideInstance): Observable<boolean> {\n    return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n      if (group.formulaReps != null) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const minReps = group.node.minReps;\n      if (group.reps - 1 < minReps) {\n        subscriber.next(false);\n        subscriber.complete();\n        return;\n      }\n      const oldReps = group.reps;\n      group.reps = group.reps - 1;\n      group.canAdd = group.node.maxReps === 0 || group.reps < group.node.maxReps;\n      group.canRemove = group.node.minReps === 0 || group.reps > group.node.minReps;\n      this._nodesUpdates.next((nodes: AjfNodeInstance[]): AjfNodeInstance[] => {\n        this._adjustReps(nodes, group, oldReps, this.getFormValue());\n        subscriber.next(true);\n        subscriber.complete();\n        return nodes;\n      });\n    });\n  }\n\n  getControl(field: AjfFieldInstance | undefined): Observable<AbstractControl | null> {\n    return this.formGroup.pipe(\n      map(f => {\n        if (field == null) {\n          return null;\n        }\n        const fieldName = nodeInstanceCompleteName(field);\n        return f != null && f.contains(fieldName) ? f.controls[fieldName] : null;\n      }),\n    );\n  }\n\n  private _initErrorsStreams(): void {\n    this._errorPositions = this._valueChanged.pipe(\n      withLatestFrom(this._nodes, this._form),\n      filter(\n        ([_, __, form]) =>\n          form != null &&\n          (\n            form as {\n              form: AjfForm | null;\n              context?: AjfContext;\n            }\n          ).form != null,\n      ),\n      map(([_, nodes, formDef]) => {\n        const form = (\n          formDef as {\n            form: AjfForm | null;\n            context?: AjfContext;\n          }\n        ).form as AjfForm;\n        let currentPosition = 0;\n        const errors: number[] = [];\n        nodes.forEach(node => {\n          if (isRepeatingSlideInstance(node)) {\n            for (let i = 0; i < node.reps; i++) {\n              if (node.visible) {\n                currentPosition++;\n                if (i == 0) {\n                  node.position = currentPosition;\n                }\n                if (!validSlide(node, i)) {\n                  errors.push(currentPosition);\n                }\n              }\n            }\n          } else if (isSlideInstance(node)) {\n            if (node.visible) {\n              currentPosition++;\n              node.position = currentPosition;\n              if (!node.valid) {\n                errors.push(currentPosition);\n              }\n            }\n          }\n        });\n        form.valid = errors.length == 0;\n        this._slidesNum.next(currentPosition);\n        return errors;\n      }),\n      share(),\n    );\n    this._errors = this._errorPositions.pipe(\n      map(e => (e != null ? e.length : 0)),\n      startWith(0),\n      share(),\n    );\n  }\n\n  private _initUpdateMapStreams(): void {\n    const startValue = (): AjfRendererUpdateMap => ({});\n    this._editabilityNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._editabilityNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._visibilityNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._visibilityNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._repetitionNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._repetitionNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._conditionalBranchNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._conditionalBranchNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._formulaNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._formulaNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._validationNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._validationNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._warningNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._warningNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._filteredChoicesNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._filteredChoicesNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._triggerConditionsNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._triggerConditionsNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n    this._nextSlideConditionsNodesMap = (<Observable<AjfRendererUpdateMapOperation>>(\n      this._nextSlideConditionsNodesMapUpdates\n    )).pipe(\n      scan((rmap: AjfRendererUpdateMap, op: AjfRendererUpdateMapOperation) => {\n        return op(rmap);\n      }, {}),\n      startWith(startValue()),\n      share(),\n    );\n\n    this._nodesMaps = [\n      this._editabilityNodesMap,\n      this._visibilityNodesMap,\n      this._repetitionNodesMap,\n      this._conditionalBranchNodesMap,\n      this._formulaNodesMap,\n      this._validationNodesMap,\n      this._warningNodesMap,\n      this._nextSlideConditionsNodesMap,\n      this._filteredChoicesNodesMap,\n      this._triggerConditionsNodesMap,\n    ];\n  }\n\n  private _initFormStreams(): void {\n    const formObs = this._form;\n    formObs\n      .pipe(\n        map(_form => {\n          return this._initFormGroupStreams(new UntypedFormGroup({}));\n        }),\n      )\n      .subscribe(this._formGroup);\n    formObs\n      .pipe(\n        switchMap(form => {\n          if (form == null || form.form == null) {\n            return obsOf(form);\n          }\n          const choicesOrigins = form.form.choicesOrigins || [];\n          if (choicesOrigins.length === 0) {\n            return obsOf(form);\n          }\n          return from(Promise.all(choicesOrigins.map(co => initChoicesOrigin(co)))).pipe(\n            map(() => form),\n          );\n        }),\n        map(formDef => {\n          return (_nodesInstances: AjfNodeInstance[]): AjfNodeInstance[] => {\n            let nodes: AjfNodeInstance[];\n            if (\n              formDef != null &&\n              (\n                formDef as {\n                  form: AjfForm | null;\n                  context?: AjfContext;\n                }\n              ).form != null\n            ) {\n              const form = formDef as {\n                form: AjfForm;\n                context: AjfContext;\n              };\n              const baseNodes = form.form.nodes;\n              nodes = this._orderedNodesInstancesTree(\n                flattenNodes(baseNodes),\n                baseNodes,\n                undefined,\n                [],\n                form.context || {},\n              );\n            } else {\n              nodes = [];\n            }\n            let currentPosition = 0;\n            nodes.forEach(node => {\n              if (isRepeatingSlideInstance(node)) {\n                for (let i = 0; i < node.reps; i++) {\n                  if (node.visible) {\n                    currentPosition++;\n                    if (i == 0) {\n                      node.position = currentPosition;\n                    }\n                  }\n                }\n              } else if (isSlideInstance(node)) {\n                if (node.visible) {\n                  currentPosition++;\n                  node.position = currentPosition;\n                }\n              }\n            });\n            return nodes;\n          };\n        }),\n      )\n      .subscribe(this._nodesUpdates);\n  }\n\n  private _initNodeInstance(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    node: AjfNode,\n    prefix: number[],\n    context: AjfContext,\n    branchVisibility = true,\n  ): AjfNodeInstance | null {\n    let instance = nodeToNodeInstance(allNodes, node, prefix, context);\n    if (instance == null) {\n      return null;\n    }\n    if (isRepeatingGroupInstance(instance)) {\n      this._explodeRepeatingNode(allNodes, instance, context);\n    } else if (isSlideInstance(instance)) {\n      instance.nodes = this._orderedNodesInstancesTree(\n        allNodes,\n        instance.node.nodes,\n        instance.node.id,\n        prefix,\n        context,\n      );\n      updateEditability(instance, context);\n    }\n    updateVisibility(instance, context, branchVisibility);\n    updateConditionalBranches(instance, context);\n    if (isFieldInstance(instance)) {\n      if (isFieldWithChoicesInstance(instance)) {\n        updateFilteredChoices(instance, context);\n      } else {\n        if (isTableFieldInstance(instance)) {\n          const {node} = instance;\n          instance.context = context[nodeInstanceCompleteName(instance)] || context;\n          const formGroup = this._formGroup.getValue();\n          let controlsWithLabels: [string, (string | AjfTableFormControl)[]][] = [];\n          controlsWithLabels.push([node.label, node.columnLabels]);\n          if (formGroup != null) {\n            const rowsNum = node.rows.length;\n            for (let rowIdx = 0; rowIdx < rowsNum; rowIdx++) {\n              const row = node.rows[rowIdx];\n              let r: AjfTableFormControl[] = [];\n              const cellNum = row.length;\n              for (let idx = 0; idx < cellNum; idx++) {\n                let cell = row[idx];\n                if (typeof cell === 'string') {\n                  cell = {formula: cell};\n                }\n                /*\n                every control is registered with the cell position\n                inside the form control matrix\n                with this mask `${tNode.name}__${rowIdx}__${idx}`\n                */\n                const name = `${node.name}__${rowIdx}__${idx}`;\n                const type = (node.columnTypes && node.columnTypes[idx]) || 'number';\n                const tableFormControl: AjfTableFormControl = {\n                  control: new UntypedFormControl(),\n                  show: false,\n                  type,\n                };\n                const value =\n                  instance.context[cell.formula] && type === 'number'\n                    ? +instance.context[cell.formula]\n                    : instance.context[cell.formula];\n                tableFormControl.control.setValue(value);\n                formGroup.registerControl(name, tableFormControl.control);\n                r.push(tableFormControl);\n                /* create a object that respect the instance interface\n                with the minimum defined properties to allow to run addToNodeFormula map*/\n                const fakeInstance = {\n                  formula: {formula: cell.formula},\n                  node: {name, nodeType: 0, editable: false},\n                  visible: true,\n                  prefix: [],\n                  conditionalBranches: [],\n                  updatedEvt: new EventEmitter<void>(),\n                } as unknown as AjfNodeInstance;\n                this._addToNodesFormulaMap(fakeInstance, cell.formula);\n              }\n              controlsWithLabels.push([node.rowLabels[rowIdx], r]);\n            }\n            instance.controls = controlsWithLabels;\n          }\n        } else {\n          instance.value = context[nodeInstanceCompleteName(instance)];\n        }\n      }\n      updateFieldInstanceState(instance, context);\n    }\n    this._addNodeInstance(instance);\n    return instance;\n  }\n\n  private _adjustReps(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfRepeatingContainerNodeInstance,\n    oldReps: number,\n    context: AjfContext,\n  ): {added: AjfNodeInstance[] | null; removed: AjfNodeInstance[] | null} {\n    const newReps = instance.reps;\n    const result: {\n      added: AjfNodeInstance[] | null;\n      removed: AjfNodeInstance[] | null;\n    } = {\n      added: null,\n      removed: null,\n    };\n    if (oldReps < newReps) {\n      const newNodes: AjfNodeInstance[] = [];\n      if (instance.nodes == null) {\n        instance.nodes = [];\n      }\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        const node = createField({\n          id: 999,\n          name: '',\n          parent: -1,\n          fieldType: AjfFieldType.Empty,\n          label: instance.node.label,\n        });\n        const newInstance = this._initNodeInstance(\n          allNodes,\n          node,\n          instance.prefix.slice(0),\n          context,\n        );\n        if (newInstance != null) {\n          instance.nodes.push(newInstance);\n        }\n      }\n      for (let i = oldReps; i < newReps; i++) {\n        const prefix = instance.prefix.slice(0);\n        const group = instance.node;\n        prefix.push(i);\n        const orderedListNodes = orderedNodes(group.nodes, instance.node.id);\n        orderedListNodes.forEach(n => {\n          const newInstance = this._initNodeInstance(allNodes, n, prefix, context);\n          if (newInstance != null) {\n            newNodes.push(newInstance);\n            instance.nodes.push(newInstance);\n          }\n        });\n        this._addNodeInstance(instance);\n      }\n      result.added = newNodes;\n    } else if (oldReps > newReps) {\n      let nodesNum = instance.nodes.length / oldReps;\n      if (instance.node.nodeType === AjfNodeType.AjfNodeGroup) {\n        nodesNum++;\n      }\n      result.removed = instance.nodes.splice(newReps * nodesNum, nodesNum);\n      result.removed.forEach(n => {\n        this._removeNodeInstance(n);\n      });\n    }\n    if (oldReps != newReps && instance.formulaReps == null) {\n      const fg = this._formGroup.getValue();\n      const completeName = nodeInstanceCompleteName(instance);\n      if (fg != null && fg.contains(completeName)) {\n        fg.controls[completeName].setValue(instance.reps);\n      }\n    }\n    instance.flatNodes = flattenNodesInstances(instance.nodes);\n    if (isRepeatingSlideInstance(instance)) {\n      const slideNodes: AjfNodeInstance[][] = [];\n      const nodesPerSlide = instance.nodes != null ? instance.nodes.length / instance.reps : 0;\n      for (let i = 0; i < instance.reps; i++) {\n        const startNode = i * nodesPerSlide;\n        slideNodes.push(instance.nodes.slice(startNode, startNode + nodesPerSlide));\n      }\n      instance.slideNodes = slideNodes;\n    }\n    return result;\n  }\n\n  private _updateFormValueAndValidity(): void {\n    this._nodesUpdates\n      .pipe(\n        withLatestFrom(this._formGroup),\n        filter(([_, fg]) => fg !== null),\n      )\n      .subscribe(([_, fg]) => {\n        const form = fg as UntypedFormGroup;\n        form.updateValueAndValidity();\n      });\n  }\n\n  private _explodeRepeatingNode(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfNodeGroupInstance | AjfRepeatingSlideInstance,\n    context: AjfContext,\n  ) {\n    const oldReps = updateRepsNum(instance, context);\n    if (oldReps !== instance.reps) {\n      this._adjustReps(allNodes, instance, oldReps, context);\n    }\n  }\n\n  private _orderedNodesInstancesTree(\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    nodes: AjfNode[],\n    parent: number | null = null,\n    prefix: number[] = [],\n    context: AjfContext,\n  ): AjfNodeInstance[] {\n    let nodesInstances: AjfNodeInstance[] = [];\n    const curSuffix = prefix.length > 0 ? '__' + prefix.join('__') : '';\n    orderedNodes(nodes, parent).forEach((node: AjfNode) => {\n      const parentNodeInstance = nodesInstances.find(\n        ni => ni.node.id == node.parent && nodeInstanceSuffix(ni) == curSuffix,\n      );\n      const branchVisibility =\n        parentNodeInstance != null\n          ? parentNodeInstance.verifiedBranch != null &&\n            parentNodeInstance.verifiedBranch == node.parentNode\n          : true;\n      const nni = this._initNodeInstance(allNodes, node, prefix, context, branchVisibility);\n      if (nni != null) {\n        nodesInstances.push(nni);\n      }\n    });\n    return nodesInstances;\n  }\n\n  private _formValueDelta(oldValue: any, newValue: any): string[] {\n    const allKeys = [] as string[];\n    [...Object.keys(oldValue), ...Object.keys(newValue)].forEach(key => {\n      if (key !== '$value' && allKeys.indexOf(key) === -1) {\n        allKeys.push(key);\n      }\n    });\n    return allKeys.filter(k => oldValue[k] !== newValue[k]);\n  }\n\n  private _initFormGroupStreams(formGroup: UntypedFormGroup): UntypedFormGroup {\n    this._formGroupSubscription.unsubscribe();\n    let init = true;\n    let initForm = true;\n    this._formInitEvent.emit(AjfFormInitStatus.Initializing);\n    this._formGroupSubscription = formGroup.valueChanges\n      .pipe(\n        startWith({}),\n        distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n        pairwise(),\n        withLatestFrom(\n          this._nodesMaps[0],\n          this._nodesMaps[1],\n          this._nodesMaps[2],\n          this._nodesMaps[3],\n          this._nodesMaps[4],\n          this._nodesMaps[5],\n          this._nodesMaps[6],\n          this._nodesMaps[7],\n          this._nodesMaps[8],\n          this._nodesMaps[9],\n          this._flatNodes,\n        ),\n      )\n      .subscribe(v => {\n        const oldFormValue = (init && {}) || v[0][0];\n        init = false;\n        const newFormValue = v[0][1];\n        const editability = v[1];\n        const visibilityMap = v[2];\n        const repetitionMap = v[3];\n        const conditionalBranchesMap = v[4];\n        const formulaMap = v[5];\n        const validationMap = v[6];\n        const warningMap = v[7];\n        const nextSlideConditionsMap = v[8];\n        const filteredChoicesMap = v[9];\n        const triggerConditionsMap = v[10];\n        const nodes = v[11];\n\n        // takes the names of the fields that have changed\n        const delta = this._formValueDelta(oldFormValue, newFormValue);\n        const deltaLen = delta.length;\n        let updatedNodes: AjfNodeInstance[] = [];\n\n        /*\n                        for each field update all properties map\n                        with the following rule  \"if fieldname is in map update it\" and\n                        push on updateNodes the node instance that wrap field\n                      */\n        delta.forEach(fieldName => {\n          updatedNodes = updatedNodes.concat(\n            nodes.filter(n => nodeInstanceCompleteName(n) === fieldName),\n          );\n          if (editability[fieldName] != null) {\n            editability[fieldName].forEach(nodeInstance => {\n              if (isSlideInstance(nodeInstance)) {\n                updateEditability(nodeInstance, newFormValue);\n              }\n            });\n          }\n          if (visibilityMap[fieldName] != null) {\n            visibilityMap[fieldName].forEach(nodeInstance => {\n              updateVisibilityMapEntry(nodeInstance, this._formGroup, newFormValue);\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (repetitionMap[fieldName] != null) {\n            repetitionMap[fieldName].forEach(nodeInstance => {\n              updateRepetitionMapEntry(nodeInstance, newFormValue, nodes, this._adjustReps);\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (conditionalBranchesMap[fieldName] != null) {\n            conditionalBranchesMap[fieldName].forEach(nodeInstance => {\n              updateConditionalBranchesMapEntry(\n                nodeInstance,\n                newFormValue,\n                nodes,\n                this._showSubtree,\n                this._hideSubtree,\n              );\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (formulaMap[fieldName] != null) {\n            formulaMap[fieldName].forEach(nodeInstance => {\n              updateFormulaMapEntry(nodeInstance, newFormValue, this._formGroup);\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (validationMap[fieldName] != null) {\n            validationMap[fieldName].forEach(nodeInstance => {\n              updateValidationMapEntry(\n                nodeInstance,\n                newFormValue,\n                this.currentSupplementaryInformations,\n              );\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (warningMap[fieldName] != null) {\n            warningMap[fieldName].forEach(nodeInstance => {\n              updateWarningMapEntry(nodeInstance, newFormValue);\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && nextSlideConditionsMap[fieldName] != null) {\n            if (\n              nextSlideConditionsMap[fieldName].filter(nodeInstance => {\n                if (isFieldInstance(nodeInstance)) {\n                  return updateNextSlideCondition(nodeInstance, newFormValue);\n                }\n                return false;\n              }).length == 1\n            ) {\n              this._nextSlideTrigger.emit();\n            }\n          }\n\n          if (filteredChoicesMap[fieldName] != null) {\n            filteredChoicesMap[fieldName].forEach(nodeInstance => {\n              updateFilteredChoicesMapEntry(nodeInstance, newFormValue);\n              if (updatedNodes.indexOf(nodeInstance) === -1) {\n                updatedNodes.push(nodeInstance);\n              }\n            });\n          }\n\n          if (deltaLen == 1 && triggerConditionsMap[fieldName] != null) {\n            const res = triggerConditionsMap[fieldName].filter(nodeInstance => {\n              if (!isFieldWithChoicesInstance(nodeInstance)) {\n                return false;\n              }\n              return updateTriggerConditions(nodeInstance, newFormValue);\n            });\n            if (res.length == 1 && isFieldWithChoicesInstance(res[0])) {\n              res[0].selectionTrigger.emit();\n            }\n          }\n        });\n        updatedNodes.forEach(n => {\n          const nodeIdx = nodes.indexOf(n);\n          let idx = nodeIdx - 1;\n          while (idx >= 0) {\n            const curNode = nodes[idx];\n            if (isSlidesInstance(curNode)) {\n              updateSlideValidity(curNode);\n              curNode.updatedEvt.emit();\n            }\n            idx--;\n          }\n          n.updatedEvt.emit();\n        });\n        if (initForm) {\n          initForm = false;\n          this._formInitEvent.emit(AjfFormInitStatus.Complete);\n        }\n        this._valueChanged.next();\n      });\n    return formGroup;\n  }\n\n  private _showSubtree(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, true, branch);\n  }\n\n  private _hideSubtree(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) {\n    this._updateSubtreeVisibility(context, nodes, node, false, branch);\n  }\n\n  private _updateSubtreeVisibility(\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    visible: boolean,\n    branch?: number,\n  ) {\n    let subNodes: AjfNodeInstance[];\n    const nodeSuffix = nodeInstanceSuffix(node);\n    if (branch != null) {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id && n.node.parentNode == branch;\n      });\n    } else {\n      subNodes = nodes.filter(n => {\n        const suffix = nodeInstanceSuffix(n);\n        return suffix == nodeSuffix && n.node.parent == node.node.id;\n      });\n    }\n    const isContainer = isContainerNode(node.node);\n    subNodes.forEach(n => {\n      if (\n        !isContainer ||\n        (isContainer && (<AjfNodeGroup>node.node).nodes.find(cn => cn.id == n.node.id) == null)\n      ) {\n        updateVisibility(n, context, visible);\n        if (isFieldInstance(n)) {\n          updateFormula(n, context);\n        }\n        this._updateSubtreeVisibility(context, nodes, n, visible);\n      }\n    });\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = this._nodesUpdates.pipe(\n      scan((nodes: AjfNodeInstance[], op: AjfNodesInstancesOperation) => {\n        return op(nodes);\n      }, []),\n      share(),\n    );\n    this._flatNodesTree = this._nodes.pipe(\n      map(nodes => flattenNodesInstancesTree(nodes)),\n      share(),\n    );\n    this._flatNodes = this._flatNodesTree.pipe(\n      map(slides => {\n        let nodes: AjfNodeInstance[] = [];\n        slides.forEach(s => {\n          nodes.push(s);\n          nodes = nodes.concat(s.flatNodes);\n          updateSlideValidity(s);\n        });\n        return nodes;\n      }),\n      share(),\n    );\n  }\n\n  private _removeNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    const nodeName = nodeInstanceCompleteName(nodeInstance);\n    const fg = this._formGroup.getValue();\n    if (fg != null) {\n      const curValue = fg.value;\n      const newFormValue = {...curValue, [nodeName]: undefined};\n      fg.patchValue(newFormValue);\n    }\n    this._removeNodesVisibilityMapIndex(nodeName);\n    this._removeNodesRepetitionMapIndex(nodeName);\n    this._removeNodesConditionalBranchMapIndex(nodeName);\n    this._removeNodesFormulaMapIndex(nodeName);\n    this._removeNodesValidationMapIndex(nodeName);\n    this._removeNodesWarningMapIndex(nodeName);\n    this._removeNodesNextSlideConditionsMapIndex(nodeName);\n    this._removeNodesFilteredChoicesMapIndex(nodeName);\n    this._removeNodesTriggerConditionsMapIndex(nodeName);\n    if (isSlidesInstance(nodeInstance)) {\n      this._removeNodesEditabilityMapIndex(nodeName);\n      return this._removeSlideInstance(nodeInstance);\n    } else if (isRepeatingContainerNodeInstance(nodeInstance)) {\n      this._removeNodeGroupInstance(nodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      this._removeFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _removeSlideInstance(slideInstance: AjfBaseSlideInstance): AjfBaseSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.visibility != null) {\n      this._removeFromNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _removeNodeGroupInstance(\n    nodeGroupInstance: AjfRepeatingContainerNodeInstance,\n  ): AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._removeFromNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    if (nodeGroupInstance.formulaReps != null && nodeGroup.formulaReps != null) {\n      this._removeFromNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n    }\n    return nodeGroupInstance;\n  }\n\n  private _removeFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && formGroup.contains(fieldInstanceName)) {\n      formGroup.removeControl(fieldInstanceName);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          delete vmap[fieldInstanceName];\n        }\n        return vmap;\n      });\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._removeFromNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._removeFromNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._removeFromNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    // TODO: check this, probably is never verified\n    if (isRepeatingContainerNodeInstance(fieldInstance)) {\n      if (fieldInstance.formulaReps != null) {\n        this._removeFromNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach(condition => {\n        this._removeFromNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach(condition => {\n        this._removeFromNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._removeFromNodesNextSlideConditionsMap(\n        fieldInstance,\n        fieldInstance.nextSlideCondition.condition,\n      );\n    }\n\n    if (isFieldWithChoicesInstance(fieldInstance)) {\n      if (fieldInstance.choicesFilter != null) {\n        this._removeFromNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n        if (fieldInstance.triggerConditions != null) {\n          fieldInstance.triggerConditions.forEach(condition => {\n            this._removeFromNodesTriggerConditionsMap(fieldInstance, condition.condition);\n          });\n        }\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addNodeInstance(nodeInstance: AjfNodeInstance): AjfNodeInstance {\n    if (isRepeatingContainerNodeInstance(nodeInstance)) {\n      return this._addNodeGroupInstance(nodeInstance);\n    } else if (isSlideInstance(nodeInstance)) {\n      return this._addSlideInstance(nodeInstance);\n    } else if (isFieldInstance(nodeInstance)) {\n      return this._addFieldInstance(nodeInstance);\n    }\n\n    return nodeInstance;\n  }\n\n  private _addFieldInstance(fieldInstance: AjfFieldInstance): AjfFieldInstance {\n    const formGroup = this._formGroup.getValue();\n    const fieldInstanceName = nodeInstanceCompleteName(fieldInstance);\n    if (formGroup != null && !formGroup.contains(fieldInstanceName)) {\n      const control = new UntypedFormControl();\n      control.setValue(fieldInstance.value);\n      formGroup.registerControl(fieldInstanceName, control);\n    }\n    if (fieldInstance.validation != null) {\n      this._validationNodesMapUpdates.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        if (vmap[fieldInstanceName] == null) {\n          vmap[fieldInstanceName] = [];\n        }\n        if (vmap[fieldInstanceName].indexOf(fieldInstance) == -1) {\n          vmap[fieldInstanceName].push(fieldInstance);\n        }\n        return vmap;\n      });\n    } else {\n      fieldInstance.valid = true;\n    }\n\n    if (fieldInstance.visibility != null) {\n      this._addToNodesVisibilityMap(fieldInstance, fieldInstance.visibility.condition);\n    }\n\n    fieldInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(fieldInstance, conditionalBranch.condition);\n    });\n\n    if (fieldInstance.formula) {\n      this._addToNodesFormulaMap(fieldInstance, fieldInstance.formula.formula);\n    }\n\n    if (isNodeGroupInstance(fieldInstance)) {\n      if (fieldInstance.formulaReps != null) {\n        this._addToNodesRepetitionMap(fieldInstance, fieldInstance.formulaReps.formula);\n      }\n    }\n\n    if (fieldInstance.validation != null && fieldInstance.validation.conditions != null) {\n      fieldInstance.validation.conditions.forEach(condition => {\n        this._addToNodesValidationMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.warning != null) {\n      fieldInstance.warning.conditions.forEach(condition => {\n        this._addToNodesWarningMap(fieldInstance, condition.condition);\n      });\n    }\n\n    if (fieldInstance.nextSlideCondition != null) {\n      this._addToNodesNextSlideConditionsMap(\n        fieldInstance,\n        fieldInstance.nextSlideCondition.condition,\n      );\n    }\n\n    if (isFieldWithChoicesInstance(fieldInstance)) {\n      if (fieldInstance.choicesFilter != null) {\n        this._addToNodesFilteredChoicesMap(fieldInstance, fieldInstance.choicesFilter.formula);\n      }\n      if (fieldInstance.triggerConditions != null) {\n        fieldInstance.triggerConditions.forEach((condition: AjfCondition) => {\n          this._addToNodesTriggerConditionsMap(fieldInstance, condition.condition);\n        });\n      }\n    }\n\n    return fieldInstance;\n  }\n\n  private _addSlideInstance(slideInstance: AjfSlideInstance): AjfSlideInstance {\n    const slide = slideInstance.node;\n    if (slide.readonly != null) {\n      this._addToNodesEditabilityMap(slideInstance, slide.readonly.condition);\n    }\n    if (slide.visibility != null) {\n      this._addToNodesVisibilityMap(slideInstance, slide.visibility.condition);\n    }\n    slideInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(slideInstance, conditionalBranch.condition);\n    });\n    return slideInstance;\n  }\n\n  private _addNodeGroupInstance(\n    nodeGroupInstance: AjfRepeatingContainerNodeInstance,\n  ): AjfRepeatingContainerNodeInstance {\n    const nodeGroup = nodeGroupInstance.node;\n    if (nodeGroup.visibility != null) {\n      this._addToNodesVisibilityMap(nodeGroupInstance, nodeGroup.visibility.condition);\n    }\n    nodeGroupInstance.conditionalBranches.forEach((conditionalBranch: AjfCondition) => {\n      this._addToNodesConditionalBranchMap(nodeGroupInstance, conditionalBranch.condition);\n    });\n    if (nodeGroupInstance.formulaReps != null) {\n      if (nodeGroup.formulaReps != null) {\n        this._addToNodesRepetitionMap(nodeGroupInstance, nodeGroup.formulaReps.formula);\n      }\n    } else {\n      let formGroup = this._formGroup.getValue();\n      let nodeGroupInstanceName = nodeInstanceCompleteName(nodeGroupInstance);\n      if (formGroup != null && !formGroup.contains(nodeGroupInstanceName)) {\n        const control = new UntypedFormControl();\n        control.setValue(nodeGroupInstance.reps);\n        formGroup.registerControl(nodeGroupInstanceName, control);\n      }\n    }\n    return nodeGroupInstance;\n  }\n  private _removeNodesEditabilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._editabilityNodesMapUpdates, index);\n  }\n  private _removeNodesVisibilityMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._visibilityNodesMapUpdates, index);\n  }\n\n  private _removeNodesRepetitionMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._repetitionNodesMapUpdates, index);\n  }\n\n  private _removeNodesConditionalBranchMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._conditionalBranchNodesMapUpdates, index);\n  }\n\n  private _removeNodesFormulaMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._formulaNodesMapUpdates, index);\n  }\n\n  private _removeNodesValidationMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._validationNodesMapUpdates, index);\n  }\n\n  private _removeNodesWarningMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._warningNodesMapUpdates, index);\n  }\n\n  private _removeNodesFilteredChoicesMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._filteredChoicesNodesMapUpdates, index);\n  }\n\n  private _removeNodesTriggerConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._triggerConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesNextSlideConditionsMapIndex(index: string): void {\n    this._removeNodesMapIndex(this._nextSlideConditionsNodesMapUpdates, index);\n  }\n\n  private _removeNodesMapIndex(nodesMap: Subject<AjfRendererUpdateMapOperation>, index: string) {\n    nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n      if (Object.keys(vmap).indexOf(index) > -1) {\n        delete vmap[index];\n      }\n      return vmap;\n    });\n  }\n\n  private _removeFromNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesConditionalBranchMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesTriggerConditionsMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesNextSlideConditionsMap(\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    this._removeFromNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _removeFromNodesMap(\n    nodesMap: Subject<AjfRendererUpdateMapOperation>,\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    const tokens = getCodeIdentifiers(formula);\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach(token => {\n          if (vmap[token] != null) {\n            const idx = vmap[token].indexOf(nodeInstance);\n            if (idx > -1) {\n              vmap[token].splice(idx, 1);\n              if (vmap[token].length == 0) {\n                delete vmap[token];\n              }\n            }\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n\n  private _addToNodesEditabilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._editabilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesVisibilityMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._visibilityNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesRepetitionMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._repetitionNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesConditionalBranchMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._conditionalBranchNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFormulaMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._formulaNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesValidationMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._validationNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesWarningMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._warningNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesFilteredChoicesMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._filteredChoicesNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesTriggerConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._triggerConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesNextSlideConditionsMap(nodeInstance: AjfNodeInstance, formula: string): void {\n    this._addToNodesMap(this._nextSlideConditionsNodesMapUpdates, nodeInstance, formula);\n  }\n\n  private _addToNodesMap(\n    nodesMap: Subject<AjfRendererUpdateMapOperation>,\n    nodeInstance: AjfNodeInstance,\n    formula: string,\n  ): void {\n    const tokens = getCodeIdentifiers(formula);\n    if (tokens.length > 0) {\n      nodesMap.next((vmap: AjfRendererUpdateMap): AjfRendererUpdateMap => {\n        tokens.forEach(token => {\n          if (vmap[token] == null) {\n            vmap[token] = [];\n          }\n          if (vmap[token].indexOf(nodeInstance) === -1) {\n            vmap[token].push(nodeInstance);\n          }\n        });\n        return vmap;\n      });\n    }\n  }\n}\n\nconst updateVisibilityMapEntry = (\n  nodeInstance: AjfNodeInstance,\n  formGroup: BehaviorSubject<UntypedFormGroup | null>,\n  newFormValue: any,\n) => {\n  const completeName = nodeInstanceCompleteName(nodeInstance);\n  const visibilityChanged = updateVisibility(nodeInstance, newFormValue);\n  const isField = isFieldInstance(nodeInstance);\n  if (visibilityChanged && !nodeInstance.visible) {\n    const fg = formGroup.getValue();\n    if (fg != null) {\n      const s = timer(200).subscribe(() => {\n        if (s && !s.closed) {\n          s.unsubscribe();\n        }\n        if (fg.controls != null && fg.controls[completeName] != null) {\n          fg.controls[completeName].setValue(null);\n        }\n      });\n    }\n    if (isField) {\n      nodeInstance.value = null;\n    }\n  } else if (visibilityChanged && nodeInstance.visible && isField) {\n    const fg = formGroup.getValue();\n    const res = updateFormula(nodeInstance, newFormValue);\n    if (fg != null && res.changed && fg.controls != null && fg.controls[completeName] != null) {\n      fg.controls[completeName].setValue(res.value);\n    }\n  }\n};\n\nconst updateRepetitionMapEntry = (\n  nodeInstance: AjfNodeInstance,\n  newFormValue: any,\n  nodes: AjfNodeInstance[],\n  cb: (\n    allNodes: AjfNode[] | AjfNodeInstance[],\n    instance: AjfRepeatingContainerNodeInstance,\n    oldReps: number,\n    context: AjfContext,\n  ) => {added: AjfNodeInstance[] | null; removed: AjfNodeInstance[] | null},\n) => {\n  if (isRepeatingContainerNodeInstance(nodeInstance)) {\n    const oldReps = updateRepsNum(nodeInstance, newFormValue);\n    if (oldReps !== nodeInstance.reps) {\n      cb(nodes, nodeInstance, oldReps, newFormValue);\n    }\n  }\n};\n\nconst updateConditionalBranchesMapEntry = (\n  nodeInstance: AjfNodeInstance,\n  newFormValue: any,\n  nodes: AjfNodeInstance[],\n  showCb: (\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) => void,\n  hideCb: (\n    context: AjfContext,\n    nodes: AjfNodeInstance[],\n    node: AjfNodeInstance,\n    branch?: number,\n  ) => void,\n) => {\n  // const branchChanged =\n  // nodeInstance.updateConditionalBranches(newFormValue);\n  updateConditionalBranches(nodeInstance, newFormValue);\n  // if (branchChanged) {\n  const verifiedBranch = nodeInstance.verifiedBranch;\n  nodeInstance.conditionalBranches.forEach((_condition, idx) => {\n    if (idx == verifiedBranch) {\n      showCb(newFormValue, nodes, nodeInstance, idx);\n    } else {\n      hideCb(newFormValue, nodes, nodeInstance, idx);\n    }\n  });\n  // }\n};\n\nconst updateFormulaMapEntry = (\n  nodeInstance: AjfNodeInstance,\n  newFormValue: any,\n  formGroup: BehaviorSubject<UntypedFormGroup | null>,\n) => {\n  if (isFieldInstance(nodeInstance)) {\n    const res = updateFormula(nodeInstance, newFormValue);\n    const fg = formGroup.getValue();\n    if (fg != null && res.changed) {\n      updateValidation(nodeInstance, newFormValue);\n      fg.controls[nodeInstanceCompleteName(nodeInstance)].setValue(res.value);\n    }\n  }\n};\n\nconst updateValidationMapEntry = (nodeInstance: AjfNodeInstance, newFormValue: any, supp: any) => {\n  if (isFieldInstance(nodeInstance)) {\n    newFormValue.$value = newFormValue[nodeInstanceCompleteName(nodeInstance)];\n    updateValidation(nodeInstance, newFormValue, supp);\n  }\n};\n\nconst updateWarningMapEntry = (nodeInstance: AjfNodeInstance, newFormValue: any) => {\n  if (isFieldInstance(nodeInstance)) {\n    updateWarning(nodeInstance, newFormValue);\n    if (\n      nodeInstance.warningResults != null &&\n      nodeInstance.warningResults.filter(warning => warning.result).length > 0\n    ) {\n      nodeInstance.warningTrigger.emit();\n    }\n  }\n};\n\nconst updateFilteredChoicesMapEntry = (nodeInstance: AjfNodeInstance, newFormValue: any) => {\n  if (isFieldWithChoicesInstance(nodeInstance)) {\n    updateFilteredChoices(nodeInstance, newFormValue);\n  }\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, OnDestroy, OnInit} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It rappresents the base field component, the first overlay of ajfFieldInstance.\n * It keeps a reference to the relative control of the form.\n * It manages the component update in conjunction with the instance update.\n * It manages the warningTrigger of the instance by displaying a confirmation\n * popup when an alert event is triggered.\n * @export\n * @abstract\n * @class AjfBaseFieldComponent\n * @template T\n */\n@Directive()\nexport abstract class AjfBaseFieldComponent<T extends AjfFieldInstance = AjfFieldInstance>\n  implements OnDestroy, OnInit\n{\n  private _instance: T | undefined;\n  get instance(): T | undefined {\n    return this._instance;\n  }\n  set instance(instance: T | undefined) {\n    if (instance !== this._instance) {\n      this._instance = instance;\n      this._setUpInstanceUpdate();\n      this._onInstanceChange();\n    }\n  }\n\n  private _control: Observable<UntypedFormControl | null>;\n  get control(): Observable<UntypedFormControl | null> {\n    return this._control;\n  }\n\n  private _warningTriggerSub: Subscription = Subscription.EMPTY;\n  private _instanceUpdateSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    protected _changeDetectorRef: ChangeDetectorRef,\n    private _service: AjfFormRendererService,\n    private _warningAlertService: AjfWarningAlertService,\n  ) {\n    this._control = defer(() =>\n      this._service\n        .getControl(this.instance)\n        .pipe(map(ctrl => (ctrl || new UntypedFormControl()) as UntypedFormControl)),\n    ) as Observable<UntypedFormControl | null>;\n  }\n\n  ngOnInit(): void {\n    if (this.instance != null) {\n      this._warningTriggerSub = this.instance.warningTrigger\n        .pipe(\n          withLatestFrom(this.control),\n          filter(([_, ctrl]) => ctrl != null),\n        )\n        .subscribe(([_, ctrl]) => {\n          if (this.instance == null || this.instance.warningResults == null) {\n            return;\n          }\n          const control = ctrl as UntypedFormControl;\n          const s = this._warningAlertService\n            .showWarningAlertPrompt(\n              this.instance.warningResults.filter(w => w.result).map(w => w.warning),\n            )\n            .subscribe({\n              next: (r: AjfFieldWarningAlertResult) => {\n                if (r.result) {\n                  control!.setValue(null);\n                }\n              },\n              error: (_e: any) => {\n                if (s) {\n                  s.unsubscribe();\n                }\n              },\n              complete: () => {\n                if (s) {\n                  s.unsubscribe();\n                }\n              },\n            });\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._warningTriggerSub.unsubscribe();\n    this._instanceUpdateSub.unsubscribe();\n  }\n  // TODO: why?\n  protected _onInstanceChange(): void {}\n\n  private _setUpInstanceUpdate(): void {\n    this._instanceUpdateSub.unsubscribe();\n    if (this._instance != null) {\n      this._instanceUpdateSub = this._instance.updatedEvt.subscribe(() => {\n        if (this._changeDetectorRef) {\n          try {\n            this._changeDetectorRef.detectChanges();\n          } catch (e) {}\n        }\n      });\n    } else {\n      this._instanceUpdateSub = Subscription.EMPTY;\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It casts a boolean as number.\n */\n@Pipe({name: 'ajfBoolToInt'})\nexport class AjfBoolToIntPipe implements PipeTransform {\n  transform(value: boolean): number {\n    return value ? 1 : 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a Date.\n * if date is 'today' it return a now Date.\n */\n@Pipe({name: 'ajfDateValue'})\nexport class AjfDateValuePipe implements PipeTransform {\n  transform(date: Date | 'today' | undefined): Date | null {\n    if (date == null) {\n      return null;\n    }\n    return date === 'today' ? new Date() : (date as Date);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport {format} from 'date-fns';\n\n/**\n * It formats Date with 'yyyy-MM-dd'\n * @param date the date to format\n * @return the format date\n */\n@Injectable()\n@Pipe({name: 'ajfDateValueString'})\nexport class AjfDateValueStringPipe implements PipeTransform {\n  transform(date: Date | 'today' | undefined): string | undefined {\n    if (date == null) {\n      return undefined;\n    }\n    const dateObj = date === 'today' ? new Date() : date;\n    return format(dateObj, 'yyyy-MM-dd');\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfError} from '@ajf/core/models';\n\n/**\n * This class will define an Ajf invalid field definition error\n */\nexport class AjfInvalidFieldDefinitionError extends AjfError {\n  override get name(): string {\n    return 'AjfInvalidFieldDefinitionError';\n  }\n\n  constructor(message?: string) {\n    super(message);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\n\n/**\n * It returns true if AjfFieldWithChoices is forceExpanded and filteredChoices length is\n * less than equal threshold.\n */\n@Pipe({name: 'ajfExpandFieldWithChoices'})\nexport class AjfExpandFieldWithChoicesPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, threshold: number): boolean {\n    return (\n      !instance.node.forceNarrow &&\n      (instance.node.forceExpanded ||\n        (instance.filteredChoices && instance.filteredChoices.length <= threshold))\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n/**\n * It Applies a viewContainerRef to a component selector.\n */\n// eslint-disable-next-line\n@Directive({selector: '[ajf-field-host]'})\nexport class AjfFieldHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) {}\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\n\n/**\n * It is a base wrapper of every ajfField.\n * It manages what type of component to load(editable component or readonly component)\n * by input instance.\n *\n * @export\n * @abstract\n * @class AjfFormField\n */\n@Directive()\nexport abstract class AjfFormField implements AfterViewInit, OnDestroy, OnInit {\n  @ViewChild(AjfFieldHost) fieldHost!: AjfFieldHost;\n\n  private _instance: AjfFieldInstance | undefined;\n  get instance(): AjfFieldInstance | undefined {\n    return this._instance;\n  }\n  @Input()\n  set instance(instance: AjfFieldInstance | undefined) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      if (this._instance != null && this._instance.node && !this._instance.node.editable) {\n        this._readonly = true;\n      }\n      if (this._init) {\n        this._loadComponent();\n      }\n    }\n  }\n\n  /**\n   * if true mean that component need to be a readonly component\n   *\n   * @private\n   */\n  private _readonly: boolean = false;\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  @Input()\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    if (\n      !this._readonly &&\n      this._instance != null &&\n      this._instance.node &&\n      !this._instance.node.editable\n    ) {\n      this._readonly = true;\n    }\n    if (this._init) {\n      this._loadComponent();\n    }\n  }\n\n  private _componentInstance: AjfBaseFieldComponent<AjfFieldInstance> | undefined;\n  private _init: boolean = false;\n\n  protected abstract componentsMap: AjfFieldComponentsMap;\n  private _updatedSub = Subscription.EMPTY;\n\n  constructor(private _cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._loadComponent();\n  }\n\n  ngOnDestroy(): void {\n    this._updatedSub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this._init = true;\n    this._loadComponent();\n  }\n\n  /**\n   * It builds a new AjfField component by fieldType and binds it to the fieldHost.\n   *\n   * @private\n   * @return {*}\n   */\n  private _loadComponent(): void {\n    this._updatedSub.unsubscribe();\n    this._updatedSub = Subscription.EMPTY;\n    if (this._instance == null || this.fieldHost == null) {\n      return;\n    }\n\n    const vcr = this.fieldHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.componentsMap[this._instance.node.fieldType];\n    if (componentDef == null) {\n      return;\n    }\n    const component =\n      this._readonly && componentDef.readOnlyComponent\n        ? componentDef.readOnlyComponent\n        : componentDef.component;\n    try {\n      const componentRef = vcr.createComponent(component);\n      this._componentInstance = componentRef.instance;\n      this._componentInstance.instance = this._instance;\n      const componentInstance = this._componentInstance as any;\n\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            componentInstance[key] = componentDef.inputs![key];\n          }\n        });\n      }\n      this._instance.updatedEvt.subscribe(() => this._cdr.markForCheck());\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './interface/fields/field-type';\n\n/**\n *\n * @return a string that indetified the icon relative to type\n * ex. ajf-icon-field-string, ajf-icon-field-number, ajf-icon-field-text ecc.\n */\nexport function fieldIconName(type: AjfFieldType): string {\n  return `ajf-icon-field-${\n    typeof AjfFieldType[type] === 'string' ? AjfFieldType[type].toLowerCase() : type\n  }`;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {fieldIconName} from './field-utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\n\n/**\n *\n *\n * @param Field.\n *\n * @return An icon class name relative to the AjfType.\n */\n@Pipe({name: 'ajfFieldIcon'})\nexport class AjfFieldIconPipe implements PipeTransform {\n  transform(field: AjfField | AjfFieldType): string {\n    return fieldIconName(typeof field === 'number' ? field : field.fieldType);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfValidationResult} from './interface/validation/validation-results';\n\n/**\n * It returns true if all validationResults are true.\n *\n */\n@Pipe({name: 'ajfFieldIsValid'})\nexport class AjfFieldIsValidPipe implements PipeTransform {\n  transform(validationResults?: AjfValidationResult[]): boolean {\n    return validationResults != null && validationResults.filter(f => !f.result).length === 0;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFieldInstance} from './interface/fields-instances/field-instance';\nimport {AjfFieldComponentsMap} from './interface/fields/field-components-map';\nimport {AjfFieldInstanceCreate} from './utils/fields-instances/create-field-instance';\nimport {componentsMap} from './utils/fields/fields-map';\n\nexport abstract class AjfFieldService {\n  readonly componentsMap: AjfFieldComponentsMap = componentsMap;\n\n  /**\n   * It allows to register custom fields inside an Ajf form.\n   * @param fieldType is the field type of the custom field. Values from 0 to 100 are reserved to\n   *     Ajf.\n   * @param component It is the custom component that implement an AjfBaseFieldComponent.\n   * @param readOnlyComponent It is the readonly custom component that implement an\n   *     AjfBaseFieldComponent.\n   * @createInstance The signature and return type of the method used for create Instance.\n   * @isFieldWithChoice If true, the field has choices.\n   */\n  registerCustomField(field: {\n    fieldType: number;\n    component: Type<AjfBaseFieldComponent>;\n    readOnlyComponent?: Type<AjfBaseFieldComponent>;\n    createInstance?: (instance: AjfFieldInstanceCreate, context: AjfContext) => AjfFieldInstance;\n    isFieldWithChoice?: boolean;\n  }): void {\n    const {fieldType, component} = field;\n    if (fieldType < 100) {\n      throw new Error('Invalid custom field type, it must be greater than 100');\n    }\n    if (component == null) {\n      throw new Error('Invalid custom field component');\n    }\n    this.componentsMap[fieldType] = field;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * It is used in AjfBaseFieldComponent, is a partial of AjfWarningResult.\n * It rappresents the result of warning condition.\n *\n * @export\n * @interface AjfFieldWarningAlertResult\n */\n// TODO why not use AjfWarningResult?\nexport interface AjfFieldWarningAlertResult {\n  result: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It rappresents the base componet for every ajf fields with choiches.\n *\n * @export\n * @abstract\n * @class AjfFieldWithChoicesComponent\n * @template T\n */\nexport abstract class AjfFieldWithChoicesComponent<T> extends AjfBaseFieldComponent<\n  AjfFieldWithChoicesInstance<T>\n> {\n  private _searchThreshold: number = 6;\n\n  /**\n   * It represents the threshold below which the choices are displayed\n   * in expanded mode.\n   *\n   * @readonly\n   */\n  get searchThreshold(): number {\n    return this._searchThreshold;\n  }\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    warningAlertService: AjfWarningAlertService,\n    searchThreshold: number,\n  ) {\n    super(cdr, service, warningAlertService);\n    if (searchThreshold != null) {\n      this._searchThreshold = searchThreshold;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {AjfFieldWarningAlertResult} from './field-warning-alert-result';\n\nexport interface AjfWarningAlertService {\n  showWarningAlertPrompt(warnings: string[]): Observable<AjfFieldWarningAlertResult>;\n}\n\nexport const AJF_WARNING_ALERT_SERVICE = new InjectionToken<AjfWarningAlertService>(\n  'ajf-warning-alert-service',\n);\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It allows the loading of files inside an AjfForm through an AjfFileInput.\n *\n * @export\n * @class AjfFileFieldComponent\n */\n@Component({\n  selector: 'ajf-file-field',\n  templateUrl: 'file-field.html',\n  styleUrls: ['file-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFileFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-file-input *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-file-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfPageSlider, AjfPageSliderOrientation} from '@ajf/core/page-slider';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport {UntypedFormGroup} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {delayWhen, map, startWith, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfFormField} from './field';\nimport {AjfFormInitStatus, AjfFormRendererService} from './form-renderer';\n\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfForm} from './interface/forms/form';\nimport {AjfNodeGroupInstance} from './interface/nodes-instances/node-group-instance';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {AjfRepeatingSlideInstance} from './interface/slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from './interface/slides-instances/slide-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\nexport interface AjfFormActionEvent {\n  source: AjfFormRenderer;\n  value: Object;\n  action: string;\n}\n\n@Directive()\nexport abstract class AjfFormRenderer implements AfterViewChecked, AfterViewInit, OnDestroy {\n  /**\n   * formGroup is an Observable FormGroup type\n   */\n  readonly formGroup: Observable<UntypedFormGroup | null>;\n\n  /**\n   * slides is an observable AjfSlide array type\n   */\n  readonly slides: Observable<AjfSlideInstance[]>;\n\n  readonly slidesNum: Observable<number>;\n  readonly errors: Observable<number>;\n  readonly formIsInit: Observable<boolean>;\n\n  /**\n   * The available ajf field types.\n   */\n  readonly ajfFieldTypes = AjfFieldType;\n\n  @Input() title: string = '';\n\n  private _orientationChange: EventEmitter<AjfPageSliderOrientation> =\n    new EventEmitter<AjfPageSliderOrientation>();\n  @Output()\n  readonly orientationChange: Observable<AjfPageSliderOrientation> = this\n    ._orientationChange as Observable<AjfPageSliderOrientation>;\n\n  private _saveDisabled: boolean = false;\n  get saveDisabled(): boolean {\n    return this._saveDisabled;\n  }\n  @Input()\n  set saveDisabled(saveDisabled: boolean) {\n    this._saveDisabled = coerceBooleanProperty(saveDisabled);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasStartMessage = false;\n  get hasStartMessage(): boolean {\n    return this._hasStartMessage;\n  }\n  @Input()\n  set hasStartMessage(hasStartMessage: boolean) {\n    this._hasStartMessage = coerceBooleanProperty(hasStartMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hasEndMessage = false;\n  get hasEndMessage(): boolean {\n    return this._hasEndMessage;\n  }\n  @Input()\n  set hasEndMessage(hasEndMessage: boolean) {\n    this._hasEndMessage = coerceBooleanProperty(hasEndMessage);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideTopToolbar = false;\n  get hideTopToolbar(): boolean {\n    return this._hideTopToolbar;\n  }\n  @Input()\n  set hideTopToolbar(hideTopToolbar: boolean) {\n    this._hideTopToolbar = coerceBooleanProperty(hideTopToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideBottomToolbar = false;\n  get hideBottompToolbar(): boolean {\n    return this._hideBottomToolbar;\n  }\n  @Input()\n  set hideBottomToolbar(hideBottomToolbar: boolean) {\n    this._hideBottomToolbar = coerceBooleanProperty(hideBottomToolbar);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _hideNavigationButtons = false;\n  get hideNavigationButtons(): boolean {\n    return this._hideNavigationButtons;\n  }\n  @Input()\n  set hideNavigationButtons(hideNavigationButtons: boolean) {\n    this._hideNavigationButtons = coerceBooleanProperty(hideNavigationButtons);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _fixedOrientation = false;\n  get fixedOrientation(): boolean {\n    return this._fixedOrientation;\n  }\n  @Input()\n  set fixedOrientation(fixedOrientation: boolean) {\n    this._fixedOrientation = coerceBooleanProperty(fixedOrientation);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _readonly = false;\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  @Input()\n  set readonly(readonly: boolean) {\n    this._readonly = coerceBooleanProperty(readonly);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _orientation: AjfPageSliderOrientation = 'horizontal';\n  get orientation(): AjfPageSliderOrientation {\n    return this._orientation;\n  }\n  @Input()\n  set orientation(orientation: AjfPageSliderOrientation) {\n    if (orientation !== 'horizontal' && orientation !== 'vertical') {\n      return;\n    }\n    if (orientation !== this._orientation) {\n      this._orientation = orientation;\n      this._changeDetectorRef.markForCheck();\n      this._orientationChange.emit(this._orientation);\n    }\n  }\n\n  @ViewChild('formSlider', {static: false}) formSlider!: AjfPageSlider;\n  @ViewChildren(AjfFormField) fields!: QueryList<AjfFormField>;\n\n  private _errorMoveEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Is a private subject structure that contains next and prev\n   */\n  private _errorPositions: Observable<number[]>;\n\n  /**\n   * is a private AjfForm\n   */\n  private _form: AjfForm | undefined;\n\n  private _init = false;\n\n  private _nextSlideSubscription: Subscription = Subscription.EMPTY;\n  private _errorMoveSubscription: Subscription = Subscription.EMPTY;\n\n  private _formAction: EventEmitter<AjfFormActionEvent> = new EventEmitter<AjfFormActionEvent>();\n  @Output()\n  readonly formAction: Observable<AjfFormActionEvent> = this\n    ._formAction as Observable<AjfFormActionEvent>;\n\n  @Input()\n  set form(form: AjfForm) {\n    this._form = form;\n\n    if (this._init) {\n      this._rendererService.setForm(this._form);\n    }\n  }\n\n  /**\n   * this constructor will init current formula by ajfBuilderService\n   */\n  constructor(\n    private _rendererService: AjfFormRendererService,\n    protected _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    this.formGroup = _rendererService.formGroup;\n    this.slides = _rendererService.nodesTree;\n    this._errorPositions = _rendererService.errorPositions;\n    this.errors = _rendererService.errors;\n    this.slidesNum = _rendererService.slidesNum;\n    this.formIsInit = _rendererService.formInitEvent.pipe(\n      map(e => e === AjfFormInitStatus.Complete),\n    );\n  }\n\n  /**\n   * this method will scroll to next error received by subscribe\n   */\n  goToNextError(): void {\n    this._errorMoveEvent.emit(true);\n  }\n  /**\n   * this method will scroll to prev error received by subscribe\n   */\n  goToPrevError(): void {\n    this._errorMoveEvent.emit(false);\n  }\n\n  /**\n   * this method will add group\n   */\n  addGroup(nodeGroup: AjfNodeGroupInstance | AjfSlideInstance | AjfRepeatingSlideInstance): void {\n    let s = this._rendererService\n      .addGroup(nodeGroup as AjfNodeGroupInstance)\n      .pipe(delayWhen(() => this.formSlider.pageScrollFinish))\n      .subscribe({\n        next: r => {\n          if (r && this.formSlider != null) {\n            this.formSlider.slide({dir: 'down'});\n          }\n        },\n        error: _e => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n        complete: () => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n      });\n  }\n\n  /**\n   * this method will remove group\n   */\n  removeGroup(\n    nodeGroup: AjfNodeGroupInstance | AjfSlideInstance | AjfRepeatingSlideInstance,\n  ): void {\n    let s = this._rendererService\n      .removeGroup(nodeGroup as AjfNodeGroupInstance)\n      .pipe(delayWhen(() => this.formSlider.pageScrollFinish))\n      .subscribe({\n        next: r => {\n          if (r && this.formSlider != null) {\n            this.formSlider.slide({dir: 'up'});\n          }\n        },\n        error: _e => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n        complete: () => {\n          if (s) {\n            s.unsubscribe();\n          }\n        },\n      });\n  }\n\n  onSave(_evt: any): void {\n    this._formAction.emit({\n      source: this,\n      action: 'save',\n      value: this._rendererService.getFormValue(),\n    });\n  }\n\n  onFormAction(_evt: any, action: string) {\n    this._formAction.emit({\n      source: this,\n      value: this._rendererService.getFormValue(),\n      action: action,\n    });\n  }\n\n  /**\n   * this method will set current form in rederer service when init form\n   */\n  ngAfterViewInit(): void {\n    if (this._form != null) {\n      this._rendererService.setForm(this._form);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (!this._init && this.formSlider != null) {\n      this._init = true;\n\n      this._errorMoveSubscription = (<Observable<boolean>>this._errorMoveEvent)\n        .pipe(withLatestFrom(this._errorPositions))\n        .subscribe(([move, errs]) => {\n          const currentPosition = this.formSlider.currentPage - +this.hasStartMessage + 1;\n          if (errs == null) {\n            return;\n          }\n          const errors = errs as number[];\n\n          let found = false;\n          let prevIdx = -1;\n          let nextIdx = -1;\n          let idx = 0;\n          let errorsLen = errors.length;\n          while (!found && idx < errorsLen) {\n            if (errors[idx] == currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx < errorsLen - 1 ? idx + 1 : 0;\n            } else if (errors[idx] > currentPosition) {\n              found = true;\n              prevIdx = idx > 0 ? idx - 1 : errorsLen - 1;\n              nextIdx = idx;\n            }\n            idx++;\n          }\n          if (!found) {\n            prevIdx = errorsLen - 1;\n            nextIdx = 0;\n          }\n\n          this.formSlider.slide({\n            to: move ? errors[nextIdx] - 1 : errors[prevIdx] - 1,\n          });\n          this._changeDetectorRef.detectChanges();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._nextSlideSubscription.unsubscribe();\n    this._errorMoveSubscription.unsubscribe();\n    this._orientationChange.complete();\n    this._errorMoveEvent.complete();\n    this._formAction.complete();\n  }\n\n  scrollToSlide(slide: AjfSlideInstance): void {\n    let scrollToPos = slide.position - 1;\n    if (isRepeatingSlideInstance(slide)) {\n      scrollToPos = scrollToPos - 1 + (slide as AjfRepeatingSlideInstance).reps;\n    }\n    this.formSlider.slide({to: scrollToPos});\n  }\n\n  /**\n   * Return a repeating slide repetition index (eg. 2/5)\n   * @param slide The repeating slide\n   * @param currentPage The formslider current page number\n   * @returns The rep slide index string\n   */\n  getRepeatingSlideRepIndex(\n    slide: AjfSlideInstance,\n    currentPage: number,\n  ): Observable<string | null> {\n    return this.formSlider.pageScrollFinish.pipe(\n      startWith(null),\n      map(() => {\n        if (isRepeatingSlideInstance(slide)) {\n          const repSlide = slide as AjfRepeatingSlideInstance;\n          const repsTotal = repSlide.reps;\n          let currentRep = repsTotal;\n          if (currentPage + 1 >= slide.position && currentPage + 1 < slide.position + repsTotal) {\n            currentRep = currentPage + 2 - slide.position;\n          }\n          return `(${currentRep}/${repsTotal})`;\n        }\n        return null;\n      }),\n    );\n  }\n\n  /**\n   * True if the slide toggle should be checked\n   * @param slide The repeating slide\n   * @param currentPage The formslider current page number\n   * @returns The checked state\n   */\n  isSlideToggleChecked(slide: AjfSlideInstance, currentPage: number): boolean {\n    let isChecked = slide.position === currentPage + 1;\n    if (isRepeatingSlideInstance(slide)) {\n      const repSlide = slide as AjfRepeatingSlideInstance;\n      isChecked =\n        currentPage + 1 >= repSlide.position && repSlide.position + repSlide.reps > currentPage + 1;\n    }\n\n    return isChecked;\n  }\n\n  orientationChangeHandler(orientation: AjfPageSliderOrientation): void {\n    this.orientation = orientation;\n  }\n\n  trackNodeById(_: number, node: AjfNodeInstance): string {\n    return nodeInstanceCompleteName(node);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfMultipleChoiceField} from '../../interface/fields/multiple-choice-field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is a MultipleChoice.\n */\nexport function isMultipleChoiceField<T = any>(\n  field: AjfField,\n): field is AjfMultipleChoiceField<T> {\n  return field.fieldType === AjfFieldType.MultipleChoice;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfSingleChoiceField} from '../../interface/fields/single-choice-field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is a SingleChoice.\n */\nexport function isSingleChoiceField<T = any>(field: AjfField): field is AjfSingleChoiceField<T> {\n  return field.fieldType === AjfFieldType.SingleChoice;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfContext,\n  buildStringIdentifier,\n  buildStringIdentifierOpts,\n  BuildStringIdentifierOpts,\n} from '@ajf/core/common';\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfForm} from '../../interface/forms/form';\nimport {isFieldWithChoices} from '../fields/is-field-with-choices';\nimport {isMultipleChoiceField} from '../fields/is-multiple-choice-field';\nimport {isSingleChoiceField} from '../fields/is-single-choice-field';\nimport {flattenNodes} from '../nodes/flatten-nodes';\nimport {isField} from '../nodes/is-field';\n\n/**\n * It builds a string that contains information preview about the form and its context.\n */\nexport const buildFormStringIdentifier = (\n  form: AjfForm,\n  context: AjfContext,\n  opts?: BuildStringIdentifierOpts,\n): string => {\n  if (form == null) {\n    return '';\n  }\n  const stringIdentifier = form.stringIdentifier || [];\n  if (stringIdentifier.length === 0) {\n    return '';\n  }\n  const fields = flattenNodes(form.nodes).filter(\n    n => isField(n) && isFieldWithChoices(n),\n  ) as AjfFieldWithChoices<unknown>[];\n  if (fields.length > 0) {\n    context = {...context};\n    fields.forEach(field => {\n      const value = context[field.name];\n      if (value == null) {\n        return;\n      }\n      if (isSingleChoiceField(field)) {\n        const choice = field.choicesOrigin.choices.find(c => c.value === value);\n        if (choice == null) {\n          return;\n        }\n        context[field.name] = choice.label;\n      } else if (isMultipleChoiceField(field) && Array.isArray(value) && value.length > 0) {\n        const strings = buildStringIdentifierOpts(opts);\n        const choices = field.choicesOrigin.choices.filter(c => value.indexOf(c.value) > -1);\n        context[field.name] = choices.map(c => c.label).join(strings.valuesDivider);\n      }\n    });\n  }\n  return buildStringIdentifier(stringIdentifier, context, opts);\n};\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, BuildStringIdentifierOpts} from '@ajf/core/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfForm} from './interface/forms/form';\nimport {buildFormStringIdentifier} from './utils/forms/build-form-string-identifier';\n\n/**\n * it returns a form string identifier.\n *\n * @export\n * @class AjfFormStringIdentifierPipe\n */\n@Pipe({name: 'ajfFormStringIdentifier'})\nexport class AjfFormStringIdentifierPipe implements PipeTransform {\n  transform(form: AjfForm, context: AjfContext, opts?: BuildStringIdentifierOpts): string {\n    return buildFormStringIdentifier(form, context, opts);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\n\n/**\n * It filters the type of ctrl.\n * return null or a valid AjfTableFormControl.\n *\n * @export\n * @class AjfGetTableCellControlPipe\n */\n@Pipe({name: 'ajfGetTableCellControl'})\nexport class AjfGetTableCellControlPipe implements PipeTransform {\n  transform(ctrl: null | string | AjfTableFormControl): AjfTableFormControl | null {\n    if (ctrl == null || typeof ctrl === 'string') {\n      return null;\n    }\n    return ctrl as AjfTableFormControl;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * It allows the loading of image url inside an AjfForm.\n *\n * @export\n * @class AjfImageFieldComponent\n */\n@Component({\n  selector: 'ajf-image-field',\n  templateUrl: 'image-field.html',\n  styleUrls: ['image-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfImageFieldComponent extends AjfBaseFieldComponent {\n  readonly imageUrl: Observable<SafeResourceUrl | null>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as UntypedFormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.imageUrl = fileStream.pipe(\n      map(file => {\n        if (file.content && file.content.length) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.content);\n        } else if (file.url && file.url.length) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.url);\n        }\n        return null;\n      }),\n    );\n  }\n}\n","<ajf-file-input *ngIf=\"control|async as ctrl\" accept=\"image/*\" [formControl]=\"ctrl!\">\n  <div ajfFilePreview class=\"ajf-image-preview\">\n    <img [src]=\"imageUrl|async\">\n  </div>\n</ajf-file-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It increments the value parameter by increment offset parameter.\n *\n * @export\n * @class AjfIncrementPipe\n */\n@Pipe({name: 'ajfIncrement'})\nexport class AjfIncrementPipe implements PipeTransform {\n  transform(value: number, increment: number = 1): number {\n    return value + increment;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfTableCell} from './interface/fields/table-field';\n\n/**\n * it checks if the cell parameter is an editable AjfTableCell.\n *\n * @export\n * @class AjfIsCellEditablePipe\n */\n@Pipe({name: 'ajfIsCellEditable'})\nexport class AjfIsCellEditablePipe implements PipeTransform {\n  transform(cell: string | AjfTableCell): boolean {\n    if (cell == null || typeof cell === 'string') {\n      return false;\n    }\n    return cell.editable === true;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isFieldInstance} from './utils/nodes-instances/is-field-instance';\n\n/**\n * It checks if the AjfNodeInstance parameter is an Formula AjfField.\n *\n * @export\n * @class AjfIsReadonlyInputFieldPipe\n */\n@Pipe({name: 'ajfIsReadonlyInputField'})\nexport class AjfIsReadonlyInputFieldPipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isFieldInstance(instance) && instance.node.fieldType === AjfFieldType.Formula;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {isRepeatingSlideInstance} from './utils/nodes-instances/is-repeating-slide-instance';\n\n/**\n * It checks if the AjfNodeInstance parameter is an isRepeatingSlideInstance.\n *\n * @export\n * @class AjfIsRepeatingSlideInstancePipe\n */\n@Pipe({name: 'ajfIsRepeatingSlideInstance'})\nexport class AjfIsRepeatingSlideInstancePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): boolean {\n    return isRepeatingSlideInstance(instance);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfNodeInstance} from './interface/nodes-instances/node-instance';\nimport {nodeInstanceCompleteName} from './utils/nodes-instances/node-instance-complete-name';\n\n/**\n * It returns a completeName of AjfNodeInstance paramenter.\n *\n * @export\n * @class AjfNodeCompleteNamePipe\n */\n@Pipe({name: 'ajfNodeCompleteName'})\nexport class AjfNodeCompleteNamePipe implements PipeTransform {\n  transform(instance: AjfNodeInstance): string {\n    return instance ? nodeInstanceCompleteName(instance) : '';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a array of numbers.\n * The numbers are incremental by step.\n *\n * @export\n * @class AjfRangePipe\n */\n@Pipe({name: 'ajfRange'})\nexport class AjfRangePipe implements PipeTransform {\n  transform(size: number = 0, start: number = 1, step: number = 1): number[] {\n    const range: number[] = [];\n    for (let length = 0; length < size; ++length) {\n      range.push(start);\n      start += step;\n    }\n    return range;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseFieldComponent} from './base-field';\n\n/**\n * It is an AjfBaseFieldComponent where the type can be only text or number.\n * Type is text by default.\n *\n * @export\n * @abstract\n * @class AjfInputFieldComponent\n */\nexport abstract class AjfInputFieldComponent extends AjfBaseFieldComponent {\n  type: 'text' | 'number' = 'text';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfInputFieldComponent as CoreComponent} from './input-field';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * this component show the control value inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-field',\n  templateUrl: 'read-only-field.html',\n  styleUrls: ['read-only-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyFieldComponent extends CoreComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<span *ngIf=\"control|async as ctrl\">{{ctrl.value}}</span>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {parse, toDate} from 'date-fns';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {AjfInputFieldComponent as CoreComponent} from './input-field';\n\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\nimport {TranslocoService} from '@ajf/core/transloco';\nimport {DatePipe} from '@angular/common';\n\n/**\n * this component show the control value inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyDateFieldComponent\n */\n@Component({\n  selector: 'ajf-read-date-only-field',\n  templateUrl: 'read-only-date-field.html',\n  styleUrls: ['read-only-date-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyDateFieldComponent extends CoreComponent {\n  readonly date: Observable<string>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    private _ts: TranslocoService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n\n    this.date = this.control.pipe(\n      filter(control => control != null),\n      map(ctrl => {\n        if (ctrl) {\n          const val = ctrl.value;\n          if (val == null) {\n            return '';\n          }\n\n          let dt = null;\n          if (typeof val === 'string') {\n            dt = parse(val, 'yyyy-MM-dd', new Date());\n          } else {\n            dt = toDate(val);\n          }\n          if (!isNaN(dt.valueOf())) {\n            const datePipe = new DatePipe(this._getCurrentLocale());\n            return datePipe.transform(dt, 'shortDate') as string;\n          }\n          return '';\n        }\n        return '';\n      }),\n    );\n  }\n\n  private _getCurrentLocale(): string {\n    const lang = this._ts.getActiveLang();\n    switch (lang) {\n      case 'ESP':\n        return 'es';\n      case 'FRA':\n        return 'fr';\n      case 'ITA':\n        return 'it';\n      case 'PRT':\n        return 'pt';\n      default:\n        return 'en';\n    }\n  }\n}\n","<span *ngIf=\"date|async as dateVal\">{{dateVal}}</span>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile, fileIcon} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to download the file contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyFileFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-file-field',\n  templateUrl: 'read-only-file-field.html',\n  styleUrls: ['read-only-file-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyFileFieldComponent extends AjfBaseFieldComponent {\n  readonly fileIcon: SafeResourceUrl;\n  readonly fileUrl: Observable<SafeResourceUrl | null>;\n  readonly fileName: Observable<string>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    this.fileIcon = domSanitizer.bypassSecurityTrustResourceUrl(fileIcon);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as UntypedFormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.fileUrl = fileStream.pipe(\n      map(file => {\n        if (file.content && file.content.length) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.content);\n        } else if (file.url && file.url.length && !file.deleteUrl) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.url);\n        }\n        return null;\n      }),\n    );\n    this.fileName = fileStream.pipe(map(file => file.name));\n  }\n}\n","<a *ngIf=\"fileUrl|async as fu ; else noFile\" [href]=\"fu\" [download]=\"fileName|async\" target=\"_blank\">\n  <img [src]=\"fileIcon\"> {{ fileName|async }}\n</a>\n<ng-template #noFile>\n  <div class=\"ajf-no-file-placeholder\"></div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the geolocation info: latitude and longitude\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyGeolocationFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-geolocation-field',\n  templateUrl: 'read-only-geolocation-field.html',\n  styleUrls: ['read-only-geolocation-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyGeolocationFieldComponent extends AjfBaseFieldComponent {\n  readonly latitude: Observable<string>;\n  readonly longitude: Observable<string>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n\n    const coordinates = this.control.pipe(\n      filter(control => control != null),\n      map(ctrl => {\n        let coords: string[] = [];\n        if (ctrl) {\n          const values = ctrl.value as string;\n          if (values && values.length) {\n            coords = values.split(',');\n          }\n        }\n        return coords;\n      }),\n    );\n\n    this.latitude = coordinates.pipe(map(coords => (coords && coords.length > 0 ? coords[0] : '')));\n\n    this.longitude = coordinates.pipe(\n      map(coords => (coords && coords.length > 1 ? coords[1] : '')),\n    );\n  }\n}\n","<ng-container *ngIf=\"control|async as ctrl\">\n  <div class=\"flex-container\">\n    <div class=\"flex-child\">\n      {{'Latitude'|transloco}}: {{latitude|async}}\n    </div>\n    <div class=\"flex-child\">\n      {{'Longitude'|transloco}}: {{longitude|async}}\n    </div>\n  </div>\n</ng-container>","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFile} from '@ajf/core/file-input';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable} from 'rxjs';\nimport {filter, map, shareReplay, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the image related to url contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyImageFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-image-field',\n  templateUrl: 'read-only-image-field.html',\n  styleUrls: ['read-only-image-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyImageFieldComponent extends AjfBaseFieldComponent {\n  readonly imageUrl: Observable<SafeResourceUrl | null>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n  ) {\n    super(cdr, service, was);\n    const fileStream = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as UntypedFormControl;\n        return control.valueChanges.pipe(startWith(control.value)) as Observable<AjfFile>;\n      }),\n      filter(value => value != null),\n      shareReplay(1),\n    );\n    this.imageUrl = fileStream.pipe(\n      map(file => {\n        if (file.content && file.content.length) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.content);\n        } else if (file.url && file.url.length) {\n          return domSanitizer.bypassSecurityTrustResourceUrl(file.url);\n        }\n        return null;\n      }),\n    );\n  }\n}\n","<img *ngIf=\"imageUrl|async as iu ; else noImage\" [src]=\"imageUrl|async\">\n<ng-template #noImage>\n  <div class=\"ajf-no-image-placeholder\"></div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFieldWithChoicesInstance} from './interface/fields-instances/field-with-choices-instance';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the values of AjfFieldWithChoicesInstance\n * contained in the control of the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlySelectFieldComponent\n */\n@Component({\n  templateUrl: 'read-only-select-field.html',\n  styleUrls: ['read-only-select-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlySelectFieldComponent extends AjfBaseFieldComponent<\n  AjfFieldWithChoicesInstance<String | number>\n> {\n  readonly multiple: Observable<boolean>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n\n    this.multiple = this.control.pipe(\n      filter(control => control != null),\n      map(\n        () => this.instance != null && this.instance.node.fieldType === AjfFieldType.MultipleChoice,\n      ),\n    );\n  }\n}\n","<ng-container *ngIf=\"control|async as ctrl\">\n    <ng-container *ngFor=\"let choice of instance!.filteredChoices; let idx = index\">\n        <ng-container *ngIf=\"multiple|async; else singleChoice\">\n            <span *ngIf=\"ctrl.value && ctrl.value?.indexOf(choice.value) > -1\">\n                {{choice.label|transloco}}{{ctrl.value[ctrl.value.length - 1] !== choice.value ? ', ': ''}}\n            </span>\n        </ng-container>\n        <ng-template #singleChoice>\n            <span *ngIf=\"ctrl.value === choice.value\">{{choice.label|transloco}}</span>\n        </ng-template>\n    </ng-container>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * It returns a string that indetifies if the value is even or odd.\n *\n * @export\n * @class AjfTableRowClass\n */\n@Pipe({name: 'ajfTableRowClass'})\nexport class AjfTableRowClass implements PipeTransform {\n  transform(value: number): string {\n    return value % 2 == 0 ? 'ajf-row-even' : 'ajf-row-odd';\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to shows the values contained in the controls of\n * the form inherited from AjfBaseFieldComponent with AjfTableFieldInstance.\n *\n * @export\n * @class AjfReadOnlyTableFieldComponent\n */\n@Component({\n  templateUrl: 'read-only-table-field.html',\n  styleUrls: ['read-only-table-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyTableFieldComponent extends AjfBaseFieldComponent<AjfTableFieldInstance> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<table *ngIf=\"instance\" class=\"ajf-table-field\">\n  <ng-container *ngIf=\"instance.node as node\">\n    <ng-container *ngFor=\"let columns of instance.controls; let row = index\">\n      <tr [ngClass]=\"row | ajfTableRowClass\">\n        <td>\n          <ng-container *ngIf=\"columns && columns.length > 0 && columns[0]\">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n          </ng-container>\n        </td>\n        <ng-container *ngIf=\"columns && columns.length > 1 && columns[1]\">\n          <td *ngFor=\"let c of columns[1]; let column = index\">\n            <ng-container *ngIf=\"row === 0; else controlCell\">\n              {{ c | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n            </ng-container>\n            <ng-template #controlCell>\n              <ng-container *ngIf=\"c|ajfGetTableCellControl as contr\">\n                <ng-container *ngIf=\"contr\">\n                  <span class=\"ajf-table-cell\"\n                    >{{ contr.control!.value | ajfTranslateIfString | ajfFormatIfNumber: '.0-2'\n                    }}</span\n                  >\n                </ng-container>\n              </ng-container>\n            </ng-template>\n          </td>\n        </ng-container>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HttpClient} from '@angular/common/http';\nimport {ChangeDetectorRef, Directive, Inject} from '@angular/core';\nimport {UntypedFormControl} from '@angular/forms';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Observable, of as obsOf} from 'rxjs';\nimport {catchError, filter, map, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\nexport type AjfVideoProvider = 'youtube' | 'vimeo';\n\ninterface VideoInfo {\n  provider: AjfVideoProvider;\n  id: string;\n}\n\n/**\n * It allows the loading of video(youtube or vimeo) url inside an AjfForm.\n *\n * @export\n * @class AjfVideoUrlFieldComponent\n */\n@Directive()\nexport class AjfVideoUrlFieldComponent extends AjfBaseFieldComponent {\n  readonly validUrl: Observable<boolean>;\n  readonly videoThumbnail: Observable<SafeResourceUrl>;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n    httpClient: HttpClient,\n  ) {\n    super(cdr, service, was);\n\n    const video = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => {\n        control = control as UntypedFormControl;\n        return control.valueChanges.pipe(startWith(control.value));\n      }),\n      filter(value => value != null),\n      map(value => getVideoProviderAndId(value as string)),\n    );\n    this.validUrl = video.pipe(map(v => v != null));\n    this.videoThumbnail = video.pipe(\n      filter(info => info != null),\n      switchMap(info => videoPreviewUrl(httpClient, info as VideoInfo)),\n      filter(url => url != null),\n      map(url => domSanitizer.bypassSecurityTrustResourceUrl(url as string)),\n    );\n  }\n}\n\n/**\n * it returns a url of thumbnail related to video or null.\n *\n * @param httpClient\n * @param video\n * @return {*}\n */\nfunction videoPreviewUrl(httpClient: HttpClient, video: VideoInfo): Observable<string | null> {\n  if (video.provider === 'youtube') {\n    return obsOf(`https://img.youtube.com/vi/${video.id}/default.jpg`);\n  }\n  if (video.provider === 'vimeo') {\n    return httpClient\n      .get<{thumbnail_url: string}>(\n        `https://vimeo.com/api/oembed.json?url=https://vimeo.com/${video.id}`,\n      )\n      .pipe(\n        map(response => response.thumbnail_url),\n        catchError(() => obsOf(null)),\n      ) as Observable<string | null>;\n  }\n  return obsOf('');\n}\n\n/**\n * It checks the url param, if url is an youtube o vimeo domain return\n * an videoInfo else null\n *\n * @param url\n * @return {*}\n */\nfunction getVideoProviderAndId(url: string): VideoInfo | null {\n  let provider: AjfVideoProvider | null = null;\n  let id: string | null = null;\n  if (/youtube|youtu\\.be|y2u\\.be|i.ytimg\\./.test(url)) {\n    provider = 'youtube';\n    id = getYouTubeVideoId(url);\n  } else if (/vimeo/.test(url)) {\n    provider = 'vimeo';\n    id = getVimeoVideoId(url);\n  }\n  if (provider == null || id == null) {\n    return null;\n  }\n  return {provider, id};\n}\n\n/**\n * it gets the id of vimeo video url.\n *\n * @param url\n * @return {*}\n */\nfunction getVimeoVideoId(url: string): string | null {\n  if (url.includes('#')) {\n    url = url.split('#')[0];\n  }\n  if (url.includes('?') && !url.includes('clip_id=')) {\n    url = url.split('?')[0];\n  }\n\n  let id: string | null = null;\n  let arr: string[];\n\n  const vimeoPipe = [\n    'https?://vimeo.com/[0-9]+$',\n    'https?://player.vimeo.com/video/[0-9]+$',\n    'https?://vimeo.com/channels',\n    'groups',\n    'album',\n  ].join('|');\n\n  const vimeoRegex = new RegExp(vimeoPipe, 'gim');\n\n  if (vimeoRegex.test(url)) {\n    arr = url.split('/');\n    if (arr && arr.length) {\n      id = arr.pop() as string;\n    }\n  } else if (/clip_id=/gim.test(url)) {\n    arr = url.split('clip_id=');\n    if (arr && arr.length) {\n      id = arr[1].split('&')[0];\n    }\n  }\n\n  return id;\n}\n\n/**\n * it gets the id of youtube video url.\n *\n * @param url\n * @return {*}\n */\nfunction getYouTubeVideoId(url: string): string | null {\n  const shortcode = /youtube:\\/\\/|https?:\\/\\/youtu\\.be\\/|http:\\/\\/y2u\\.be\\//g;\n  if (shortcode.test(url)) {\n    const shortcodeId = url.split(shortcode)[1];\n    return stripParameters(shortcodeId);\n  }\n  // /v/ or /vi/\n  const inlinev = /\\/v\\/|\\/vi\\//g;\n\n  if (inlinev.test(url)) {\n    const inlineId = url.split(inlinev)[1];\n    return stripParameters(inlineId);\n  }\n\n  // v= or vi=\n  const parameterV = /v=|vi=/g;\n\n  if (parameterV.test(url)) {\n    const arr = url.split(parameterV);\n    return arr[1].split('&')[0];\n  }\n\n  // v= or vi=\n  const parameterWebp = /\\/an_webp\\//g;\n\n  if (parameterWebp.test(url)) {\n    const webp = url.split(parameterWebp)[1];\n    return stripParameters(webp);\n  }\n\n  // embed\n  const embedReg = /\\/embed\\//g;\n\n  if (embedReg.test(url)) {\n    const embedId = url.split(embedReg)[1];\n    return stripParameters(embedId);\n  }\n\n  // ignore /user/username pattern\n  const usernameReg = /\\/user\\/([a-zA-Z0-9]*)$/g;\n\n  if (usernameReg.test(url)) {\n    return null;\n  }\n\n  // user\n  const userReg = /\\/user\\/(?!.*videos)/g;\n\n  if (userReg.test(url)) {\n    const elements = url.split('/');\n    return stripParameters(elements.pop() as string);\n  }\n\n  // attribution_link\n  const attrReg = /\\/attribution_link\\?.*v%3D([^%&]*)(%26|&|$)/;\n\n  if (attrReg.test(url)) {\n    return (url.match(attrReg) as string[])[1];\n  }\n\n  return null;\n}\n\nfunction stripParameters(url: string): string {\n  // Split parameters or split folder separator\n  if (url.includes('?')) {\n    return url.split('?')[0];\n  } else if (url.includes('/')) {\n    return url.split('/')[0];\n  }\n  return url;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {HttpClient} from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component allows you to show the video related to url contained in the control of\n * the form inherited from AjfBaseFieldComponent.\n *\n * @export\n * @class AjfReadOnlyVideoUrlFieldComponent\n */\n@Component({\n  selector: 'ajf-read-only-video-url-field',\n  templateUrl: 'read-only-video-url-field.html',\n  styleUrls: ['read-only-video-url-field.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfReadOnlyVideoUrlFieldComponent extends AjfVideoUrlFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n    httpClient: HttpClient,\n  ) {\n    super(cdr, service, was, domSanitizer, httpClient);\n  }\n}\n","<div *ngIf=\"control|async as ctrl\" class=\"ajf-video-thumbnail\">\n  <ng-container *ngIf=\"validUrl|async\">\n    <a target=\"_blank\" [href]=\"ctrl.value\">\n      <img *ngIf=\"videoThumbnail|async as thumb\" [src]=\"thumb\" class=\"\" alt=\"\">\n    </a>\n  </ng-container>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AjfTableFormControl} from './interface/forms/table-form-control';\n\n/**\n * It returns all visible columns of form table.\n *\n * @export\n * @class AjfTableVisibleColumnsPipe\n */\n// TODO helpful? currently not used\n@Pipe({name: 'ajfTableVisibleColumns'})\nexport class AjfTableVisibleColumnsPipe implements PipeTransform {\n  transform(instance: AjfTableFieldInstance): (string | number | AjfTableFormControl)[][] {\n    if (!instance.node.editable) {\n      const val = instance.value || [];\n      return instance.hideEmptyRows\n        ? val\n            .filter(col =>\n              col[1].reduce((prev: boolean, cur) => {\n                return prev || (cur != null && cur !== '' && cur !== 0 && cur !== '0');\n              }, false),\n            )\n            .map(v => [v[0], ...v[1]])\n        : val.map(v => [v[0], ...v[1]]);\n    }\n    return ((instance.controls as [string, (string | AjfTableFormControl)[]][]) || []).map(v => [\n      v[0],\n      ...v[1],\n    ]);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {AjfBaseSlideInstance} from './interface/slides-instances/base-slide-instance';\nimport {validSlide} from './utils/slides-instances/valid-slide';\n\n/**\n * It checks if idx is a valid index for slide parameter.\n *\n * @export\n * @class AjfValidSlidePipe\n */\n@Pipe({name: 'ajfValidSlide', pure: false})\nexport class AjfValidSlidePipe implements PipeTransform {\n  transform(slide: AjfBaseSlideInstance, idx: number): boolean {\n    if (idx == null || typeof idx !== 'number') {\n      return false;\n    }\n    return validSlide(slide, idx);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfFileInputModule} from '@ajf/core/file-input';\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {AjfAsFieldInstancePipe} from './as-field-instance';\nimport {AjfAsRepeatingSlideInstancePipe} from './as-repeating-slide-instance';\nimport {AjfBoolToIntPipe} from './bool-to-int';\nimport {AjfDateValuePipe} from './date-value';\nimport {AjfDateValueStringPipe} from './date-value-string';\nimport {AjfExpandFieldWithChoicesPipe} from './expand-input-with-choices';\nimport {AjfFieldHost} from './field-host';\nimport {AjfFieldIconPipe} from './field-icon';\nimport {AjfFieldIsValidPipe} from './field-is-valid';\nimport {AjfFileFieldComponent} from './file-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfFormStringIdentifierPipe} from './form-string-identifier';\nimport {AjfGetTableCellControlPipe} from './get-table-cell-control';\nimport {AjfImageFieldComponent} from './image-field';\nimport {AjfIncrementPipe} from './increment';\nimport {AjfIsCellEditablePipe} from './is-cell-editable';\nimport {AjfIsReadonlyInputFieldPipe} from './is-readonly-input-field';\nimport {AjfIsRepeatingSlideInstancePipe} from './is-repeating-slide';\nimport {AjfNodeCompleteNamePipe} from './node-complete-name';\nimport {AjfRangePipe} from './range';\nimport {AjfReadOnlyFieldComponent} from './read-only-field';\nimport {AjfReadOnlyDateFieldComponent} from './read-only-date-field';\nimport {AjfReadOnlyFileFieldComponent} from './read-only-file-field';\nimport {AjfReadOnlyGeolocationFieldComponent} from './read-only-geolocation-field';\nimport {AjfReadOnlyImageFieldComponent} from './read-only-image-field';\nimport {AjfReadOnlySelectFieldComponent} from './read-only-select-field';\nimport {AjfReadOnlyTableFieldComponent} from './read-only-table-field';\nimport {AjfReadOnlyVideoUrlFieldComponent} from './read-only-video-url-field';\nimport {AjfTableRowClass} from './table-row-class';\nimport {AjfTableVisibleColumnsPipe} from './table-visible-columns';\nimport {AjfValidSlidePipe} from './valid-slide';\nimport {AjfValidationService} from './validation-service';\nimport {AjfAsFieldInstanceErrorsPipe} from './as-validation-errors-string';\n\n@NgModule({\n  declarations: [\n    AjfAsFieldInstancePipe,\n    AjfAsFieldInstanceErrorsPipe,\n    AjfAsRepeatingSlideInstancePipe,\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfFileFieldComponent,\n    AjfFormStringIdentifierPipe,\n    AjfGetTableCellControlPipe,\n    AjfImageFieldComponent,\n    AjfIncrementPipe,\n    AjfIsCellEditablePipe,\n    AjfIsReadonlyInputFieldPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfReadOnlyFieldComponent,\n    AjfReadOnlyDateFieldComponent,\n    AjfReadOnlyFileFieldComponent,\n    AjfReadOnlyGeolocationFieldComponent,\n    AjfReadOnlyImageFieldComponent,\n    AjfReadOnlySelectFieldComponent,\n    AjfReadOnlyTableFieldComponent,\n    AjfReadOnlyVideoUrlFieldComponent,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  imports: [\n    AjfCommonModule,\n    AjfFileInputModule,\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AjfTranslocoModule,\n  ],\n  exports: [\n    AjfAsFieldInstancePipe,\n    AjfAsFieldInstanceErrorsPipe,\n    AjfAsRepeatingSlideInstancePipe,\n    AjfBoolToIntPipe,\n    AjfDateValuePipe,\n    AjfDateValueStringPipe,\n    AjfExpandFieldWithChoicesPipe,\n    AjfFieldHost,\n    AjfFieldIconPipe,\n    AjfFieldIsValidPipe,\n    AjfFileFieldComponent,\n    AjfFormStringIdentifierPipe,\n    AjfGetTableCellControlPipe,\n    AjfImageFieldComponent,\n    AjfIncrementPipe,\n    AjfIsCellEditablePipe,\n    AjfIsReadonlyInputFieldPipe,\n    AjfIsRepeatingSlideInstancePipe,\n    AjfNodeCompleteNamePipe,\n    AjfRangePipe,\n    AjfReadOnlyFieldComponent,\n    AjfReadOnlyDateFieldComponent,\n    AjfReadOnlyFileFieldComponent,\n    AjfReadOnlyGeolocationFieldComponent,\n    AjfReadOnlyImageFieldComponent,\n    AjfReadOnlySelectFieldComponent,\n    AjfReadOnlyTableFieldComponent,\n    AjfReadOnlyVideoUrlFieldComponent,\n    AjfTableRowClass,\n    AjfTableVisibleColumnsPipe,\n    AjfValidSlidePipe,\n  ],\n  providers: [AjfDateValueStringPipe, AjfFormRendererService, AjfValidationService],\n})\nexport class AjfFormsModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nexport const AJF_SEARCH_ALERT_THRESHOLD = new InjectionToken<number>('AJF_SEARCH_ALERT_THRESHOLD');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../../interface/attachments/attachments-origin';\n\nexport type AjfAttachmentsOriginCreate<T> = Pick<AjfAttachmentsOrigin<T>, 'name'> &\n  Partial<AjfAttachmentsOrigin<T>>;\n/**\n *  Create a attachmentsOrigin&lt;T&gt;, apply attachments defaults when it missing\n */\nexport function createAttachmentsOrigin<T>(\n  origin: AjfAttachmentsOriginCreate<T>,\n): AjfAttachmentsOrigin<T> {\n  return {\n    ...origin,\n    attachments: origin.attachments || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {\n  AjfAttachmentsOriginCreate,\n  createAttachmentsOrigin,\n} from '../utils/attachments/create-attachments-origin';\n\n/**\n *  Create an AjfAttachmentsOrigin by json schema, throw error if name isn't defined\n */\nexport class AjfAttachmentsOriginSerializer {\n  static fromJson(origin: Partial<AjfAttachmentsOrigin<any>>): AjfAttachmentsOrigin<any> {\n    if (origin.name == null) {\n      throw new Error('Malformed attachments origin');\n    }\n    return createAttachmentsOrigin(origin as AjfAttachmentsOriginCreate<any>);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\n\nexport type AjfChoicesOriginCreate<T> = Pick<AjfChoicesOrigin<any>, 'type' | 'name'> &\n  Partial<AjfChoicesOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply label and choices defaults when it missing\n */\nexport function createChoicesOrigin<T>(origin: AjfChoicesOriginCreate<T>): AjfChoicesOrigin<T> {\n  return {\n    ...origin,\n    type: origin.type, // TODO why?\n    label: origin.label || '',\n    choices: origin.choices || [],\n  } as AjfChoicesOrigin<T>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from '../utils/choices/create-choices-origin';\n/**\n *  Create an AjfChoicesOrigin by json schema, apply a default value for type and name\n */\nexport class AjfChoicesOriginSerializer {\n  static fromJson<T = any>(origin: Partial<AjfChoicesOrigin<T>>): AjfChoicesOrigin<T> {\n    return createChoicesOrigin<T>({\n      ...origin,\n      type: origin.type || 'fixed',\n      name: origin.name || '',\n    } as AjfChoicesOriginCreate<T>);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoices} from '../../interface/fields/field-with-choices';\nimport {AjfFieldCreate, createField} from './create-field';\n\nexport type AjfFieldWithChoicesCreate<T> = AjfFieldCreate &\n  Pick<AjfFieldWithChoices<T>, 'fieldType' | 'choicesOrigin'> &\n  Partial<AjfFieldWithChoices<T>>;\n/**\n * Create an AjfFieldWithChoice.\n * If choices is not defined apply empty array.\n * If forceExpanded is not defined apply false.\n * If forceNarrow is not defined apply false.\n */\nexport function createFieldWithChoices<T>(\n  field: AjfFieldWithChoicesCreate<T>,\n): AjfFieldWithChoices<T> {\n  const node = createField({...field});\n  return {\n    ...node,\n    ...field,\n    choices: field.choices || [],\n    forceExpanded: field.forceExpanded || false,\n    forceNarrow: field.forceNarrow || false,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../../interface/nodes/container-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfContainerNodeCreate = AjfNodeCreate & Partial<AjfContainerNode>;\n/**\n * It creates an AjfContainerNode by schema.\n * Extends AjfNode with nodes.\n * if nodes is not defined assign empty array\n */\nexport function createContainerNode(containerNode: AjfContainerNodeCreate): AjfContainerNode {\n  const node = createNode(containerNode);\n  return {\n    ...node,\n    nodes: containerNode.nodes || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfNodeCreate, createNode} from './create-node';\n\nexport type AjfRepeatingNodeCreate = AjfNodeCreate & Partial<AjfRepeatingNode>;\n/**\n * It creates an AjfRepeatingNode.\n * It extends AjfNode with formulaReps, minReps, maxReps by schema.\n * If minReps is not defined assign 1.\n * If maxReps is not defined assign 0.\n */\nexport function createRepeatingNode(repeatingNode: AjfRepeatingNodeCreate): AjfRepeatingNode {\n  const node = createNode(repeatingNode);\n  return {\n    ...repeatingNode,\n    ...node,\n    minReps: repeatingNode.minReps != null ? repeatingNode.minReps : 1,\n    maxReps: repeatingNode.maxReps != null ? repeatingNode.maxReps : 0,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../../interface/nodes/node-group';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfContainerNodeCreate, createContainerNode} from './create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from './create-repeating-node';\n\nexport type AjfNodeGroupCreate = AjfContainerNodeCreate & AjfRepeatingNodeCreate;\n\n/**\n * It creates a AjfNodeGroup\n * set nodeType to AjfNodeType.AjfNodeGroup = 2.\n * Extends an AjfNode with the merging of containerNode  attributes(nodes)\n * with repeatingNode attributes(formulaReps, minReps, maxReps)\n */\nexport function createNodeGroup(nodeGroup: AjfNodeGroupCreate): AjfNodeGroup {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfNodeGroup,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../../interface/slides/repeating-slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\nimport {AjfRepeatingNodeCreate, createRepeatingNode} from '../nodes/create-repeating-node';\n\nexport type AjfRepeatingSlideCreate = AjfContainerNodeCreate & AjfRepeatingNodeCreate;\n/**\n * It creates a AjfRepeatingSlide as the composition of createContainerNode and\n * createRepeatingNode and set AjfRepeatingSlide as nodeType\n */\nexport function createRepeatingSlide(nodeGroup: AjfRepeatingSlideCreate): AjfRepeatingSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    ...createRepeatingNode(nodeGroup),\n    nodeType: AjfNodeType.AjfRepeatingSlide,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {neverCondition} from '@ajf/core/models';\nimport {AjfNodeType} from '../../interface/nodes/node-type';\nimport {AjfSlide} from '../../interface/slides/slide';\nimport {AjfContainerNodeCreate, createContainerNode} from '../nodes/create-container-node';\n\nexport type AjfSlideCreate = AjfContainerNodeCreate;\n\n/**\n * It creates AjfSlide.\n */\nexport function createSlide(nodeGroup: AjfSlideCreate): AjfSlide {\n  return {\n    ...createContainerNode(nodeGroup),\n    nodeType: AjfNodeType.AjfSlide,\n    readonly: nodeGroup.readonly || neverCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidationGroup} from '../interface/validation/validation-group';\nimport {createValidationGroup} from '../utils/validation/create-validation-group';\n\n/**\n *  Create an AjfValidationGroup by json schema\n */\nexport class AjfValidationGroupSerializer {\n  static fromJson(group: Partial<AjfValidationGroup>): AjfValidationGroup {\n    return createValidationGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarningGroup} from '../interface/warning/warning-group';\nimport {createWarningGroup} from '../utils/warning/create-warning-group';\n\n/**\n *  Create an AjfWarningGroup by json schema\n */\nexport class AjfWarningGroupSerializer {\n  static fromJson(group: Partial<AjfWarningGroup>): AjfWarningGroup {\n    return createWarningGroup(group);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../interface/attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../interface/choices/choices-origin';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfFieldWithChoices} from '../interface/fields/field-with-choices';\nimport {AjfFormulaField} from '../interface/fields/formula-field';\nimport {AjfContainerNode} from '../interface/nodes/container-node';\nimport {AjfNode} from '../interface/nodes/node';\nimport {AjfNodeGroup} from '../interface/nodes/node-group';\nimport {AjfFieldNodeLink} from '../interface/nodes/node-link';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingNode} from '../interface/nodes/repeating-node';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfFieldCreate, createField} from '../utils/fields/create-field';\nimport {createFieldWithChoices} from '../utils/fields/create-field-with-choices';\nimport {componentsMap} from '../utils/fields/fields-map';\nimport {createContainerNode} from '../utils/nodes/create-container-node';\nimport {AjfNodeCreate, createNode} from '../utils/nodes/create-node';\nimport {createNodeGroup} from '../utils/nodes/create-node-group';\nimport {createRepeatingNode} from '../utils/nodes/create-repeating-node';\nimport {createRepeatingSlide} from '../utils/slides/create-repeating-slide';\nimport {createSlide} from '../utils/slides/create-slide';\n\nimport {AjfValidationGroupSerializer} from './validation-group-serializer';\nimport {AjfWarningGroupSerializer} from './warning-group-serializer';\n\n/**\n * Create an AjfNode by json schema,\n * apply a default value for name\n * throw new error if id,parent or nodeType attribute missed\n */\nexport class AjfNodeSerializer {\n  static fromJson(\n    json: Partial<AjfNode>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfNode {\n    const err = 'Malformed node';\n    const obj = {...json};\n    obj.name = obj.name ?? '';\n    if (obj.id == null || obj.parent == null || obj.nodeType == null) {\n      throw new Error(err);\n    }\n    if (obj.visibility) {\n      obj.visibility = AjfConditionSerializer.fromJson(obj.visibility);\n    }\n    obj.conditionalBranches = (obj.conditionalBranches || []).map(c =>\n      AjfConditionSerializer.fromJson(c),\n    );\n    // call serializer by nodeType and cast obj with the right interface\n    switch (obj.nodeType) {\n      case AjfNodeType.AjfField:\n        return AjfNodeSerializer._fieldFromJson(\n          obj as AjfNodeCreate & Partial<AjfField>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfFieldNodeLink:\n        return AjfNodeSerializer._fieldNodeLinkFromJson(\n          obj as AjfNodeCreate & Partial<AjfFieldNodeLink>,\n        );\n      case AjfNodeType.AjfNodeGroup:\n        return AjfNodeSerializer._nodeGroupFromJson(\n          obj as AjfNodeCreate & Partial<AjfNodeGroup>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfRepeatingSlide:\n        return AjfNodeSerializer._repeatingSlideFromJson(\n          obj as AjfNodeCreate & Partial<AjfRepeatingSlide>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n      case AjfNodeType.AjfSlide:\n        const slideObj = obj as AjfNodeCreate & Partial<AjfSlide>;\n        if (slideObj.readonly) {\n          slideObj.readonly = AjfConditionSerializer.fromJson(slideObj.readonly);\n        }\n        return AjfNodeSerializer._slideFromJson(\n          slideObj as AjfNodeCreate & Partial<AjfSlide>,\n          choicesOrigins,\n          attachmentsOrigins,\n        );\n    }\n    throw new Error(err);\n  }\n\n  private static _containerNodeFromJson(\n    json: AjfNodeCreate & Partial<AjfContainerNode>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfContainerNode {\n    json.nodes = (json.nodes || []).map(n =>\n      AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins),\n    );\n    return createContainerNode(json);\n  }\n\n  private static _fieldFromJson(\n    json: AjfNodeCreate & Partial<AjfField> & Partial<{attachmentsOriginRef: string}>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfField {\n    if (json.fieldType == null) {\n      throw new Error('Malformed field');\n    }\n    const obj = json as AjfFieldCreate;\n    if (obj.validation) {\n      obj.validation = AjfValidationGroupSerializer.fromJson(obj.validation);\n    }\n    if (obj.warning) {\n      obj.warning = AjfWarningGroupSerializer.fromJson(obj.warning);\n    }\n    if (json.attachmentsOriginRef) {\n      obj.attachmentOrigin = (attachmentsOrigins || []).find(\n        a => a.name === json.attachmentsOriginRef,\n      );\n    }\n    if (obj.nextSlideCondition) {\n      obj.nextSlideCondition = AjfConditionSerializer.fromJson(obj.nextSlideCondition);\n    }\n    const isCustomFieldWithChoice =\n      obj.fieldType > 100 &&\n      componentsMap[obj.fieldType] != null &&\n      componentsMap[obj.fieldType].isFieldWithChoice === true;\n    if (isCustomFieldWithChoice) {\n      return AjfNodeSerializer._fieldWithChoicesFromJson(\n        json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n        choicesOrigins,\n      );\n    }\n\n    switch (obj.fieldType) {\n      case AjfFieldType.Formula:\n        return AjfNodeSerializer._formulaFieldFromJson(\n          json as AjfFieldCreate & Partial<AjfFormulaField>,\n        );\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return AjfNodeSerializer._fieldWithChoicesFromJson(\n          json as AjfFieldCreate & Partial<AjfFieldWithChoices<any>>,\n          choicesOrigins,\n        );\n    }\n    return createField(obj);\n  }\n\n  private static _fieldNodeLinkFromJson(\n    json: AjfNodeCreate & Partial<AjfFieldNodeLink>,\n  ): AjfFieldNodeLink {\n    return {...createNode(json), nodeType: AjfNodeType.AjfFieldNodeLink};\n  }\n\n  private static _fieldWithChoicesFromJson(\n    json: AjfFieldCreate & Partial<AjfFieldWithChoices<any>> & Partial<{choicesOriginRef: string}>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n  ): AjfFieldWithChoices<any> {\n    const err = 'Malformed field with choices';\n    if (json.choicesOriginRef == null) {\n      throw new Error(err);\n    }\n    const choicesOrigin = (choicesOrigins || []).find(c => c.name === json.choicesOriginRef);\n    if (choicesOrigin == null) {\n      throw new Error(err);\n    }\n    if (json.choicesFilter) {\n      json.choicesFilter = AjfFormulaSerializer.fromJson(json.choicesFilter);\n    }\n    if (json.triggerConditions) {\n      json.triggerConditions = json.triggerConditions.map(t => AjfConditionSerializer.fromJson(t));\n    }\n    return createFieldWithChoices<any>({...json, choicesOrigin});\n  }\n\n  private static _formulaFieldFromJson(\n    json: AjfFieldCreate & Partial<AjfFormulaField>,\n  ): AjfFormulaField {\n    if (json.formula) {\n      json.formula = AjfFormulaSerializer.fromJson(json.formula);\n    }\n    return {\n      ...createField(json),\n      fieldType: AjfFieldType.Formula,\n    };\n  }\n\n  private static _nodeGroupFromJson(\n    json: AjfNodeCreate & Partial<AjfNodeGroup>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfNodeGroup {\n    return createNodeGroup({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _repeatingNodeFromJson(\n    json: AjfNodeCreate & Partial<AjfRepeatingNode>,\n  ): AjfRepeatingNode {\n    if (json.formulaReps) {\n      json.formulaReps = AjfFormulaSerializer.fromJson(json.formulaReps);\n    }\n    return createRepeatingNode(json);\n  }\n\n  private static _repeatingSlideFromJson(\n    json: AjfNodeCreate & Partial<AjfRepeatingSlide>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfRepeatingSlide {\n    return createRepeatingSlide({\n      ...AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n      ...AjfNodeSerializer._repeatingNodeFromJson(json),\n    });\n  }\n\n  private static _slideFromJson(\n    json: AjfNodeCreate & Partial<AjfSlide>,\n    choicesOrigins?: AjfChoicesOrigin<any>[],\n    attachmentsOrigins?: AjfAttachmentsOrigin<any>[],\n  ): AjfSlide {\n    return createSlide(\n      AjfNodeSerializer._containerNodeFromJson(json, choicesOrigins, attachmentsOrigins),\n    );\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {AjfAttachmentsOriginSerializer} from './attachments-origin-serializer';\nimport {AjfChoicesOriginSerializer} from './choices-origin-serializer';\nimport {AjfNodeSerializer} from './node-serializer';\n\n/**\n *  Create an AjfForm by json schema, apply a default value for stringIdentifier and initContext\n */\nexport class AjfFormSerializer {\n  static fromJson(form: Partial<AjfForm>, context?: AjfContext): AjfForm {\n    /**\n     * create choicesOrigins by serializer\n     */\n    const choicesOrigins = (form.choicesOrigins || []).map(c =>\n      AjfChoicesOriginSerializer.fromJson(c),\n    );\n    /**\n     * create attachmentsOrigins by serializer\n     */\n    const attachmentsOrigins = (form.attachmentsOrigins || []).map(a =>\n      AjfAttachmentsOriginSerializer.fromJson(a),\n    );\n    /**\n     * create nodes by serializer\n     */\n    const nodes = (form.nodes || []).map(n =>\n      AjfNodeSerializer.fromJson(n, choicesOrigins, attachmentsOrigins),\n    ) as (AjfRepeatingSlide | AjfSlide)[];\n    return {\n      ...form,\n      choicesOrigins,\n      attachmentsOrigins,\n      nodes,\n      stringIdentifier: form.stringIdentifier || [],\n      initContext: deepCopy(context || {}),\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, Inject, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfBaseFieldComponent} from './base-field';\nimport {AjfFormRendererService} from './form-renderer';\nimport {AjfTableFieldInstance} from './interface/fields-instances/table-field-instance';\nimport {AJF_WARNING_ALERT_SERVICE, AjfWarningAlertService} from './warning-alert-service';\n\n/**\n * This component manages the table field data.\n * It exposes methods for managing the display of controllers.\n *\n *\n * @export\n * @abstract\n * @class AjfTableFieldComponent\n */\n@Directive()\nexport abstract class AjfTableFieldComponent\n  extends AjfBaseFieldComponent<AjfTableFieldInstance>\n  implements OnDestroy\n{\n  private _instanceChangeSub = Subscription.EMPTY;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n\n  /**\n   *  set the current cell show to false and set the next cell show to true.\n   *\n   * @param ev\n   * @param row\n   * @param column\n   * @return {*}\n   */\n  goToNextCell(ev: Event, row: number, column: number): void {\n    if (\n      this.instance == null ||\n      this.instance.controls.length < row ||\n      (this.instance.controls.length >= row && this.instance.controls[row].length < 1) ||\n      this.instance.controls[row][1].length < column\n    ) {\n      return;\n    }\n    const rowLength = this.instance.controls[row][1].length;\n    const currentCell = this.instance.controls[row][1][column];\n    if (column + 1 >= rowLength) {\n      column = 0;\n      if (row + 1 >= this.instance.controls.length) {\n        row = 1;\n      } else {\n        row += 1;\n      }\n    } else {\n      column += 1;\n    }\n    if (typeof currentCell !== 'string') {\n      currentCell.show = false;\n    }\n    this._showCell(row, column);\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /**\n   * It resets all control.show to false and sets the control.show\n   * (identified by row and column) to true.\n   *\n   * @param row\n   * @param column\n   */\n  goToCell(row: number, column: number): void {\n    this._resetControls();\n    this._showCell(row, column);\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._instanceChangeSub.unsubscribe();\n  }\n\n  protected override _onInstanceChange(): void {\n    this._instanceChangeSub.unsubscribe();\n    if (this.instance == null) {\n      this._instanceChangeSub = Subscription.EMPTY;\n      return;\n    }\n    let sub: Subscription;\n    this.instance.controls.forEach(ctrlss => {\n      if (typeof ctrlss === 'string') {\n        return;\n      }\n      if (Array.isArray(ctrlss)) {\n        ctrlss.forEach(ctrls => {\n          if (typeof ctrls === 'string') {\n            return;\n          }\n          if (Array.isArray(ctrls)) {\n            ctrls.forEach(ctrl => {\n              if (typeof ctrl === 'string') {\n                return;\n              }\n              const curSub = ctrl.control.valueChanges.subscribe(() =>\n                this._changeDetectorRef.markForCheck(),\n              );\n              if (typeof sub === 'undefined') {\n                sub = curSub;\n              } else {\n                sub.add(curSub);\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * it sets all controls show to false.\n   *\n   * @private\n   */\n  private _resetControls(): void {\n    if (this.instance == null) {\n      return;\n    }\n    this.instance.controls.forEach(row =>\n      row[1].forEach(cell => {\n        if (typeof cell !== 'string') {\n          cell.show = false;\n        }\n      }),\n    );\n  }\n\n  /**\n   * It sets the control.show (identified by row and column) to true.\n   *\n   * @private\n   * @param row\n   * @param column\n   * @return {*}\n   */\n  private _showCell(row: number, column: number): void {\n    if (\n      this.instance == null ||\n      row >= this.instance.controls.length ||\n      column >= this.instance.controls[row][1].length\n    ) {\n      return;\n    }\n    const nextCell = this.instance.controls[row][1][column];\n    if (typeof nextCell !== 'string') {\n      nextCell.show = true;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/common';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfField} from './interface/fields/field';\nimport {AjfFieldType} from './interface/fields/field-type';\nimport {AjfContainerNode} from './interface/nodes/container-node';\nimport {AjfNode} from './interface/nodes/node';\nimport {AjfFormSerializer} from './serializers/form-serializer';\nimport {AjfFormCreate} from './utils/forms/create-form';\nimport {isField} from './utils/nodes/is-field';\nimport {isRepeatingSlide} from './utils/nodes/is-repeating-slide';\n\nfunction generateRandomInstanceFields(fields: AjfField[]): AjfField[] {\n  const fieldReps: AjfField[] = [];\n  fields.forEach(f => {\n    for (let i = 0; i < 5; i++) {\n      const newReps = deepCopy(f);\n      newReps.name = `${newReps.name}__${i}`;\n      fieldReps.push(newReps);\n    }\n  });\n  return fieldReps;\n}\n\nfunction flattenFields(slides: AjfNode[]): AjfField[] {\n  let flatFields: AjfField[] = [];\n  slides.forEach(slide => {\n    if (isField(slide)) {\n      flatFields.push(slide);\n    } else if (isRepeatingSlide(slide)) {\n      const childs = generateRandomInstanceFields(slide.nodes as AjfField[]);\n      flatFields = flatFields.concat(flattenFields(childs));\n    } else {\n      flatFields = flatFields.concat([...((slide as AjfContainerNode).nodes as AjfField[])]);\n    }\n  });\n  return flatFields;\n}\n\nexport function generateRandomCtx(formSchema: AjfFormCreate): AjfContext[] {\n  const ctxMap: AjfContext[] = [];\n  const allFields: AjfField[] = flattenFields(formSchema.nodes!);\n  const generateRandomNumberOfContext = Math.floor(Math.random() * 100) + 1;\n  for (let i = 0; i < generateRandomNumberOfContext; i++) {\n    const ctx: AjfContext = {};\n    allFields.forEach(field => {\n      switch (field.fieldType) {\n        default:\n          ctx[field.name] = 0;\n          break;\n        case AjfFieldType.Number:\n          ctx[field.name] = Math.floor(Math.random() * 1000) + 1;\n          break;\n        case AjfFieldType.Boolean:\n          ctx[field.name] = Math.random() < 0.5;\n          break;\n        case AjfFieldType.SingleChoice:\n          const singleChoices = field.choicesOrigin.choices.map(c => c.value);\n          ctx[field.name] = singleChoices[Math.floor(Math.random() * singleChoices.length)];\n          break;\n        case AjfFieldType.MultipleChoice:\n          const multipleChoices = field.choicesOrigin.choices.map(c => c.value);\n          ctx[field.name] = [\n            multipleChoices[Math.floor(Math.random() * multipleChoices.length)],\n            multipleChoices[Math.floor(Math.random() * multipleChoices.length)],\n          ];\n          break;\n        case AjfFieldType.Range:\n          const end = field.end ?? 10;\n          const start = field.start ?? 1;\n          const value = Math.floor(start + Math.random() * (end + 1 - start));\n          ctx[field.name] = value;\n      }\n    });\n    ctxMap.push(ctx);\n  }\n  return ctxMap;\n}\n\nexport function buildformDatas(formSchemas: {[name: string]: AjfFormCreate}): {\n  [name: string]: AjfContext[];\n} {\n  const forms: {[name: string]: AjfContext[]} = {};\n  Object.keys(formSchemas).forEach(nameSchema => {\n    forms[nameSchema] = generateRandomCtx(AjfFormSerializer.fromJson(formSchemas[nameSchema]));\n  });\n  return forms;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {\n  createPdf,\n  Content,\n  PageOrientation,\n  TCreatedPdf,\n  TDocumentDefinitions,\n} from '@ajf/core/pdfmake';\n\nimport {AjfChoice} from '../interface/choices/choice';\nimport {AjfEmptyField} from '../interface/fields/empty-field';\nimport {AjfField} from '../interface/fields/field';\nimport {AjfFieldType} from '../interface/fields/field-type';\nimport {AjfTableField} from '../interface/fields/table-field';\nimport {AjfForm} from '../interface/forms/form';\nimport {AjfNodeType} from '../interface/nodes/node-type';\nimport {AjfRepeatingSlide} from '../interface/slides/repeating-slide';\nimport {AjfSlide} from '../interface/slides/slide';\nimport {isField} from '../utils/nodes/is-field';\nimport {isRepeatingSlide} from '../utils/nodes/is-repeating-slide';\nimport {isSlideNode} from '../utils/nodes/is-slide-node';\n\nexport function createFormPdf(\n  form: AjfForm,\n  translate?: (_: string) => string,\n  orientation?: PageOrientation,\n  header?: Content[],\n  context?: AjfContext,\n): TCreatedPdf {\n  const t = translate ? translate : (s: string) => s;\n  const pdfDef = formToPdf(form, t, orientation, header, context);\n  return createPdf(pdfDef);\n}\n\n// ChoicesMap maps a choicesOriginRef to the list the choices.\ninterface ChoicesMap {\n  [name: string]: AjfChoice<any>[];\n}\n\nfunction stripHTML(s: string): string {\n  return s.replace(/<\\/?[^>]+(>|$)/g, '');\n}\n\n// Given a context, lookupStringFunction returns a function that allows to retrieve\n// the field values from the context. The values are returned as print-friendly strings.\n// rep is the index of the repeating slide, if the field belongs to one.\nfunction lookupStringFunction(context?: AjfContext, rep?: number): (name: string) => string {\n  if (context == null) {\n    return (_: string) => ' ';\n  }\n  return (name: string) => {\n    if (name == null) {\n      return ' ';\n    }\n    if (rep != null) {\n      name = name + '__' + rep;\n    }\n    const val = context[name];\n    if (val == null) {\n      return ' ';\n    }\n    if (val === true) {\n      return 'yes';\n    }\n    if (val === false) {\n      return 'no';\n    }\n    return String(val);\n  };\n}\n\n// Analogous to lookupStringFunction, but for multiple-choice questions,\n// returning an array of values.\nfunction lookupArrayFunction(context?: AjfContext, rep?: number): (name: string) => string[] {\n  if (context == null) {\n    return (_: string) => [];\n  }\n  return (name: string) => {\n    if (name == null) {\n      return [];\n    }\n    if (rep != null) {\n      name = name + '__' + rep;\n    }\n    const val = context[name];\n    if (Array.isArray(val)) {\n      return val;\n    }\n    return [];\n  };\n}\n\n// Given an AjfForm, returns its pdfmake pdf document definition.\nfunction formToPdf(\n  form: AjfForm,\n  translate: (s: string) => string,\n  orientation?: PageOrientation,\n  header?: Content[],\n  context?: AjfContext,\n): TDocumentDefinitions {\n  const choicesMap: ChoicesMap = {};\n  for (const o of form.choicesOrigins) {\n    choicesMap[o.name] = o.choices;\n  }\n\n  const content = header ? [...header] : [];\n  for (const slide of form.nodes) {\n    if (isSlideNode(slide)) {\n      content.push(...slideToPdf(slide, choicesMap, translate, context));\n    } else if (isRepeatingSlide(slide)) {\n      content.push(...repeatingSlideToPdf(slide, choicesMap, translate, context));\n    }\n  }\n  return {content, pageOrientation: orientation};\n}\n\nfunction slideToPdf(\n  slide: AjfSlide | AjfRepeatingSlide,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n  rep?: number,\n): Content[] {\n  let label = translate(slide.label);\n  if (rep != null) {\n    label = `${label} (${translate('repeat')} ${rep})`;\n  }\n  const content: Content[] = [{text: label, fontSize: 18, bold: true, margin: [0, 15, 0, 10]}];\n  for (const field of slide.nodes) {\n    if (isField(field)) {\n      content.push(...fieldToPdf(field, choicesMap, translate, context, rep));\n    }\n  }\n  return content;\n}\n\nfunction repeatingSlideToPdf(\n  slide: AjfRepeatingSlide,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n): Content[] {\n  let repeats = 3; // default, if no formData\n  const maxRepeats = 20;\n  if (context != null && slide.name != null) {\n    const r = context[slide.name];\n    if (typeof r === 'number') {\n      repeats = Math.min(r, maxRepeats);\n    }\n  }\n\n  const content = [];\n  for (let r = 0; r < repeats; r++) {\n    content.push(...slideToPdf(slide, choicesMap, translate, context, r));\n  }\n  return content;\n}\n\nfunction borderlessCell(text: string, bold?: boolean): Content {\n  return {table: {body: [[{text, bold, border: [false, false, false, false]}]]}};\n}\n\nfunction fieldToPdf(\n  field: AjfField | AjfEmptyField,\n  choicesMap: ChoicesMap,\n  translate: (s: string) => string,\n  context?: AjfContext,\n  rep?: number,\n): Content[] {\n  if (field.nodeType !== AjfNodeType.AjfField) {\n    throw new Error('not a field');\n  }\n\n  const visible =\n    context == null /* form not compiled, show all fields */ ||\n    field.visibility == null ||\n    evaluateExpression(field.visibility.condition, context);\n  if (!visible) {\n    return [];\n  }\n\n  const lookupString = lookupStringFunction(context, rep);\n\n  switch (field.fieldType) {\n    case AjfFieldType.String:\n    case AjfFieldType.Text:\n      return [\n        borderlessCell(translate(field.label)),\n        {table: {widths: ['*'], body: [[lookupString(field.name)]]}, margin: [5, 0, 0, 5]},\n      ];\n    case AjfFieldType.Formula:\n      let value = lookupString(field.name);\n      if (value === ' ') {\n        // If the value of the field is not in the context, recompute the formula.\n        const formula = field.formula || {formula: ''};\n        value = String(evaluateExpression(formula.formula, context));\n      }\n      return [\n        borderlessCell(translate(field.label)),\n        {table: {widths: ['*'], body: [[value]]}, margin: [5, 0, 0, 5]},\n      ];\n    case AjfFieldType.Number:\n    case AjfFieldType.Boolean:\n    case AjfFieldType.DateInput:\n    case AjfFieldType.Time:\n      let val = lookupString(field.name);\n      // for boolean fields in compiled forms, a null value is printed as 'no':\n      if (field.fieldType === AjfFieldType.Boolean && context != null && val === ' ') {\n        val = 'no';\n      }\n      return [\n        {\n          table: {\n            widths: ['*', '*'],\n            body: [[{text: translate(field.label), border: [false, false, false, false]}, val]],\n          },\n        },\n      ];\n    case AjfFieldType.SingleChoice:\n    case AjfFieldType.MultipleChoice:\n      const choices = choicesMap[(field as any).choicesOriginRef];\n      if (context == null) {\n        // empty form\n        return choiceToPdf(field, choices, translate);\n      }\n      // compiled form, only print choices that are selected\n      const selectedValues =\n        field.fieldType === AjfFieldType.SingleChoice\n          ? [lookupString(field.name)]\n          : lookupArrayFunction(context, rep)(field.name);\n      const nonNullChoice = (c: AjfChoice<any> | undefined): c is AjfChoice<any> => c != null;\n      let selectedChoices = selectedValues\n        .map(v => choices.find(c => c.value === v))\n        .filter(nonNullChoice);\n      if (selectedChoices.length === 0) {\n        selectedChoices = selectedValues.map(v => ({\n          label: v,\n          value: v,\n        }));\n      }\n      return choiceToPdf(field, selectedChoices, translate, context);\n    case AjfFieldType.Empty:\n      const text = stripHTML(translate(field.HTML));\n      return [borderlessCell(text, true)];\n    case AjfFieldType.Table:\n      return tableToPdf(field, lookupString, translate);\n    default:\n      // yet unsupported field type\n      return [];\n  }\n}\n\nfunction choiceToPdf(\n  field: AjfField,\n  choices: AjfChoice<any>[],\n  translate: (s: string) => string,\n  context?: AjfContext,\n): Content[] {\n  let choiceLabels: string[];\n  if (choices == null || choices.length === 0) {\n    choiceLabels = [' '];\n  } else {\n    choiceLabels = choices.map(c => c.label);\n  }\n  const body = [];\n  for (const c of choiceLabels) {\n    body.push([translate(c)]);\n  }\n  let question = translate(field.label);\n  // If the form is empty (to be compiled),\n  // help the user distinguish between single- and multiple-choice questions:\n  if (context == null && field.fieldType === AjfFieldType.SingleChoice) {\n    question += ` (${translate('single choice')})`;\n  }\n  if (context == null && field.fieldType === AjfFieldType.MultipleChoice) {\n    question += ` (${translate('multipe choice')})`;\n  }\n  return [\n    {\n      columns: [\n        borderlessCell(question),\n        {\n          table: {widths: ['*'], body},\n        },\n      ],\n      margin: [0, 0, 0, 5],\n    },\n  ];\n}\n\nfunction tableToPdf(\n  table: AjfTableField,\n  lookupString: (s: string) => string,\n  translate: (s: string) => string,\n): Content[] {\n  const body: string[][] = [['', ...table.columnLabels.map(translate)]];\n  for (let i = 0; i < table.rows.length; i++) {\n    const row = [...table.rows[i]];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      if (typeof cell !== 'string') {\n        row[j] = cell.formula;\n      }\n    }\n    const valsRow = (row as string[]).map(lookupString).map(translate);\n    body.push([translate(table.rowLabels[i]), ...valsRow]);\n  }\n  return [\n    borderlessCell(translate(table.label)),\n    {table: {body, widths: Array(table.columnLabels.length + 1).fill('*')}, margin: [5, 0, 0, 5]},\n  ];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfAttachment<T> {\n  label: string;\n  value: T;\n  type: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from './attachments-origin';\n\nexport type AjfAttachmentsFixedOrigin<T> = AjfAttachmentsOrigin<T>;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachment} from './attachment';\n\nexport interface AjfAttachmentsOrigin<T> {\n  name: string;\n  attachments: AjfAttachment<T>[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport const enum AjfAttachmentsType {\n  Link,\n  Pdf,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoice} from './choice';\nimport {AjfChoicesOriginType} from './choices-origin-type';\n\nexport interface AjfBaseChoicesOrigin<T> {\n  type: AjfChoicesOriginType;\n  name: string;\n  label: string;\n  choices: AjfChoice<T>[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfChoice<T> {\n  label: string;\n  value: T;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseChoicesOrigin} from './base-choices-origin';\n\nexport interface AjfChoicesFixedOrigin<T> extends AjfBaseChoicesOrigin<T> {\n  type: 'fixed';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoice} from './choice';\n\nexport type AjfChoicesFunction<T> = () => AjfChoice<T>[];\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseChoicesOrigin} from './base-choices-origin';\nimport {AjfChoicesFunction} from './choices-function';\n\nexport interface AjfChoicesFunctionOrigin<T> extends AjfBaseChoicesOrigin<T> {\n  type: 'function';\n  generator: AjfChoicesFunction<T>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable} from 'rxjs';\n\nimport {AjfBaseChoicesOrigin} from './base-choices-origin';\nimport {AjfChoice} from './choice';\n\nexport interface AjfChoicesObservableArrayOrigin<T> extends AjfBaseChoicesOrigin<T> {\n  type: 'observableArray';\n  generator: Observable<AjfChoice<T>[]>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable} from 'rxjs';\n\nimport {AjfBaseChoicesOrigin} from './base-choices-origin';\nimport {AjfChoice} from './choice';\n\nexport interface AjfChoicesObservableOrigin<T> extends AjfBaseChoicesOrigin<T> {\n  type: 'observable';\n  generator: Observable<AjfChoice<T>>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from './choices-fixed-origin';\nimport {AjfChoicesFunctionOrigin} from './choices-function-origin';\nimport {AjfChoicesObservableArrayOrigin} from './choices-observable-array-origin';\nimport {AjfChoicesObservableOrigin} from './choices-observable-origin';\nimport {AjfChoicesPromiseOrigin} from './choices-promise-origin';\n\nexport type AjfChoicesOrigin<T> =\n  | AjfChoicesFixedOrigin<T>\n  | AjfChoicesFunctionOrigin<T>\n  | AjfChoicesObservableArrayOrigin<T>\n  | AjfChoicesObservableOrigin<T>\n  | AjfChoicesPromiseOrigin<T>;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport type AjfChoicesOriginType =\n  | 'fixed'\n  | 'function'\n  | 'observable'\n  | 'observableArray'\n  | 'promise';\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseChoicesOrigin} from './base-choices-origin';\nimport {AjfChoice} from './choice';\n\nexport interface AjfChoicesPromiseOrigin<T> extends AjfBaseChoicesOrigin<T> {\n  type: 'promise';\n  generator: Promise<AjfChoice<T>[]>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport const enum AjfChoicesType {\n  String,\n  Number,\n  LENGTH,\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\n\nimport {AjfAttachmentsOrigin} from '../attachments/attachments-origin';\nimport {AjfBaseNode} from '../nodes/base-node';\nimport {AjfNodeType} from '../nodes/node-type';\nimport {AjfValidationGroup} from '../validation/validation-group';\nimport {AjfWarningGroup} from '../warning/warning-group';\nimport {AjfFieldSize} from './field-size';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An ajf node of type Field. It is the building block for all the Fields in a Form.\n */\nexport interface AjfBaseField extends AjfBaseNode {\n  /**\n   * Type of the node.\n   */\n  nodeType: AjfNodeType.AjfField;\n\n  /**\n   * Type of the Field.\n   */\n  fieldType: AjfFieldType;\n\n  /**\n   * A brief description of the Field.\n   */\n  description?: string;\n\n  /**\n   * If set to true the Field input is editable\n   */\n  editable: boolean;\n\n  /**\n   * A formula used to derive the value of the field.\n   * If set, makes the field input read-only (not editable).\n   */\n  formula?: AjfFormula;\n\n  /**\n   * The default value of the Field. It could be a value or a formula.\n   * Is used only when the value is null.\n   */\n  defaultValue: any;\n\n  /**\n   * The size of the Field to be used when the Field is rendered\n   */\n  size: AjfFieldSize;\n\n  /**\n   * A set of conditions that defines if the Field value is valid.\n   */\n  validation?: AjfValidationGroup;\n\n  /**\n   * A set of conditions that defines if warning must be shown.\n   */\n  // @TODO(Marco, Peppe, Sara): Check if it is actually used and works as intended\n  warning?: AjfWarningGroup;\n\n  // @TODO(Marco, Peppe, Sara): Check if it is actually used and what it is\n  nextSlideCondition?: AjfCondition;\n\n  /**\n   * The origin of the attachments related to the field.\n   */\n  attachmentOrigin?: AjfAttachmentsOrigin<any>;\n\n  /**\n   * Any attachments (files uploaded on the form) related to the field.\n   */\n  attachments?: any[];\n  /*\n   * Hint text visualized in tooltip used\n   * to explain the mean of field\n   */\n  hint?: string;\n  /**\n   * Hint icon showed as anchor of hint\n   */\n  hintIcon?: string;\n\n  // @TODO(Marco, Peppe, Sara, Trik): Check if both are used and why attachments is of type 'any[]'\n  // and not 'AjfAttachment[]'.\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Boolean\n */\nexport interface AjfBooleanField extends AjfBaseField {\n  fieldType: AjfFieldType.Boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Date.\n */\nexport interface AjfDateField extends AjfBaseField {\n  fieldType: AjfFieldType.Date;\n\n  /**\n   * The min selectable date of the calendar.\n   */\n  minDate?: Date | 'today';\n\n  /**\n   * The max selectable date of the calendar.\n   */\n  maxDate?: Date | 'today';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type DateInput\n */\nexport interface AjfDateInputField extends AjfBaseField {\n  fieldType: AjfFieldType.DateInput;\n\n  /**\n   * The min selectable date of the calendar.\n   */\n  minDate: Date | 'today';\n\n  /**\n   * The max selectable date of the calendar.\n   */\n  maxDate: Date | 'today';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField that contains an HTML.\n */\nexport interface AjfEmptyField extends AjfBaseField {\n  fieldType: AjfFieldType.Empty;\n  HTML: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBarcodeField} from './barcode-field';\nimport {AjfBooleanField} from './boolean-field';\nimport {AjfDateField} from './date-field';\nimport {AjfDateInputField} from './date-input-field';\nimport {AjfEmptyField} from './empty-field';\nimport {AjfFileField} from './file-field';\nimport {AjfFieldWithChoices} from './field-with-choices';\nimport {AjfFormulaField} from './formula-field';\nimport {AjfGeolocationField} from './geolocation-field';\nimport {AjfImageField} from './image-field';\nimport {AjfMultipleChoiceField} from './multiple-choice-field';\nimport {AjfNumberField} from './number-field';\nimport {AjfRangeField} from './range-field';\nimport {AjfSingleChoiceField} from './single-choice-field';\nimport {AjfStringField} from './string-field';\nimport {AjfTableField} from './table-field';\nimport {AjfTextField} from './text-field';\nimport {AjfTimeField} from './time-field';\n\nexport type AjfField<T = any> =\n  | AjfBarcodeField\n  | AjfBooleanField\n  | AjfDateField\n  | AjfDateInputField\n  | AjfEmptyField\n  | AjfFieldWithChoices<T>\n  | AjfFileField\n  | AjfFormulaField\n  | AjfGeolocationField\n  | AjfImageField\n  | AjfMultipleChoiceField<T>\n  | AjfNumberField\n  | AjfRangeField\n  | AjfSingleChoiceField<T>\n  | AjfStringField\n  | AjfTableField\n  | AjfTextField\n  | AjfTimeField;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {Type} from '@angular/core';\n\nimport {AjfBaseFieldComponent} from '../../base-field';\nimport {AjfFieldInstanceCreate} from '../../utils/fields-instances/create-field-instance';\nimport {AjfFieldInstance} from '../fields-instances/field-instance';\n\n/**\n * Represents the association between an AjfFieldType and the\n * components used to render it.\n */\nexport interface AjfFieldComponentsMap {\n  /**\n   * The field type.\n   */\n  [key: number]: {\n    /**\n     * The field component.\n     */\n    component: Type<AjfBaseFieldComponent>;\n\n    /**\n     * The readonly field component.\n     */\n    readOnlyComponent?: Type<AjfBaseFieldComponent>;\n\n    /**\n     * The Angular inputs of the components.\n     */\n    inputs?: {[key: string]: any};\n\n    /**\n     * The signature and return type of the method used for create Instance.\n     */\n    createInstance?: (instance: AjfFieldInstanceCreate, context: AjfContext) => AjfFieldInstance;\n\n    /**\n     * If true, the field has choices.\n     */\n    isFieldWithChoice?: boolean;\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * The size of the Field to be used when the Field is rendered\n */\nexport type AjfFieldSize = 'normal' | 'small' | 'smaller' | 'tiny' | 'mini';\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\n\nimport {AjfChoice} from '../choices/choice';\nimport {AjfChoicesOrigin} from '../choices/choices-origin';\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type AjfFieldWithChoices.\n */\nexport interface AjfFieldWithChoices<T> extends AjfBaseField {\n  fieldType: AjfFieldType.MultipleChoice | AjfFieldType.SingleChoice;\n\n  /**\n   * The choices for the select element after choicesFilter\n   */\n  choices: AjfChoice<T>[];\n\n  /**\n   *  The source of the initial choices list, taken from the json schema\n   */\n  choicesOrigin: AjfChoicesOrigin<T>;\n\n  /**\n   * A formula to filter choices elements\n   */\n  choicesFilter?: AjfFormula;\n\n  /**\n   * Force the UI checkbox group display\n   */\n  forceExpanded: boolean;\n\n  /**\n   * Force the UI dropdown display\n   */\n  forceNarrow: boolean;\n\n  // TODO: Check again when we'll comment the Form Renderer or any code relative\n  // to the triggerConditions.\n  triggerConditions?: AjfCondition[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type File\n */\nexport interface AjfFileField extends AjfBaseField {\n  fieldType: AjfFieldType.File;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Formula\n */\nexport interface AjfFormulaField extends AjfBaseField {\n  fieldType: AjfFieldType.Formula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './field-type';\nimport {AjfFieldWithChoices} from './field-with-choices';\n\n/**\n * An AjfField of type MultipleChoice.\n */\nexport interface AjfMultipleChoiceField<T> extends AjfFieldWithChoices<T> {\n  fieldType: AjfFieldType.MultipleChoice;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Number.\n */\nexport interface AjfNumberField extends AjfBaseField {\n  fieldType: AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\nexport interface AjfRangeField extends AjfBaseField {\n  fieldType: AjfFieldType.Range;\n  end?: number;\n  start?: number;\n  step?: number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType} from './field-type';\nimport {AjfFieldWithChoices} from './field-with-choices';\n\n/**\n * An AjfField of type SingleChoice.\n */\nexport interface AjfSingleChoiceField<T> extends AjfFieldWithChoices<T> {\n  fieldType: AjfFieldType.SingleChoice;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type String.\n */\nexport interface AjfStringField extends AjfBaseField {\n  fieldType: AjfFieldType.String;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InputType} from '../forms/table-form-control';\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\nexport interface AjfTableCell {\n  /**\n   * If true the formula can be overridden by input value.\n   */\n  editable?: boolean;\n  /**\n   * The Formula associated with the cell.\n   */\n  formula: string;\n}\n\n/**\n * An AjfField of type Table.\n *\n *\n * Eg.\n * {\n *  id: 1,\n *  parent: 0,\n *  name: 'TableName',\n *  rows: [\n *     [\n *       'TableName__0__0',\n *       'TableName__0__1',\n *       {\n *         'formula': 'TableName__0__0 + TableName__0__1'\n *         'editable': false\n *       },\n *     ],\n *     ['TableName__1__0', 'TableName__1__1', 'TableName__1__2],\n *   ],\n *   label: '2.1 Table test',\n *   editable: true,\n *   nodeType: 0,\n *   fieldType: 11,\n *   rowLabels: [\n *     'TestRow',\n *     'OtherTestRow',\n *   ],\n *   columnLabels: ['Label 1', 'Label 2', 'Label 3']\n * }\n *\n */\nexport interface AjfTableField extends AjfBaseField {\n  columnTypes: InputType[];\n  fieldType: AjfFieldType.Table;\n  // deprecated string type is used to maintain backward compatibility\n  /**\n   * The string|number array represents all the values in the row cells.\n   * if string\n   *  Every element of this matrix need to satisfy this format: name =\n   * `${table.name}__${row.idx}__${column.idx}` This name is used also as the the control name in\n   * the form formGroup.registerControl(name, tableFormControl.control);\n   */\n  rows: (string | AjfTableCell)[][];\n\n  /**\n   * The string array represents all the column labels.\n   */\n  columnLabels: string[];\n\n  /**\n   * The string array represents all the row labels.\n   */\n  rowLabels: string[];\n\n  /**\n   * If true, empty rows are not showed\n   */\n  hideEmptyRows: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Text.\n */\nexport interface AjfTextField extends AjfBaseField {\n  fieldType: AjfFieldType.Text;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseField} from './base-field';\nimport {AjfFieldType} from './field-type';\n\n/**\n * An AjfField of type Time\n */\nexport interface AjfTimeField extends AjfBaseField {\n  fieldType: AjfFieldType.Time;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDateField} from '../fields/date-field';\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfDateField.\n */\nexport interface AjfDateFieldInstance extends AjfFieldInstance {\n  node: AjfDateField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfDateInputField} from '../fields/date-input-field';\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfDateInputField.\n */\nexport interface AjfDateInputFieldInstance extends AjfFieldInstance {\n  node: AjfDateInputField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfEmptyField} from '../fields/empty-field';\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfEmptyField.\n */\nexport interface AjfEmptyFieldInstance extends AjfFieldInstance {\n  node: AjfEmptyField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfField} from '../fields/field';\nimport {AjfBaseNodeInstance} from '../nodes-instances/base-node-instance';\nimport {AjfValidationGroup} from '../validation/validation-group';\nimport {AjfValidationResult} from '../validation/validation-results';\nimport {AjfWarningGroup} from '../warning/warning-group';\nimport {AjfWarningResult} from '../warning/warning-result';\n\n/**\n * An AjfNodeInstance with a node of type AjfField.\n */\nexport interface AjfFieldInstance extends AjfBaseNodeInstance {\n  /**\n   * True if the field pass the validation\n   */\n  valid: boolean;\n\n  /**\n   * The AjfField blueprint\n   */\n  node: AjfField;\n\n  /**\n   * The value of the field\n   */\n  value: any;\n\n  /**\n   * A formula used to derive the value of the field.\n   */\n  formula?: AjfFormula;\n\n  /**\n   * A set of conditions that defines if the Field value is valid.\n   */\n  validation?: AjfValidationGroup;\n\n  /**\n   * A set of conditions that defines if warning must be shown.\n   */\n  warning?: AjfWarningGroup;\n\n  // @TODO(Marco, Peppe, Sara, Trik): See AjfField (Check if it is actually used and what it is)\n  nextSlideCondition?: AjfCondition;\n\n  /**\n   * The results of the evaluation of the validation group conditions\n   */\n  validationResults?: AjfValidationResult[];\n\n  /**\n   * The results of the evaluation of the warning group conditions\n   */\n  warningResults?: AjfWarningResult[];\n\n  /**\n   * Emitted when there are warningResults\n   */\n  warningTrigger: EventEmitter<void>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n// TODO Check if and where it is actually used\nexport interface AjfFieldState {\n  visibility: boolean;\n  value: any;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, AjfFormula} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfChoice} from '../choices/choice';\nimport {AjfFieldWithChoices} from '../fields/field-with-choices';\n\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfFieldWithChoicesInstance.\n */\nexport interface AjfFieldWithChoicesInstance<T> extends AjfFieldInstance {\n  node: AjfFieldWithChoices<T>;\n\n  /**\n   * The filtered choices list, originally taken from json schema\n   */\n  filteredChoices: AjfChoice<any>[];\n\n  /**\n   * A formula to filter choices elements\n   */\n  choicesFilter?: AjfFormula;\n\n  // TODO: Check again when we'll comment the Form Renderer or any code relative\n  // to the triggerConditions.\n  triggerConditions?: AjfCondition[];\n  firstTriggerConditionDone: any;\n  selectionTrigger: EventEmitter<void>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfFormulaField} from '../fields/formula-field';\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfFormulaField.\n */\nexport interface AjfFormulaFieldInstance extends AjfFieldInstance {\n  node: AjfFormulaField;\n\n  /**\n   * A formula used to derive the value of the formula field.\n   */\n  formula?: AjfFormula;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRangeField} from '../fields/range-field';\nimport {AjfFieldInstance} from './field-instance';\n\nexport interface AjfRangeFieldInstance extends AjfFieldInstance {\n  node: AjfRangeField;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\n\nimport {AjfTableField} from '../fields/table-field';\nimport {AjfTableFormControl} from '../forms/table-form-control';\nimport {AjfFieldInstance} from './field-instance';\n\n/**\n * An AjfFieldInstance with a node of type AjfTableField.\n */\nexport interface AjfTableFieldInstance extends AjfFieldInstance {\n  node: AjfTableField;\n\n  /**\n   * If true, empty rows are not showed\n   */\n  hideEmptyRows: boolean;\n\n  /**\n   * List of values for the table (rows).\n   * The table is horizontally organized: the first cell of each row represents\n   * the 'Row Label' (like a horizontal 'column header').\n   * The string|number array represents all the values in the other row cells.\n   *\n   * Eg.\n   * {\n   *   id: 1,\n   *   parent: 0,\n   *   name: 'row', // table name\n   *   rows: [\n   *     ['row__0__0', 'row__0__1', 'row__0__2],\n   *     ['row__1__0', 'row__1__1', 'row__1__2],\n   *   ],\n   *   label: '2.1 Table test',\n   *   editable: true,\n   *   nodeType: 0,\n   *   fieldType: 11,\n   *   rowLabels: [\n   *     'TestRow',\n   *     'OtherTestRow',\n   *   ],\n   *   columnLabels: ['Label 1', 'Label 2', 'Label 3']\n   * }\n   *\n   * value: [\n   * ['TestRow', ['row__0__0', 'row__0__1', 'row__0__2]],\n   * ['OtherTestRow', ['row__1__0', 'row__1__1', 'row__1__2]],\n   * ]\n   */\n  value: [string, (string | number)[]][];\n\n  /**\n   * List of form control for the values\n   */\n  controls: [string, (string | AjfTableFormControl)[]][];\n\n  /**\n   * The table context\n   */\n  context: AjfContext;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAttachmentsOrigin} from '../attachments/attachments-origin';\nimport {AjfChoicesOrigin} from '../choices/choices-origin';\nimport {AjfRepeatingSlide} from '../slides/repeating-slide';\nimport {AjfSlide} from '../slides/slide';\nimport {AjfFormStringIdentifier} from './form-string-identifier';\n\n/**\n * The main structure of a json schema representing a Form.\n */\nexport interface AjfForm {\n  /**\n   * The slides containing the Form nodes.\n   */\n  nodes: (AjfRepeatingSlide | AjfSlide)[];\n\n  /**\n   * The options for the single or multiple choices nodes.\n   */\n  choicesOrigins: AjfChoicesOrigin<any>[];\n\n  // @TODO(tutti): check\n  attachmentsOrigins: AjfAttachmentsOrigin<any>[];\n\n  /**\n   * An array of identifiers, each defined by a Label and a field value, used to show a brief\n   * summary of the form data.\n   */\n  stringIdentifier: AjfFormStringIdentifier[];\n\n  /**\n   * A context specifying the initial state and values of a form.\n   * It can be complemented and/or overwritten by the actual data.\n   */\n  initContext?: {[key: string]: string | string[] | number | number[]};\n\n  /**\n   * Any additional informations related to the Form.\n   */\n  supplementaryInformations?: any;\n\n  /**\n   * The validation state of the form, derived from the validation state of each\n   * of its fields.\n   */\n  valid?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStringIdentifier} from '@ajf/core/common';\n\nexport type AjfFormStringIdentifier = AjfStringIdentifier;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {AjfNodeType} from './node-type';\n\n/**\n * The base element of ajf forms (for example a slide or a field).\n * Can contain other nodes in a recursive nodes tree.\n */\nexport interface AjfBaseNode {\n  /**\n   * The node type\n   */\n  nodeType: AjfNodeType;\n\n  /**\n   * Node identification number\n   */\n  id: number;\n\n  /**\n   * Id of the parent node\n   */\n  parent: number;\n\n  /**\n   * The index of the condition in the conditionalBranches array of the parent node\n   * that determines if the current branch should be followed.\n   * (eg.\n   *    parentNode.id = 1\n   *    parentNode.conditionalBranches = ['x &gt; 1', 'x &lt;= 1', 'true'];\n   *    myCurrentNode.parent = 1\n   *    myCurrentNode.parentNode = 0;\n   *\n   * In this case, if the condition 'x &gt; 1' is met, the current branch will be followed ).\n   */\n  parentNode: number;\n\n  /**\n   * List of conditions that determines the branch to be followed\n   */\n  conditionalBranches: AjfCondition[];\n\n  /**\n   * The name of the field\n   */\n  name: string;\n\n  /**\n   * The label of the field\n   */\n  label: string;\n\n  /**\n   * AjfCondition for handling visibility\n   */\n  visibility?: AjfCondition;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {AjfBaseNode} from './base-node';\nimport {AjfNode} from './node';\n\n/**\n * An AjfNode that contains other AjfNodes.\n */\nexport interface AjfContainerNode extends AjfBaseNode {\n  /**\n   * The children nodes\n   */\n  nodes: AjfNode[];\n  // AjfCondition for handling field writable\n  readonly?: AjfCondition;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from './node-type';\nimport {AjfRepeatingContainerNode} from './repeating-container-node';\n\n/**\n * Is a AjfRepeatingContainerNode of AjfNodeGroup\n */\nexport interface AjfNodeGroup extends AjfRepeatingContainerNode {\n  nodeType: AjfNodeType.AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseNode} from './base-node';\nimport {AjfNodeType} from './node-type';\n\n/**\n * Used by the formBuilder.\n * Represents an empty slot in which to insert a new ajfNode.\n */\nexport interface AjfFieldNodeLink extends AjfBaseNode {\n  nodeType: AjfNodeType.AjfFieldNodeLink;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from './container-node';\nimport {AjfRepeatingNode} from './repeating-node';\n\n/**\n * Interface representing a Repeating Node Group.\n * Repeating node groups are used any time the user is required to fill\n * the same node group N times, where N is the value of the \"formulaReps\" property.\n * (eg. N = number of children, then fill data for each of N children).\n */\nexport type AjfRepeatingContainerNode = AjfContainerNode & AjfRepeatingNode;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\n\nimport {AjfBaseNode} from './base-node';\n\n/**\n * Interface that is extended to represent a Repeating Node.\n * Repeating nodes are used any time a node can or must be repeated\n * N times, where N is the value of the \"formulaReps\" property.\n */\nexport interface AjfRepeatingNode extends AjfBaseNode {\n  /**\n   * Is the number of node repetition\n   * Example: \"opd_treatment == 'Yes' && ($groupReps || 1) || 0\"\n   */\n  // TODO(peppedeka) WARNING: currently, formulaReps is NOT evaluated.\n  // If formulaReps is set to any value, no repetition is allowed.\n  // The number of possible repetitions is currently determined by maxReps (if set).\n  formulaReps?: AjfFormula;\n\n  /**\n   *  Max number of repetitions\n   */\n  maxReps: number;\n\n  /**\n   *  Min number of repetitions\n   */\n  minReps: number;\n\n  /**\n   * If true show all slides of repeating node in readonly mode.\n   * Except the last slide.\n   * In the last slide remove button is always disabled and add button is enabled\n   * only when the last slide is valid.\n   */\n  disableRemoval?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {EventEmitter} from '@angular/core';\n\nimport {AjfNode} from '../nodes/node';\n\n/**\n * The instance of an ajfNode.\n * A single ajfNode can have multiple instances with different values\n * differentiated by a suffix, when used in a repeating slide.\n * (eg.\n * country__0 = 'ITA', country__1 = 'ESP'\n * city__0__0 = 'Milano', city__0__1 = 'Roma', city__1__0 = 'Madrid'\n * )\n *\n * The AjfNodeInstance visibility is determined by the visibility of the current branch\n * and  the visibility condition of the node itself.\n * @see {@link updateVisibility}\n * @see {@link updateConditionalBranches}\n */\n// TODO Check if jsDoc @see and @link actually work and are displayed as intended\nexport interface AjfBaseNodeInstance {\n  /**\n   * The AjfNode blueprint from which this node instance is generated\n   */\n  node: AjfNode;\n\n  /**\n   * Array of prefixes that identifies the tree of all the ancestor nodes indexes\n   */\n  prefix: number[];\n\n  /**\n   * The current node visibility\n   */\n  visible: boolean;\n\n  /**\n   * List of conditions that determines the branch to be followed\n   */\n  conditionalBranches: AjfCondition[];\n\n  /**\n   * AjfCondition for handling visibility\n   */\n  visibility?: AjfCondition;\n\n  /**\n   * Identifies the index of the condition verified and is equal to the\n   * parentNode of branch that determines..?\n   */\n  // TODO ask Trik\n  verifiedBranch?: number;\n\n  /**\n   * Emitted when any property of the node instance has changed value\n   */\n  updatedEvt: EventEmitter<void>;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingContainerNode} from '../nodes/repeating-container-node';\nimport {AjfContainerNodeInstance} from './container-node-instance';\nimport {AjfRepeatingNodeInstance} from './repeating-node-instance';\n\n/**\n * A node instance containing an AjfRepeatingContainerNode node.\n */\nexport interface AjfBaseRepeatingContainerNodeInstance\n  extends Omit<AjfContainerNodeInstance, 'node'>,\n    Omit<AjfRepeatingNodeInstance, 'node'> {\n  node: AjfRepeatingContainerNode;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseNodeInstance} from './base-node-instance';\nimport {AjfNodeInstance} from './node-instance';\n\n/**\n * An AjfNodeInstance that contains other AjfNodeInstances.\n */\nexport interface AjfContainerNodeInstance extends AjfBaseNodeInstance {\n  /**\n   * The children NodeInstances\n   */\n  nodes: AjfNodeInstance[];\n\n  /**\n   * A list of all the descendants NodeInstances, flattened in a single array\n   */\n  flatNodes: AjfNodeInstance[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeGroup} from '../nodes/node-group';\nimport {AjfBaseRepeatingContainerNodeInstance} from './base-repeating-container-node-instance';\n\n/**\n * A repeating container instance containing an AjfNodeGroup node.\n */\nexport interface AjfNodeGroupInstance extends AjfBaseRepeatingContainerNodeInstance {\n  node: AjfNodeGroup;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldInstance} from '../fields-instances/field-instance';\nimport {AjfRepeatingSlideInstance} from '../slides-instances/repeating-slide-instance';\nimport {AjfSlideInstance} from '../slides-instances/slide-instance';\nimport {AjfContainerNodeInstance} from './container-node-instance';\nimport {AjfRepeatingNodeInstance} from './repeating-node-instance';\n\nexport type AjfNodeInstance =\n  | AjfContainerNodeInstance\n  | AjfFieldInstance\n  | AjfRepeatingNodeInstance\n  | AjfRepeatingSlideInstance\n  | AjfSlideInstance;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRepeatingSlideInstance} from '../slides-instances/repeating-slide-instance';\nimport {AjfNodeGroupInstance} from './node-group-instance';\n\nexport type AjfRepeatingContainerNodeInstance = AjfNodeGroupInstance | AjfRepeatingSlideInstance;\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {AjfRepeatingNode} from '../../interface/nodes/repeating-node';\nimport {AjfBaseNodeInstance} from './base-node-instance';\n\n/**\n * A node instance containing an AjfRepeatingNode node.\n */\nexport interface AjfRepeatingNodeInstance extends AjfBaseNodeInstance {\n  /**\n   * The blueprint AjfRepeatingNode.\n   */\n  node: AjfRepeatingNode;\n\n  /**\n   * A formula that determines the number of repetitions calculated with the instance index.\n   */\n  formulaReps?: AjfFormula;\n\n  /**\n   * The numeric id of the current repetition.\n   */\n  reps: number;\n\n  /**\n   * True disable all slides eccept the last\n   */\n  disableRemoval?: boolean;\n\n  /**\n   * True if can add a new slide.\n   */\n  canAdd?: boolean;\n\n  /**\n   * True if can remove the current slide\n   */\n  canRemove?: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../nodes-instances/node-instance';\n\nexport interface AjfNodesInstancesOperation {\n  (nodes: AjfNodeInstance[]): AjfNodeInstance[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode} from '../nodes/node';\n\nexport interface AjfNodesOperation {\n  (nodes: AjfNode[]): AjfNode[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfRendererUpdateMap} from '../renderer-maps/update-map';\n\nexport interface AjfRendererUpdateMapOperation {\n  (map: AjfRendererUpdateMap): AjfRendererUpdateMap;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeInstance} from '../nodes-instances/node-instance';\n\nexport interface AjfRendererUpdateMap {\n  [prop: string]: AjfNodeInstance[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNodeType} from '../nodes/node-type';\nimport {AjfRepeatingContainerNode} from '../nodes/repeating-container-node';\n\n/**\n * An AjfRepeatingContainerNode of type AjfRepeatingSlide\n */\nexport interface AjfRepeatingSlide extends Omit<AjfRepeatingContainerNode, 'node'> {\n  nodeType: AjfNodeType.AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNode} from '../nodes/container-node';\nimport {AjfNodeType} from '../nodes/node-type';\n\n/**\n * An AjfContainerNode of type AjfSlide\n */\nexport interface AjfSlide extends AjfContainerNode {\n  nodeType: AjfNodeType.AjfSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContainerNodeInstance} from '../nodes-instances/container-node-instance';\nimport {AjfNodeInstance} from '../nodes-instances/node-instance';\n\n/**\n * An AjfContainerNodeInstance of type slide\n */\nexport interface AjfBaseSlideInstance extends AjfContainerNodeInstance {\n  /**\n   * The slide nodes.\n   * AjfSlideInstance use only the first element of the array.\n   * AjfRepeatingSlideInstance use one element for each repeating slide.\n   */\n  slideNodes: AjfNodeInstance[][];\n\n  /**\n   * False if at least one of the nodes is not valid\n   */\n  valid: boolean;\n\n  /**\n   * The current position of the slide\n   */\n  position: number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfBaseRepeatingContainerNodeInstance} from '../nodes-instances/base-repeating-container-node-instance';\nimport {AjfRepeatingSlide} from '../slides/repeating-slide';\nimport {AjfBaseSlideInstance} from './base-slide-instance';\n\n/**\n * An AjfBaseSlideInstance with node of type AjfRepeatingSlide\n */\nexport interface AjfRepeatingSlideInstance\n  extends AjfBaseSlideInstance,\n    Omit<AjfBaseRepeatingContainerNodeInstance, 'node'> {\n  node: AjfRepeatingSlide;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\n/**\n * An AjfCondition with the clientValidation option and a custom error message\n */\nexport interface AjfValidation extends AjfCondition {\n  /**\n   * True if client validation is enabled\n   */\n  clientValidation: boolean;\n\n  /**\n   * The error message to be used if the validation failed\n   */\n  errorMessage: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nimport {AjfValidation} from './validation';\n\n/**\n * A set of conditions\n */\nexport interface AjfValidationGroup {\n  forceValue?: AjfCondition;\n  maxValue?: AjfValidation;\n  minValue?: AjfValidation;\n  notEmpty?: AjfValidation;\n  notEmptyMessage?: string;\n  maxDigits?: AjfValidation;\n  minDigits?: AjfValidation;\n  conditions: AjfValidation[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * The result of the evaluation of a validation condition\n */\nexport interface AjfValidationResult {\n  /**\n   * True if the condition is valid\n   */\n  result: boolean;\n\n  /**\n   * The error message if the result is false\n   */\n  error: string;\n\n  /**\n   * The default value is false\n   */\n  // TODO() Check if it is actually used\n  clientValidation: boolean;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition} from '@ajf/core/models';\n\nexport interface AjfWarning extends AjfCondition {\n  warningMessage: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from './warning';\n\nexport interface AjfWarningGroup {\n  notEmpty?: AjfWarning;\n  conditions: AjfWarning[];\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfWarningResult {\n  result: boolean;\n  warning: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFixedOrigin} from '../../interface/choices/choices-fixed-origin';\nimport {AjfChoicesOriginCreate, createChoicesOrigin} from './create-choices-origin';\n\nexport type AjfChoicesFixedOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Partial<AjfChoicesFixedOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'fixed'\n */\nexport function createChoicesFixedOrigin<T = string | number>(\n  origin: AjfChoicesFixedOriginCreate<T>,\n): AjfChoicesFixedOrigin<T> {\n  const type = 'fixed';\n  return {...createChoicesOrigin({...origin, type}), type};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesFunctionOrigin} from '../../interface/choices/choices-function-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesFunctionOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesFunctionOrigin<T>, 'generator'> &\n  Partial<AjfChoicesFunctionOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'function'\n *  apply default value for label and choices\n */\nexport function createChoicesFunctionOrigin<T>(\n  origin: AjfChoicesFunctionOriginCreate<T>,\n): AjfChoicesFunctionOrigin<T> {\n  return {\n    ...origin,\n    type: 'function',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableArrayOrigin} from '../../interface/choices/choices-observable-array-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableArrayOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesObservableArrayOrigin<T>, 'generator'> &\n  Partial<AjfChoicesObservableArrayOrigin<T>>;\n\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'observableArray'\n *  apply default value for label and choices\n */\nexport function createChoicesObservableArrayOrigin<T>(\n  origin: AjfChoicesObservableArrayOriginCreate<T>,\n): AjfChoicesObservableArrayOrigin<T> {\n  return {\n    ...origin,\n    type: 'observableArray',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesObservableOrigin} from '../../interface/choices/choices-observable-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesObservableOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesObservableOrigin<T>, 'generator'> &\n  Partial<AjfChoicesObservableOrigin<T>>;\n\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'observable'\n *  apply default value for label and choices\n */\nexport function createChoicesObservableOrigin<T>(\n  origin: AjfChoicesObservableOriginCreate<T>,\n): AjfChoicesObservableOrigin<T> {\n  return {\n    ...origin,\n    type: 'observable',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesPromiseOrigin} from '../../interface/choices/choices-promise-origin';\nimport {AjfChoicesOriginCreate} from './create-choices-origin';\n\nexport type AjfChoicesPromiseOriginCreate<T> = Omit<AjfChoicesOriginCreate<T>, 'type'> &\n  Pick<AjfChoicesPromiseOrigin<T>, 'generator'> &\n  Partial<AjfChoicesPromiseOrigin<T>>;\n/**\n *  Create a AjfChoicesOrigin&lt;T&gt;, apply type attrinute as 'promise'\n *  apply default value for label and choices\n */\nexport function createChoicesPromiseOrigin<T>(\n  origin: AjfChoicesPromiseOriginCreate<T>,\n): AjfChoicesPromiseOrigin<T> {\n  return {\n    ...origin,\n    type: 'promise',\n    label: origin.label || '',\n    choices: origin.choices || [],\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * isChoicesOrigin check if co parameter is defined and if correctly implements choicheOrigin\n * interface\n */\nexport function isChoicesOrigin(co: any): boolean {\n  return (\n    co != null &&\n    typeof co === 'object' &&\n    co.name != null &&\n    typeof co.name === 'string' &&\n    co.label != null &&\n    typeof co.label === 'string' &&\n    ['fixed', 'promise', 'observable', 'observableArray', 'function'].indexOf(co.type) > -1 &&\n    co.choices instanceof Array\n  );\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '../../interface/choices/choices-origin';\nimport {isChoicesOrigin} from './is-choices-origin';\n\n/**\n * isChoicesFixedOrigin check if origin parameter is ChoicesOrigin and  type is 'fixed'\n */\nexport function isChoicesFixedOrigin(origin: AjfChoicesOrigin<any>): boolean {\n  return isChoicesOrigin(origin) && origin.type === 'fixed';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfNumberField} from '../../interface/fields/number-field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field type is Number.\n */\nexport function isNumberField(field: AjfField): field is AjfNumberField {\n  return field.fieldType === AjfFieldType.Number;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '../../interface/fields/field';\nimport {AjfRangeField} from '../../interface/fields/range-field';\nimport {AjfFieldType} from '../../interface/fields/field-type';\n\n/**\n * It is true if the field is a range field\n */\nexport function isRangeField(field: AjfField): field is AjfRangeField {\n  return field.fieldType === AjfFieldType.Range;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '../../interface/forms/form';\n\nexport type AjfFormCreate = Partial<AjfForm>;\n\n/**\n * It creates an Ajf form.\n * Any missing mandatory attributes are initialized with the respective\n * empty object\n *\n * @export\n * @param [form={}]\n * @return {*}\n */\nexport function createForm(form: AjfFormCreate = {}): AjfForm {\n  return {\n    nodes: form.nodes || [],\n    choicesOrigins: form.choicesOrigins || [],\n    attachmentsOrigins: form.attachmentsOrigins || [],\n    initContext: form.initContext || {},\n    stringIdentifier: form.stringIdentifier || [],\n    supplementaryInformations: form.supplementaryInformations,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the length of digits is less than or equal to maxValue and returns\n * an AjfValidation.\n */\nexport function maxDigitsValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length <= ${maxValue.toString()} : false`,\n    errorMessage: 'Digits count must be <= ' + maxValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the value is less than or equal to maxValue and returns\n * an AjfValidation.\n */\nexport function maxValidation(maxValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value <= ' + maxValue.toString(),\n    errorMessage: 'Value must be <= ' + maxValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the length of digits is greater than or equal to minValue and returns\n * an AjfValidation.\n */\nexport function minDigitsValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: `$value ? $value.toString().length >= ${minValue.toString()} : false`,\n    errorMessage: 'Digits count must be >= ' + minValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It checks if the value is geater than or equal to minValue and returns\n * an AjfValidation.\n */\nexport function minValidation(minValue: number): AjfValidation {\n  return createValidation({\n    condition: '$value >= ' + minValue.toString(),\n    errorMessage: 'Value must be >= ' + minValue.toString(),\n  });\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfValidation} from '../../interface/validation/validation';\nimport {createValidation} from './create-validation';\n\n/**\n * It creates an AjfValidation with notEmpty condition.\n */\nexport function notEmptyValidation(): AjfValidation {\n  return createValidation({condition: `notEmpty($value)`, errorMessage: `Value must not be empty`});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWarning} from '../../interface/warning/warning';\nimport {createWarning} from './create-warning';\n\nexport function notEmptyWarning(): AjfWarning {\n  return createWarning({condition: 'notEmpty($value)', warningMessage: 'Value must not be empty'});\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './as-validation-errors-string';\nexport * from './as-field-instance';\nexport * from './as-repeating-slide-instance';\nexport * from './base-field';\nexport * from './bool-to-int';\nexport * from './date-value';\nexport * from './date-value-string';\nexport * from './errors';\nexport * from './expand-input-with-choices';\nexport * from './field';\nexport * from './field-host';\nexport * from './field-icon';\nexport * from './field-is-valid';\nexport * from './field-service';\nexport * from './field-utils';\nexport * from './field-warning-alert-result';\nexport * from './field-with-choices';\nexport * from './file-field';\nexport * from './form';\nexport * from './form-renderer';\nexport * from './form-string-identifier';\nexport * from './forms-module';\nexport * from './get-table-cell-control';\nexport * from './increment';\nexport * from './input-field';\nexport * from './image-field';\nexport * from './is-cell-editable';\nexport * from './is-readonly-input-field';\nexport * from './is-repeating-slide';\nexport * from './node-complete-name';\nexport * from './range';\nexport * from './read-only-file-field';\nexport * from './read-only-date-field';\nexport * from './read-only-geolocation-field';\nexport * from './read-only-image-field';\nexport * from './read-only-select-field';\nexport * from './read-only-video-url-field';\nexport * from './search-alert-threshold';\nexport * from './serializers/attachments-origin-serializer';\nexport * from './serializers/choices-origin-serializer';\nexport * from './serializers/form-serializer';\nexport * from './serializers/node-serializer';\nexport * from './serializers/validation-group-serializer';\nexport * from './serializers/warning-group-serializer';\nexport * from './table-field';\nexport * from './table-row-class';\nexport * from './table-visible-columns';\nexport * from './valid-slide';\nexport * from './validation-service';\nexport * from './video-url-field';\nexport * from './warning-alert-service';\nexport * from './random-ajf-context-generator';\nexport * from './read-only-field';\nexport * from './read-only-table-field';\n\nexport * from './form-to-pdf/form-to-pdf';\n\nexport * from './interface/attachments/attachment';\nexport * from './interface/attachments/attachments-fixed-origin';\nexport * from './interface/attachments/attachments-origin';\nexport * from './interface/attachments/attachments-type';\nexport * from './interface/choices/base-choices-origin';\nexport * from './interface/choices/choice';\nexport * from './interface/choices/choices-fixed-origin';\nexport * from './interface/choices/choices-function';\nexport * from './interface/choices/choices-function-origin';\nexport * from './interface/choices/choices-observable-array-origin';\nexport * from './interface/choices/choices-observable-origin';\nexport * from './interface/choices/choices-origin';\nexport * from './interface/choices/choices-origin-type';\nexport * from './interface/choices/choices-promise-origin';\nexport * from './interface/choices/choices-type';\nexport * from './interface/fields/base-field';\nexport * from './interface/fields/boolean-field';\nexport * from './interface/fields/date-field';\nexport * from './interface/fields/date-input-field';\nexport * from './interface/fields/empty-field';\nexport * from './interface/fields/field';\nexport * from './interface/fields/field-components-map';\nexport * from './interface/fields/field-size';\nexport * from './interface/fields/field-type';\nexport * from './interface/fields/field-with-choices';\nexport * from './interface/fields/file-field';\nexport * from './interface/fields/formula-field';\nexport * from './interface/fields/multiple-choice-field';\nexport * from './interface/fields/number-field';\nexport * from './interface/fields/range-field';\nexport * from './interface/fields/single-choice-field';\nexport * from './interface/fields/string-field';\nexport * from './interface/fields/table-field';\nexport * from './interface/fields/text-field';\nexport * from './interface/fields/time-field';\nexport * from './interface/fields-instances/date-field-instance';\nexport * from './interface/fields-instances/date-input-field-instance';\nexport * from './interface/fields-instances/empty-field-instance';\nexport * from './interface/fields-instances/field-instance';\nexport * from './interface/fields-instances/field-state';\nexport * from './interface/fields-instances/field-with-choices-instance';\nexport * from './interface/fields-instances/formula-field-instance';\nexport * from './interface/fields-instances/range-field-instance';\nexport * from './interface/fields-instances/table-field-instance';\nexport * from './interface/forms/form';\nexport * from './interface/forms/form-string-identifier';\nexport * from './interface/nodes/base-node';\nexport * from './interface/nodes/container-node';\nexport * from './interface/nodes/node';\nexport * from './interface/nodes/node-group';\nexport * from './interface/nodes/node-link';\nexport * from './interface/nodes/node-type';\nexport * from './interface/nodes/repeating-container-node';\nexport * from './interface/nodes/repeating-node';\nexport * from './interface/nodes-instances/base-node-instance';\nexport * from './interface/nodes-instances/base-repeating-container-node-instance';\nexport * from './interface/nodes-instances/container-node-instance';\nexport * from './interface/nodes-instances/node-group-instance';\nexport * from './interface/nodes-instances/node-instance';\nexport * from './interface/nodes-instances/repeating-container-node-instance';\nexport * from './interface/nodes-instances/repeating-node-instance';\nexport * from './interface/operations/nodes-instances-operation';\nexport * from './interface/operations/nodes-operation';\nexport * from './interface/operations/renderer-update-map-operation';\nexport * from './interface/renderer-maps/update-map';\nexport * from './interface/slides/repeating-slide';\nexport * from './interface/slides/slide';\nexport * from './interface/slides-instances/base-slide-instance';\nexport * from './interface/slides-instances/repeating-slide-instance';\nexport * from './interface/slides-instances/slide-instance';\nexport * from './interface/validation/validation';\nexport * from './interface/validation/validation-group';\nexport * from './interface/validation/validation-results';\nexport * from './interface/warning/warning';\nexport * from './interface/warning/warning-group';\nexport * from './interface/warning/warning-result';\n\nexport * from './utils/choices/create-choices-fixed-origin';\nexport * from './utils/choices/create-choices-function-origin';\nexport * from './utils/choices/create-choices-observable-array-origin';\nexport * from './utils/choices/create-choices-observable-origin';\nexport * from './utils/choices/create-choices-origin';\nexport * from './utils/choices/create-choices-promise-origin';\nexport * from './utils/choices/init-choices-origin';\nexport * from './utils/choices/is-choices-fixed-origin';\nexport * from './utils/choices/is-choices-origin';\nexport * from './utils/fields/create-field';\nexport * from './utils/fields/is-custom-field-with-choices';\nexport * from './utils/fields/is-field-with-choices';\nexport * from './utils/fields/is-number-field';\nexport * from './utils/fields/is-range-field';\nexport * from './utils/fields/is-table-field';\nexport * from './utils/fields-instances/create-field-instance';\nexport * from './utils/fields-instances/create-field-with-choices-instance';\nexport * from './utils/forms/build-form-string-identifier';\nexport * from './utils/forms/create-form';\nexport * from './utils/nodes/create-container-node';\nexport * from './utils/nodes/create-node';\nexport * from './utils/nodes/flatten-nodes';\nexport * from './utils/nodes/is-container-node';\nexport * from './utils/nodes/is-field';\nexport * from './utils/nodes/is-repeating-container-node';\nexport * from './utils/nodes/is-slides-node';\nexport * from './utils/nodes-instances/create-node-instance';\nexport * from './utils/validation/create-validation';\nexport * from './utils/validation/create-validation-group';\nexport * from './utils/warning/create-warning';\nexport * from './utils/warning/create-warning-group';\nexport * from './utils/validation/max-digits-validation';\nexport * from './utils/validation/max-validation';\nexport * from './utils/validation/min-digits-validation';\nexport * from './utils/validation/min-validation';\nexport * from './utils/validation/not-empty-validation';\nexport * from './utils/warning/not-empty-warning';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["obsOf","i1.AjfValidationService","i2","i3","i1.AjfFormRendererService","i4","i5","CoreComponent","i4.AjfGetTableCellControlPipe","i5.AjfTableRowClass"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;MAEU,4BAA4B,CAAA;AACvC,IAAA,SAAS,CAAC,QAAyB,EAAA;QACjC,MAAM,aAAa,GAAG,QAA4B,CAAC;AACnD,QAAA,IAAI,aAAa,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB;AAAE,YAAA,OAAO,IAAI,CAAC;AACzE,QAAA,MAAM,MAAM,GAAG,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1E,QAAA,OAAO,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9C;;yHANU,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;uHAA5B,4BAA4B,EAAA,IAAA,EAAA,0BAAA,EAAA,CAAA,CAAA;2FAA5B,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBADxC,IAAI;mBAAC,EAAC,IAAI,EAAE,0BAA0B,EAAC,CAAA;;;AC9BxC;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;MAEU,sBAAsB,CAAA;AACjC,IAAA,SAAS,CAAC,QAAyB,EAAA;AACjC,QAAA,OAAO,QAA4B,CAAC;KACrC;;mHAHU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;iHAAtB,sBAAsB,EAAA,IAAA,EAAA,oBAAA,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBADlC,IAAI;mBAAC,EAAC,IAAI,EAAE,oBAAoB,EAAC,CAAA;;;AC9BlC;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;MAEU,+BAA+B,CAAA;AAC1C,IAAA,SAAS,CAAC,QAA0B,EAAA;AAClC,QAAA,OAAO,QAAgD,CAAC;KACzD;;4HAHU,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;0HAA/B,+BAA+B,EAAA,IAAA,EAAA,6BAAA,EAAA,CAAA,CAAA;2FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAD3C,IAAI;mBAAC,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAA;;;AC9B3C;;;;;;;;;;;;;;;;;;;;AAoBG;AAEH;;AAEG;AACH;IACY,aAoBX;AApBD,CAAA,UAAY,YAAY,EAAA;AACtB,IAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACN,IAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACN,IAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,YAAA,CAAA,YAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY,CAAA;AACZ,IAAA,YAAA,CAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAc,CAAA;AACd,IAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,YAAA,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS,CAAA;AACT,IAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,YAAA,CAAA,YAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAW,CAAA;AACX,IAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,YAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAQ,CAAA;AACR,IAAA,YAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,YAAA,CAAA,YAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAM,CAAA;AACR,CAAC,EApBW,YAAY,KAAZ,YAAY,GAoBvB,EAAA,CAAA,CAAA;;AC9CD;;;;;;;;;;;;;;;;;;;;AAoBG;AAEH;;AAEG;AACH;IACY,YAOX;AAPD,CAAA,UAAY,WAAW,EAAA;AACrB,IAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAQ,CAAA;AACR,IAAA,WAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAgB,CAAA;AAChB,IAAA,WAAA,CAAA,WAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAY,CAAA;AACZ,IAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAQ,CAAA;AACR,IAAA,WAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACR,CAAC,EAPW,WAAW,KAAX,WAAW,GAOtB,EAAA,CAAA,CAAA;;ACjCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;AAIG;AACI,eAAe,iBAAiB,CAAC,MAA6B,EAAA;;AAEnE,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;QAC3B,OAAO;AACR,KAAA;;AAED,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AAC9B,QAAA,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;QACpC,OAAO;AACR,KAAA;;AAED,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;QAC7B,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5E,KAAA;;AAED,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;AAChC,QAAA,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE;AAC5B,YAAA,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,OAAO,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACpD,iBAAA,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;AAC3C,iBAAA,IAAI,EAAE,CAAC;AACX,SAAA;AACF,KAAA;;AAED,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,iBAAiB,EAAE;AACrC,QAAA,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE;AAC5B,YAAA,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;AACpB,YAAA,OAAO,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC;AACpC,iBAAA,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;AAC3C,iBAAA,IAAI,EAAE,CAAC;AACX,SAAA;AACF,KAAA;IACD,OAAO;AACT;;AChEA;;;;;;;;;;;;;;;;;;;;AAoBG;AAGH;;;;AAIG;AACI,MAAM,aAAa,GAA0B,EAAE;;AC5BtD;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;AAKG;AACG,SAAU,wBAAwB,CAAC,KAAe,EAAA;AACtD,IAAA,QACE,KAAK,CAAC,SAAS,GAAG,GAAG;AACrB,QAAA,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI;QACtC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,iBAAiB,KAAK,IAAI,EACzD;AACJ;;ACpCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,kBAAkB,CAAU,KAAe,EAAA;AACzD,IAAA,QACE,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,YAAY,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,cAAc,EAChG;AACJ;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;;AAEG;AACG,SAAU,OAAO,CAAC,IAAa,EAAA;IACnC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC;AAChE;;AC9BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,eAAe,CAAC,YAA6B,EAAA;AAC3D,IAAA,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACzF;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;AAGG;AACG,SAAU,0BAA0B,CACxC,QAAyB,EAAA;IAEzB,QACE,QAAQ,IAAI,IAAI;QAChB,eAAe,CAAC,QAAQ,CAAC;AACzB,SAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAC9E;AACJ;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,YAAY,CAAC,KAAe,EAAA;AAC1C,IAAA,OAAO,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,KAAK,CAAC;AAChD;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACG,SAAU,oBAAoB,CAAC,QAAyB,EAAA;AAC5D,IAAA,OAAO,QAAQ,IAAI,IAAI,IAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACtF;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;AAGG;AACa,SAAA,yBAAyB,CAAC,QAAyB,EAAE,OAAmB,EAAA;AACtF,IAAA,MAAM,mBAAmB,GAAG,QAAQ,CAAC,mBAAmB,CAAC;IAEzD,IAAI,mBAAmB,IAAI,IAAI,EAAE;AAC/B,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC;QAC1C,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,OAAO,GAAG,GAAG,mBAAmB,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE;AACjD,YAAA,IAAI,QAAQ,GAAY,kBAAkB,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACxF,YAAA,IAAI,QAAQ,EAAE;gBACZ,KAAK,GAAG,IAAI,CAAC;AACb,gBAAA,IAAI,GAAG,KAAK,QAAQ,CAAC,cAAc,EAAE;AACnC,oBAAA,QAAQ,CAAC,cAAc,GAAG,GAAG,CAAC;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE,CAAC;AACP,SAAA;AAED,QAAA,IAAI,SAAS,KAAK,QAAQ,CAAC,cAAc,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACF,KAAA;AAED,IAAA,OAAO,KAAK,CAAC;AACf;;ACtDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;AAIG;AACG,SAAU,gBAAgB,CAC9B,QAAyB,EACzB,OAAmB,EACnB,gBAAgB,GAAG,IAAI,EAAA;AAEvB,IAAA,IAAI,QAAQ,CAAC,UAAU,IAAI,IAAI,EAAE;AAC/B,QAAA,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,MAAM,UAAU,GAAiB,QAAQ,CAAC,UAAU,CAAC;AAErD,IAAA,MAAM,aAAa,GAAY,QAAQ,CAAC,OAAO,CAAC;AAChD,IAAA,IAAI,aAAa,GACf,gBAAgB,IAAI,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACxE,IAAA,IAAI,aAAa,KAAK,QAAQ,CAAC,OAAO,EAAE;AACtC,QAAA,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC;AAClC,KAAA;IAED,OAAO,aAAa,KAAK,aAAa,CAAC;AACzC;;AClDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;AACA;;AAEG;AACG,SAAU,kBAAkB,CAAC,QAA6B,EAAA;AAC9D,IAAA,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC1D,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;IACD,OAAO,CAAA,EAAA,EAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE,CAAC;AAC3C;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;AACA;;AAEG;AACG,SAAU,wBAAwB,CAAC,QAA6B,EAAA;IACpE,OAAO,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI;AAC9C,UAAE,CAAA,EAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAA,EAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAE,CAAA;UACtD,EAAE,CAAC;AACT;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACa,SAAA,aAAa,CAC3B,QAA0B,EAC1B,OAAmB,EAAA;AAEnB,IAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AACjC,IAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;IACxC,IAAI,OAAO,IAAI,IAAI,IAAI,QAAQ,CAAC,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE;QAC9F,IAAI,QAAQ,GAAQ,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACjE,QAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;AAChC,QAAA,IAAI,QAAQ,KAAK,QAAQ,CAAC,KAAK,EAAE;AAC/B,YAAA,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;YAC1B,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC7D,YAAA,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AACpC,SAAA;QACD,OAAO,EAAC,OAAO,EAAE,QAAQ,KAAK,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC;AAC1D,KAAA;IACD,OAAO,EAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAC,CAAC;AACjD;;AChDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;AAGG;AACa,SAAA,wBAAwB,CAAC,QAA0B,EAAE,OAAmB,EAAA;AACtF,IAAA,IAAI,QAAQ,CAAC,kBAAkB,IAAI,IAAI,EAAE;QACvC,OAAO,kBAAkB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC3E,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACa,SAAA,kBAAkB,CAChC,UAAyB,EACzB,OAAoB,EAAA;IAEpB,OAAO;QACL,MAAM,EAAE,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC;QACzD,KAAK,EAAE,UAAU,CAAC,YAAY;QAC9B,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;KAC9C,CAAC;AACJ;;ACvCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;AAEG;AACa,SAAA,4BAA4B,CAC1C,UAA8B,EAC9B,OAAoB,EAAA;IAEpB,IAAI,GAAG,GAA0B,EAAE,CAAC;IACpC,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,IAAG;QAC3C,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,GAAG,CAAC;AACb;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACa,SAAA,2BAA2B,CACzC,UAA8B,EAC9B,KAAU,EAAA;AAEV,IAAA,IAAI,UAAU,CAAC,SAAS,IAAI,IAAI,EAAE;AAChC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,GAAG,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,UAAU,CAAC,SAAS,KAAK,QAAQ,EAAE;QAC5C,OAAO;YACL,MAAM,EAAE,kBAAkB,CAAC,CAA+B,4BAAA,EAAA,UAAU,CAAC,SAAS,CAAA,CAAE,EAAE,GAAG,CAAC;AACtF,YAAA,KAAK,EAAE,CAAA,wBAAA,EAA2B,UAAU,CAAC,SAAS,CAAE,CAAA;AACxD,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACH,KAAA;IACD,OAAO,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACvD;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACa,SAAA,0BAA0B,CACxC,UAA8B,EAC9B,KAAU,EAAA;AAEV,IAAA,IAAI,UAAU,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC/B,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,GAAG,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,QAAQ,EAAE;QAC3C,OAAO;YACL,MAAM,EAAE,kBAAkB,CAAC,CAAoB,iBAAA,EAAA,UAAU,CAAC,QAAQ,CAAA,CAAE,EAAE,GAAG,CAAC;AAC1E,YAAA,KAAK,EAAE,CAAA,iBAAA,EAAoB,UAAU,CAAC,QAAQ,CAAE,CAAA;AAChD,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACH,KAAA;AACD,IAAA,OAAO,kBAAkB,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;AACpE;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACa,SAAA,2BAA2B,CACzC,UAA8B,EAC9B,KAAU,EAAA;AAEV,IAAA,IAAI,UAAU,CAAC,SAAS,IAAI,IAAI,EAAE;AAChC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,GAAG,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,UAAU,CAAC,SAAS,KAAK,QAAQ,EAAE;QAC5C,OAAO;YACL,MAAM,EAAE,kBAAkB,CAAC,CAA+B,4BAAA,EAAA,UAAU,CAAC,SAAS,CAAA,CAAE,EAAE,GAAG,CAAC;AACtF,YAAA,KAAK,EAAE,CAAA,wBAAA,EAA2B,UAAU,CAAC,SAAS,CAAE,CAAA;AACxD,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACH,KAAA;IACD,OAAO,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACvD;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACa,SAAA,0BAA0B,CACxC,UAA8B,EAC9B,KAAU,EAAA;AAEV,IAAA,IAAI,UAAU,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC/B,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,GAAG,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,QAAQ,EAAE;QAC3C,OAAO;YACL,MAAM,EAAE,kBAAkB,CAAC,CAAoB,iBAAA,EAAA,UAAU,CAAC,QAAQ,CAAA,CAAE,EAAE,GAAG,CAAC;AAC1E,YAAA,KAAK,EAAE,CAAA,iBAAA,EAAoB,UAAU,CAAC,QAAQ,CAAE,CAAA;AAChD,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACH,KAAA;AACD,IAAA,OAAO,kBAAkB,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;AACpE;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;AAGG;AACa,SAAA,0BAA0B,CACxC,UAA8B,EAC9B,KAAU,EAAA;AAEV,IAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAA+C,CAAC;AACtE,IAAA,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE;AAC9B,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IACD,IAAI,EAAE,KAAK,IAAI,EAAE;QACf,OAAO;AACL,YAAA,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC;AACvB,YAAA,KAAK,EAAE,UAAU,CAAC,eAAe,IAAI,yBAAyB;AAC9D,YAAA,gBAAgB,EAAE,KAAK;SACxB,CAAC;AACH,KAAA;IACD,OAAO,kBAAkB,CAAC,EAAE,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;AACnD;;AChDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAeH;;AAEG;SACa,uBAAuB,CACrC,UAA8B,EAC9B,KAAU,EACV,OAAoB,EAAA;IAEpB,IAAI,GAAG,GAA0B,EAAE,CAAC;AACpC,IAAA,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC5B,IAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AACtB,IAAA,GAAG,GAAG,4BAA4B,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IACpD,IAAI,UAAU,CAAC,QAAQ,EAAE;QACvB,MAAM,QAAQ,GAAG,0BAA0B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,IAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,YAAA,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,SAAA;AACF,KAAA;IACD,IAAI,UAAU,CAAC,QAAQ,EAAE;QACvB,MAAM,QAAQ,GAAG,0BAA0B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,IAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,YAAA,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,SAAA;AACF,KAAA;IACD,IAAI,UAAU,CAAC,QAAQ,EAAE;QACvB,MAAM,QAAQ,GAAG,0BAA0B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,IAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,YAAA,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,SAAA;AACF,KAAA;IACD,IAAI,UAAU,CAAC,SAAS,EAAE;QACxB,MAAM,SAAS,GAAG,2BAA2B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACjE,IAAI,SAAS,IAAI,IAAI,EAAE;AACrB,YAAA,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrB,SAAA;AACF,KAAA;IACD,IAAI,UAAU,CAAC,SAAS,EAAE;QACxB,MAAM,SAAS,GAAG,2BAA2B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACjE,IAAI,SAAS,IAAI,IAAI,EAAE;AACrB,YAAA,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrB,SAAA;AACF,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb;;AC9EA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;AAKG;SACa,gBAAgB,CAC9B,QAA0B,EAC1B,OAAmB,EACnB,yBAA+B,EAAA;AAE/B,IAAA,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACvC,IAAI,UAAU,IAAI,IAAI,EAAE;AACtB,QAAA,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,OAAO;AACR,KAAA;;AAED,IAAA,IAAI,yBAAyB,EAAE;QAC7B,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;YACnD,OAAO,CAAC,CAAoB,iBAAA,EAAA,GAAG,CAAI,EAAA,CAAA,CAAC,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC;AACxE,SAAC,CAAC,CAAC;AACJ,KAAA;AAED,IAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;AAExD,IAAA,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,UAAU,IAAI,UAAU,CAAC,UAAU,EAAE;AACxE,QAAA,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9E,QAAA,OAAO,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AACvC,QAAA,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AACpC,KAAA;AAED,IAAA,QAAQ,CAAC,iBAAiB,GAAG,uBAAuB,CAAC,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,CAAC;IACjG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAChD,CAAC,IAAa,EAAE,CAAsB,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,EAC3D,IAAI,CACL,CAAC;AACJ;;AChEA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOa,SAAA,eAAe,CAC7B,OAAmB,EACnB,OAAoB,EAAA;IAEpB,OAAO;QACL,MAAM,EAAE,kBAAkB,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;QACtD,OAAO,EAAE,OAAO,CAAC,cAAc;KAChC,CAAC;AACJ;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQa,SAAA,yBAAyB,CACvC,OAAwB,EACxB,OAAoB,EAAA;AAEpB,IAAA,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AACxE;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQa,SAAA,oBAAoB,CAClC,OAAwB,EACxB,OAAoB,EAAA;AAEpB,IAAA,OAAO,yBAAyB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACrD;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;AAIG;AACa,SAAA,aAAa,CAAC,QAA0B,EAAE,OAAmB,EAAA;AAC3E,IAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACjC,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO;AACR,KAAA;AAED,IAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IAExD,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,OAAO,EAAE;QAC5C,QAAQ,CAAC,cAAc,GAAG,oBAAoB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAClE,KAAA;AACH;;AC5CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAYH;;AAEG;AACG,SAAU,wBAAwB,CACtC,QAA0B,EAC1B,OAAmB,EACnB,gBAAgB,GAAG,IAAI,EAAA;AAEvB,IAAA,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;AACtD,IAAA,yBAAyB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC7C,IAAA,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjC,IAAA,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpC,IAAA,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjC,IAAA,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC9C;;AC9CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMa,SAAA,qBAAqB,CACnC,QAA0C,EAC1C,OAAmB,EAAA;AAEnB,IAAA,IAAI,QAAQ,CAAC,aAAa,IAAI,IAAI,EAAE;AAClC,QAAA,QAAQ,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAG;AACxE,YAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACvB,YAAA,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;YAClC,OAAO,kBAAkB,CAAC,QAAQ,CAAC,aAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACtE,SAAC,CAAC,CAAC;AACJ,KAAA;AAAM,SAAA;QACL,QAAQ,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;AAChE,KAAA;AACH;;ACvCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACa,SAAA,uBAAuB,CACrC,QAA0C,EAC1C,OAAmB,EAAA;AAEnB,IAAA,IAAI,QAAQ,CAAC,iBAAiB,IAAI,IAAI,EAAE;AACtC,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACD,IAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;AACxD,IAAA,IAAI,QAAQ,CAAC,yBAAyB,CAAC,YAAY,CAAC,EAAE;AACpD,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;IACD,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,IAAA,MAAM,aAAa,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC;IACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;AACtC,QAAA,IAAI,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YACxE,KAAK,GAAG,IAAI,CAAC;YACb,MAAM;AACP,SAAA;AACF,KAAA;AACD,IAAA,QAAQ,CAAC,yBAAyB,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;AACzD,IAAA,OAAO,KAAK,CAAC;AACf;;ACnDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;;;;AAMG;AACG,SAAU,UAAU,CAAC,IAAmB,EAAA;AAC5C,IAAA,MAAM,mBAAmB,GACvB,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC;UACnE,IAAI,CAAC,mBAAmB;AAC1B,UAAE,CAAC,eAAe,EAAE,CAAC,CAAC;IAC1B,OAAO;AACL,QAAA,GAAG,IAAI;AACP,QAAA,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC;AACzD,QAAA,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE;AACvB,QAAA,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,eAAe,EAAE;QAChD,mBAAmB;KACT,CAAC;AACf;;AC9CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAWH;;;;;AAKG;AACG,SAAU,WAAW,CAAgC,KAAqB,EAAA;AAC9E,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,EAAC,GAAG,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,QAAQ,EAAC,CAAC,CAAC;AACpE,IAAA,MAAM,QAAQ,GACZ,KAAK,CAAC,QAAQ,IAAI,IAAI;UAClB,KAAK,CAAC,QAAQ;AAChB,UAAE,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,OAAO,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,KAAK,CAAC;IACzF,OAAO;AACL,QAAA,GAAG,IAAI;AACP,QAAA,GAAG,KAAK;QACR,QAAQ,EAAE,WAAW,CAAC,QAAQ;QAC9B,QAAQ;AACR,QAAA,YAAY,EAAE,KAAK,CAAC,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,GAAG,IAAI;AACpE,QAAA,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,QAAQ;KACxB,CAAC;AACT;;ACnDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACG,SAAU,YAAY,CAAC,IAAa,EAAA;IACxC,QACE,IAAI,IAAI,IAAI;AACZ,SAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC,EAC3F;AACJ;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,eAAe,CAAC,IAAa,EAAA;AAC3C,IAAA,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5F;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;;AAEG;AACG,SAAU,uBAAuB,CACrC,YAA6B,EAAA;AAE7B,IAAA,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACjG;;AChCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;AAKG;SACa,qBAAqB,CACnC,KAAwB,EACxB,aAAa,GAAG,KAAK,EAAA;IAErB,IAAI,SAAS,GAAsB,EAAE,CAAC;AACtC,IAAA,KAAK,CAAC,OAAO,CAAC,CAAC,YAA6B,KAAI;AAC9C,QAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACjC,YAAA,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9B,SAAA;AACD,QAAA,IAAI,uBAAuB,CAAC,YAAY,CAAC,EAAE;AACzC,YAAA,IAAI,aAAa,EAAE;AACjB,gBAAA,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9B,aAAA;AACD,YAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAC1B,qBAAqB,CAAE,YAAyC,CAAC,KAAK,EAAE,aAAa,CAAC,CACvF,CAAC;AACH,SAAA;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,SAAS,CAAC;AACnB;;ACrDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACG,SAAU,gBAAgB,CAC9B,YAA6B,EAAA;AAE7B,IAAA,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC9F;;AClCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACG,SAAU,yBAAyB,CAAC,KAAwB,EAAA;IAChE,IAAI,QAAQ,GAAuB,EAAE,CAAC;AACtC,IAAA,KAAK,CAAC,OAAO,CAAC,CAAC,YAA6B,KAAI;AAC9C,QAAA,IAAI,gBAAgB,CAAC,YAAY,CAAC,EAAE;AAClC,YAAA,QAAQ,CAAC,IAAI,CAAC,YAAgC,CAAC,CAAC;YAChD,YAAY,CAAC,SAAS,GAAG,qBAAqB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACpE,SAAA;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,QAAQ,CAAC;AAClB;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;AACG,SAAU,WAAW,CAAC,IAAa,EAAA;IACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY,CAAC;AACpE;;AC7BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,mBAAmB,CACjC,YAA6B,EAAA;AAE7B,IAAA,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC7F;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,wBAAwB,CAAC,IAAa,EAAA;IACpD,QACE,IAAI,IAAI,IAAI;AACZ,SAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,iBAAiB,CAAC,EAC/F;AACJ;;AClCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,gCAAgC,CAC9C,YAA6B,EAAA;AAE7B,IAAA,QACE,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,wBAAwB,CAAC,YAAY,CAAC,IAAI,CAAC,EAChG;AACJ;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACG,SAAU,wBAAwB,CACtC,YAA6B,EAAA;IAE7B,QACE,YAAY,IAAI,IAAI;QACpB,YAAY,CAAC,IAAI,IAAI,IAAI;SACxB,YAAY,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY;YACtD,YAAY,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,iBAAiB,CAAC,EAC/D;AACJ;;ACvCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,gBAAgB,CAAC,IAAa,EAAA;IAC5C,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,iBAAiB,CAAC;AACzE;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;AAGG;AACG,SAAU,wBAAwB,CACtC,QAAyB,EAAA;IAEzB,QACE,QAAQ,IAAI,IAAI;QAChB,QAAQ,CAAC,IAAI,IAAI,IAAI;QACrB,gBAAgB,CAAC,QAAQ,CAAC;AAC1B,QAAA,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC/B;AACJ;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,WAAW,CAAC,IAAa,EAAA;IACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC;AAChE;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,eAAe,CAAC,YAA6B,EAAA;AAC3D,IAAA,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC7F;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;;AAMG;AACG,SAAU,kBAAkB,CAAC,QAA+B,EAAA;IAChE,OAAO;QACL,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,QAAA,MAAM,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE;AACnD,QAAA,OAAO,EAAE,QAAQ,CAAC,OAAO,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,GAAG,IAAI;AAC3D,QAAA,mBAAmB,EAAE,EAAE;QACvB,UAAU,EAAE,IAAI,YAAY,EAAQ;KACrC,CAAC;AACJ;;AC3CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAYH;;;;;;;;;;;AAWG;SACa,mBAAmB,CACjC,QAAgC,EAChC,OAAmB,EACnB,aAA8B,EAAA;AAE9B,IAAA,MAAM,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAClD,IAAI,KAAK,GAAQ,IAAI,CAAC;IACtB,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAE;AAChD,QAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YAC3C,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,SAAA;AAAM,aAAA,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;AACxC,YAAA,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAC/B,SAAA;AAAM,aAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC7C,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,EAAE;AAC9C,gBAAA,IAAI,UAAU,GAAY,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9E,gBAAA,IAAI,UAAU,IAAI,aAAa,IAAI,aAAa,CAAC,UAAU,EAAE;oBAC3D,UAAU,GAAG,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9E,iBAAA;AACD,gBAAA,IAAI,UAAU,EAAE;AACd,oBAAA,OAAO,CAAC,YAAY,CAAC,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACzF,iBAAA;AACF,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;AACpD,aAAA;AACD,YAAA,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAC/B,SAAA;AACF,KAAA;IACD,OAAO;AACL,QAAA,GAAG,YAAY;QACf,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,KAAK;AACL,QAAA,KAAK,EAAE,KAAK;AACZ,QAAA,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB,IAAI,EAAE;AACnD,QAAA,cAAc,EAAE,QAAQ,CAAC,cAAc,IAAI,EAAE;QAC7C,cAAc,EAAE,IAAI,YAAY,EAAQ;KACzC,CAAC;AACJ;;ACjFA;;;;;;;;;;;;;;;;;;;;AAoBG;AAUH;;;;AAIG;AACa,SAAA,8BAA8B,CAC5C,QAA8C,EAC9C,OAAmB,EAAA;IAEnB,MAAM,aAAa,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC7D,OAAO;AACL,QAAA,GAAG,aAAa;QAChB,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,eAAe,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC3C,QAAA,yBAAyB,EAAE,EAAE;QAC7B,gBAAgB,EAAE,IAAI,YAAY,EAAQ;KAC3C,CAAC;AACJ;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAWH;;;;AAIG;AACH,SAAS,aAAa,CAAC,IAAmB,EAAA;IACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,MAAM,KAAI;QAChC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,OAAO,KAAI;AAC5B,YAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC;AACvE,aAAA;AACH,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;;AAKG;AACa,SAAA,wBAAwB,CACtC,QAAqC,EACrC,OAAmB,EAAA;AAEnB,IAAA,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC9B,IAAA,aAAa,CAAC,QAAQ,CAAC,IAAqB,CAAC,CAAC;IAC9C,MAAM,aAAa,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC7D,OAAO;AACL,QAAA,GAAG,aAAa;QAChB,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,OAAO;AACP,QAAA,aAAa,EAAE,QAAQ,CAAC,aAAa,IAAI,KAAK;AAC9C,QAAA,QAAQ,EAAE,EAAE;KACb,CAAC;AACJ;;AClEA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;AACG,SAAU,uBAAuB,CACrC,QAAoC,EAAA;AAEpC,IAAA,MAAM,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAClD,OAAO;AACL,QAAA,GAAG,YAAY;QACf,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,WAAW,EAAE,QAAQ,CAAC,WAAW;AACjC,QAAA,IAAI,EAAE,CAAC;AACP,QAAA,KAAK,EAAE,EAAE;AACT,QAAA,SAAS,EAAE,EAAE;KACd,CAAC;AACJ;;AC5CA;;;;;;;;;;;;;;;;;;;;AAoBG;AASH;;;;;AAKG;AACG,SAAU,mBAAmB,CAAC,QAAgC,EAAA;AAClE,IAAA,MAAM,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAClD,OAAO;AACL,QAAA,GAAG,YAAY;QACf,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,QAAA,KAAK,EAAE,EAAE;AACT,QAAA,UAAU,EAAE,EAAE;AACd,QAAA,SAAS,EAAE,EAAE;AACb,QAAA,KAAK,EAAE,KAAK;AACZ,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,QAAQ,EAAE,QAAQ,CAAC,QAAQ,IAAI,IAAI;QACnC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAc,EAAE;KACrD,CAAC;AACJ;;AChDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAUH;;;;AAIG;AACG,SAAU,4BAA4B,CAC1C,QAAyC,EAAA;IAEzC,MAAM,EAAC,IAAI,EAAE,GAAG,mBAAmB,EAAC,GAAG,QAAQ,CAAC;IAChD,MAAM,EAAC,QAAQ,EAAE,GAAG,SAAS,EAAC,GAAG,IAAI,CAAC;IACtC,MAAM,aAAa,GAAG,mBAAmB,CAAC;AACxC,QAAA,GAAG,mBAAmB;QACtB,IAAI,EAAE,EAAC,QAAQ,EAAE,WAAW,CAAC,QAAQ,EAAE,GAAG,SAAS,EAAC;AACrD,KAAA,CAAC,CAAC;IACH,OAAO;AACL,QAAA,GAAG,aAAa;QAChB,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,QAAA,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,QAAQ,CAAC,WAAW;QACjC,cAAc,EAAE,QAAQ,CAAC,cAAc;AACvC,QAAA,IAAI,EAAE,CAAC;AACP,QAAA,KAAK,EAAE,EAAE;AACT,QAAA,SAAS,EAAE,EAAE;KACd,CAAC;AACJ;;ACtDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;AACG,SAAU,qBAAqB,CAAC,KAAkC,EAAA;AACtE,IAAA,OAAO,EAAC,GAAG,KAAK,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,IAAI,EAAE,EAAC,CAAC;AACxD;;AC7BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;AACG,SAAU,kBAAkB,CAAC,KAA+B,EAAA;AAChE,IAAA,OAAO,EAAC,GAAG,KAAK,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,IAAI,EAAE,EAAC,CAAC;AACxD;;AC7BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACa,SAAA,yBAAyB,CACvC,QAAuC,EACvC,IAAa,EAAA;IAEb,IAAI,UAAU,GAAc,EAAE,CAAC;AAC/B,IAAA,IAAI,SAAS,GAAkB,IAAI,CAAC,MAAM,CAAC;IAC3C,OAAO,SAAS,IAAI,IAAI,EAAE;QACxB,MAAM,OAAO,GAAG,QAAQ;aACrB,GAAG,CAAC,CAAC,CAA4B,KAAM,CAAqB,CAAC,IAAI,IAAK,CAAa,CAAC;aACpF,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;AAChC,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,wBAAwB,CAAC,OAAO,CAAC,EAAE;AACrC,gBAAA,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1B,aAAA;AACF,SAAA;AACD,QAAA,SAAS,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;AACrD,KAAA;AACD,IAAA,OAAO,UAAU,CAAC;AACpB;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;AASH;;;;AAIG;AACa,SAAA,8BAA8B,CAC5C,QAAuC,EACvC,IAAa,EAAA;IAEb,IAAI,KAAK,GAA6B,EAAE,CAAC;IACzC,MAAM,UAAU,GAAG,yBAAyB,CAAC,QAAQ,EAAE,IAAI,CAAmB,CAAC;IAC/E,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,KACxB,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,IAAG;AAC3B,QAAA,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;AACf,YAAA,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACtB,SAAA;KACF,CAAC,CACH,CAAC;AACF,IAAA,OAAO,KAAK,CAAC;AACf;;AChDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACa,SAAA,gBAAgB,CAC9B,QAAuC,EACvC,IAAa,EAAA;IAEb,IAAI,UAAU,GAAmB,IAAI,CAAC;AACtC,IAAA,IAAI,SAAS,GAAkB,IAAI,CAAC,MAAM,CAAC;AAC3C,IAAA,OAAO,SAAS,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,EAAE;QAC9C,MAAM,OAAO,GAAG,QAAQ;aACrB,GAAG,CAAC,CAAC,CAA4B,KAAM,CAAqB,CAAC,IAAI,IAAK,CAAa,CAAC;aACpF,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC;AAChC,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE;gBAC5B,UAAU,GAAG,OAAO,CAAC;AACtB,aAAA;AACF,SAAA;AACD,QAAA,SAAS,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;AACrD,KAAA;AACD,IAAA,OAAO,UAAU,CAAC;AACpB;;AC/CA;;;;;;;;;;;;;;;;;;;;AAoBG;SAIa,oBAAoB,CAClC,SAAuB,EACvB,cAAwC,EACxC,MAAgB,EAAA;AAEhB,IAAA,MAAM,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC;IACzC,IAAI,YAAY,GAAG,mBAAmB,CAAC,YAAY,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IAC7E,IAAI,YAAY,KAAK,YAAY,EAAE;AACjC,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AACD,IAAA,OAAO,EAAC,SAAS,EAAE,YAAY,EAAC,CAAC;AACnC;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;SAMa,qBAAqB,CACnC,UAA0B,EAC1B,cAAwC,EACxC,MAAgB,EAAA;IAEhB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,MAAM,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,IAAG;QAC/C,MAAM,YAAY,GAAG,oBAAoB,CAAC,SAAS,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;QAC7E,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;AACD,QAAA,OAAO,YAAY,CAAC;AACtB,KAAC,CAAC,CAAC;IACH,OAAO,OAAO,GAAG,aAAa,GAAG,UAAU,CAAC;AAC9C;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;SAIa,kBAAkB,CAChC,OAAmB,EACnB,cAAwC,EACxC,MAAgB,EAAA;AAEhB,IAAA,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC;IACnC,IAAI,UAAU,GAAG,mBAAmB,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IACzE,IAAI,UAAU,KAAK,UAAU,EAAE;AAC7B,QAAA,OAAO,OAAO,CAAC;AAChB,KAAA;AACD,IAAA,OAAO,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC;AAC/B;;ACnCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAGH;;AAEG;AACG,SAAU,gBAAgB,CAC9B,UAAqE,EAAA;IAErE,OAAO;AACL,QAAA,GAAG,UAAU;AACb,QAAA,gBAAgB,EAAE,UAAU,CAAC,gBAAgB,IAAI,KAAK;AACtD,QAAA,YAAY,EAAE,UAAU,CAAC,YAAY,IAAI,iBAAiB;KAC3D,CAAC;AACJ;;AClCA;;;;;;;;;;;;;;;;;;;;AAoBG;SAOa,qBAAqB,CACnC,UAAyB,EACzB,cAAwC,EACxC,MAAgB,EAAA;AAEhB,IAAA,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC;IAC3C,IAAI,aAAa,GAAG,mBAAmB,CAAC,aAAa,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IAC/E,IAAI,aAAa,KAAK,aAAa,EAAE;AACnC,QAAA,OAAO,UAAU,CAAC;AACnB,KAAA;IACD,OAAO,gBAAgB,CAAC,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC,CAAC;AACtD;;ACtCA;;;;;;;;;;;;;;;;;;;;AAoBG;SAKa,sBAAsB,CACpC,WAA4B,EAC5B,cAAwC,EACxC,MAAgB,EAAA;IAEhB,IAAI,OAAO,GAAG,KAAK,CAAC;AACpB,IAAA,MAAM,cAAc,GAAG,CAAC,WAAW,IAAI,EAAE,EAAE,GAAG,CAAC,UAAU,IAAG;QAC1D,MAAM,aAAa,GAAG,qBAAqB,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;QAChF,IAAI,aAAa,KAAK,UAAU,EAAE;YAChC,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;AACD,QAAA,OAAO,aAAa,CAAC;AACvB,KAAC,CAAC,CAAC;IACH,OAAO,OAAO,GAAG,cAAc,GAAG,WAAW,CAAC;AAChD;;ACvCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIG,SAAU,aAAa,CAC3B,OAA4D,EAAA;AAE5D,IAAA,OAAO,EAAC,GAAG,OAAO,EAAE,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,mBAAmB,EAAC,CAAC;AACrF;;AC5BA;;;;;;;;;;;;;;;;;;;;AAoBG;SAOa,kBAAkB,CAChC,OAAmB,EACnB,cAAwC,EACxC,MAAgB,EAAA;AAEhB,IAAA,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;IACrC,IAAI,UAAU,GAAG,mBAAmB,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IACzE,IAAI,UAAU,KAAK,UAAU,EAAE;AAC7B,QAAA,OAAO,OAAO,CAAC;AAChB,KAAA;IACD,OAAO,aAAa,CAAC,EAAC,SAAS,EAAE,UAAU,EAAC,CAAC,CAAC;AAChD;;ACtCA;;;;;;;;;;;;;;;;;;;;AAoBG;SAKa,mBAAmB,CACjC,QAAsB,EACtB,cAAwC,EACxC,MAAgB,EAAA;IAEhB,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,IAAG;QACzC,MAAM,UAAU,GAAG,kBAAkB,CAAC,OAAO,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;QACvE,IAAI,UAAU,KAAK,OAAO,EAAE;YAC1B,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;AACD,QAAA,OAAO,UAAU,CAAC;AACpB,KAAC,CAAC,CAAC;IACH,OAAO,OAAO,GAAG,WAAW,GAAG,QAAQ,CAAC;AAC1C;;ACvCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAyCH;;;;AAIG;AACG,SAAU,kBAAkB,CAChC,QAAuC,EACvC,IAAa,EACb,MAAgB,EAChB,OAAmB,EAAA;IAEnB,IAAI,QAAQ,GAA2B,IAAI,CAAC;AAC5C,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,IAAA,QAAQ,QAAQ;QACd,KAAK,WAAW,CAAC,QAAQ;YACvB,MAAM,KAAK,GAAG,IAAgB,CAAC;AAC/B,YAAA,IAAI,KAAK,CAAC,SAAS,GAAG,GAAG,EAAE;AACzB,gBAAA,IACE,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI;oBACtC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,cAAc,IAAI,IAAI,EACrD;oBACA,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,cAAe,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,OAAO,CAAC,CAAC;AAC3F,iBAAA;AAAM,qBAAA;AACL,oBAAA,QAAQ,GAAG,mBAAmB,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,OAAO,CAAC,CAAC;AAChE,iBAAA;AACF,aAAA;AAAM,iBAAA;gBACL,QAAQ,KAAK,CAAC,SAAS;oBACrB,KAAK,YAAY,CAAC,YAAY,CAAC;oBAC/B,KAAK,YAAY,CAAC,cAAc;AAC9B,wBAAA,QAAQ,GAAG,8BAA8B,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,OAAO,CAAC,CAAC;wBAC1E,MAAM;oBACR,KAAK,YAAY,CAAC,KAAK;AACrB,wBAAA,QAAQ,GAAG,wBAAwB,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,OAAO,CAAC,CAAC;wBACpE,MAAM;AACR,oBAAA;wBACE,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACvD,wBAAA,QAAQ,GAAG,mBAAmB,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;wBAC9E,MAAM;AACT,iBAAA;AACF,aAAA;YACD,MAAM;QACR,KAAK,WAAW,CAAC,YAAY;YAC3B,QAAQ,GAAG,uBAAuB,CAAC,EAAC,IAAI,EAAE,IAAoB,EAAE,MAAM,EAAC,CAAC,CAAC;YACzE,MAAM;QACR,KAAK,WAAW,CAAC,iBAAiB;YAChC,QAAQ,GAAG,4BAA4B,CAAC,EAAC,IAAI,EAAE,IAAyB,EAAE,MAAM,EAAC,CAAC,CAAC;YACnF,MAAM;QACR,KAAK,WAAW,CAAC,QAAQ;YACvB,QAAQ,GAAG,mBAAmB,CAAC,EAAC,IAAI,EAAE,IAAgB,EAAE,MAAM,EAAC,CAAC,CAAC;YACjE,MAAM;AACT,KAAA;IACD,IAAI,QAAQ,IAAI,IAAI,EAAE;QACpB,MAAM,SAAS,GAAG,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,QAAA,IAAI,SAAS,EAAE;YACb,MAAM,cAAc,GAAG,8BAA8B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAEtE,YAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;AAC3B,gBAAA,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBAChD,MAAM,aAAa,GAAG,mBAAmB,CAAC,aAAa,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AACjF,gBAAA,QAAQ,CAAC,UAAU;AACjB,oBAAA,aAAa,KAAK,aAAa;0BAC3B,eAAe,CAAC,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC;AAC7C,0BAAE,IAAI,CAAC,UAAU,CAAC;AACvB,aAAA;AAED,YAAA,MAAM,mBAAmB,GACvB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC;AACvF,kBAAE,QAAQ,CAAC,IAAI,CAAC,mBAAmB;AACnC,kBAAE,CAAC,eAAe,EAAE,CAAC,CAAC;YAC1B,QAAQ,CAAC,mBAAmB,GAAG,qBAAqB,CAClD,mBAAmB,EACnB,cAAc,EACd,MAAM,CACP,CAAC;YAEF,IAAI,mBAAmB,CAAC,QAAQ,CAAC,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;AACvE,gBAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC9C,IAAI,WAAW,IAAI,IAAI,EAAE;AACvB,oBAAA,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC;oBACvC,IAAI,UAAU,GAAG,mBAAmB,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AACzE,oBAAA,QAAQ,CAAC,WAAW;AAClB,wBAAA,UAAU,KAAK,UAAU,GAAG,aAAa,CAAC,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,GAAG,WAAW,CAAC;AAClF,iBAAA;AACF,aAAA;AAAM,iBAAA,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;AACpC,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE;AACzB,oBAAA,QAAQ,CAAC,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AACtF,iBAAA;AAED,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;AACpC,oBAAA,MAAM,aAAa,GAAG,sBAAsB,CAC1C,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EACnC,cAAc,EACd,MAAM,CACP,CAAC;oBACF,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;wBACzD,QAAQ,CAAC,UAAU,GAAG,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtE,wBAAA,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,aAAa,CAAC;AAChD,qBAAA;AAAM,yBAAA;wBACL,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;AAChD,qBAAA;AACF,iBAAA;AAED,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;AACjC,oBAAA,MAAM,WAAW,GAAG,mBAAmB,CACrC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAChC,cAAc,EACd,MAAM,CACP,CAAC;oBACF,IAAI,WAAW,KAAK,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;wBACpD,QAAQ,CAAC,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7D,wBAAA,QAAQ,CAAC,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC;AAC3C,qBAAA;AAAM,yBAAA;wBACL,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1C,qBAAA;AACF,iBAAA;AAED,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,EAAE;AAC5C,oBAAA,QAAQ,CAAC,kBAAkB,GAAG,oBAAoB,CAChD,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAChC,cAAc,EACd,MAAM,CACP,CAAC;AACH,iBAAA;AAED,gBAAA,IAAI,0BAA0B,CAAC,QAAQ,CAAC,EAAE;AACxC,oBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;AACvC,wBAAA,QAAQ,CAAC,aAAa,GAAG,kBAAkB,CACzC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAC3B,cAAc,EACd,MAAM,CACP,CAAC;AACH,qBAAA;AACD,oBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,EAAE;AAC3C,wBAAA,QAAQ,CAAC,iBAAiB,GAAG,qBAAqB,CAChD,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAC/B,cAAc,EACd,MAAM,CACP,CAAC;AACH,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AAAM,aAAA;YACL,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;AAC/C,YAAA,MAAM,mBAAmB,GACvB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC;AACvF,kBAAE,QAAQ,CAAC,IAAI,CAAC,mBAAmB;AACnC,kBAAE,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1B,YAAA,QAAQ,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YACnD,IAAI,mBAAmB,CAAC,QAAQ,CAAC,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;gBACvE,MAAM,UAAU,GAAG,QAA6C,CAAC;gBACjE,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;AACtD,aAAA;AAAM,iBAAA,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;gBACpC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC/C,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;gBACzC,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;AAC/D,gBAAA,IAAI,0BAA0B,CAAC,QAAQ,CAAC,EAAE;oBACxC,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;oBACrD,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAC9D,iBAAA;gBACD,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1C,aAAA;AACF,SAAA;AACF,KAAA;AACD,IAAA,OAAO,QAAQ,CAAC;AAClB;;ACjOA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMa,SAAA,iBAAiB,CAAC,QAA0B,EAAE,OAAmB,EAAA;AAC/E,IAAA,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC7B,QAAA,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,MAAM,QAAQ,GAAiB,QAAQ,CAAC,QAAQ,CAAC;AAEjD,IAAA,MAAM,cAAc,GAAY,QAAQ,CAAC,QAAQ,CAAC;IAClD,IAAI,cAAc,GAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC/E,IAAA,IAAI,cAAc,KAAK,QAAQ,CAAC,QAAQ,EAAE;AACxC,QAAA,QAAQ,CAAC,QAAQ,GAAG,cAAc,CAAC;AACpC,KAAA;IAED,OAAO,cAAc,KAAK,cAAc,CAAC;AAC3C;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;AAIG;AACG,SAAU,YAAY,CAAC,KAAgB,EAAA;IAC3C,IAAI,SAAS,GAAc,EAAE,CAAC;AAC9B,IAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAa,KAAI;AAC9B,QAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrB,QAAA,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD,SAAA;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,SAAS,CAAC;AACnB;;ACtCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;AAIG;AACa,SAAA,YAAY,CAAC,KAAgB,EAAE,MAAqB,EAAA;IAClE,IAAI,QAAQ,GAAc,EAAE,CAAC;IAC7B,KAAK;AACF,SAAA,MAAM,CAAC,CAAC,CAAU,KACjB,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CACzE;AACA,SAAA,IAAI,CAAC,CAAC,EAAW,EAAE,EAAW,KAAK,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;AACjE,SAAA,OAAO,CAAC,CAAC,CAAU,KAAI;AACtB,QAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxD,KAAC,CAAC,CAAC;AACL,IAAA,OAAO,QAAQ,CAAC;AAClB;;ACzCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;AAEG;AACa,SAAA,aAAa,CAAC,QAAkC,EAAE,OAAoB,EAAA;AACpF,IAAA,MAAM,OAAO,GAAW,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;AAC3C,IAAA,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,IAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;QACrC,MAAM,OAAO,GAAG,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5D,IAAI,OAAO,IAAI,IAAI,EAAE;AACnB,YAAA,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;AACzB,SAAA;aAAM,IAAI,OAAO,IAAI,CAAC,EAAE;AACvB,YAAA,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AACnB,SAAA;AACF,KAAA;AAAM,SAAA;AACL,QAAA,IAAI,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC7E,IAAI,OAAO,KAAK,OAAO,EAAE;AACvB,YAAA,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;AACzB,SAAA;AACF,KAAA;IACD,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IACvF,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1F,IAAA,OAAO,OAAO,CAAC;AACjB;;ACjDA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;;;AAOG;AACa,SAAA,UAAU,CAAC,KAA2B,EAAE,GAAW,EAAA;AACjE,IAAA,IAAI,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE;AAClC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,OAAO,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;SACzB,GAAG,CAAC,CAAC,IAAG;AACP,QAAA,IAAI,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;YACrD,OAAa,CAAE,CAAC,KAAK,CAAC;AACvB,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;AACd,KAAC,CAAC;AACD,SAAA,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;AACxC;;AC5CA;;;;;;;;;;;;;;;;;;;;AAoBG;MAMU,oBAAoB,CAAA;AA6V/B,IAAA,WAAA,GAAA;AA5VQ,QAAA,IAAA,CAAA,kBAAkB,GAAa;AACrC,YAAA,CAAA;;;;;AAK6D,gEAAA,CAAA;AAC7D,YAAA,CAAA;;;;;;;AAOE,KAAA,CAAA;AACF,YAAA,CAAA;;;;;AAKoD,uDAAA,CAAA;AACpD,YAAA,CAAA;;;;;;;AAOE,KAAA,CAAA;AACF,YAAA,CAAA;;;;;AAKwF,2FAAA,CAAA;AACxF,YAAA,CAAA;;;;;AAKE,KAAA,CAAA;AACF,YAAA,CAAA;;;;;AAKsF,yFAAA,CAAA;AACtF,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;AAqBI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;AAYI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;AAmBI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;AAmBI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AAwBI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;AAgBI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;AAeI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;AAQI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;;AASI,OAAA,CAAA;AACJ,YAAA,CAAA;;;AAGI,OAAA,CAAA;AACJ,YAAA,CAAA;;;AAGI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;AAII,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;;AAQI,OAAA,CAAA;AACJ,YAAA,CAAA;;;;;;;AAOI,OAAA,CAAA;SACL,CAAC;QAEM,IAAU,CAAA,UAAA,GAA0B,EAAE,CAAC;QACvC,IAAa,CAAA,aAAA,GAAW,EAAE,CAAC;QAGjC,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;AAED,IAAA,WAAW,CAAC,CAAoB,EAAA;AAC9B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,kBAAkB,CAAC,IAAY,EAAE,EAAO,EAAA;QACtC,IAAI,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YAChD,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC;AACvC,SAAA;KACF;IAEO,cAAc,GAAA;AACpB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU;aACjC,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;aACpD,IAAI,CAAC,IAAI,CAAC,CAAC;AACd,QAAA,IAAI,CAAC,aAAa,GAAG,CAAA,EAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAK,EAAA,EAAA,YAAY,EAAE,CAAC;AAC9E,QAAA,kBAAkB,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;KACxD;;iHAlXU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;qHAApB,oBAAoB,EAAA,CAAA,CAAA;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;;;ACzBX;;;;;;;;;;;;;;;;;;;;AAoBG;AAmFH,MAAM,mBAAmB,GAAG,CAAC,KAAmD,KAAI;AAClF,IAAA,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;IAC3C,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACnC,QAAA,IAAI,OAAO,CAAC,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACjE,KAAK,GAAG,KAAK,CAAC;YACd,MAAM;AACP,SAAA;AACF,KAAA;AACD,IAAA,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;AACzB,QAAA,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB,KAAA;AACH,CAAC,CAAC;MAGW,sBAAsB,CAAA;AA2FjC,IAAA,WAAA,CAAY,CAAuB,EAAA;AAzF3B,QAAA,IAAA,CAAA,2BAA2B,GACjC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,0BAA0B,GAChC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,0BAA0B,GAChC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,iCAAiC,GACvC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,uBAAuB,GAC7B,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,0BAA0B,GAChC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,uBAAuB,GAC7B,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,+BAA+B,GACrC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,iCAAiC,GACvC,IAAI,OAAO,EAAiC,CAAC;AAGvC,QAAA,IAAA,CAAA,mCAAmC,GACzC,IAAI,OAAO,EAAiC,CAAC;AAEvC,QAAA,IAAA,CAAA,cAAc,GAAoC,IAAI,YAAY,EAAqB,CAAC;AACvF,QAAA,IAAA,CAAA,aAAa,GAAkC,IAAI;AACzD,aAAA,cAA+C,CAAC;AAE3C,QAAA,IAAA,CAAA,UAAU,GAChB,IAAI,eAAe,CAA0B,IAAI,CAAC,CAAC;AAC5C,QAAA,IAAA,CAAA,SAAS,GAAwC,IAAI;AAC3D,aAAA,UAAiD,CAAC;AAE7C,QAAA,IAAA,CAAA,KAAK,GAGD,IAAI,eAAe,CAGrB,IAAI,CAAC,CAAC;AAIR,QAAA,IAAA,CAAA,aAAa,GACnB,IAAI,OAAO,EAA8B,CAAC;AAIpC,QAAA,IAAA,CAAA,sBAAsB,GAAiB,YAAY,CAAC,KAAK,CAAC;AAC1D,QAAA,IAAA,CAAA,aAAa,GAAkB,IAAI,OAAO,EAAQ,CAAC;AAInD,QAAA,IAAA,CAAA,iBAAiB,GAAkC,IAAI,YAAY,EAAmB,CAAC;AACtF,QAAA,IAAA,CAAA,gBAAgB,GAAgC,IAAI;AAC1D,aAAA,iBAAgD,CAAC;AAE5C,QAAA,IAAA,CAAA,UAAU,GAA4B,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,SAAS,GAAuB,IAAI,CAAC,UAAgC,CAAC;QAiB7E,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,2BAA2B,EAAE,CAAC;KACpC;AApBD,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;AACD,IAAA,IAAI,cAAc,GAAA;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;AACD,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AACD,IAAA,IAAI,gCAAgC,GAAA;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;KACvF;AAUD,IAAA,OAAO,CAAC,IAAoB,EAAE,OAAA,GAAsB,EAAE,EAAA;QACpD,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IACE,IAAI,IAAI,IAAI;YACZ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC;AACjC,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAC9C;AACA,YAAA,OAAO,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;AAClC,SAAA;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC1C,IACE,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;aACnC,WAAW,IAAI,IAAI,IAAI,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,EAClD;AACA,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;AACjD,SAAA;KACF;AAED;;;AAGG;AACK,IAAA,SAAS,CAAC,GAAQ,EAAA;AACxB,QAAA,IAAI,GAAG,EAAE;YACP,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAG;AAC3B,gBAAA,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,8CAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AACnF,oBAAA,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AAC5C,oBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACZ,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,YAAY,GAAA;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7C,IAAI,SAAS,IAAI,IAAI,EAAE;AACrB,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;QACD,IAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACpB,QAAA,OAAO,GAAG,CAAC;KACZ;AAED,IAAA,QAAQ,CAAC,KAAuD,EAAA;AAC9D,QAAA,OAAO,IAAI,UAAU,CAAU,CAAC,UAA+B,KAAI;AACjE,YAAA,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;AAC7B,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,OAAO;AACR,aAAA;AACD,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,EAAE;AAC3C,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,OAAO;AACR,aAAA;AACD,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;YAC3B,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;YAC5B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3E,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,KAAwB,KAAuB;gBACtE,MAAM,SAAS,GAAG,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACrD,gBAAA,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AACjE,gBAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,QAAQ,EAAE,CAAC;AACtB,gBAAA,OAAO,KAAK,CAAC;AACf,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,WAAW,CAAC,KAAuD,EAAA;AACjE,QAAA,OAAO,IAAI,UAAU,CAAU,CAAC,UAA+B,KAAI;AACjE,YAAA,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE;AAC7B,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,OAAO;AACR,aAAA;AACD,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;AACnC,YAAA,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,EAAE;AAC5B,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,OAAO;AACR,aAAA;AACD,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;YAC3B,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;YAC5B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3E,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,KAAwB,KAAuB;AACtE,gBAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7D,gBAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,UAAU,CAAC,QAAQ,EAAE,CAAC;AACtB,gBAAA,OAAO,KAAK,CAAC;AACf,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,KAAmC,EAAA;QAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,GAAG,CAAC,CAAC,IAAG;YACN,IAAI,KAAK,IAAI,IAAI,EAAE;AACjB,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AACD,YAAA,MAAM,SAAS,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAClD,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SAC1E,CAAC,CACH,CAAC;KACH;IAEO,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAC5C,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EACvC,MAAM,CACJ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,KACZ,IAAI,IAAI,IAAI;AAEV,YAAA,IAID,CAAC,IAAI,IAAI,IAAI,CACjB,EACD,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,KAAI;AAC1B,YAAA,MAAM,IAAI,GACR,OAID,CAAC,IAAe,CAAC;YAClB,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,MAAM,MAAM,GAAa,EAAE,CAAC;AAC5B,YAAA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAG;AACnB,gBAAA,IAAI,wBAAwB,CAAC,IAAI,CAAC,EAAE;AAClC,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;wBAClC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,4BAAA,eAAe,EAAE,CAAC;4BAClB,IAAI,CAAC,IAAI,CAAC,EAAE;AACV,gCAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;AACjC,6BAAA;AACD,4BAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;AACxB,gCAAA,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC9B,6BAAA;AACF,yBAAA;AACF,qBAAA;AACF,iBAAA;AAAM,qBAAA,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;oBAChC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,wBAAA,eAAe,EAAE,CAAC;AAClB,wBAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;AAChC,wBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACf,4BAAA,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACtC,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,EACF,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CACtC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EACpC,SAAS,CAAC,CAAC,CAAC,EACZ,KAAK,EAAE,CACR,CAAC;KACH;IAEO,qBAAqB,GAAA;QAC3B,MAAM,UAAU,GAAG,OAA6B,EAAE,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,oBAAoB,GAA+C,CACtE,IAAI,CAAC,2BAA2B,EAC/B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,GAA+C,CACrE,IAAI,CAAC,0BAA0B,EAC9B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,GAA+C,CACrE,IAAI,CAAC,0BAA0B,EAC9B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,0BAA0B,GAA+C,CAC5E,IAAI,CAAC,iCAAiC,EACrC,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,gBAAgB,GAA+C,CAClE,IAAI,CAAC,uBAAuB,EAC3B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,mBAAmB,GAA+C,CACrE,IAAI,CAAC,0BAA0B,EAC9B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,gBAAgB,GAA+C,CAClE,IAAI,CAAC,uBAAuB,EAC3B,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,wBAAwB,GAA+C,CAC1E,IAAI,CAAC,+BAA+B,EACnC,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,0BAA0B,GAA+C,CAC5E,IAAI,CAAC,iCAAiC,EACrC,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,4BAA4B,GAA+C,CAC9E,IAAI,CAAC,mCAAmC,EACvC,IAAI,CACL,IAAI,CAAC,CAAC,IAA0B,EAAE,EAAiC,KAAI;AACrE,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,EAAE,EAAE,CAAC,EACN,SAAS,CAAC,UAAU,EAAE,CAAC,EACvB,KAAK,EAAE,CACR,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG;AAChB,YAAA,IAAI,CAAC,oBAAoB;AACzB,YAAA,IAAI,CAAC,mBAAmB;AACxB,YAAA,IAAI,CAAC,mBAAmB;AACxB,YAAA,IAAI,CAAC,0BAA0B;AAC/B,YAAA,IAAI,CAAC,gBAAgB;AACrB,YAAA,IAAI,CAAC,mBAAmB;AACxB,YAAA,IAAI,CAAC,gBAAgB;AACrB,YAAA,IAAI,CAAC,4BAA4B;AACjC,YAAA,IAAI,CAAC,wBAAwB;AAC7B,YAAA,IAAI,CAAC,0BAA0B;SAChC,CAAC;KACH;IAEO,gBAAgB,GAAA;AACtB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,OAAO;AACJ,aAAA,IAAI,CACH,GAAG,CAAC,KAAK,IAAG;YACV,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9D,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,OAAO;AACJ,aAAA,IAAI,CACH,SAAS,CAAC,IAAI,IAAG;YACf,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;AACrC,gBAAA,OAAOA,EAAK,CAAC,IAAI,CAAC,CAAC;AACpB,aAAA;YACD,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC;AACtD,YAAA,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,gBAAA,OAAOA,EAAK,CAAC,IAAI,CAAC,CAAC;AACpB,aAAA;AACD,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC5E,GAAG,CAAC,MAAM,IAAI,CAAC,CAChB,CAAC;AACJ,SAAC,CAAC,EACF,GAAG,CAAC,OAAO,IAAG;YACZ,OAAO,CAAC,eAAkC,KAAuB;AAC/D,gBAAA,IAAI,KAAwB,CAAC;gBAC7B,IACE,OAAO,IAAI,IAAI;AAEb,oBAAA,OAID,CAAC,IAAI,IAAI,IAAI,EACd;oBACA,MAAM,IAAI,GAAG,OAGZ,CAAC;AACF,oBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBAClC,KAAK,GAAG,IAAI,CAAC,0BAA0B,CACrC,YAAY,CAAC,SAAS,CAAC,EACvB,SAAS,EACT,SAAS,EACT,EAAE,EACF,IAAI,CAAC,OAAO,IAAI,EAAE,CACnB,CAAC;AACH,iBAAA;AAAM,qBAAA;oBACL,KAAK,GAAG,EAAE,CAAC;AACZ,iBAAA;gBACD,IAAI,eAAe,GAAG,CAAC,CAAC;AACxB,gBAAA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAG;AACnB,oBAAA,IAAI,wBAAwB,CAAC,IAAI,CAAC,EAAE;AAClC,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;4BAClC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,gCAAA,eAAe,EAAE,CAAC;gCAClB,IAAI,CAAC,IAAI,CAAC,EAAE;AACV,oCAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;AACjC,iCAAA;AACF,6BAAA;AACF,yBAAA;AACF,qBAAA;AAAM,yBAAA,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;wBAChC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,4BAAA,eAAe,EAAE,CAAC;AAClB,4BAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;AACjC,yBAAA;AACF,qBAAA;AACH,iBAAC,CAAC,CAAC;AACH,gBAAA,OAAO,KAAK,CAAC;AACf,aAAC,CAAC;AACJ,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAClC;IAEO,iBAAiB,CACvB,QAAuC,EACvC,IAAa,EACb,MAAgB,EAChB,OAAmB,EACnB,gBAAgB,GAAG,IAAI,EAAA;AAEvB,QAAA,IAAI,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACnE,IAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;YACtC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACzD,SAAA;AAAM,aAAA,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;YACpC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAC9C,QAAQ,EACR,QAAQ,CAAC,IAAI,CAAC,KAAK,EACnB,QAAQ,CAAC,IAAI,CAAC,EAAE,EAChB,MAAM,EACN,OAAO,CACR,CAAC;AACF,YAAA,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtC,SAAA;AACD,QAAA,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;AACtD,QAAA,yBAAyB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC7C,QAAA,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,IAAI,0BAA0B,CAAC,QAAQ,CAAC,EAAE;AACxC,gBAAA,qBAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC1C,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,oBAAoB,CAAC,QAAQ,CAAC,EAAE;AAClC,oBAAA,MAAM,EAAC,IAAI,EAAC,GAAG,QAAQ,CAAC;AACxB,oBAAA,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,CAAC;oBAC1E,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;oBAC7C,IAAI,kBAAkB,GAAiD,EAAE,CAAC;AAC1E,oBAAA,kBAAkB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACzD,IAAI,SAAS,IAAI,IAAI,EAAE;AACrB,wBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;wBACjC,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,EAAE;4BAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC9B,IAAI,CAAC,GAA0B,EAAE,CAAC;AAClC,4BAAA,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;4BAC3B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE;AACtC,gCAAA,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,gCAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,oCAAA,IAAI,GAAG,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;AACxB,iCAAA;AACD;;;;AAIE;gCACF,MAAM,IAAI,GAAG,CAAA,EAAG,IAAI,CAAC,IAAI,CAAA,EAAA,EAAK,MAAM,CAAA,EAAA,EAAK,GAAG,CAAA,CAAE,CAAC;AAC/C,gCAAA,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC;AACrE,gCAAA,MAAM,gBAAgB,GAAwB;oCAC5C,OAAO,EAAE,IAAI,kBAAkB,EAAE;AACjC,oCAAA,IAAI,EAAE,KAAK;oCACX,IAAI;iCACL,CAAC;AACF,gCAAA,MAAM,KAAK,GACT,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,QAAQ;sCAC/C,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;sCAC/B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,gCAAA,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gCACzC,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAC1D,gCAAA,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACzB;AAC0E;AAC1E,gCAAA,MAAM,YAAY,GAAG;AACnB,oCAAA,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC;oCAChC,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAC;AAC1C,oCAAA,OAAO,EAAE,IAAI;AACb,oCAAA,MAAM,EAAE,EAAE;AACV,oCAAA,mBAAmB,EAAE,EAAE;oCACvB,UAAU,EAAE,IAAI,YAAY,EAAQ;iCACP,CAAC;gCAChC,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACxD,6BAAA;AACD,4BAAA,kBAAkB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtD,yBAAA;AACD,wBAAA,QAAQ,CAAC,QAAQ,GAAG,kBAAkB,CAAC;AACxC,qBAAA;AACF,iBAAA;AAAM,qBAAA;oBACL,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9D,iBAAA;AACF,aAAA;AACD,YAAA,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC7C,SAAA;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAChC,QAAA,OAAO,QAAQ,CAAC;KACjB;AAEO,IAAA,WAAW,CACjB,QAAuC,EACvC,QAA2C,EAC3C,OAAe,EACf,OAAmB,EAAA;AAEnB,QAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC9B,QAAA,MAAM,MAAM,GAGR;AACF,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,OAAO,EAAE,IAAI;SACd,CAAC;QACF,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,MAAM,QAAQ,GAAsB,EAAE,CAAC;AACvC,YAAA,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;AAC1B,gBAAA,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;AACrB,aAAA;YACD,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY,EAAE;gBACvD,MAAM,IAAI,GAAG,WAAW,CAAC;AACvB,oBAAA,EAAE,EAAE,GAAG;AACP,oBAAA,IAAI,EAAE,EAAE;oBACR,MAAM,EAAE,CAAC,CAAC;oBACV,SAAS,EAAE,YAAY,CAAC,KAAK;AAC7B,oBAAA,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK;AAC3B,iBAAA,CAAC,CAAC;gBACH,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CACxC,QAAQ,EACR,IAAI,EACJ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EACxB,OAAO,CACR,CAAC;gBACF,IAAI,WAAW,IAAI,IAAI,EAAE;AACvB,oBAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAClC,iBAAA;AACF,aAAA;YACD,KAAK,IAAI,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxC,gBAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B,gBAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACf,gBAAA,MAAM,gBAAgB,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrE,gBAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAG;AAC3B,oBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;oBACzE,IAAI,WAAW,IAAI,IAAI,EAAE;AACvB,wBAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3B,wBAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAClC,qBAAA;AACH,iBAAC,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACjC,aAAA;AACD,YAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;AACzB,SAAA;aAAM,IAAI,OAAO,GAAG,OAAO,EAAE;YAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YAC/C,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,YAAY,EAAE;AACvD,gBAAA,QAAQ,EAAE,CAAC;AACZ,aAAA;AACD,YAAA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACrE,YAAA,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAG;AACzB,gBAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAC9B,aAAC,CAAC,CAAC;AACJ,SAAA;QACD,IAAI,OAAO,IAAI,OAAO,IAAI,QAAQ,CAAC,WAAW,IAAI,IAAI,EAAE;YACtD,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AACtC,YAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;AAC3C,gBAAA,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnD,aAAA;AACF,SAAA;QACD,QAAQ,CAAC,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3D,QAAA,IAAI,wBAAwB,CAAC,QAAQ,CAAC,EAAE;YACtC,MAAM,UAAU,GAAwB,EAAE,CAAC;YAC3C,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AACzF,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AACtC,gBAAA,MAAM,SAAS,GAAG,CAAC,GAAG,aAAa,CAAC;AACpC,gBAAA,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC;AAC7E,aAAA;AACD,YAAA,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;AAClC,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;IAEO,2BAA2B,GAAA;AACjC,QAAA,IAAI,CAAC,aAAa;aACf,IAAI,CACH,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAC/B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CACjC;aACA,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAI;YACrB,MAAM,IAAI,GAAG,EAAsB,CAAC;YACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAChC,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,qBAAqB,CAC3B,QAAuC,EACvC,QAA0D,EAC1D,OAAmB,EAAA;QAEnB,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD,QAAA,IAAI,OAAO,KAAK,QAAQ,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACxD,SAAA;KACF;IAEO,0BAA0B,CAChC,QAAuC,EACvC,KAAgB,EAChB,MAAwB,GAAA,IAAI,EAC5B,MAAA,GAAmB,EAAE,EACrB,OAAmB,EAAA;QAEnB,IAAI,cAAc,GAAsB,EAAE,CAAC;QAC3C,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACpE,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,IAAa,KAAI;YACpD,MAAM,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAC5C,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,kBAAkB,CAAC,EAAE,CAAC,IAAI,SAAS,CACvE,CAAC;AACF,YAAA,MAAM,gBAAgB,GACpB,kBAAkB,IAAI,IAAI;AACxB,kBAAE,kBAAkB,CAAC,cAAc,IAAI,IAAI;AACzC,oBAAA,kBAAkB,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU;kBACpD,IAAI,CAAC;AACX,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;YACtF,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,gBAAA,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1B,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,cAAc,CAAC;KACvB;IAEO,eAAe,CAAC,QAAa,EAAE,QAAa,EAAA;QAClD,MAAM,OAAO,GAAG,EAAc,CAAC;QAC/B,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;AACjE,YAAA,IAAI,GAAG,KAAK,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACnD,gBAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;AAEO,IAAA,qBAAqB,CAAC,SAA2B,EAAA;AACvD,QAAA,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,wCAAgC,CAAC;AACzD,QAAA,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC,YAAY;aACjD,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACvE,QAAQ,EAAE,EACV,cAAc,CACZ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,UAAU,CAChB,CACF;aACA,SAAS,CAAC,CAAC,IAAG;AACb,YAAA,MAAM,YAAY,GAAG,CAAC,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,GAAG,KAAK,CAAC;YACb,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,YAAA,MAAM,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,YAAA,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAA,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAA,MAAM,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,YAAA,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAA,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,MAAM,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,YAAA,MAAM,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,YAAA,MAAM,oBAAoB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnC,YAAA,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;YAGpB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC/D,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;YAC9B,IAAI,YAAY,GAAsB,EAAE,CAAC;AAEzC;;;;AAIgB;AAChB,YAAA,KAAK,CAAC,OAAO,CAAC,SAAS,IAAG;gBACxB,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAC7D,CAAC;AACF,gBAAA,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBAClC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;AAC5C,wBAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACjC,4BAAA,iBAAiB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC/C,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACD,gBAAA,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACpC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;wBAC9C,wBAAwB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;wBACtE,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACpC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;wBAC9C,wBAAwB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC9E,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,sBAAsB,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBAC7C,sBAAsB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;AACvD,wBAAA,iCAAiC,CAC/B,YAAY,EACZ,YAAY,EACZ,KAAK,EACL,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,YAAY,CAClB,CAAC;wBACF,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACjC,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;wBAC3C,qBAAqB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBACnE,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACpC,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;wBAC9C,wBAAwB,CACtB,YAAY,EACZ,YAAY,EACZ,IAAI,CAAC,gCAAgC,CACtC,CAAC;wBACF,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAED,gBAAA,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACjC,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;AAC3C,wBAAA,qBAAqB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;wBAClD,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;gBAED,IAAI,QAAQ,IAAI,CAAC,IAAI,sBAAsB,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBAC9D,IACE,sBAAsB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,IAAG;AACtD,wBAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACjC,4BAAA,OAAO,wBAAwB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC7D,yBAAA;AACD,wBAAA,OAAO,KAAK,CAAC;AACf,qBAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EACd;AACA,wBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;AAC/B,qBAAA;AACF,iBAAA;AAED,gBAAA,IAAI,kBAAkB,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBACzC,kBAAkB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,YAAY,IAAG;AACnD,wBAAA,6BAA6B,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;wBAC1D,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7C,4BAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;gBAED,IAAI,QAAQ,IAAI,CAAC,IAAI,oBAAoB,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBAC5D,MAAM,GAAG,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,IAAG;AAChE,wBAAA,IAAI,CAAC,0BAA0B,CAAC,YAAY,CAAC,EAAE;AAC7C,4BAAA,OAAO,KAAK,CAAC;AACd,yBAAA;AACD,wBAAA,OAAO,uBAAuB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC7D,qBAAC,CAAC,CAAC;AACH,oBAAA,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,0BAA0B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;wBACzD,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;AAChC,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;AACH,YAAA,YAAY,CAAC,OAAO,CAAC,CAAC,IAAG;gBACvB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC;gBACtB,OAAO,GAAG,IAAI,CAAC,EAAE;AACf,oBAAA,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,oBAAA,IAAI,gBAAgB,CAAC,OAAO,CAAC,EAAE;wBAC7B,mBAAmB,CAAC,OAAO,CAAC,CAAC;AAC7B,wBAAA,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,qBAAA;AACD,oBAAA,GAAG,EAAE,CAAC;AACP,iBAAA;AACD,gBAAA,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACtB,aAAC,CAAC,CAAC;AACH,YAAA,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,KAAK,CAAC;AACjB,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,oCAA4B,CAAC;AACtD,aAAA;AACD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC5B,SAAC,CAAC,CAAC;AACL,QAAA,OAAO,SAAS,CAAC;KAClB;AAEO,IAAA,YAAY,CAClB,OAAmB,EACnB,KAAwB,EACxB,IAAqB,EACrB,MAAe,EAAA;AAEf,QAAA,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KACnE;AAEO,IAAA,YAAY,CAClB,OAAmB,EACnB,KAAwB,EACxB,IAAqB,EACrB,MAAe,EAAA;AAEf,QAAA,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KACpE;IAEO,wBAAwB,CAC9B,OAAmB,EACnB,KAAwB,EACxB,IAAqB,EACrB,OAAgB,EAChB,MAAe,EAAA;AAEf,QAAA,IAAI,QAA2B,CAAC;AAChC,QAAA,MAAM,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,MAAM,IAAI,IAAI,EAAE;AAClB,YAAA,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAG;AAC1B,gBAAA,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACrC,OAAO,MAAM,IAAI,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC;AAC9F,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAG;AAC1B,gBAAA,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;AACrC,gBAAA,OAAO,MAAM,IAAI,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;AAC/D,aAAC,CAAC,CAAC;AACJ,SAAA;QACD,MAAM,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAG;AACnB,YAAA,IACE,CAAC,WAAW;iBACX,WAAW,IAAmB,IAAI,CAAC,IAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,EACvF;AACA,gBAAA,gBAAgB,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACtC,gBAAA,IAAI,eAAe,CAAC,CAAC,CAAC,EAAE;AACtB,oBAAA,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AAC3B,iBAAA;gBACD,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;AAC3D,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACnC,IAAI,CAAC,CAAC,KAAwB,EAAE,EAA8B,KAAI;AAChE,YAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AACnB,SAAC,EAAE,EAAE,CAAC,EACN,KAAK,EAAE,CACR,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACpC,GAAG,CAAC,KAAK,IAAI,yBAAyB,CAAC,KAAK,CAAC,CAAC,EAC9C,KAAK,EAAE,CACR,CAAC;AACF,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CACxC,GAAG,CAAC,MAAM,IAAG;YACX,IAAI,KAAK,GAAsB,EAAE,CAAC;AAClC,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;AACjB,gBAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAClC,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACzB,aAAC,CAAC,CAAC;AACH,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC,EACF,KAAK,EAAE,CACR,CAAC;KACH;AAEO,IAAA,mBAAmB,CAAC,YAA6B,EAAA;AACvD,QAAA,MAAM,QAAQ,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAC;QACxD,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,EAAE,IAAI,IAAI,EAAE;AACd,YAAA,MAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC;AAC1B,YAAA,MAAM,YAAY,GAAG,EAAC,GAAG,QAAQ,EAAE,CAAC,QAAQ,GAAG,SAAS,EAAC,CAAC;AAC1D,YAAA,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC7B,SAAA;AACD,QAAA,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,qCAAqC,CAAC,QAAQ,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,uCAAuC,CAAC,QAAQ,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,mCAAmC,CAAC,QAAQ,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,qCAAqC,CAAC,QAAQ,CAAC,CAAC;AACrD,QAAA,IAAI,gBAAgB,CAAC,YAAY,CAAC,EAAE;AAClC,YAAA,IAAI,CAAC,+BAA+B,CAAC,QAAQ,CAAC,CAAC;AAC/C,YAAA,OAAO,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,SAAA;AAAM,aAAA,IAAI,gCAAgC,CAAC,YAAY,CAAC,EAAE;AACzD,YAAA,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACxC,YAAA,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACzC,SAAA;AAED,QAAA,OAAO,YAAY,CAAC;KACrB;AAEO,IAAA,oBAAoB,CAAC,aAAmC,EAAA;AAC9D,QAAA,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;AACjC,QAAA,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC/E,SAAA;QACD,aAAa,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAA+B,KAAI;YAC5E,IAAI,CAAC,oCAAoC,CAAC,aAAa,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACxF,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,aAAa,CAAC;KACtB;AAEO,IAAA,wBAAwB,CAC9B,iBAAoD,EAAA;AAEpD,QAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC;AACzC,QAAA,IAAI,SAAS,CAAC,UAAU,IAAI,IAAI,EAAE;YAChC,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACvF,SAAA;QACD,IAAI,iBAAiB,CAAC,WAAW,IAAI,IAAI,IAAI,SAAS,CAAC,WAAW,IAAI,IAAI,EAAE;YAC1E,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACtF,SAAA;AACD,QAAA,OAAO,iBAAiB,CAAC;KAC1B;AAEO,IAAA,oBAAoB,CAAC,aAA+B,EAAA;QAC1D,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC7C,QAAA,MAAM,iBAAiB,GAAG,wBAAwB,CAAC,aAAa,CAAC,CAAC;QAClE,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;AAC9D,YAAA,SAAS,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;AAC5C,SAAA;AACD,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,IAA0B,KAA0B;AACxF,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE;AACnC,oBAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAChC,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACvF,SAAA;QAED,aAAa,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAA+B,KAAI;YAC5E,IAAI,CAAC,oCAAoC,CAAC,aAAa,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACxF,SAAC,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,0BAA0B,CAAC,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/E,SAAA;;AAGD,QAAA,IAAI,gCAAgC,CAAC,aAAa,CAAC,EAAE;AACnD,YAAA,IAAI,aAAa,CAAC,WAAW,IAAI,IAAI,EAAE;gBACrC,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACtF,aAAA;AACF,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,IAAI,aAAa,CAAC,UAAU,CAAC,UAAU,IAAI,IAAI,EAAE;YACnF,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAG;gBACtD,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AACzE,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,OAAO,IAAI,IAAI,EAAE;YACjC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAG;gBACnD,IAAI,CAAC,0BAA0B,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AACtE,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,kBAAkB,IAAI,IAAI,EAAE;YAC5C,IAAI,CAAC,sCAAsC,CACzC,aAAa,EACb,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAC3C,CAAC;AACH,SAAA;AAED,QAAA,IAAI,0BAA0B,CAAC,aAAa,CAAC,EAAE;AAC7C,YAAA,IAAI,aAAa,CAAC,aAAa,IAAI,IAAI,EAAE;gBACvC,IAAI,CAAC,kCAAkC,CAAC,aAAa,EAAE,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5F,gBAAA,IAAI,aAAa,CAAC,iBAAiB,IAAI,IAAI,EAAE;AAC3C,oBAAA,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,IAAG;wBAClD,IAAI,CAAC,oCAAoC,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AAChF,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACF,SAAA;AAED,QAAA,OAAO,aAAa,CAAC;KACtB;AAEO,IAAA,gBAAgB,CAAC,YAA6B,EAAA;AACpD,QAAA,IAAI,gCAAgC,CAAC,YAAY,CAAC,EAAE;AAClD,YAAA,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;AACjD,SAAA;AAAM,aAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACxC,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACxC,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AAC7C,SAAA;AAED,QAAA,OAAO,YAAY,CAAC;KACrB;AAEO,IAAA,iBAAiB,CAAC,aAA+B,EAAA;QACvD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC7C,QAAA,MAAM,iBAAiB,GAAG,wBAAwB,CAAC,aAAa,CAAC,CAAC;QAClE,IAAI,SAAS,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;AAC/D,YAAA,MAAM,OAAO,GAAG,IAAI,kBAAkB,EAAE,CAAC;AACzC,YAAA,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACtC,YAAA,SAAS,CAAC,eAAe,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;AACvD,SAAA;AACD,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,IAA0B,KAA0B;AACxF,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE;AACnC,oBAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;AAC9B,iBAAA;AACD,gBAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE;oBACxD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC7C,iBAAA;AACD,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;AAC5B,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAClF,SAAA;QAED,aAAa,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAA+B,KAAI;YAC5E,IAAI,CAAC,+BAA+B,CAAC,aAAa,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACnF,SAAC,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1E,SAAA;AAED,QAAA,IAAI,mBAAmB,CAAC,aAAa,CAAC,EAAE;AACtC,YAAA,IAAI,aAAa,CAAC,WAAW,IAAI,IAAI,EAAE;gBACrC,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACjF,aAAA;AACF,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,UAAU,IAAI,IAAI,IAAI,aAAa,CAAC,UAAU,CAAC,UAAU,IAAI,IAAI,EAAE;YACnF,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAG;gBACtD,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AACpE,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,OAAO,IAAI,IAAI,EAAE;YACjC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAG;gBACnD,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AACjE,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,kBAAkB,IAAI,IAAI,EAAE;YAC5C,IAAI,CAAC,iCAAiC,CACpC,aAAa,EACb,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAC3C,CAAC;AACH,SAAA;AAED,QAAA,IAAI,0BAA0B,CAAC,aAAa,CAAC,EAAE;AAC7C,YAAA,IAAI,aAAa,CAAC,aAAa,IAAI,IAAI,EAAE;gBACvC,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACxF,aAAA;AACD,YAAA,IAAI,aAAa,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC3C,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAuB,KAAI;oBAClE,IAAI,CAAC,+BAA+B,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AAC3E,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;AAED,QAAA,OAAO,aAAa,CAAC;KACtB;AAEO,IAAA,iBAAiB,CAAC,aAA+B,EAAA;AACvD,QAAA,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;AACjC,QAAA,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACzE,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC1E,SAAA;QACD,aAAa,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAA+B,KAAI;YAC5E,IAAI,CAAC,+BAA+B,CAAC,aAAa,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACnF,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,aAAa,CAAC;KACtB;AAEO,IAAA,qBAAqB,CAC3B,iBAAoD,EAAA;AAEpD,QAAA,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC;AACzC,QAAA,IAAI,SAAS,CAAC,UAAU,IAAI,IAAI,EAAE;YAChC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,EAAE,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAClF,SAAA;QACD,iBAAiB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAA+B,KAAI;YAChF,IAAI,CAAC,+BAA+B,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACvF,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,iBAAiB,CAAC,WAAW,IAAI,IAAI,EAAE;AACzC,YAAA,IAAI,SAAS,CAAC,WAAW,IAAI,IAAI,EAAE;gBACjC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,EAAE,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACjF,aAAA;AACF,SAAA;AAAM,aAAA;YACL,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC3C,YAAA,IAAI,qBAAqB,GAAG,wBAAwB,CAAC,iBAAiB,CAAC,CAAC;YACxE,IAAI,SAAS,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;AACnE,gBAAA,MAAM,OAAO,GAAG,IAAI,kBAAkB,EAAE,CAAC;AACzC,gBAAA,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACzC,gBAAA,SAAS,CAAC,eAAe,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;AAC3D,aAAA;AACF,SAAA;AACD,QAAA,OAAO,iBAAiB,CAAC;KAC1B;AACO,IAAA,+BAA+B,CAAC,KAAa,EAAA;QACnD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;KACpE;AACO,IAAA,8BAA8B,CAAC,KAAa,EAAA;QAClD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;KACnE;AAEO,IAAA,8BAA8B,CAAC,KAAa,EAAA;QAClD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;KACnE;AAEO,IAAA,qCAAqC,CAAC,KAAa,EAAA;QACzD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;KAC1E;AAEO,IAAA,2BAA2B,CAAC,KAAa,EAAA;QAC/C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KAChE;AAEO,IAAA,8BAA8B,CAAC,KAAa,EAAA;QAClD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;KACnE;AAEO,IAAA,2BAA2B,CAAC,KAAa,EAAA;QAC/C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KAChE;AAEO,IAAA,mCAAmC,CAAC,KAAa,EAAA;QACvD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;KACxE;AAEO,IAAA,qCAAqC,CAAC,KAAa,EAAA;QACzD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;KAC1E;AAEO,IAAA,uCAAuC,CAAC,KAAa,EAAA;QAC3D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;KAC5E;IAEO,oBAAoB,CAAC,QAAgD,EAAE,KAAa,EAAA;AAC1F,QAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA0B,KAA0B;AACjE,YAAA,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;AACzC,gBAAA,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;AACpB,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC,CAAC;KACJ;IAEO,6BAA6B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAClF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClF;IAEO,6BAA6B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAClF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClF;IAEO,oCAAoC,CAC1C,YAA6B,EAC7B,OAAe,EAAA;QAEf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iCAAiC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACzF;IAEO,0BAA0B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC/E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,uBAAuB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC/E;IAEO,6BAA6B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAClF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClF;IAEO,0BAA0B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC/E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,uBAAuB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC/E;IAEO,kCAAkC,CAAC,YAA6B,EAAE,OAAe,EAAA;QACvF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,+BAA+B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACvF;IAEO,oCAAoC,CAC1C,YAA6B,EAC7B,OAAe,EAAA;QAEf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,+BAA+B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACvF;IAEO,sCAAsC,CAC5C,YAA6B,EAC7B,OAAe,EAAA;QAEf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mCAAmC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC3F;AAEO,IAAA,mBAAmB,CACzB,QAAgD,EAChD,YAA6B,EAC7B,OAAe,EAAA;AAEf,QAAA,MAAM,MAAM,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACrB,YAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA0B,KAA0B;AACjE,gBAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AACrB,oBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;wBACvB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9C,wBAAA,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;4BACZ,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;4BAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3B,gCAAA,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;AACpB,6BAAA;AACF,yBAAA;AACF,qBAAA;AACH,iBAAC,CAAC,CAAC;AACH,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAEO,yBAAyB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC9E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2BAA2B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC9E;IAEO,wBAAwB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC7E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC7E;IAEO,wBAAwB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC7E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC7E;IAEO,+BAA+B,CAAC,YAA6B,EAAE,OAAe,EAAA;QACpF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iCAAiC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACpF;IAEO,qBAAqB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC1E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC1E;IAEO,wBAAwB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC7E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC7E;IAEO,qBAAqB,CAAC,YAA6B,EAAE,OAAe,EAAA;QAC1E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAC1E;IAEO,6BAA6B,CAAC,YAA6B,EAAE,OAAe,EAAA;QAClF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,+BAA+B,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClF;IAEO,+BAA+B,CAAC,YAA6B,EAAE,OAAe,EAAA;QACpF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iCAAiC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACpF;IAEO,iCAAiC,CAAC,YAA6B,EAAE,OAAe,EAAA;QACtF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mCAAmC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACtF;AAEO,IAAA,cAAc,CACpB,QAAgD,EAChD,YAA6B,EAC7B,OAAe,EAAA;AAEf,QAAA,MAAM,MAAM,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACrB,YAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA0B,KAA0B;AACjE,gBAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AACrB,oBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;AACvB,wBAAA,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAClB,qBAAA;AACD,oBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5C,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAChC,qBAAA;AACH,iBAAC,CAAC,CAAC;AACH,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;;mHA/0CU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uHAAtB,sBAAsB,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBADlC,UAAU;;AAm1CX,MAAM,wBAAwB,GAAG,CAC/B,YAA6B,EAC7B,SAAmD,EACnD,YAAiB,KACf;AACF,IAAA,MAAM,YAAY,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAC;IAC5D,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AACvE,IAAA,MAAM,OAAO,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC;AAC9C,IAAA,IAAI,iBAAiB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC9C,QAAA,MAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,EAAE,IAAI,IAAI,EAAE;YACd,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAK;AAClC,gBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE;oBAClB,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,iBAAA;AACD,gBAAA,IAAI,EAAE,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;oBAC5D,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1C,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;AAC3B,SAAA;AACF,KAAA;AAAM,SAAA,IAAI,iBAAiB,IAAI,YAAY,CAAC,OAAO,IAAI,OAAO,EAAE;AAC/D,QAAA,MAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAChC,MAAM,GAAG,GAAG,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QACtD,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;AACzF,YAAA,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/C,SAAA;AACF,KAAA;AACH,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,CAC/B,YAA6B,EAC7B,YAAiB,EACjB,KAAwB,EACxB,EAKyE,KACvE;AACF,IAAA,IAAI,gCAAgC,CAAC,YAAY,CAAC,EAAE;QAClD,MAAM,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC1D,QAAA,IAAI,OAAO,KAAK,YAAY,CAAC,IAAI,EAAE;YACjC,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;AAChD,SAAA;AACF,KAAA;AACH,CAAC,CAAC;AAEF,MAAM,iCAAiC,GAAG,CACxC,YAA6B,EAC7B,YAAiB,EACjB,KAAwB,EACxB,MAKS,EACT,MAKS,KACP;;;AAGF,IAAA,yBAAyB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;;AAEtD,IAAA,MAAM,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;IACnD,YAAY,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,GAAG,KAAI;QAC3D,IAAI,GAAG,IAAI,cAAc,EAAE;YACzB,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;AAChD,SAAA;AAAM,aAAA;YACL,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;AAChD,SAAA;AACH,KAAC,CAAC,CAAC;;AAEL,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,CAC5B,YAA6B,EAC7B,YAAiB,EACjB,SAAmD,KACjD;AACF,IAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;QACjC,MAAM,GAAG,GAAG,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AACtD,QAAA,MAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AAChC,QAAA,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE;AAC7B,YAAA,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC7C,YAAA,EAAE,CAAC,QAAQ,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzE,SAAA;AACF,KAAA;AACH,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,CAAC,YAA6B,EAAE,YAAiB,EAAE,IAAS,KAAI;AAC/F,IAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;QACjC,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC,CAAC;AAC3E,QAAA,gBAAgB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;AACpD,KAAA;AACH,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,CAAC,YAA6B,EAAE,YAAiB,KAAI;AACjF,IAAA,IAAI,eAAe,CAAC,YAAY,CAAC,EAAE;AACjC,QAAA,aAAa,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC1C,QAAA,IACE,YAAY,CAAC,cAAc,IAAI,IAAI;AACnC,YAAA,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EACxE;AACA,YAAA,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AACpC,SAAA;AACF,KAAA;AACH,CAAC,CAAC;AAEF,MAAM,6BAA6B,GAAG,CAAC,YAA6B,EAAE,YAAiB,KAAI;AACzF,IAAA,IAAI,0BAA0B,CAAC,YAAY,CAAC,EAAE;AAC5C,QAAA,qBAAqB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AACnD,KAAA;AACH,CAAC;;AClkDD;;;;;;;;;;;;;;;;;;;;AAoBG;AAYH;;;;;;;;;;AAUG;MAEmB,qBAAqB,CAAA;AAuBzC,IAAA,WAAA,CACY,kBAAqC,EACvC,QAAgC,EAChC,oBAA4C,EAAA;QAF1C,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAmB;QACvC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAwB;QAChC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAwB;AAN9C,QAAA,IAAA,CAAA,kBAAkB,GAAiB,YAAY,CAAC,KAAK,CAAC;AACtD,QAAA,IAAA,CAAA,kBAAkB,GAAiB,YAAY,CAAC,KAAK,CAAC;QAO5D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MACpB,IAAI,CAAC,QAAQ;AACV,aAAA,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzB,aAAA,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,kBAAkB,EAAE,CAAuB,CAAC,CAAC,CACtC,CAAC;KAC5C;AA7BD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,QAAuB,EAAA;AAClC,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC1B,SAAA;KACF;AAGD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAiBD,QAAQ,GAAA;AACN,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;AACzB,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc;iBACnD,IAAI,CACH,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CACpC;iBACA,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAI;AACvB,gBAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,IAAI,EAAE;oBACjE,OAAO;AACR,iBAAA;gBACD,MAAM,OAAO,GAAG,IAA0B,CAAC;AAC3C,gBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,oBAAoB;AAChC,qBAAA,sBAAsB,CACrB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CACvE;AACA,qBAAA,SAAS,CAAC;AACT,oBAAA,IAAI,EAAE,CAAC,CAA6B,KAAI;wBACtC,IAAI,CAAC,CAAC,MAAM,EAAE;AACZ,4BAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzB,yBAAA;qBACF;AACD,oBAAA,KAAK,EAAE,CAAC,EAAO,KAAI;AACjB,wBAAA,IAAI,CAAC,EAAE;4BACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,yBAAA;qBACF;oBACD,QAAQ,EAAE,MAAK;AACb,wBAAA,IAAI,CAAC,EAAE;4BACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,yBAAA;qBACF;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACN,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACtC,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACvC;;AAES,IAAA,iBAAiB,MAAW;IAE9B,oBAAoB,GAAA;AAC1B,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACtC,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;AAC1B,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,MAAK;gBACjE,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC3B,IAAI;AACF,wBAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACzC,qBAAA;oBAAC,OAAO,CAAC,EAAE,GAAE;AACf,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;AAC9C,SAAA;AACD,QAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;KACzC;;kHA7FmB,qBAAqB,EAAA,IAAA,EAAA,SAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAD1C,SAAS;;;AC3CV;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;MAEU,gBAAgB,CAAA;AAC3B,IAAA,SAAS,CAAC,KAAc,EAAA;QACtB,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;KACtB;;6GAHU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,IAAA,EAAA,cAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,IAAI;mBAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAA;;;AC3B5B;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;AAGG;MAEU,gBAAgB,CAAA;AAC3B,IAAA,SAAS,CAAC,IAAgC,EAAA;QACxC,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,IAAI,KAAK,OAAO,GAAG,IAAI,IAAI,EAAE,GAAI,IAAa,CAAC;KACvD;;6GANU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,IAAA,EAAA,cAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,IAAI;mBAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAA;;;AC5B5B;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;;;;AAIG;MAGU,sBAAsB,CAAA;AACjC,IAAA,SAAS,CAAC,IAAgC,EAAA;QACxC,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,KAAK,OAAO,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC;AACrD,QAAA,OAAO,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KACtC;;mHAPU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;iHAAtB,sBAAsB,EAAA,IAAA,EAAA,oBAAA,EAAA,CAAA,CAAA;uHAAtB,sBAAsB,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAFlC,UAAU;;kBACV,IAAI;mBAAC,EAAC,IAAI,EAAE,oBAAoB,EAAC,CAAA;;;AC/BlC;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;AACG,MAAO,8BAA+B,SAAQ,QAAQ,CAAA;AAC1D,IAAA,IAAa,IAAI,GAAA;AACf,QAAA,OAAO,gCAAgC,CAAC;KACzC;AAED,IAAA,WAAA,CAAY,OAAgB,EAAA;QAC1B,KAAK,CAAC,OAAO,CAAC,CAAC;KAChB;AACF;;ACnCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;AAGG;MAEU,6BAA6B,CAAA;IACxC,SAAS,CAAC,QAA0C,EAAE,SAAiB,EAAA;AACrE,QAAA,QACE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW;AAC1B,aAAC,QAAQ,CAAC,IAAI,CAAC,aAAa;AAC1B,iBAAC,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,EAC7E;KACH;;0HAPU,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;wHAA7B,6BAA6B,EAAA,IAAA,EAAA,2BAAA,EAAA,CAAA,CAAA;2FAA7B,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBADzC,IAAI;mBAAC,EAAC,IAAI,EAAE,2BAA2B,EAAC,CAAA;;;AC9BzC;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;AACH;MAEa,YAAY,CAAA;AACvB,IAAA,WAAA,CAAqB,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KAAI;;yGADhD,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;6FAAZ,YAAY,EAAA,QAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,SAAS;mBAAC,EAAC,QAAQ,EAAE,kBAAkB,EAAC,CAAA;;;AC5BzC;;;;;;;;;;;;;;;;;;;;AAoBG;AAmBH;;;;;;;;AAQG;MAEmB,YAAY,CAAA;AAmDhC,IAAA,WAAA,CAAoB,IAAuB,EAAA;QAAvB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;AA/B3C;;;;AAIG;QACK,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAqB3B,IAAK,CAAA,KAAA,GAAY,KAAK,CAAC;AAGvB,QAAA,IAAA,CAAA,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC;KAEM;AA/C/C,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IACI,QAAQ,CAAC,QAAsC,EAAA;AACjD,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;AAC/B,YAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClF,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACvB,aAAA;YACD,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,aAAA;AACF,SAAA;KACF;AAQD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IACI,QAAQ,CAAC,QAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACjD,IACE,CAAC,IAAI,CAAC,SAAS;YACf,IAAI,CAAC,SAAS,IAAI,IAAI;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI;AACnB,YAAA,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAC7B;AACA,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACvB,SAAA;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,SAAA;KACF;IAUD,eAAe,GAAA;QACb,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;KAChC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;AAED;;;;;AAKG;IACK,cAAc,GAAA;AACpB,QAAA,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;AAC/B,QAAA,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC;QACtC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACpD,OAAO;AACR,SAAA;AAED,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;QAC5C,GAAG,CAAC,KAAK,EAAE,CAAC;AACZ,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvE,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,OAAO;AACR,SAAA;QACD,MAAM,SAAS,GACb,IAAI,CAAC,SAAS,IAAI,YAAY,CAAC,iBAAiB;cAC5C,YAAY,CAAC,iBAAiB;AAChC,cAAE,YAAY,CAAC,SAAS,CAAC;QAC7B,IAAI;YACF,MAAM,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AACpD,YAAA,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,QAAQ,CAAC;YAChD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AAClD,YAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAyB,CAAC;YAEzD,IAAI,YAAY,CAAC,MAAM,EAAE;AACvB,gBAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;oBAC7C,IAAI,GAAG,IAAI,iBAAiB,EAAE;wBAC5B,iBAAiB,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC;AACpD,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACD,YAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AACrE,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,SAAA;KACF;;yGA1GmB,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAY,6HACrB,YAAY,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FADH,YAAY,EAAA,UAAA,EAAA,CAAA;kBADjC,SAAS;wGAEiB,SAAS,EAAA,CAAA;sBAAjC,SAAS;uBAAC,YAAY,CAAA;gBAOnB,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAuBF,QAAQ,EAAA,CAAA;sBADX,KAAK;;;AC9ER;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;AAIG;AACG,SAAU,aAAa,CAAC,IAAkB,EAAA;IAC9C,OAAO,CAAA,eAAA,EACL,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,IAC9E,CAAA,CAAE,CAAC;AACL;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;;AAMG;MAEU,gBAAgB,CAAA;AAC3B,IAAA,SAAS,CAAC,KAA8B,EAAA;AACtC,QAAA,OAAO,aAAa,CAAC,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;KAC3E;;6GAHU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,IAAA,EAAA,cAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,IAAI;mBAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAA;;;ACnC5B;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;AAGG;MAEU,mBAAmB,CAAA;AAC9B,IAAA,SAAS,CAAC,iBAAyC,EAAA;QACjD,OAAO,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;KAC3F;;gHAHU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,iBAAA,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,IAAI;mBAAC,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAA;;;AC9B/B;;;;;;;;;;;;;;;;;;;;AAoBG;MAWmB,eAAe,CAAA;AAArC,IAAA,WAAA,GAAA;QACW,IAAa,CAAA,aAAA,GAA0B,aAAa,CAAC;KA4B/D;AA1BC;;;;;;;;;AASG;AACH,IAAA,mBAAmB,CAAC,KAMnB,EAAA;AACC,QAAA,MAAM,EAAC,SAAS,EAAE,SAAS,EAAC,GAAG,KAAK,CAAC;QACrC,IAAI,SAAS,GAAG,GAAG,EAAE;AACnB,YAAA,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AAC3E,SAAA;QACD,IAAI,SAAS,IAAI,IAAI,EAAE;AACrB,YAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACnD,SAAA;AACD,QAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;KACvC;AACF;;AC5DD;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;AASH;;;;;;;AAOG;AACG,MAAgB,4BAAgC,SAAQ,qBAE7D,CAAA;AAaC,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EAC/B,mBAA2C,EAC3C,eAAuB,EAAA;AAEvB,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAlBnC,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;QAmBnC,IAAI,eAAe,IAAI,IAAI,EAAE;AAC3B,YAAA,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;AACzC,SAAA;KACF;AApBD;;;;;AAKG;AACH,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;AAaF;;AC/DD;;;;;;;;;;;;;;;;;;;;AAoBG;MAWU,yBAAyB,GAAG,IAAI,cAAc,CACzD,2BAA2B;;AChC7B;;;;;;;;;;;;;;;;;;;;AAoBG;AAcH;;;;;AAKG;AAQG,MAAO,qBAAsB,SAAQ,qBAAqB,CAAA;AAC9D,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;KAC1B;;AAPU,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,sFAItB,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAJxB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,6EC/ClC,6FACA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD8Ca,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAPjC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAgB,mBAGT,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,6FAAA,EAAA,CAAA;;0BAMlC,MAAM;2BAAC,yBAAyB,CAAA;;;MESf,eAAe,CAAA;AA8JnC;;AAEG;IACH,WACU,CAAA,gBAAwC,EACtC,kBAAqC,EAAA;QADvC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAwB;QACtC,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAmB;AApJjD;;AAEG;QACM,IAAa,CAAA,aAAA,GAAG,YAAY,CAAC;QAE7B,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;AAEpB,QAAA,IAAA,CAAA,kBAAkB,GACxB,IAAI,YAAY,EAA4B,CAAC;AAEtC,QAAA,IAAA,CAAA,iBAAiB,GAAyC,IAAI;AACpE,aAAA,kBAA0D,CAAC;QAEtD,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;QAU/B,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;QAUzB,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;QAUvB,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;QAUxB,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;QAU3B,IAAsB,CAAA,sBAAA,GAAG,KAAK,CAAC;QAU/B,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;QAU1B,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAUlB,IAAY,CAAA,YAAA,GAA6B,YAAY,CAAC;AAmBtD,QAAA,IAAA,CAAA,eAAe,GAA0B,IAAI,YAAY,EAAW,CAAC;QAYrE,IAAK,CAAA,KAAA,GAAG,KAAK,CAAC;AAEd,QAAA,IAAA,CAAA,sBAAsB,GAAiB,YAAY,CAAC,KAAK,CAAC;AAC1D,QAAA,IAAA,CAAA,sBAAsB,GAAiB,YAAY,CAAC,KAAK,CAAC;AAE1D,QAAA,IAAA,CAAA,WAAW,GAAqC,IAAI,YAAY,EAAsB,CAAC;AAEtF,QAAA,IAAA,CAAA,UAAU,GAAmC,IAAI;AACvD,aAAA,WAA6C,CAAC;AAkB/C,QAAA,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;AAC5C,QAAA,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,SAAS,CAAC;AACzC,QAAA,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,cAAc,CAAC;AACvD,QAAA,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC;AACtC,QAAA,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,aAAa,CAAC,IAAI,CACnD,GAAG,CAAC,CAAC,IAAI,CAAC,KAA+B,CAAA,kCAAC,CAC3C,CAAC;KACH;AAhJD,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IACD,IACI,YAAY,CAAC,YAAqB,EAAA;AACpC,QAAA,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IACD,IACI,eAAe,CAAC,eAAwB,EAAA;AAC1C,QAAA,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,eAAe,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,IACI,aAAa,CAAC,aAAsB,EAAA;AACtC,QAAA,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,aAAa,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,cAAc,GAAA;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IACD,IACI,cAAc,CAAC,cAAuB,EAAA;AACxC,QAAA,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,cAAc,CAAC,CAAC;AAC7D,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,kBAAkB,GAAA;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IACD,IACI,iBAAiB,CAAC,iBAA0B,EAAA;AAC9C,QAAA,IAAI,CAAC,kBAAkB,GAAG,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;AACnE,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,qBAAqB,GAAA;QACvB,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACpC;IACD,IACI,qBAAqB,CAAC,qBAA8B,EAAA;AACtD,QAAA,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;AAC3E,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,gBAAgB,GAAA;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IACD,IACI,gBAAgB,CAAC,gBAAyB,EAAA;AAC5C,QAAA,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AACjE,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IACI,QAAQ,CAAC,QAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;AAGD,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IACI,WAAW,CAAC,WAAqC,EAAA;AACnD,QAAA,IAAI,WAAW,KAAK,YAAY,IAAI,WAAW,KAAK,UAAU,EAAE;YAC9D,OAAO;AACR,SAAA;AACD,QAAA,IAAI,WAAW,KAAK,IAAI,CAAC,YAAY,EAAE;AACrC,YAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAChC,YAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjD,SAAA;KACF;IA2BD,IACI,IAAI,CAAC,IAAa,EAAA;AACpB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C,SAAA;KACF;AAmBD;;AAEG;IACH,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;AACD;;AAEG;IACH,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;AAED;;AAEG;AACH,IAAA,QAAQ,CAAC,SAA8E,EAAA;AACrF,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB;aAC1B,QAAQ,CAAC,SAAiC,CAAC;AAC3C,aAAA,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACvD,aAAA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,IAAG;AACR,gBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;oBAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC;AACtC,iBAAA;aACF;YACD,KAAK,EAAE,EAAE,IAAG;AACV,gBAAA,IAAI,CAAC,EAAE;oBACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,iBAAA;aACF;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,EAAE;oBACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED;;AAEG;AACH,IAAA,WAAW,CACT,SAA8E,EAAA;AAE9E,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB;aAC1B,WAAW,CAAC,SAAiC,CAAC;AAC9C,aAAA,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACvD,aAAA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,IAAG;AACR,gBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;oBAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;AACpC,iBAAA;aACF;YACD,KAAK,EAAE,EAAE,IAAG;AACV,gBAAA,IAAI,CAAC,EAAE;oBACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,iBAAA;aACF;YACD,QAAQ,EAAE,MAAK;AACb,gBAAA,IAAI,CAAC,EAAE;oBACL,CAAC,CAAC,WAAW,EAAE,CAAC;AACjB,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACN;AAED,IAAA,MAAM,CAAC,IAAS,EAAA;AACd,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACpB,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;AAC5C,SAAA,CAAC,CAAC;KACJ;IAED,YAAY,CAAC,IAAS,EAAE,MAAc,EAAA;AACpC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACpB,YAAA,MAAM,EAAE,IAAI;AACZ,YAAA,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;AAC3C,YAAA,MAAM,EAAE,MAAM;AACf,SAAA,CAAC,CAAC;KACJ;AAED;;AAEG;IACH,eAAe,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1C,YAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACzC,SAAA;KACF;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;AAC1C,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAElB,YAAA,IAAI,CAAC,sBAAsB,GAAyB,IAAI,CAAC,eAAgB;AACtE,iBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC1C,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,KAAI;AAC1B,gBAAA,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;gBAChF,IAAI,IAAI,IAAI,IAAI,EAAE;oBAChB,OAAO;AACR,iBAAA;gBACD,MAAM,MAAM,GAAG,IAAgB,CAAC;gBAEhC,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,gBAAA,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;gBACjB,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,gBAAA,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;AAC9B,gBAAA,OAAO,CAAC,KAAK,IAAI,GAAG,GAAG,SAAS,EAAE;AAChC,oBAAA,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,eAAe,EAAE;wBAClC,KAAK,GAAG,IAAI,CAAC;AACb,wBAAA,OAAO,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;AAC5C,wBAAA,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7C,qBAAA;AAAM,yBAAA,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,eAAe,EAAE;wBACxC,KAAK,GAAG,IAAI,CAAC;AACb,wBAAA,OAAO,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;wBAC5C,OAAO,GAAG,GAAG,CAAC;AACf,qBAAA;AACD,oBAAA,GAAG,EAAE,CAAC;AACP,iBAAA;gBACD,IAAI,CAAC,KAAK,EAAE;AACV,oBAAA,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;oBACxB,OAAO,GAAG,CAAC,CAAC;AACb,iBAAA;AAED,gBAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACpB,oBAAA,EAAE,EAAE,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;AACrD,iBAAA,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AAC1C,aAAC,CAAC,CAAC;AACN,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC1C,QAAA,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC1C,QAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;KAC7B;AAED,IAAA,aAAa,CAAC,KAAuB,EAAA;AACnC,QAAA,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACrC,QAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAE;YACnC,WAAW,GAAG,WAAW,GAAG,CAAC,GAAI,KAAmC,CAAC,IAAI,CAAC;AAC3E,SAAA;QACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,WAAW,EAAC,CAAC,CAAC;KAC1C;AAED;;;;;AAKG;IACH,yBAAyB,CACvB,KAAuB,EACvB,WAAmB,EAAA;AAEnB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAC1C,SAAS,CAAC,IAAI,CAAC,EACf,GAAG,CAAC,MAAK;AACP,YAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAE;gBACnC,MAAM,QAAQ,GAAG,KAAkC,CAAC;AACpD,gBAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAChC,IAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,gBAAA,IAAI,WAAW,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,GAAG,SAAS,EAAE;oBACrF,UAAU,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC/C,iBAAA;AACD,gBAAA,OAAO,CAAI,CAAA,EAAA,UAAU,CAAI,CAAA,EAAA,SAAS,GAAG,CAAC;AACvC,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;AAED;;;;;AAKG;IACH,oBAAoB,CAAC,KAAuB,EAAE,WAAmB,EAAA;QAC/D,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC,CAAC;AACnD,QAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAE;YACnC,MAAM,QAAQ,GAAG,KAAkC,CAAC;YACpD,SAAS;AACP,gBAAA,WAAW,GAAG,CAAC,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,WAAW,GAAG,CAAC,CAAC;AAC/F,SAAA;AAED,QAAA,OAAO,SAAS,CAAC;KAClB;AAED,IAAA,wBAAwB,CAAC,WAAqC,EAAA;AAC5D,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;IAED,aAAa,CAAC,CAAS,EAAE,IAAqB,EAAA;AAC5C,QAAA,OAAO,wBAAwB,CAAC,IAAI,CAAC,CAAC;KACvC;;4GAzXmB,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,sBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAe,6jBA6HrB,YAAY,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FA7HN,eAAe,EAAA,UAAA,EAAA,CAAA;kBADpC,SAAS;0IAqBC,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAKG,iBAAiB,EAAA,CAAA;sBADzB,MAAM;gBASH,YAAY,EAAA,CAAA;sBADf,KAAK;gBAWF,eAAe,EAAA,CAAA;sBADlB,KAAK;gBAWF,aAAa,EAAA,CAAA;sBADhB,KAAK;gBAWF,cAAc,EAAA,CAAA;sBADjB,KAAK;gBAWF,iBAAiB,EAAA,CAAA;sBADpB,KAAK;gBAWF,qBAAqB,EAAA,CAAA;sBADxB,KAAK;gBAWF,gBAAgB,EAAA,CAAA;sBADnB,KAAK;gBAWF,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAWF,WAAW,EAAA,CAAA;sBADd,KAAK;gBAYoC,UAAU,EAAA,CAAA;sBAAnD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,YAAY,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAA;gBACZ,MAAM,EAAA,CAAA;sBAAjC,YAAY;uBAAC,YAAY,CAAA;gBAqBjB,UAAU,EAAA,CAAA;sBADlB,MAAM;gBAKH,IAAI,EAAA,CAAA;sBADP,KAAK;;;ACjNR;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,qBAAqB,CACnC,KAAe,EAAA;AAEf,IAAA,OAAO,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,cAAc,CAAC;AACzD;;ACjCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,mBAAmB,CAAU,KAAe,EAAA;AAC1D,IAAA,OAAO,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,YAAY,CAAC;AACvD;;AC/BA;;;;;;;;;;;;;;;;;;;;AAoBG;AAiBH;;AAEG;AACU,MAAA,yBAAyB,GAAG,CACvC,IAAa,EACb,OAAmB,EACnB,IAAgC,KACtB;IACV,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;AACD,IAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC;AACrD,IAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;IACD,MAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAC5C,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,CACP,CAAC;AACpC,IAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACrB,QAAA,OAAO,GAAG,EAAC,GAAG,OAAO,EAAC,CAAC;AACvB,QAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;YACrB,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,OAAO;AACR,aAAA;AACD,YAAA,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;gBAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;gBACxE,IAAI,MAAM,IAAI,IAAI,EAAE;oBAClB,OAAO;AACR,iBAAA;gBACD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;AACpC,aAAA;AAAM,iBAAA,IAAI,qBAAqB,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACnF,gBAAA,MAAM,OAAO,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;gBAChD,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrF,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7E,aAAA;AACH,SAAC,CAAC,CAAC;AACJ,KAAA;IACD,OAAO,qBAAqB,CAAC,gBAAgB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAChE;;AChDA;;;;;AAKG;MAEU,2BAA2B,CAAA;AACtC,IAAA,SAAS,CAAC,IAAa,EAAE,OAAmB,EAAE,IAAgC,EAAA;QAC5E,OAAO,yBAAyB,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;KACvD;;wHAHU,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;sHAA3B,2BAA2B,EAAA,IAAA,EAAA,yBAAA,EAAA,CAAA,CAAA;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBADvC,IAAI;mBAAC,EAAC,IAAI,EAAE,yBAAyB,EAAC,CAAA;;;AClCvC;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;;AAMG;MAEU,0BAA0B,CAAA;AACrC,IAAA,SAAS,CAAC,IAAyC,EAAA;QACjD,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5C,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,IAA2B,CAAC;KACpC;;uHANU,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;qHAA1B,0BAA0B,EAAA,IAAA,EAAA,wBAAA,EAAA,CAAA,CAAA;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBADtC,IAAI;mBAAC,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAA;;;ACMtC;;;;;AAKG;AAQG,MAAO,sBAAuB,SAAQ,qBAAqB,CAAA;AAG/D,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAC9D,YAA0B,EAAA;AAE1B,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAClC,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,SAAS,CAAC,OAAO,IAAG;YAClB,OAAO,GAAG,OAA6B,CAAC;AACxC,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAwB,CAAC;AACpF,SAAC,CAAC,EACF,MAAM,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAC9B,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAC7B,GAAG,CAAC,IAAI,IAAG;YACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACvC,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,aAAA;iBAAM,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACtC,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9D,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;;AA7BU,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,sFAMvB,yBAAyB,EAAA,EAAA,EAAA,KAAA,EAAAF,IAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANxB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,8ECpDnC,oNAKA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD+Ca,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAPlC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,mBAGV,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,oNAAA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,CAAA;;0BAQlC,MAAM;2BAAC,yBAAyB,CAAA;;;AE1DrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;AAKG;MAEU,gBAAgB,CAAA;AAC3B,IAAA,SAAS,CAAC,KAAa,EAAE,SAAA,GAAoB,CAAC,EAAA;QAC5C,OAAO,KAAK,GAAG,SAAS,CAAC;KAC1B;;6GAHU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,IAAA,EAAA,cAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,IAAI;mBAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAA;;;AC9B5B;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;MAEU,qBAAqB,CAAA;AAChC,IAAA,SAAS,CAAC,IAA2B,EAAA;QACnC,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5C,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;KAC/B;;kHANU,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;gHAArB,qBAAqB,EAAA,IAAA,EAAA,mBAAA,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,IAAI;mBAAC,EAAC,IAAI,EAAE,mBAAmB,EAAC,CAAA;;;AChCjC;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;AAKG;MAEU,2BAA2B,CAAA;AACtC,IAAA,SAAS,CAAC,QAAyB,EAAA;AACjC,QAAA,OAAO,eAAe,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC,OAAO,CAAC;KACtF;;wHAHU,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;sHAA3B,2BAA2B,EAAA,IAAA,EAAA,yBAAA,EAAA,CAAA,CAAA;2FAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBADvC,IAAI;mBAAC,EAAC,IAAI,EAAE,yBAAyB,EAAC,CAAA;;;AClCvC;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;MAEU,+BAA+B,CAAA;AAC1C,IAAA,SAAS,CAAC,QAAyB,EAAA;AACjC,QAAA,OAAO,wBAAwB,CAAC,QAAQ,CAAC,CAAC;KAC3C;;4HAHU,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;0HAA/B,+BAA+B,EAAA,IAAA,EAAA,6BAAA,EAAA,CAAA,CAAA;2FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAD3C,IAAI;mBAAC,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAA;;;AChC3C;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;MAEU,uBAAuB,CAAA;AAClC,IAAA,SAAS,CAAC,QAAyB,EAAA;AACjC,QAAA,OAAO,QAAQ,GAAG,wBAAwB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;KAC3D;;oHAHU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;kHAAvB,uBAAuB,EAAA,IAAA,EAAA,qBAAA,EAAA,CAAA,CAAA;2FAAvB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBADnC,IAAI;mBAAC,EAAC,IAAI,EAAE,qBAAqB,EAAC,CAAA;;;AChCnC;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;;AAMG;MAEU,YAAY,CAAA;IACvB,SAAS,CAAC,OAAe,CAAC,EAAE,QAAgB,CAAC,EAAE,OAAe,CAAC,EAAA;QAC7D,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,EAAE,MAAM,EAAE;AAC5C,YAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClB,KAAK,IAAI,IAAI,CAAC;AACf,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;;yGARU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;uGAAZ,YAAY,EAAA,IAAA,EAAA,UAAA,EAAA,CAAA,CAAA;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,IAAI;mBAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAA;;;AC/BxB;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;;;AAOG;AACG,MAAgB,sBAAuB,SAAQ,qBAAqB,CAAA;AAA1E,IAAA,WAAA,GAAA;;QACE,IAAI,CAAA,IAAA,GAAsB,MAAM,CAAC;KAClC;AAAA;;AClCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAcH;;;;;AAKG;AAQG,MAAO,yBAA0B,SAAQE,sBAAa,CAAA;AAC1D,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;KAC1B;;AAPU,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,sFAI1B,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAJxB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yBAAyB,kFC/CtC,+DACA,EAAA,MAAA,EAAA,CAAA,0DAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD8Ca,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAPrC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,qBAAqB,mBAGd,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,+DAAA,EAAA,MAAA,EAAA,CAAA,0DAAA,CAAA,EAAA,CAAA;;0BAMlC,MAAM;2BAAC,yBAAyB,CAAA;;;AEnDrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAmBH;;;;;AAKG;AAQG,MAAO,6BAA8B,SAAQA,sBAAa,CAAA;AAG9D,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACvB,GAAqB,EACM,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAHjB,IAAG,CAAA,GAAA,GAAH,GAAG,CAAkB;QAK7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC3B,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,GAAG,CAAC,IAAI,IAAG;AACT,YAAA,IAAI,IAAI,EAAE;AACR,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;gBACvB,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,oBAAA,OAAO,EAAE,CAAC;AACX,iBAAA;gBAED,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,gBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;oBAC3B,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;AAC3C,iBAAA;AAAM,qBAAA;AACL,oBAAA,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAClB,iBAAA;gBACD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE;oBACxB,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;oBACxD,OAAO,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,CAAW,CAAC;AACtD,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;AACD,YAAA,OAAO,EAAE,CAAC;SACX,CAAC,CACH,CAAC;KACH;IAEO,iBAAiB,GAAA;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACtC,QAAA,QAAQ,IAAI;AACV,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,IAAI,CAAC;AACd,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,IAAI,CAAC;AACd,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,IAAI,CAAC;AACd,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,IAAI,CAAC;AACd,YAAA;AACE,gBAAA,OAAO,IAAI,CAAC;AACf,SAAA;KACF;;AAnDU,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,wHAO9B,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAPxB,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,6BAA6B,uFCpD1C,4DACA,EAAA,MAAA,EAAA,CAAA,0DAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDmDa,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAPzC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,0BAA0B,mBAGnB,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,4DAAA,EAAA,MAAA,EAAA,CAAA,0DAAA,CAAA,EAAA,CAAA;;0BASlC,MAAM;2BAAC,yBAAyB,CAAA;;;AE3DrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAmBH;;;;;;AAMG;AAQG,MAAO,6BAA8B,SAAQ,qBAAqB,CAAA;AAKtE,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAC9D,YAA0B,EAAA;AAE1B,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;QACtE,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAClC,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,SAAS,CAAC,OAAO,IAAG;YAClB,OAAO,GAAG,OAA6B,CAAC;AACxC,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAwB,CAAC;AACpF,SAAC,CAAC,EACF,MAAM,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAC9B,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAC5B,GAAG,CAAC,IAAI,IAAG;YACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACvC,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACzD,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9D,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;AACF,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACzD;;AAjCU,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,sFAQ9B,yBAAyB,EAAA,EAAA,EAAA,KAAA,EAAAD,IAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARxB,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,6BAA6B,uFCrD1C,gQAMA,EAAA,MAAA,EAAA,CAAA,8LAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD+Ca,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAPzC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,0BAA0B,mBAGnB,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,gQAAA,EAAA,MAAA,EAAA,CAAA,8LAAA,CAAA,EAAA,CAAA;;0BAUlC,MAAM;2BAAC,yBAAyB,CAAA;;;AE7DrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAgBH;;;;;;AAMG;AAQG,MAAO,oCAAqC,SAAQ,qBAAqB,CAAA;AAI7E,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAEzB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CACnC,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,GAAG,CAAC,IAAI,IAAG;YACT,IAAI,MAAM,GAAa,EAAE,CAAC;AAC1B,YAAA,IAAI,IAAI,EAAE;AACR,gBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAe,CAAC;AACpC,gBAAA,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;AAC3B,oBAAA,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;SACf,CAAC,CACH,CAAC;AAEF,QAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAEhG,QAAA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAC/B,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAC9D,CAAC;KACH;;AA9BU,oCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oCAAoC,sFAOrC,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAPxB,oCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oCAAoC,8FClDjD,+SASe,EAAA,MAAA,EAAA,CAAA,0JAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDyCF,oCAAoC,EAAA,UAAA,EAAA,CAAA;kBAPhD,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iCAAiC,mBAG1B,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,+SAAA,EAAA,MAAA,EAAA,CAAA,0JAAA,CAAA,EAAA,CAAA;;0BASlC,MAAM;2BAAC,yBAAyB,CAAA;;;AElBrC;;;;;;AAMG;AAQG,MAAO,8BAA+B,SAAQ,qBAAqB,CAAA;AAGvE,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAC9D,YAA0B,EAAA;AAE1B,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAClC,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,SAAS,CAAC,OAAO,IAAG;YAClB,OAAO,GAAG,OAA6B,CAAC;AACxC,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAwB,CAAC;AACpF,SAAC,CAAC,EACF,MAAM,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAC9B,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAC7B,GAAG,CAAC,IAAI,IAAG;YACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACvC,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,aAAA;iBAAM,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACtC,OAAO,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9D,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;;AA7BU,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,sFAM/B,yBAAyB,EAAA,EAAA,EAAA,KAAA,EAAAD,IAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AANxB,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,wFCrD3C,0KAIA,EAAA,MAAA,EAAA,CAAA,qGAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDiDa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAP1C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,2BAA2B,mBAGpB,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,0KAAA,EAAA,MAAA,EAAA,CAAA,qGAAA,CAAA,EAAA,CAAA;;0BAQlC,MAAM;2BAAC,yBAAyB,CAAA;;;AE3DrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAiBH;;;;;;AAMG;AAOG,MAAO,+BAAgC,SAAQ,qBAEpD,CAAA;AAGC,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC/B,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,GAAG,CACD,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC,cAAc,CAC5F,CACF,CAAC;KACH;;AAlBU,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,sFAQhC,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARxB,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,+BAA+B,2EClD5C,0nBAYA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDsCa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAN3C,SAAS;AAGS,YAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,0nBAAA,EAAA,CAAA;;0BAUlC,MAAM;2BAAC,yBAAyB,CAAA;;;AE1DrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;;;;AAKG;MAEU,gBAAgB,CAAA;AAC3B,IAAA,SAAS,CAAC,KAAa,EAAA;AACrB,QAAA,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,GAAG,aAAa,CAAC;KACxD;;6GAHU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,IAAA,EAAA,kBAAA,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,IAAI;mBAAC,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAA;;;AC9BhC;;;;;;;;;;;;;;;;;;;;AAoBG;AAeH;;;;;;AAMG;AAOG,MAAO,8BAA+B,SAAQ,qBAA4C,CAAA;AAC9F,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;KAC1B;;AAPU,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,sFAI/B,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAJxB,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,2EChD3C,4yCA8BA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,IAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,IAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAK,0BAAA,EAAA,IAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDkBa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAN1C,SAAS;AAGS,YAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,4yCAAA,EAAA,CAAA;;0BAMlC,MAAM;2BAAC,yBAAyB,CAAA;;;AEZrC;;;;;AAKG;AAEG,MAAO,yBAA0B,SAAQ,qBAAqB,CAAA;IAIlE,WACE,CAAA,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAC9D,YAA0B,EAC1B,UAAsB,EAAA;AAEtB,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC7B,MAAM,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,EAClC,SAAS,CAAC,OAAO,IAAG;YAClB,OAAO,GAAG,OAA6B,CAAC;AACxC,YAAA,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5D,CAAC,EACF,MAAM,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAC9B,GAAG,CAAC,KAAK,IAAI,qBAAqB,CAAC,KAAe,CAAC,CAAC,CACrD,CAAC;AACF,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAC9B,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAC5B,SAAS,CAAC,IAAI,IAAI,eAAe,CAAC,UAAU,EAAE,IAAiB,CAAC,CAAC,EACjE,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,EAC1B,GAAG,CAAC,GAAG,IAAI,YAAY,CAAC,8BAA8B,CAAC,GAAa,CAAC,CAAC,CACvE,CAAC;KACH;;AA7BU,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,sFAO1B,yBAAyB,EAAA,EAAA,EAAA,KAAA,EAAAP,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;0GAPxB,yBAAyB,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAzB,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBADrC,SAAS;;0BAQL,MAAM;2BAAC,yBAAyB,CAAA;;AAyBrC;;;;;;AAMG;AACH,SAAS,eAAe,CAAC,UAAsB,EAAE,KAAgB,EAAA;AAC/D,IAAA,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;QAChC,OAAOH,EAAK,CAAC,CAA8B,2BAAA,EAAA,KAAK,CAAC,EAAE,CAAA,YAAA,CAAc,CAAC,CAAC;AACpE,KAAA;AACD,IAAA,IAAI,KAAK,CAAC,QAAQ,KAAK,OAAO,EAAE;AAC9B,QAAA,OAAO,UAAU;AACd,aAAA,GAAG,CACF,CAA2D,wDAAA,EAAA,KAAK,CAAC,EAAE,EAAE,CACtE;aACA,IAAI,CACH,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,EACvC,UAAU,CAAC,MAAMA,EAAK,CAAC,IAAI,CAAC,CAAC,CACD,CAAC;AAClC,KAAA;AACD,IAAA,OAAOA,EAAK,CAAC,EAAE,CAAC,CAAC;AACnB,CAAC;AAED;;;;;;AAMG;AACH,SAAS,qBAAqB,CAAC,GAAW,EAAA;IACxC,IAAI,QAAQ,GAA4B,IAAI,CAAC;IAC7C,IAAI,EAAE,GAAkB,IAAI,CAAC;AAC7B,IAAA,IAAI,qCAAqC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACnD,QAAQ,GAAG,SAAS,CAAC;AACrB,QAAA,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC7B,KAAA;AAAM,SAAA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC5B,QAAQ,GAAG,OAAO,CAAC;AACnB,QAAA,EAAE,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;AAC3B,KAAA;AACD,IAAA,IAAI,QAAQ,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;AAClC,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACD,IAAA,OAAO,EAAC,QAAQ,EAAE,EAAE,EAAC,CAAC;AACxB,CAAC;AAED;;;;;AAKG;AACH,SAAS,eAAe,CAAC,GAAW,EAAA;AAClC,IAAA,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACrB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,KAAA;AACD,IAAA,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QAClD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,KAAA;IAED,IAAI,EAAE,GAAkB,IAAI,CAAC;AAC7B,IAAA,IAAI,GAAa,CAAC;AAElB,IAAA,MAAM,SAAS,GAAG;QAChB,4BAA4B;QAC5B,yCAAyC;QACzC,6BAA6B;QAC7B,QAAQ;QACR,OAAO;AACR,KAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEZ,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAEhD,IAAA,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACxB,QAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB,QAAA,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;AACrB,YAAA,EAAE,GAAG,GAAG,CAAC,GAAG,EAAY,CAAC;AAC1B,SAAA;AACF,KAAA;AAAM,SAAA,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAClC,QAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC5B,QAAA,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;AACrB,YAAA,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;AACF,KAAA;AAED,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAED;;;;;AAKG;AACH,SAAS,iBAAiB,CAAC,GAAW,EAAA;IACpC,MAAM,SAAS,GAAG,yDAAyD,CAAC;AAC5E,IAAA,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACvB,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,QAAA,OAAO,eAAe,CAAC,WAAW,CAAC,CAAC;AACrC,KAAA;;IAED,MAAM,OAAO,GAAG,eAAe,CAAC;AAEhC,IAAA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACrB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,QAAA,OAAO,eAAe,CAAC,QAAQ,CAAC,CAAC;AAClC,KAAA;;IAGD,MAAM,UAAU,GAAG,SAAS,CAAC;AAE7B,IAAA,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACxB,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAClC,QAAA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,KAAA;;IAGD,MAAM,aAAa,GAAG,cAAc,CAAC;AAErC,IAAA,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC3B,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,QAAA,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAA;;IAGD,MAAM,QAAQ,GAAG,YAAY,CAAC;AAE9B,IAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACtB,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,QAAA,OAAO,eAAe,CAAC,OAAO,CAAC,CAAC;AACjC,KAAA;;IAGD,MAAM,WAAW,GAAG,0BAA0B,CAAC;AAE/C,IAAA,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACzB,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;;IAGD,MAAM,OAAO,GAAG,uBAAuB,CAAC;AAExC,IAAA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACrB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChC,QAAA,OAAO,eAAe,CAAC,QAAQ,CAAC,GAAG,EAAY,CAAC,CAAC;AAClD,KAAA;;IAGD,MAAM,OAAO,GAAG,6CAA6C,CAAC;AAE9D,IAAA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACrB,OAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,CAAc,CAAC,CAAC,CAAC,CAAC;AAC5C,KAAA;AAED,IAAA,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,eAAe,CAAC,GAAW,EAAA;;AAElC,IAAA,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACrB,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,KAAA;AAAM,SAAA,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC5B,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb;;ACjNA;;;;;;AAMG;AAQG,MAAO,iCAAkC,SAAQ,yBAAyB,CAAA;IAC9E,WACE,CAAA,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAC9D,YAA0B,EAC1B,UAAsB,EAAA;QAEtB,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;KACpD;;AATU,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iCAAiC,sFAIlC,yBAAyB,EAAA,EAAA,EAAA,KAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAJxB,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iCAAiC,4FClD9C,iSAOA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD2Ca,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAP7C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,+BAA+B,mBAGxB,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,iSAAA,EAAA,CAAA;;0BAMlC,MAAM;2BAAC,yBAAyB,CAAA;;;AEtDrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;AACH;MAEa,0BAA0B,CAAA;AACrC,IAAA,SAAS,CAAC,QAA+B,EAAA;AACvC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;YACjC,OAAO,QAAQ,CAAC,aAAa;AAC3B,kBAAE,GAAG;AACA,qBAAA,MAAM,CAAC,GAAG,IACT,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAa,EAAE,GAAG,KAAI;AACnC,oBAAA,OAAO,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;iBACxE,EAAE,KAAK,CAAC,CACV;AACA,qBAAA,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC5B,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,SAAA;AACD,QAAA,OAAO,CAAE,QAAQ,CAAC,QAAyD,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI;YAC1F,CAAC,CAAC,CAAC,CAAC;YACJ,GAAG,CAAC,CAAC,CAAC,CAAC;AACR,SAAA,CAAC,CAAC;KACJ;;uHAlBU,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;qHAA1B,0BAA0B,EAAA,IAAA,EAAA,wBAAA,EAAA,CAAA,CAAA;2FAA1B,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBADtC,IAAI;mBAAC,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAA;;;ACjCtC;;;;;;;;;;;;;;;;;;;;AAoBG;AAOH;;;;;AAKG;MAEU,iBAAiB,CAAA;IAC5B,SAAS,CAAC,KAA2B,EAAE,GAAW,EAAA;QAChD,IAAI,GAAG,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC1C,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,OAAO,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAC/B;;8GANU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;4GAAjB,iBAAiB,EAAA,IAAA,EAAA,eAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,KAAK,EAAC,CAAA;;;ACjC1C;;;;;;;;;;;;;;;;;;;;AAoBG;MAyHU,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBA3EvB,sBAAsB;QACtB,4BAA4B;QAC5B,+BAA+B;QAC/B,gBAAgB;QAChB,gBAAgB;QAChB,sBAAsB;QACtB,6BAA6B;QAC7B,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;QACnB,qBAAqB;QACrB,2BAA2B;QAC3B,0BAA0B;QAC1B,sBAAsB;QACtB,gBAAgB;QAChB,qBAAqB;QACrB,2BAA2B;QAC3B,+BAA+B;QAC/B,uBAAuB;QACvB,YAAY;QACZ,yBAAyB;QACzB,6BAA6B;QAC7B,6BAA6B;QAC7B,oCAAoC;QACpC,8BAA8B;QAC9B,+BAA+B;QAC/B,8BAA8B;QAC9B,iCAAiC;QACjC,gBAAgB;QAChB,0BAA0B;AAC1B,QAAA,iBAAiB,aAGjB,eAAe;QACf,kBAAkB;QAClB,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;AACnB,QAAA,kBAAkB,aAGlB,sBAAsB;QACtB,4BAA4B;QAC5B,+BAA+B;QAC/B,gBAAgB;QAChB,gBAAgB;QAChB,sBAAsB;QACtB,6BAA6B;QAC7B,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;QACnB,qBAAqB;QACrB,2BAA2B;QAC3B,0BAA0B;QAC1B,sBAAsB;QACtB,gBAAgB;QAChB,qBAAqB;QACrB,2BAA2B;QAC3B,+BAA+B;QAC/B,uBAAuB;QACvB,YAAY;QACZ,yBAAyB;QACzB,6BAA6B;QAC7B,6BAA6B;QAC7B,oCAAoC;QACpC,8BAA8B;QAC9B,+BAA+B;QAC/B,8BAA8B;QAC9B,iCAAiC;QACjC,gBAAgB;QAChB,0BAA0B;QAC1B,iBAAiB,CAAA,EAAA,CAAA,CAAA;4GAIR,cAAc,EAAA,SAAA,EAFd,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,oBAAoB,CAAC,EAAA,OAAA,EAAA,CAxC/E,eAAe;QACf,kBAAkB;QAClB,YAAY;QACZ,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB,CAAA,EAAA,CAAA,CAAA;2FAqCT,cAAc,EAAA,UAAA,EAAA,CAAA;kBA7E1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,sBAAsB;wBACtB,4BAA4B;wBAC5B,+BAA+B;wBAC/B,gBAAgB;wBAChB,gBAAgB;wBAChB,sBAAsB;wBACtB,6BAA6B;wBAC7B,YAAY;wBACZ,gBAAgB;wBAChB,mBAAmB;wBACnB,qBAAqB;wBACrB,2BAA2B;wBAC3B,0BAA0B;wBAC1B,sBAAsB;wBACtB,gBAAgB;wBAChB,qBAAqB;wBACrB,2BAA2B;wBAC3B,+BAA+B;wBAC/B,uBAAuB;wBACvB,YAAY;wBACZ,yBAAyB;wBACzB,6BAA6B;wBAC7B,6BAA6B;wBAC7B,oCAAoC;wBACpC,8BAA8B;wBAC9B,+BAA+B;wBAC/B,8BAA8B;wBAC9B,iCAAiC;wBACjC,gBAAgB;wBAChB,0BAA0B;wBAC1B,iBAAiB;AAClB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,kBAAkB;wBAClB,YAAY;wBACZ,gBAAgB;wBAChB,mBAAmB;wBACnB,kBAAkB;AACnB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,sBAAsB;wBACtB,4BAA4B;wBAC5B,+BAA+B;wBAC/B,gBAAgB;wBAChB,gBAAgB;wBAChB,sBAAsB;wBACtB,6BAA6B;wBAC7B,YAAY;wBACZ,gBAAgB;wBAChB,mBAAmB;wBACnB,qBAAqB;wBACrB,2BAA2B;wBAC3B,0BAA0B;wBAC1B,sBAAsB;wBACtB,gBAAgB;wBAChB,qBAAqB;wBACrB,2BAA2B;wBAC3B,+BAA+B;wBAC/B,uBAAuB;wBACvB,YAAY;wBACZ,yBAAyB;wBACzB,6BAA6B;wBAC7B,6BAA6B;wBAC7B,oCAAoC;wBACpC,8BAA8B;wBAC9B,+BAA+B;wBAC/B,8BAA8B;wBAC9B,iCAAiC;wBACjC,gBAAgB;wBAChB,0BAA0B;wBAC1B,iBAAiB;AAClB,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,oBAAoB,CAAC;AAClF,iBAAA,CAAA;;;AC5ID;;;;;;;;;;;;;;;;;;;;AAoBG;MAIU,0BAA0B,GAAG,IAAI,cAAc,CAAS,4BAA4B;;ACxBjG;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,uBAAuB,CACrC,MAAqC,EAAA;IAErC,OAAO;AACL,QAAA,GAAG,MAAM;AACT,QAAA,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE;KACtC,CAAC;AACJ;;ACpCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;AAEG;MACU,8BAA8B,CAAA;IACzC,OAAO,QAAQ,CAAC,MAA0C,EAAA;AACxD,QAAA,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;AACvB,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACjD,SAAA;AACD,QAAA,OAAO,uBAAuB,CAAC,MAAyC,CAAC,CAAC;KAC3E;AACF;;ACtCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;AAEG;AACG,SAAU,mBAAmB,CAAI,MAAiC,EAAA;IACtE,OAAO;AACL,QAAA,GAAG,MAAM;QACT,IAAI,EAAE,MAAM,CAAC,IAAI;AACjB,QAAA,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE;AACzB,QAAA,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,EAAE;KACP,CAAC;AAC3B;;ACpCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAIH;;AAEG;MACU,0BAA0B,CAAA;IACrC,OAAO,QAAQ,CAAU,MAAoC,EAAA;AAC3D,QAAA,OAAO,mBAAmB,CAAI;AAC5B,YAAA,GAAG,MAAM;AACT,YAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,OAAO;AAC5B,YAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE;AACK,SAAA,CAAC,CAAC;KACjC;AACF;;ACnCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;;;AAKG;AACG,SAAU,sBAAsB,CACpC,KAAmC,EAAA;IAEnC,MAAM,IAAI,GAAG,WAAW,CAAC,EAAC,GAAG,KAAK,EAAC,CAAC,CAAC;IACrC,OAAO;AACL,QAAA,GAAG,IAAI;AACP,QAAA,GAAG,KAAK;AACR,QAAA,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,EAAE;AAC5B,QAAA,aAAa,EAAE,KAAK,CAAC,aAAa,IAAI,KAAK;AAC3C,QAAA,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK;KACxC,CAAC;AACJ;;AC7CA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;AAIG;AACG,SAAU,mBAAmB,CAAC,aAAqC,EAAA;AACvE,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IACvC,OAAO;AACL,QAAA,GAAG,IAAI;AACP,QAAA,KAAK,EAAE,aAAa,CAAC,KAAK,IAAI,EAAE;KACjC,CAAC;AACJ;;ACrCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAMH;;;;;AAKG;AACG,SAAU,mBAAmB,CAAC,aAAqC,EAAA;AACvE,IAAA,MAAM,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IACvC,OAAO;AACL,QAAA,GAAG,aAAa;AAChB,QAAA,GAAG,IAAI;AACP,QAAA,OAAO,EAAE,aAAa,CAAC,OAAO,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,GAAG,CAAC;AAClE,QAAA,OAAO,EAAE,aAAa,CAAC,OAAO,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,GAAG,CAAC;KACnE,CAAC;AACJ;;ACxCA;;;;;;;;;;;;;;;;;;;;AAoBG;AASH;;;;;AAKG;AACG,SAAU,eAAe,CAAC,SAA6B,EAAA;IAC3D,OAAO;QACL,GAAG,mBAAmB,CAAC,SAAS,CAAC;QACjC,GAAG,mBAAmB,CAAC,SAAS,CAAC;QACjC,QAAQ,EAAE,WAAW,CAAC,YAAY;KACnC,CAAC;AACJ;;ACzCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAQH;;;AAGG;AACG,SAAU,oBAAoB,CAAC,SAAkC,EAAA;IACrE,OAAO;QACL,GAAG,mBAAmB,CAAC,SAAS,CAAC;QACjC,GAAG,mBAAmB,CAAC,SAAS,CAAC;QACjC,QAAQ,EAAE,WAAW,CAAC,iBAAiB;KACxC,CAAC;AACJ;;ACtCA;;;;;;;;;;;;;;;;;;;;AAoBG;AASH;;AAEG;AACG,SAAU,WAAW,CAAC,SAAyB,EAAA;IACnD,OAAO;QACL,GAAG,mBAAmB,CAAC,SAAS,CAAC;QACjC,QAAQ,EAAE,WAAW,CAAC,QAAQ;AAC9B,QAAA,QAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,cAAc,EAAE;KACjD,CAAC;AACJ;;ACtCA;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;;AAEG;MACU,4BAA4B,CAAA;IACvC,OAAO,QAAQ,CAAC,KAAkC,EAAA;AAChD,QAAA,OAAO,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACrC;AACF;;AChCD;;;;;;;;;;;;;;;;;;;;AAoBG;AAKH;;AAEG;MACU,yBAAyB,CAAA;IACpC,OAAO,QAAQ,CAAC,KAA+B,EAAA;AAC7C,QAAA,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAClC;AACF;;AChCD;;;;;;;;;;;;;;;;;;;;AAoBG;AA+BH;;;;AAIG;MACU,iBAAiB,CAAA;AAC5B,IAAA,OAAO,QAAQ,CACb,IAAsB,EACtB,cAAwC,EACxC,kBAAgD,EAAA;QAEhD,MAAM,GAAG,GAAG,gBAAgB,CAAC;AAC7B,QAAA,MAAM,GAAG,GAAG,EAAC,GAAG,IAAI,EAAC,CAAC;QACtB,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;AAC1B,QAAA,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAE;AAChE,YAAA,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,GAAG,CAAC,UAAU,EAAE;YAClB,GAAG,CAAC,UAAU,GAAG,sBAAsB,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAClE,SAAA;QACD,GAAG,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,mBAAmB,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAC7D,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnC,CAAC;;QAEF,QAAQ,GAAG,CAAC,QAAQ;YAClB,KAAK,WAAW,CAAC,QAAQ;gBACvB,OAAO,iBAAiB,CAAC,cAAc,CACrC,GAAwC,EACxC,cAAc,EACd,kBAAkB,CACnB,CAAC;YACJ,KAAK,WAAW,CAAC,gBAAgB;AAC/B,gBAAA,OAAO,iBAAiB,CAAC,sBAAsB,CAC7C,GAAgD,CACjD,CAAC;YACJ,KAAK,WAAW,CAAC,YAAY;gBAC3B,OAAO,iBAAiB,CAAC,kBAAkB,CACzC,GAA4C,EAC5C,cAAc,EACd,kBAAkB,CACnB,CAAC;YACJ,KAAK,WAAW,CAAC,iBAAiB;gBAChC,OAAO,iBAAiB,CAAC,uBAAuB,CAC9C,GAAiD,EACjD,cAAc,EACd,kBAAkB,CACnB,CAAC;YACJ,KAAK,WAAW,CAAC,QAAQ;gBACvB,MAAM,QAAQ,GAAG,GAAwC,CAAC;gBAC1D,IAAI,QAAQ,CAAC,QAAQ,EAAE;oBACrB,QAAQ,CAAC,QAAQ,GAAG,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxE,iBAAA;gBACD,OAAO,iBAAiB,CAAC,cAAc,CACrC,QAA6C,EAC7C,cAAc,EACd,kBAAkB,CACnB,CAAC;AACL,SAAA;AACD,QAAA,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;KACtB;AAEO,IAAA,OAAO,sBAAsB,CACnC,IAA+C,EAC/C,cAAwC,EACxC,kBAAgD,EAAA;AAEhD,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IACnC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAClE,CAAC;AACF,QAAA,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC;KAClC;AAEO,IAAA,OAAO,cAAc,CAC3B,IAAiF,EACjF,cAAwC,EACxC,kBAAgD,EAAA;AAEhD,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;AAC1B,YAAA,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACpC,SAAA;QACD,MAAM,GAAG,GAAG,IAAsB,CAAC;QACnC,IAAI,GAAG,CAAC,UAAU,EAAE;YAClB,GAAG,CAAC,UAAU,GAAG,4BAA4B,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxE,SAAA;QACD,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,GAAG,CAAC,OAAO,GAAG,yBAAyB,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC/D,SAAA;QACD,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,GAAG,CAAC,gBAAgB,GAAG,CAAC,kBAAkB,IAAI,EAAE,EAAE,IAAI,CACpD,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,oBAAoB,CAC1C,CAAC;AACH,SAAA;QACD,IAAI,GAAG,CAAC,kBAAkB,EAAE;YAC1B,GAAG,CAAC,kBAAkB,GAAG,sBAAsB,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAClF,SAAA;AACD,QAAA,MAAM,uBAAuB,GAC3B,GAAG,CAAC,SAAS,GAAG,GAAG;AACnB,YAAA,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI;YACpC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,iBAAiB,KAAK,IAAI,CAAC;AAC1D,QAAA,IAAI,uBAAuB,EAAE;YAC3B,OAAO,iBAAiB,CAAC,yBAAyB,CAChD,IAA0D,EAC1D,cAAc,CACf,CAAC;AACH,SAAA;QAED,QAAQ,GAAG,CAAC,SAAS;YACnB,KAAK,YAAY,CAAC,OAAO;AACvB,gBAAA,OAAO,iBAAiB,CAAC,qBAAqB,CAC5C,IAAiD,CAClD,CAAC;YACJ,KAAK,YAAY,CAAC,cAAc,CAAC;YACjC,KAAK,YAAY,CAAC,YAAY;gBAC5B,OAAO,iBAAiB,CAAC,yBAAyB,CAChD,IAA0D,EAC1D,cAAc,CACf,CAAC;AACL,SAAA;AACD,QAAA,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;KACzB;IAEO,OAAO,sBAAsB,CACnC,IAA+C,EAAA;AAE/C,QAAA,OAAO,EAAC,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,gBAAgB,EAAC,CAAC;KACtE;AAEO,IAAA,OAAO,yBAAyB,CACtC,IAA8F,EAC9F,cAAwC,EAAA;QAExC,MAAM,GAAG,GAAG,8BAA8B,CAAC;AAC3C,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;AACjC,YAAA,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,MAAM,aAAa,GAAG,CAAC,cAAc,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzF,IAAI,aAAa,IAAI,IAAI,EAAE;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACxE,SAAA;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9F,SAAA;QACD,OAAO,sBAAsB,CAAM,EAAC,GAAG,IAAI,EAAE,aAAa,EAAC,CAAC,CAAC;KAC9D;IAEO,OAAO,qBAAqB,CAClC,IAA+C,EAAA;QAE/C,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5D,SAAA;QACD,OAAO;YACL,GAAG,WAAW,CAAC,IAAI,CAAC;YACpB,SAAS,EAAE,YAAY,CAAC,OAAO;SAChC,CAAC;KACH;AAEO,IAAA,OAAO,kBAAkB,CAC/B,IAA2C,EAC3C,cAAwC,EACxC,kBAAgD,EAAA;AAEhD,QAAA,OAAO,eAAe,CAAC;YACrB,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,EAAE,cAAc,EAAE,kBAAkB,CAAC;AACrF,YAAA,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC;AAClD,SAAA,CAAC,CAAC;KACJ;IAEO,OAAO,sBAAsB,CACnC,IAA+C,EAAA;QAE/C,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpE,SAAA;AACD,QAAA,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC;KAClC;AAEO,IAAA,OAAO,uBAAuB,CACpC,IAAgD,EAChD,cAAwC,EACxC,kBAAgD,EAAA;AAEhD,QAAA,OAAO,oBAAoB,CAAC;YAC1B,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,EAAE,cAAc,EAAE,kBAAkB,CAAC;AACrF,YAAA,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC;AAClD,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,OAAO,cAAc,CAC3B,IAAuC,EACvC,cAAwC,EACxC,kBAAgD,EAAA;AAEhD,QAAA,OAAO,WAAW,CAChB,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,EAAE,cAAc,EAAE,kBAAkB,CAAC,CACnF,CAAC;KACH;AACF;;AC3PD;;;;;;;;;;;;;;;;;;;;AAoBG;AAWH;;AAEG;MACU,iBAAiB,CAAA;AAC5B,IAAA,OAAO,QAAQ,CAAC,IAAsB,EAAE,OAAoB,EAAA;AAC1D;;AAEG;QACH,MAAM,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IACtD,0BAA0B,CAAC,QAAQ,CAAC,CAAC,CAAC,CACvC,CAAC;AACF;;AAEG;QACH,MAAM,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAC9D,8BAA8B,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC3C,CAAC;AACF;;AAEG;QACH,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IACpC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAC9B,CAAC;QACtC,OAAO;AACL,YAAA,GAAG,IAAI;YACP,cAAc;YACd,kBAAkB;YAClB,KAAK;AACL,YAAA,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,IAAI,EAAE;AAC7C,YAAA,WAAW,EAAE,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;SACrC,CAAC;KACH;AACF;;AC/DD;;;;;;;;;;;;;;;;;;;;AAoBG;AAUH;;;;;;;;AAQG;AAEG,MAAgB,sBACpB,SAAQ,qBAA4C,CAAA;AAKpD,IAAA,WAAA,CACE,GAAsB,EACtB,OAA+B,EACI,GAA2B,EAAA;AAE9D,QAAA,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AAPnB,QAAA,IAAA,CAAA,kBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;KAQ/C;AAED;;;;;;;AAOG;AACH,IAAA,YAAY,CAAC,EAAS,EAAE,GAAW,EAAE,MAAc,EAAA;AACjD,QAAA,IACE,IAAI,CAAC,QAAQ,IAAI,IAAI;AACrB,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG;aAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAChF,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,EAC9C;YACA,OAAO;AACR,SAAA;AACD,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACxD,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC3D,QAAA,IAAI,MAAM,GAAG,CAAC,IAAI,SAAS,EAAE;YAC3B,MAAM,GAAG,CAAC,CAAC;YACX,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC5C,GAAG,GAAG,CAAC,CAAC;AACT,aAAA;AAAM,iBAAA;gBACL,GAAG,IAAI,CAAC,CAAC;AACV,aAAA;AACF,SAAA;AAAM,aAAA;YACL,MAAM,IAAI,CAAC,CAAC;AACb,SAAA;AACD,QAAA,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;AACnC,YAAA,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC5B,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,EAAE,CAAC,eAAe,EAAE,CAAC;KACtB;AAED;;;;;;AAMG;IACH,QAAQ,CAAC,GAAW,EAAE,MAAc,EAAA;QAClC,IAAI,CAAC,cAAc,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAC7B;IAEQ,WAAW,GAAA;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACvC;IAEkB,iBAAiB,GAAA;AAClC,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACtC,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;AACzB,YAAA,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;YAC7C,OAAO;AACR,SAAA;AACD,QAAA,IAAI,GAAiB,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,IAAG;AACtC,YAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC9B,OAAO;AACR,aAAA;AACD,YAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACzB,gBAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AACrB,oBAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;wBAC7B,OAAO;AACR,qBAAA;AACD,oBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,wBAAA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAG;AACnB,4BAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gCAC5B,OAAO;AACR,6BAAA;4BACD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,MACjD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CACvC,CAAC;AACF,4BAAA,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;gCAC9B,GAAG,GAAG,MAAM,CAAC;AACd,6BAAA;AAAM,iCAAA;AACL,gCAAA,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjB,6BAAA;AACH,yBAAC,CAAC,CAAC;AACJ,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED;;;;AAIG;IACK,cAAc,GAAA;AACpB,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,OAAO;AACR,SAAA;QACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,IAChC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,IAAG;AACpB,YAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,gBAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACnB,aAAA;SACF,CAAC,CACH,CAAC;KACH;AAED;;;;;;;AAOG;IACK,SAAS,CAAC,GAAW,EAAE,MAAc,EAAA;AAC3C,QAAA,IACE,IAAI,CAAC,QAAQ,IAAI,IAAI;AACrB,YAAA,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM;AACpC,YAAA,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAC/C;YACA,OAAO;AACR,SAAA;AACD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACxD,QAAA,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAChC,YAAA,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB,SAAA;KACF;;AA9ImB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,sFAShC,yBAAyB,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;uGATf,sBAAsB,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAD3C,SAAS;;0BAUL,MAAM;2BAAC,yBAAyB,CAAA;;;ACjDrC;;;;;;;;;;;;;;;;;;;;AAoBG;AAaH,SAAS,4BAA4B,CAAC,MAAkB,EAAA;IACtD,MAAM,SAAS,GAAe,EAAE,CAAC;AACjC,IAAA,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,YAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,IAAI,GAAG,CAAG,EAAA,OAAO,CAAC,IAAI,CAAA,EAAA,EAAK,CAAC,CAAA,CAAE,CAAC;AACvC,YAAA,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,SAAA;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,aAAa,CAAC,MAAiB,EAAA;IACtC,IAAI,UAAU,GAAe,EAAE,CAAC;AAChC,IAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AACrB,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,YAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAClC,MAAM,MAAM,GAAG,4BAA4B,CAAC,KAAK,CAAC,KAAmB,CAAC,CAAC;YACvE,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;AACvD,SAAA;AAAM,aAAA;AACL,YAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAK,KAA0B,CAAC,KAAoB,CAAC,CAAC,CAAC;AACxF,SAAA;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC;AAEK,SAAU,iBAAiB,CAAC,UAAyB,EAAA;IACzD,MAAM,MAAM,GAAiB,EAAE,CAAC;IAChC,MAAM,SAAS,GAAe,aAAa,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC;AAC/D,IAAA,MAAM,6BAA6B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,6BAA6B,EAAE,CAAC,EAAE,EAAE;QACtD,MAAM,GAAG,GAAe,EAAE,CAAC;AAC3B,QAAA,SAAS,CAAC,OAAO,CAAC,KAAK,IAAG;YACxB,QAAQ,KAAK,CAAC,SAAS;AACrB,gBAAA;AACE,oBAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpB,MAAM;gBACR,KAAK,YAAY,CAAC,MAAM;AACtB,oBAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;oBACvD,MAAM;gBACR,KAAK,YAAY,CAAC,OAAO;AACvB,oBAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;oBACtC,MAAM;gBACR,KAAK,YAAY,CAAC,YAAY;AAC5B,oBAAA,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;oBACpE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClF,MAAM;gBACR,KAAK,YAAY,CAAC,cAAc;AAC9B,oBAAA,MAAM,eAAe,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACtE,oBAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;AAChB,wBAAA,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;AACnE,wBAAA,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;qBACpE,CAAC;oBACF,MAAM;gBACR,KAAK,YAAY,CAAC,KAAK;AACrB,oBAAA,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;AAC5B,oBAAA,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;oBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpE,oBAAA,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAC3B,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEK,SAAU,cAAc,CAAC,WAA4C,EAAA;IAGzE,MAAM,KAAK,GAAmC,EAAE,CAAC;IACjD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;AAC5C,QAAA,KAAK,CAAC,UAAU,CAAC,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7F,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,KAAK,CAAC;AACf;;AC5GA;;;;;;;;;;;;;;;;;;;;AAoBG;AAwBG,SAAU,aAAa,CAC3B,IAAa,EACb,SAAiC,EACjC,WAA6B,EAC7B,MAAkB,EAClB,OAAoB,EAAA;AAEpB,IAAA,MAAM,CAAC,GAAG,SAAS,GAAG,SAAS,GAAG,CAAC,CAAS,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAChE,IAAA,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC;AAOD,SAAS,SAAS,CAAC,CAAS,EAAA;IAC1B,OAAO,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;AAC1C,CAAC;AAED;AACA;AACA;AACA,SAAS,oBAAoB,CAAC,OAAoB,EAAE,GAAY,EAAA;IAC9D,IAAI,OAAO,IAAI,IAAI,EAAE;AACnB,QAAA,OAAO,CAAC,CAAS,KAAK,GAAG,CAAC;AAC3B,KAAA;IACD,OAAO,CAAC,IAAY,KAAI;QACtB,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAA,OAAO,GAAG,CAAC;AACZ,SAAA;QACD,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,YAAA,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,SAAA;AACD,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,YAAA,OAAO,GAAG,CAAC;AACZ,SAAA;QACD,IAAI,GAAG,KAAK,IAAI,EAAE;AAChB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,IAAI,GAAG,KAAK,KAAK,EAAE;AACjB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACrB,KAAC,CAAC;AACJ,CAAC;AAED;AACA;AACA,SAAS,mBAAmB,CAAC,OAAoB,EAAE,GAAY,EAAA;IAC7D,IAAI,OAAO,IAAI,IAAI,EAAE;AACnB,QAAA,OAAO,CAAC,CAAS,KAAK,EAAE,CAAC;AAC1B,KAAA;IACD,OAAO,CAAC,IAAY,KAAI;QACtB,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;QACD,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,YAAA,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,SAAA;AACD,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACtB,YAAA,OAAO,GAAG,CAAC;AACZ,SAAA;AACD,QAAA,OAAO,EAAE,CAAC;AACZ,KAAC,CAAC;AACJ,CAAC;AAED;AACA,SAAS,SAAS,CAChB,IAAa,EACb,SAAgC,EAChC,WAA6B,EAC7B,MAAkB,EAClB,OAAoB,EAAA;IAEpB,MAAM,UAAU,GAAe,EAAE,CAAC;AAClC,IAAA,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;QACnC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;AAChC,KAAA;AAED,IAAA,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AAC1C,IAAA,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAC9B,QAAA,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;AACtB,YAAA,OAAO,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AACpE,SAAA;AAAM,aAAA,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;AAClC,YAAA,OAAO,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7E,SAAA;AACF,KAAA;AACD,IAAA,OAAO,EAAC,OAAO,EAAE,eAAe,EAAE,WAAW,EAAC,CAAC;AACjD,CAAC;AAED,SAAS,UAAU,CACjB,KAAmC,EACnC,UAAsB,EACtB,SAAgC,EAChC,OAAoB,EACpB,GAAY,EAAA;IAEZ,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,IAAI,GAAG,IAAI,IAAI,EAAE;QACf,KAAK,GAAG,CAAG,EAAA,KAAK,CAAK,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,CAAG,CAAC;AACpD,KAAA;AACD,IAAA,MAAM,OAAO,GAAc,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC;AAC7F,IAAA,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;AAC/B,QAAA,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,YAAA,OAAO,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AACzE,SAAA;AACF,KAAA;AACD,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,mBAAmB,CAC1B,KAAwB,EACxB,UAAsB,EACtB,SAAgC,EAChC,OAAoB,EAAA;AAEpB,IAAA,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,IAAI,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;QACzC,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC9B,QAAA,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AACnC,SAAA;AACF,KAAA;IAED,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;AAChC,QAAA,OAAO,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AACvE,KAAA;AACD,IAAA,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,cAAc,CAAC,IAAY,EAAE,IAAc,EAAA;AAClD,IAAA,OAAO,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAC,CAAC,CAAC,EAAC,EAAC,CAAC;AACjF,CAAC;AAED,SAAS,UAAU,CACjB,KAA+B,EAC/B,UAAsB,EACtB,SAAgC,EAChC,OAAoB,EACpB,GAAY,EAAA;AAEZ,IAAA,IAAI,KAAK,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,EAAE;AAC3C,QAAA,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;AAChC,KAAA;AAED,IAAA,MAAM,OAAO,GACX,OAAO,IAAI,IAAI;QACf,KAAK,CAAC,UAAU,IAAI,IAAI;QACxB,kBAAkB,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,CAAC,OAAO,EAAE;AACZ,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;IAED,MAAM,YAAY,GAAG,oBAAoB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAExD,QAAQ,KAAK,CAAC,SAAS;QACrB,KAAK,YAAY,CAAC,MAAM,CAAC;QACzB,KAAK,YAAY,CAAC,IAAI;YACpB,OAAO;AACL,gBAAA,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,gBAAA,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;aACnF,CAAC;QACJ,KAAK,YAAY,CAAC,OAAO;YACvB,IAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,KAAK,KAAK,GAAG,EAAE;;gBAEjB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC;AAC/C,gBAAA,KAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC9D,aAAA;YACD,OAAO;AACL,gBAAA,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,gBAAA,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;aAChE,CAAC;QACJ,KAAK,YAAY,CAAC,MAAM,CAAC;QACzB,KAAK,YAAY,CAAC,OAAO,CAAC;QAC1B,KAAK,YAAY,CAAC,SAAS,CAAC;QAC5B,KAAK,YAAY,CAAC,IAAI;YACpB,IAAI,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAEnC,YAAA,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE;gBAC9E,GAAG,GAAG,IAAI,CAAC;AACZ,aAAA;YACD,OAAO;AACL,gBAAA;AACE,oBAAA,KAAK,EAAE;AACL,wBAAA,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;AAClB,wBAAA,IAAI,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAC,EAAE,GAAG,CAAC,CAAC;AACpF,qBAAA;AACF,iBAAA;aACF,CAAC;QACJ,KAAK,YAAY,CAAC,YAAY,CAAC;QAC/B,KAAK,YAAY,CAAC,cAAc;YAC9B,MAAM,OAAO,GAAG,UAAU,CAAE,KAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5D,IAAI,OAAO,IAAI,IAAI,EAAE;;gBAEnB,OAAO,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAC/C,aAAA;;YAED,MAAM,cAAc,GAClB,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,YAAY;kBACzC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,kBAAE,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACpD,MAAM,aAAa,GAAG,CAAC,CAA6B,KAA0B,CAAC,IAAI,IAAI,CAAC;YACxF,IAAI,eAAe,GAAG,cAAc;AACjC,iBAAA,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;iBAC1C,MAAM,CAAC,aAAa,CAAC,CAAC;AACzB,YAAA,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK;AACzC,oBAAA,KAAK,EAAE,CAAC;AACR,oBAAA,KAAK,EAAE,CAAC;AACT,iBAAA,CAAC,CAAC,CAAC;AACL,aAAA;YACD,OAAO,WAAW,CAAC,KAAK,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACjE,KAAK,YAAY,CAAC,KAAK;YACrB,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9C,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACtC,KAAK,YAAY,CAAC,KAAK;YACrB,OAAO,UAAU,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;AACpD,QAAA;;AAEE,YAAA,OAAO,EAAE,CAAC;AACb,KAAA;AACH,CAAC;AAED,SAAS,WAAW,CAClB,KAAe,EACf,OAAyB,EACzB,SAAgC,EAChC,OAAoB,EAAA;AAEpB,IAAA,IAAI,YAAsB,CAAC;IAC3B,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3C,QAAA,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB,KAAA;AAAM,SAAA;AACL,QAAA,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAA;IACD,MAAM,IAAI,GAAG,EAAE,CAAC;AAChB,IAAA,KAAK,MAAM,CAAC,IAAI,YAAY,EAAE;QAC5B,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,KAAA;IACD,IAAI,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;IAGtC,IAAI,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,YAAY,EAAE;AACpE,QAAA,QAAQ,IAAI,CAAK,EAAA,EAAA,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC;AAChD,KAAA;IACD,IAAI,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,CAAC,cAAc,EAAE;AACtE,QAAA,QAAQ,IAAI,CAAK,EAAA,EAAA,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC;AACjD,KAAA;IACD,OAAO;AACL,QAAA;AACE,YAAA,OAAO,EAAE;gBACP,cAAc,CAAC,QAAQ,CAAC;AACxB,gBAAA;oBACE,KAAK,EAAE,EAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAC;AAC7B,iBAAA;AACF,aAAA;YACD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrB,SAAA;KACF,CAAC;AACJ,CAAC;AAED,SAAS,UAAU,CACjB,KAAoB,EACpB,YAAmC,EACnC,SAAgC,EAAA;AAEhC,IAAA,MAAM,IAAI,GAAe,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACtE,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC1C,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,YAAA,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,YAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AACvB,aAAA;AACF,SAAA;AACD,QAAA,MAAM,OAAO,GAAI,GAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACnE,QAAA,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;AACxD,KAAA;IACD,OAAO;AACL,QAAA,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,QAAA,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;KAC9F,CAAC;AACJ;;AC7UA;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpB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"}