{"version":3,"file":"ajf-core-graph.mjs","sources":["../../../projects/core/graph/src/graph.ts","../../../projects/core/graph/src/graph.html","../../../projects/core/graph/src/graph-module.ts","../../../projects/core/graph/src/graph-node.ts","../../../projects/core/graph/src/public_api.ts","../../../projects/core/graph/src/ajf-core-graph.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {AjfGraphNode} from './graph-node';\nimport {BehaviorSubject} from 'rxjs';\nimport * as dagre from 'dagre';\nimport * as svgPanZoom from 'svg-pan-zoom';\n\nconst TEXT_END = 20;\nconst LINE_HEIGHT = 40;\nconst BOX_WIDTH = 170;\n\nconst SvgPanZoom = ((svgPanZoom as any).default || svgPanZoom) as typeof svgPanZoom;\n\ninterface Box {\n  green: boolean;\n  height: number;\n  label: string;\n  name: string;\n  red: boolean;\n  width: number;\n  x: number;\n  y: number;\n  yellow: boolean;\n  color?: string;\n}\n\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\nexport class Edge {\n  constructor(private points: IPoint[]) {}\n\n  public get path(): string {\n    if (this.points.length < 2) {\n      return '';\n    }\n    let result = 'M ';\n    this.points.forEach(pt => {\n      result += `${pt.x} ${pt.y} L`;\n    });\n    return result.substr(0, result.length - 2);\n  }\n}\n\n@Component({\n  selector: 'ajf-graph',\n  templateUrl: 'graph.html',\n  styleUrls: ['graph.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfGraphComponent implements OnInit {\n  @Input() nodes?: AjfGraphNode[];\n  @ViewChild('graph', {static: true}) graphElement!: ElementRef;\n  boxes$: BehaviorSubject<Box[]> = new BehaviorSubject<Box[]>([]);\n  edges$: BehaviorSubject<Edge[]> = new BehaviorSubject<Edge[]>([]);\n  graph: dagre.graphlib.Graph<{}> = new dagre.graphlib.Graph();\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) {\n    this.graph.setGraph({marginx: BOX_WIDTH / 2, marginy: LINE_HEIGHT});\n  }\n\n  /**\n   * data una stringa crea un array di stringhe in base ad un TEXT_END\n   * se la ripartizione ricade all'interno di una parola shifta il delimiter fino a trovare uno\n   * spazio bianco.\n   */\n  lines(text: string): string[] {\n    const lines: string[] = [];\n    while (text != null && text.length > 0) {\n      let textEnd = TEXT_END;\n      while (text[textEnd - 1] !== ' ' && text.length > TEXT_END) {\n        textEnd--;\n      }\n      const line = text.slice(0, textEnd);\n      text = text.split(line)[1];\n      lines.push(line);\n    }\n    return lines;\n  }\n\n  ngOnInit(): void {\n    if (this.nodes != null) {\n      const widgetNodes: AjfGraphNode[] = this.nodes;\n\n      widgetNodes.forEach(node => {\n        this.graph.setNode(node.id, {\n          width: BOX_WIDTH,\n          height: this._calculateHeight(node.label),\n          label: node.label,\n          red: node.red,\n          yellow: node.yellow,\n          green: node.green,\n          color: node.color || undefined,\n        });\n        if (node.parentId != null) {\n          try {\n            node.parentId = JSON.parse(node.parentId as string);\n          } catch (e) {}\n          const parents: string[] = Array.isArray(node.parentId)\n            ? node.parentId\n            : [node.parentId as string];\n          parents.forEach(parent => {\n            this.graph.setEdge(`${parent}`, node.id, {});\n          });\n        }\n      });\n      try {\n        SvgPanZoom(this.graphElement.nativeElement, {controlIconsEnabled: true});\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    dagre.layout(this.graph);\n    const boxes: Box[] = [];\n    this.graph.nodes().forEach((nodeId: any) => {\n      const n: any = this.graph.node(nodeId);\n      if (n) {\n        boxes.push({...n});\n      }\n    });\n    this.boxes$.next(boxes);\n    const edges: Edge[] = [];\n    this.graph.edges().forEach((edge: any) => {\n      edges.push(new Edge(this.graph.edge(edge).points));\n    });\n    this.edges$.next(edges);\n  }\n\n  private _calculateHeight(text: string): number {\n    const linesLength = this.lines(text).length;\n    if (linesLength === 1) {\n      return LINE_HEIGHT * 1.5;\n    }\n    return linesLength * LINE_HEIGHT;\n  }\n}\n","<div class=\"wrapper\">\n  <svg #graph viewBox=\"0 0 1000 2000\" width=\"100%\" height=\"100%\">\n    <g *ngFor=\"let edge of edges$|async\">\n      <path class=\"edge\" [attr.d]=\"edge.path\" fill=\"none\" stroke=\"gray\" stroke-wodth=\"2px\"></path>\n    </g>\n    <g\n      *ngFor=\"let box of boxes$|async\"\n      [attr.fill]=\"box.color? box.color:'#d95989'\"\n      [attr.stroke]=\"box.color !== 'white' ? 'white' : 'black'\"\n      stroke-width=\"1px\"\n      transition=\"fill 0.2s\"\n    >\n      <rect\n        [attr.x]=\"box.x -(box.width/2)\"\n        [attr.y]=\"box.y - (box.height/2)\"\n        [attr.width]=\"box.width\"\n        [attr.height]=\"box.height\"\n        [attr.stroke]=\"box.red === true ? 'red' : box.yellow === true ? 'yellow' : box.green === true ? 'green' : 'black'\"\n        style=\"stroke-width:6\"\n      />\n      <ng-container *ngFor=\"let line of lines(box.label);let idx= index\">\n        <text\n          class=\"text\"\n          [attr.x]=\"box.x\"\n          [attr.y]=\"box.y - (box.height/2) + 30 +(30*idx)\"\n          dominant-baseline=\"middle\"\n          text-anchor=\"middle\"\n        >\n          {{ line }}\n        </text>\n      </ng-container>\n    </g>\n  </svg>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\nimport {AjfGraphComponent} from './graph';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [AjfGraphComponent],\n  exports: [AjfGraphComponent],\n  imports: [CommonModule],\n})\nexport class AjfGraphModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfGraphNode {\n  id: string;\n  label: string;\n  parentId: string | string[] | null;\n  green: boolean;\n  red: boolean;\n  yellow: boolean;\n  color?: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './graph-module';\nexport * from './graph-node';\nexport * from './graph';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAoBG;AAiBH,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,SAAS,GAAG,GAAG,CAAC;AAEtB,MAAM,UAAU,IAAK,UAAkB,CAAC,OAAO,IAAI,UAAU,CAAsB,CAAC;MAoBvE,IAAI,CAAA;AACf,IAAA,WAAA,CAAoB,MAAgB,EAAA;QAAhB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAU;KAAI;AAExC,IAAA,IAAW,IAAI,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;QACD,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAG;YACvB,MAAM,IAAI,CAAG,EAAA,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA,EAAA,CAAI,CAAC;AAChC,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC5C;AACF,CAAA;MASY,iBAAiB,CAAA;IAO5B,WAAoB,CAAA,GAAe,EAAU,SAAoB,EAAA;QAA7C,IAAG,CAAA,GAAA,GAAH,GAAG,CAAY;QAAU,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;AAJjE,QAAA,IAAA,CAAA,MAAM,GAA2B,IAAI,eAAe,CAAQ,EAAE,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,MAAM,GAA4B,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;QAClE,IAAK,CAAA,KAAA,GAA6B,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AAG3D,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;KACrE;AAED;;;;AAIG;AACH,IAAA,KAAK,CAAC,IAAY,EAAA;QAChB,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,YAAA,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE;AAC1D,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;YACpC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AACtB,YAAA,MAAM,WAAW,GAAmB,IAAI,CAAC,KAAK,CAAC;AAE/C,YAAA,WAAW,CAAC,OAAO,CAAC,IAAI,IAAG;gBACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;AAC1B,oBAAA,KAAK,EAAE,SAAS;oBAChB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;oBACzC,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;AACjB,oBAAA,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS;AAC/B,iBAAA,CAAC,CAAC;AACH,gBAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;oBACzB,IAAI;wBACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkB,CAAC,CAAC;AACrD,qBAAA;oBAAC,OAAO,CAAC,EAAE,GAAE;oBACd,MAAM,OAAO,GAAa,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;0BAClD,IAAI,CAAC,QAAQ;AACf,0BAAE,CAAC,IAAI,CAAC,QAAkB,CAAC,CAAC;AAC9B,oBAAA,OAAO,CAAC,OAAO,CAAC,MAAM,IAAG;AACvB,wBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAG,EAAA,MAAM,CAAE,CAAA,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/C,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACH,aAAC,CAAC,CAAC;YACH,IAAI;AACF,gBAAA,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,EAAC,mBAAmB,EAAE,IAAI,EAAC,CAAC,CAAC;AAC1E,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACV,gBAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,aAAA;AACF,SAAA;AAED,QAAA,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,MAAM,KAAK,GAAU,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,MAAW,KAAI;YACzC,MAAM,CAAC,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,YAAA,IAAI,CAAC,EAAE;gBACL,KAAK,CAAC,IAAI,CAAC,EAAC,GAAG,CAAC,EAAC,CAAC,CAAC;AACpB,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,KAAK,GAAW,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,IAAS,KAAI;AACvC,YAAA,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;AAEO,IAAA,gBAAgB,CAAC,IAAY,EAAA;QACnC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;QAC5C,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,OAAO,WAAW,GAAG,GAAG,CAAC;AAC1B,SAAA;QACD,OAAO,WAAW,GAAG,WAAW,CAAC;KAClC;;8GArFU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,kMCnF9B,itCAkCA,EAAA,MAAA,EAAA,CAAA,qSAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDiDa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAP7B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,mBAGJ,uBAAuB,CAAC,MAAM,EAChC,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,itCAAA,EAAA,MAAA,EAAA,CAAA,qSAAA,CAAA,EAAA,CAAA;yHAG5B,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAC8B,YAAY,EAAA,CAAA;sBAA/C,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,OAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAA;;;AErFpC;;;;;;;;;;;;;;;;;;;;AAoBG;MAWU,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAJV,YAAA,EAAA,CAAA,iBAAiB,CAEtB,EAAA,OAAA,EAAA,CAAA,YAAY,aADZ,iBAAiB,CAAA,EAAA,CAAA,CAAA;4GAGhB,cAAc,EAAA,OAAA,EAAA,CAFhB,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAEZ,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;oBAC5B,OAAO,EAAE,CAAC,YAAY,CAAC;AACxB,iBAAA,CAAA;;;AC9BD;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;;;;;;;;;;;;;;;;;;;AAoBG;;ACpBH;;AAEG;;;;"}