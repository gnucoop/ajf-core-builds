{"version":3,"file":"ajf-core-table.mjs","sources":["../../../projects/core/table/src/table-cell.ts","../../../projects/core/table/src/table.ts","../../../projects/core/table/src/table.html","../../../projects/core/table/src/table-module.ts","../../../projects/core/table/src/public_api.ts","../../../projects/core/table/src/ajf-core-table.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport interface AjfTableCell {\n  /**\n   * The value to show into the table cell. It can be a string, a number, or html text.\n   * If there is a dialog box to open on click, you can use something like this:\n   * '<div class=\"read_more_cell\"><p class=\"read_more_text\">Read more</p><b class=\"material-icons\">add_circle_outline</b></div>'\n   *\n   */\n  value: any;\n\n  /**\n   * the css style for the cell.\n   * ie: {textAlign: 'left', color: 'black'}\n   */\n  style: any;\n\n  /**\n   * the colspan for the cell\n   */\n  colspan?: number;\n\n  /**\n   * the rowspan for the cell\n   */\n  rowspan?: number;\n\n  /**\n   * if true and if this is a header cell, sorting is enabled on this column\n   */\n  sorted?: boolean;\n\n  /**\n   * contains the html to be displayed in a dialog box when you click on this cell\n   */\n  dialogHtml?: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  SecurityContext,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {Sort} from '@angular/material/sort';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {AjfTableCell} from './table-cell';\n\n@Component({\n  selector: 'ajf-table',\n  templateUrl: 'table.html',\n  styleUrls: ['table.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTable implements OnDestroy {\n  /**\n   * data to be shown in the table\n   */\n  private _data: AjfTableCell[][] = [];\n  get data(): AjfTableCell[][] {\n    return this._data;\n  }\n  @Input()\n  set data(data: AjfTableCell[][]) {\n    this._data = this._fixData(data);\n    this._sortedData = [...this._data];\n    this._cdr.markForCheck();\n  }\n\n  /**\n   * sorted data to be shown in the table\n   */\n  private _sortedData: AjfTableCell[][] = [];\n  get sortedData(): AjfTableCell[][] {\n    return this._sortedData;\n  }\n\n  /**\n   * cellpadding for all rows, include header\n   */\n  private _cellpadding: string = '';\n  get cellpadding(): string {\n    return this._cellpadding;\n  }\n  @Input()\n  set cellpadding(cellpadding: string) {\n    this._cellpadding = cellpadding;\n    this._cdr.markForCheck();\n  }\n\n  /**\n   * Emit an event when sort arrows are selected\n   */\n  @Output()\n  readonly sortSelected = new EventEmitter<Sort>();\n\n  @ViewChild('dialogContent', {read: TemplateRef}) dialogContent!: TemplateRef<HTMLElement>;\n\n  /**\n   * Creates an instance of TableComponent.\n   *\n   *\n   * @memberOf TableComponent\n   */\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private _domSanitizer: DomSanitizer,\n    private _dialog: MatDialog,\n  ) {}\n\n  private _fixData(data: AjfTableCell[][]): AjfTableCell[][] {\n    (data || []).forEach(elem => {\n      (elem || []).forEach(subElem => {\n        subElem.value = this._domSanitizer.sanitize(\n          SecurityContext.HTML,\n          this._domSanitizer.bypassSecurityTrustHtml(subElem.value),\n        );\n      });\n    });\n    return data;\n  }\n\n  /**\n   * Sort visible data and emit an event to use for paginated table\n   * @param sort\n   * @returns\n   */\n  sortData(sort: Sort): void {\n    if (!sort.active || sort.direction === '') {\n      this._sortedData = [...this._data];\n    } else {\n      const columnIdx = parseInt(sort.active.slice(-1)) || 0;\n      const sortedData = this._data.slice(1).sort((a, b) => {\n        const isAsc = sort.direction === 'asc';\n        return this._compare(a[columnIdx], b[columnIdx], isAsc);\n      });\n      this._sortedData = [this._data[0], ...sortedData];\n    }\n    this.sortSelected.emit(sort);\n  }\n\n  private _compare(a: AjfTableCell, b: AjfTableCell, isAsc: boolean) {\n    return (a.value < b.value ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  /**\n   * open a dialog when click on cell, if dialogHtmlContent is valid\n   * @param dialogHtmlContent the html to show in the dialog\n   */\n  openDialog(dialogHtmlContent: string | undefined): void {\n    if (dialogHtmlContent) {\n      const dialogConfig = {\n        data: {\n          content: dialogHtmlContent,\n        },\n      } as MatDialogConfig;\n      this._dialog.open(this.dialogContent, dialogConfig);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sortSelected.complete();\n  }\n}\n","<table *ngIf=\"sortedData\" matSort (matSortChange)=\"sortData($event)\">\n  <tr *ngIf=\"sortedData.length > 0\">\n    <ng-container *ngFor=\"let headerCell of sortedData[0]; let idx = index\">\n      <ng-container *ngIf=\"headerCell.sorted; else noSortedHeader\">\n        <th\n          [applyStyles]=\"headerCell.style\"\n          [ngStyle]=\"{'padding': cellpadding}\"\n          [attr.colspan]=\"headerCell.colspan\"\n          [attr.rowspan]=\"headerCell.rowspan\"\n          [mat-sort-header]=\"'column' + idx\"\n        >\n          {{headerCell.value}}\n        </th>\n      </ng-container>\n      <ng-template #noSortedHeader>\n        <th\n          [applyStyles]=\"headerCell.style\"\n          [ngStyle]=\"{'padding': cellpadding}\"\n          [attr.colspan]=\"headerCell.colspan\"\n          [attr.rowspan]=\"headerCell.rowspan\"\n        >\n          {{headerCell.value}}\n        </th>\n      </ng-template>\n    </ng-container>\n  </tr>\n  <ng-container *ngIf=\"sortedData.length > 1\">\n    <tr *ngFor=\"let row of sortedData.slice(1)\">\n      <td\n        *ngFor=\"let cell of row\"\n        [applyStyles]=\"cell.style\"\n        [ngStyle]=\"{'padding': cellpadding}\"\n        [attr.colspan]=\"cell.colspan\"\n        [attr.rowspan]=\"cell.rowspan\"\n        [innerHTML]=\"cell.value\"\n        (click)=\"openDialog(cell.dialogHtml)\"\n      ></td>\n    </tr>\n  </ng-container>\n</table>\n\n<ng-template #dialogContent let-data>\n  <div [innerHTML]=\"data.content\"></div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {CommonModule} from '@angular/common';\nimport {MatSortModule} from '@angular/material/sort';\nimport {NgModule} from '@angular/core';\n\nimport {AjfTable} from './table';\n\n@NgModule({\n  imports: [AjfCommonModule, CommonModule, MatSortModule],\n  declarations: [AjfTable],\n  exports: [AjfTable],\n})\nexport class AjfTableModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './table-cell';\nexport * from './table-module';\nexport * from './table';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}