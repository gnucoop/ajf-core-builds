{"version":3,"file":"reports.js","sources":["../../../../../../src/core/reports/base-widget.ts","../../../../../../src/core/reports/interface/charts/chart-type.ts","../../../../../../src/core/reports/chart-utils.ts","../../../../../../src/core/reports/get-column-content.ts","../../../../../../src/core/reports/interface/aggregation/aggregation-type.ts","../../../../../../src/core/reports/interface/widgets/widget-type.ts","../../../../../../src/core/reports/report.ts","../../../../../../src/core/reports/widget-host.ts","../../../../../../src/core/reports/reports-module.ts","../../../../../../src/core/reports/utils/aggregation/create-aggregation.ts","../../../../../../src/core/reports/serializers/aggregation-serializer.ts","../../../../../../src/core/reports/utils/dataset/create-dataset.ts","../../../../../../src/core/reports/serializers/dataset-serializer.ts","../../../../../../src/core/reports/utils/widgets/create-widget.ts","../../../../../../src/core/reports/serializers/widget-serializer.ts","../../../../../../src/core/reports/serializers/report-container-serializer.ts","../../../../../../src/core/reports/utils/reports/create-report.ts","../../../../../../src/core/reports/serializers/report-serializer.ts","../../../../../../src/core/reports/widget.ts","../../../../../../src/core/reports/utils/aggregation/evaluate-aggregation.ts","../../../../../../src/core/reports/utils/widgets-instances/create-widget-instance.ts","../../../../../../src/core/reports/utils/widgets-instances/widget-instance-utils.ts","../../../../../../src/core/reports/utils/widgets-instances/widget-to-widget-instance.ts","../../../../../../src/core/reports/utils/reports-instances/create-report-container-instance.ts","../../../../../../src/core/reports/utils/reports-instances/create-report-instance.ts","../../../../../../src/core/reports/public-api.ts","../../../../../../src/core/reports/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\nexport abstract class AjfBaseWidgetComponent<T extends AjfWidgetInstance = AjfWidgetInstance> {\n  private _instance: T;\n  get instance(): T { return this._instance; }\n  set instance(instance: T) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      this._cdr.detectChanges();\n    }\n  }\n\n  constructor(private _cdr: ChangeDetectorRef, readonly el: ElementRef) { }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfChartType {\n  Line,\n  Bar,\n  HorizontalBar,\n  Radar,\n  Scatter,\n  Doughnut,\n  Pie,\n  PolarArea,\n  Bubble,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ExtendedChartType} from '@ajf/core/chart';\nimport {AjfChartType} from './interface/charts/chart-type';\n\nexport function chartToChartJsType(chartType?: AjfChartType): ExtendedChartType {\n    switch (chartType) {\n      case AjfChartType.Line:\n      return 'line';\n      case AjfChartType.Bar:\n      return 'bar';\n      case AjfChartType.HorizontalBar:\n      return 'horizontalBar';\n      case AjfChartType.Radar:\n      return 'radar';\n      case AjfChartType.Scatter:\n      return 'scatter';\n      case AjfChartType.Doughnut:\n      return 'doughnut';\n      case AjfChartType.Pie:\n      return 'pie';\n      case AjfChartType.PolarArea:\n      return 'polarArea';\n      case AjfChartType.Bubble:\n      return 'bubble';\n      default:\n      return 'line';\n    }\n  }\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Pipe} from '@angular/core';\nimport {AjfLayoutWidgetInstance} from './interface/widgets-instances/layout-widget-instance';\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\n\n@Pipe({name: 'ajfGetColumnContent'})\nexport class AjfGetColumnContentPipe {\n  transform(instance: AjfLayoutWidgetInstance, column: number): AjfWidgetInstance|null {\n    return column >= 0 && column < instance.content.length ? instance.content[column] : null;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfAggregationType {\n  None,\n  Sum,\n  Average,\n  WeightedAverage,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport enum AjfWidgetType {\n  Layout,\n  PageBreak,\n  Image,\n  Text,\n  Chart,\n  Table,\n  Map,\n  Column,\n  Formula,\n  ImageContainer,\n  DynamicTable,\n  LENGTH\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectorRef, Directive, Input} from '@angular/core';\n\nimport {AjfReportInstance} from './interface/reports-instances/report-instance';\nimport {AjfReport} from './interface/reports/report';\n\n@Directive()\nexport abstract class AjfReportRenderer {\n  private _instance: AjfReportInstance;\n  get instance(): AjfReportInstance { return this._instance; }\n  @Input() set instance(instance: AjfReportInstance) {\n    this._instance = instance;\n    this._report = instance != null ? instance.report : null;\n    this._cdr.markForCheck();\n  }\n\n  private _report: AjfReport | null;\n  get report(): AjfReport | null {\n    return this._report;\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({selector: '[ajf-widget-host]'})\nexport class AjfWidgetHost {\n  constructor(readonly viewContainerRef: ViewContainerRef) { }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfGetColumnContentPipe} from './get-column-content';\nimport {AjfWidgetHost} from './widget-host';\n\n@NgModule({\n  declarations: [\n    AjfGetColumnContentPipe,\n    AjfWidgetHost,\n  ],\n  exports: [\n    AjfGetColumnContentPipe,\n    AjfWidgetHost,\n  ],\n})\nexport class AjfReportsModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport type AjfAggregationCreate = Partial<AjfAggregation>;\n\nexport function createAggregation(aggregation: AjfAggregationCreate): AjfAggregation {\n  return {\n    ...aggregation,\n    aggregation: aggregation.aggregation || AjfAggregationType.None,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregation} from '../interface/aggregation/aggregation';\nimport {createAggregation} from '../utils/aggregation/create-aggregation';\n\nexport class AjfAggregationSerializer {\n  static fromJson(json: Partial<AjfAggregation>): AjfAggregation {\n    if (json.aggregation == null) {\n      throw new Error('Malformed aggregation');\n    }\n    return createAggregation({...json, aggregation: json.aggregation});\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\nimport {AjfDataset} from '../../interface/dataset/dataset';\nimport {createAggregation} from '../aggregation/create-aggregation';\n\nexport function createDataset(dataset: Partial<AjfDataset>): AjfDataset {\n  return {\n    ...dataset,\n    aggregation: dataset.aggregation || createAggregation({aggregation: AjfAggregationType.None}),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormulaSerializer} from '@ajf/core/models';\n\nimport {AjfDataset} from '../interface/dataset/dataset';\nimport {createDataset} from '../utils/dataset/create-dataset';\n\nimport {AjfAggregationSerializer} from './aggregation-serializer';\n\nexport class AjfDatasetSerializer {\n  static fromJson(json: Partial<AjfDataset>): AjfDataset {\n    if (json.formula == null || json.aggregation == null || json.label == null) {\n      throw new Error('Malformed dataset');\n    }\n    json.formula = json.formula instanceof Array ?\n        json.formula = json.formula.map(f => AjfFormulaSerializer.fromJson(f)) :\n        AjfFormulaSerializer.fromJson(json.formula);\n    json.aggregation = AjfAggregationSerializer.fromJson(json.aggregation);\n    return createDataset(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {alwaysCondition} from '@ajf/core/models';\nimport {AjfWidget} from '../../interface/widgets/widget';\n\nexport type AjfWidgetCreate = Pick<AjfWidget, 'widgetType'>&Partial<AjfWidget>;\n\nexport function createWidget(widget: AjfWidgetCreate): AjfWidget {\n  return {\n    ...widget,\n    styles: widget.styles || {},\n    visibility: widget.visibility || alwaysCondition(),\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfConditionSerializer, AjfFormulaSerializer, alwaysCondition} from '@ajf/core/models';\n\nimport {AjfChartDataset} from '../interface/dataset/chart-dataset';\nimport {AjfTableDataset} from '../interface/dataset/table-dataset';\nimport {AjfChartWidget} from '../interface/widgets/chart-widget';\nimport {AjfDataWidget} from '../interface/widgets/data-widget';\nimport {AjfMapWidget} from '../interface/widgets/map-widget';\nimport {AjfWidget} from '../interface/widgets/widget';\nimport {AjfWidgetType} from '../interface/widgets/widget-type';\nimport {AjfWidgetWithContent} from '../interface/widgets/widget-with-content';\nimport {createWidget} from '../utils/widgets/create-widget';\n\nimport {AjfDatasetSerializer} from './dataset-serializer';\n\nexport class AjfWidgetSerializer {\n  static fromJson(json: Partial<AjfWidget>): AjfWidget {\n    if (json.widgetType == null) {\n      throw new Error('Malformed widget');\n    }\n    json.visibility =\n        json.visibility ? AjfConditionSerializer.fromJson(json.visibility) : alwaysCondition();\n    json.styles = json.styles || {};\n    const obj = json as AjfWidget;\n    if (obj.widgetType === AjfWidgetType.Layout || obj.widgetType === AjfWidgetType.Column) {\n      return AjfWidgetSerializer._widgetWithContentFromJson(obj);\n    }\n    if (obj.widgetType === AjfWidgetType.Chart || obj.widgetType === AjfWidgetType.Table) {\n      const w = AjfWidgetSerializer._dataWidgetFromJson(obj);\n      if (obj.widgetType === AjfWidgetType.Chart) {\n        const cw = w as AjfChartWidget;\n        if (cw.labels instanceof Array) {\n          cw.labels.map(l => AjfFormulaSerializer.fromJson(l));\n        } else if (cw.labels != null) {\n          cw.labels = AjfFormulaSerializer.fromJson(cw.labels);\n        }\n      }\n      return w;\n    }\n    if (obj.widgetType === AjfWidgetType.Map) {\n      const mw = obj as AjfMapWidget;\n      mw.coordinate = AjfFormulaSerializer.fromJson(mw.coordinate);\n    }\n    return obj;\n  }\n\n  private static _dataWidgetFromJson(json: AjfWidget&Partial<AjfDataWidget>): AjfDataWidget {\n    const dataset = json.dataset ?\n        (json.widgetType === AjfWidgetType.Table ?\n             (json.dataset as AjfTableDataset[][])\n                 .map(row => row.map(cell => AjfDatasetSerializer.fromJson(cell))) :\n             (json.dataset as AjfChartDataset[]).map(d => AjfDatasetSerializer.fromJson(d))) :\n        [];\n    return {...createWidget(json), dataset};\n  }\n\n  private static _widgetWithContentFromJson(json: AjfWidget&\n                                           Partial<AjfWidgetWithContent>): AjfWidgetWithContent {\n    const content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...createWidget(json), content};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {AjfWidgetSerializer} from './widget-serializer';\n\nexport class AjfReportContainerSerializer {\n  static fromJson(json: Partial<AjfReportContainer>): AjfReportContainer {\n    json.content = (json.content || []).map(c => AjfWidgetSerializer.fromJson(c));\n    return {...json, content: json.content!, styles: json.styles || {}};\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../../interface/reports/report';\n\nexport type AjfReportCreate = Partial<AjfReport>;\n\nexport function createReport(report: AjfReportCreate): AjfReport {\n  return {...report};\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '../interface/reports/report';\nimport {AjfReportContainer} from '../interface/reports/report-container';\nimport {createReport} from '../utils/reports/create-report';\nimport {AjfReportContainerSerializer} from './report-container-serializer';\n\nexport class AjfReportSerializer {\n  static fromJson(json: Partial<AjfReport>): AjfReport {\n    const containers: (keyof AjfReport)[] = ['header', 'footer', 'content'];\n    containers.forEach(c => {\n      if (json[c]) {\n        (json[c] as AjfReportContainer) =\n            AjfReportContainerSerializer.fromJson(json[c] as Partial<AjfReportContainer>);\n      }\n    });\n    return createReport(json);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ComponentFactoryResolver, Directive, Input, OnInit, Renderer2,\n  ViewChild} from '@angular/core';\n\nimport {AjfWidgetInstance} from './interface/widgets-instances/widget-instance';\nimport {AjfWidgetComponentsMap} from './widget-components-map';\nimport {AjfWidgetHost} from './widget-host';\n\n@Directive()\nexport abstract class AjfReportWidget implements OnInit {\n  @ViewChild(AjfWidgetHost, {static: true}) widgetHost: AjfWidgetHost;\n\n  private _instance: AjfWidgetInstance;\n  get instance(): AjfWidgetInstance { return this._instance; }\n  @Input() set instance(instance: AjfWidgetInstance) {\n    if (this._instance !== instance) {\n      this._instance = instance;\n      if (this._init) {\n        this._loadComponent();\n      }\n    }\n  }\n\n  protected abstract widgetsMap: AjfWidgetComponentsMap;\n\n  private _init = false;\n\n  constructor(private _cfr: ComponentFactoryResolver, private _renderer: Renderer2) { }\n\n  ngOnInit(): void {\n    this._init = true;\n    this._loadComponent();\n  }\n\n  private _loadComponent(): void {\n    if (\n      !this._init || this._instance == null\n      || this.widgetHost == null || !this.instance.visible) {\n      return;\n    }\n\n    const vcr = this.widgetHost.viewContainerRef;\n    vcr.clear();\n    const componentDef = this.widgetsMap[this._instance.widget.widgetType];\n    if (componentDef == null) { return; }\n    const component = componentDef.component;\n    try {\n      const componentFactory = this._cfr.resolveComponentFactory(component);\n      const componentRef = vcr.createComponent(componentFactory);\n      const componentInstance = componentRef.instance;\n\n      Object.keys(this._instance.widget.styles).forEach((style: string) => {\n        try {\n          this._renderer.setStyle(\n            componentInstance.el.nativeElement,\n            style,\n            `${this._instance.widget.styles[style]}`\n          );\n        } catch (e) { }\n      });\n\n      componentInstance.instance = this._instance;\n      if (componentDef.inputs) {\n        Object.keys(componentDef.inputs).forEach(key => {\n          if (key in componentInstance) {\n            (componentInstance as any)[key] = componentDef.inputs![key];\n          }\n        });\n      }\n    } catch (e) { }\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {AjfAggregation} from '../../interface/aggregation/aggregation';\nimport {AjfAggregationType} from '../../interface/aggregation/aggregation-type';\n\nexport function evaluateAggregation(\n    aggregation: AjfAggregation, formulas: AjfFormula[], context: AjfContext): number[] {\n  const data: any[] = formulas.map(f => evaluateExpression(f.formula, context));\n  switch (aggregation.aggregation) {\n    case AjfAggregationType.None:\n      if (data.length !== 1) {\n        throw new Error('Invalid aggregation');\n      }\n      return data[0];\n    case AjfAggregationType.Sum:\n      return data.map((r: any) => r.reduce((s: any, d: any) => s + d, 0));\n    case AjfAggregationType.Average:\n    case AjfAggregationType.WeightedAverage:\n      return data.map((r: any) => {\n        const sum = r.reduce((s: any, d: any) => s + d, 0);\n        return sum / data.length;\n      });\n    default:\n      return [];\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {AjfWidget} from '../../interface/widgets/widget';\n\nexport function createWidgetInstance(\n    widget: AjfWidget, context: AjfContext, _ts: TranslateService): AjfWidgetInstance {\n  return {\n    widget,\n    widgetType: widget.widgetType,\n    visible: evaluateExpression(widget.visibility.condition, context),\n    styles: widget.styles || {},\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport function trFormula(f: AjfFormula, context: AjfContext, ts: TranslateService): any {\n  let formula = f.formula;\n  if (formula.substr(0, 1) === '\"') {\n    const ft = formula.slice(1, -1);\n    const transFt = ft != null && typeof ft === 'string' && ft.trim().length > 0\n      ? ts.instant(ft) : ft;\n    if (ft.length > 0) {\n      formula = `\"${transFt}\"`;\n    }\n  } else {\n    formula = formula != null && typeof formula === 'string' && formula.trim().length > 0\n      ? ts.instant(formula) : formula;\n  }\n  return evaluateExpression(formula, context);\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, AjfFormula, createFormula, evaluateExpression} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {chartToChartJsType} from '../../chart-utils';\nimport {AjfChartWidgetInstance} from '../../interface/widgets-instances/chart-widget-instance';\nimport {AjfFormulaWidgetInstance} from '../../interface/widgets-instances/formula-widget-instance';\nimport {\n  AjfImageContainerWidgetInstance\n} from '../../interface/widgets-instances/image-container-widget-instance';\nimport {AjfImageWidgetInstance} from '../../interface/widgets-instances/image-widget-instance';\nimport {AjfMapWidgetInstance} from '../../interface/widgets-instances/map-widget-instance';\nimport {AjfTableWidgetInstance} from '../../interface/widgets-instances/table-widget-instance';\nimport {AjfTextWidgetInstance} from '../../interface/widgets-instances/text-widget-instance';\nimport {AjfWidgetInstance} from '../../interface/widgets-instances/widget-instance';\nimport {\n  AjfWidgetWithContentInstance\n} from '../../interface/widgets-instances/widget-with-content-instance';\nimport {AjfChartWidget} from '../../interface/widgets/chart-widget';\nimport {AjfDynamicTableWidget} from '../../interface/widgets/dynamic-table-widget';\nimport {AjfFormulaWidget} from '../../interface/widgets/formula-widget';\nimport {AjfImageContainerWidget} from '../../interface/widgets/image-container-widget';\nimport {AjfImageWidget} from '../../interface/widgets/image-widget';\nimport {AjfMapWidget} from '../../interface/widgets/map-widget';\nimport {AjfTableDataset} from '../../interface/dataset/table-dataset';\nimport {AjfTableWidget} from '../../interface/widgets/table-widget';\nimport {AjfTextWidget} from '../../interface/widgets/text-widget';\nimport {AjfWidget} from '../../interface/widgets/widget';\nimport {AjfWidgetType} from '../../interface/widgets/widget-type';\nimport {AjfWidgetWithContent} from '../../interface/widgets/widget-with-content';\nimport {evaluateAggregation} from '../aggregation/evaluate-aggregation';\n\nimport {createWidgetInstance} from './create-widget-instance';\nimport {trFormula} from './widget-instance-utils';\n\nexport function widgetToWidgetInstance(\n    widget: AjfWidget, context: AjfContext, ts: TranslateService): AjfWidgetInstance {\n  const wi = createWidgetInstance(widget, context, ts);\n\n  if (widget.widgetType === AjfWidgetType.Column || widget.widgetType === AjfWidgetType.Layout) {\n    const wwc = widget as AjfWidgetWithContent;\n    const wwci = wi as AjfWidgetWithContentInstance;\n    let content = [] as AjfWidgetInstance[];\n    wwc.content.forEach(c => {\n      if (wwc.repetitions != null) {\n        wwci.repetitions = evaluateExpression(wwc.repetitions.formula, context);\n        if (typeof wwci.repetitions === 'number' && wwci.repetitions > 0) {\n          for (let i = 0 ; i < wwci.repetitions ; i++) {\n            content.push(widgetToWidgetInstance(c, {...context, '$repetition': i}, ts));\n          }\n        }\n      } else {\n        content.push(widgetToWidgetInstance(c, context, ts));\n      }\n      wwci.content = content;\n    });\n  } else if (widget.widgetType === AjfWidgetType.Chart) {\n    const cw = widget as AjfChartWidget;\n    const cwi = wi as AjfChartWidgetInstance;\n    const labels = cw.labels instanceof Array ? cw.labels : [cw.labels];\n    const evLabels = labels.map(l => {\n      let evf = evaluateExpression(l.formula, context);\n      try {\n        if (evf instanceof Array) {\n          evf = evf.map(v => v != null && typeof v === 'string' && v.trim().length > 0\n            ? ts.instant(v) : v);\n        } else {\n          evf = evf != null && typeof evf === 'string' && evf.trim().length > 0\n            ? ts.instant(evf) : evf;\n        }\n      } catch (_e) {\n      }\n      return evf;\n    });\n    cwi.labels = cw.labels instanceof Array ? evLabels : evLabels[0];\n    cwi.datasets = cw.dataset.map(d => {\n      let ds: any = {\n        ...d.options || {},\n        data: evaluateAggregation(d.aggregation, d.formula, context),\n      };\n      if (d.chartType != null) {\n        const ct = chartToChartJsType(d.chartType);\n        ds = {...ds, chartType: ct, type: ct };\n      }\n      if (d.options != null) {\n        ds = {...ds, options: d.options};\n      }\n      if (d.label != null) {\n        ds = {...ds, label: d.label};\n      }\n      if (d.datalabels != null) {\n        ds.datalabels = deepCopy(d.datalabels);\n      }\n      return ds;\n    });\n    cwi.data = {labels: cwi.labels, datasets: cwi.datasets};\n    cwi.chartType = chartToChartJsType(cw.type || cw.chartType);\n    if (cw.options != null && cw.options.plugins != null) {\n      const plugins = cw.options.plugins;\n      const pluginNames = Object.keys(plugins);\n      pluginNames.forEach((pluginName) => {\n        const plugin = plugins[pluginName];\n        const pluginOptions = Object.keys(plugin);\n        pluginOptions.forEach((pluginOptionName: string) => {\n          const pluginOption = plugin[pluginOptionName];\n          if (\n            typeof pluginOption !== 'string' &&\n            pluginOption != null &&\n            pluginOption.formula != null\n          ) {\n            plugin[pluginOptionName] = evaluateExpression(pluginOption.formula, context);\n          }\n        });\n      });\n    }\n  } else if (widget.widgetType === AjfWidgetType.Table) {\n    const tw = widget as AjfTableWidget;\n    const twi = wi as AjfTableWidgetInstance;\n\n    twi.dataset = tw.dataset.map(row => row.map(cell => {\n      return cell.formula instanceof Array ?\n        cell.formula.map(f => trFormula(f as AjfFormula, context as AjfContext, ts)) :\n        trFormula(cell.formula!, context as AjfContext, ts);\n    }));\n\n    twi.data = (tw.dataset || [])\n      .map(row => row.map(cell => ({\n                                      value: evaluateExpression(cell.formula.formula, context),\n                                      style: {...tw.cellStyles, ...cell.style},\n                                      rowspan: cell.rowspan,\n                                      colspan: cell.colspan,\n                                    })));\n  } else if (widget.widgetType === AjfWidgetType.DynamicTable) {\n    const tdw = widget as AjfDynamicTableWidget;\n    const tdwi = wi as AjfTableWidgetInstance;\n\n    tdwi.dataset = tdw.dataset.map((cell: AjfTableDataset) => {\n      return cell.formula instanceof Array ?\n        cell.formula.map(f => trFormula(f as AjfFormula, context, ts)) :\n        trFormula(cell.formula!, context, ts);\n    });\n    const dataset = evaluateExpression(tdw.rowDefinition.formula, context) || [];\n\n    const header = (tdw.dataset || []).map(cell => ({\n      value: evaluateExpression(cell.formula.formula, context),\n      style: {...tdw.cellStyles, ...cell.style},\n      rowspan: cell.rowspan,\n      colspan: cell.colspan,\n    }));\n    tdwi.data = [[...header], ...dataset];\n  } else if (widget.widgetType === AjfWidgetType.Image) {\n    const iw = widget as AjfImageWidget;\n    const iwi = wi as AjfImageWidgetInstance;\n    if (iw.flag) {\n      iwi.flag = evaluateExpression(iw.flag.formula, context);\n    }\n    if (iw.icon) {\n      iwi.icon = evaluateExpression(iw.icon.formula, context);\n    }\n    if (iw.url) {\n      iwi.url = evaluateExpression(iw.url.formula, context);\n    }\n  } else if (widget.widgetType === AjfWidgetType.ImageContainer) {\n    const icw = widget as AjfImageContainerWidget;\n    const icwi = wi as AjfImageContainerWidgetInstance;\n    if (icw.flags) {\n      icwi.flags = icw.flags instanceof Array\n        ? icw.flags.map(f => evaluateExpression(f.formula, context))\n        : evaluateExpression(icw.flags.formula, context);\n    }\n    if (icw.icons) {\n      icwi.icons = icw.icons instanceof Array\n        ? icw.icons.map(f => evaluateExpression(f.formula, context))\n        : evaluateExpression(icw.icons.formula, context);\n    }\n    if (icw.urls) {\n      icwi.urls = icw.urls instanceof Array\n        ? icw.urls.map(f => evaluateExpression(f.formula, context))\n        : evaluateExpression(icw.urls.formula, context);\n    }\n  } else if (widget.widgetType === AjfWidgetType.Text) {\n    const tew = widget as AjfTextWidget;\n    const tewi = wi as AjfTextWidgetInstance;\n    const formulaRegEx: RegExp = /\\[{2}(.+?)\\]{2}/g;\n    const matches: {idx: number, len: number, formula: AjfFormula}[] = [];\n    let match: RegExpExecArray|null;\n    let htmlText = tew.htmlText;\n    while (match = formulaRegEx.exec(htmlText)) {\n      const idx = match.index;\n      const len = match[0].length;\n      const formula = createFormula({formula: match[1]});\n      matches.push({idx, len, formula});\n    }\n    matches.reverse().forEach((m) => {\n      let calcValue;\n      try {\n        calcValue = evaluateExpression(m.formula.formula, context);\n      } catch (e) {\n        calcValue = '';\n      }\n      htmlText = `${htmlText.substr(0, m.idx)}${calcValue}${htmlText.substr(m.idx + m.len)}`;\n    });\n    tewi.htmlText = htmlText != null && htmlText.length > 0 ? ts.instant(htmlText) : htmlText;\n  } else if (widget.widgetType === AjfWidgetType.Formula) {\n    const fw = widget as AjfFormulaWidget;\n    const fwi = wi as AjfFormulaWidgetInstance;\n    fwi.formula = evaluateExpression(fw.formula.formula, context);\n  } else if (widget.widgetType === AjfWidgetType.Map) {\n    const mw = widget as AjfMapWidget;\n    const mwi = wi as AjfMapWidgetInstance;\n    mwi.coordinate = evaluateExpression(mw.coordinate.formula, context);\n  }\n  return wi;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {\n  AjfReportContainerInstance\n} from '../../interface/reports-instances/report-container-instance';\nimport {AjfReportContainer} from '../../interface/reports/report-container';\nimport {widgetToWidgetInstance} from '../widgets-instances/widget-to-widget-instance';\n\nexport function createReportContainerInstance(\n    container: AjfReportContainer, context: AjfContext,\n    ts: TranslateService): AjfReportContainerInstance {\n  const content = container.content.map(c => widgetToWidgetInstance(c, context, ts));\n  return {\n    container,\n    content,\n    styles: container.styles,\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfContext, evaluateExpression} from '@ajf/core/models';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AjfReportInstance} from '../../interface/reports-instances/report-instance';\nimport {AjfReport} from '../../interface/reports/report';\n\nimport {createReportContainerInstance} from './create-report-container-instance';\n\nexport function createReportInstance(\n    report: AjfReport, context: AjfContext, ts: TranslateService): AjfReportInstance {\n  (report.variables || []).forEach(variable => {\n    context[variable.name] = evaluateExpression(variable.formula.formula, context);\n  });\n  return {\n    report,\n    header: report.header ? createReportContainerInstance(report.header, context, ts) : undefined,\n    content: report.content ? createReportContainerInstance(report.content, context, ts) :\n                              undefined,\n    footer: report.footer ? createReportContainerInstance(report.footer, context, ts) : undefined,\n    styles: report.styles || {},\n  };\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './base-widget';\nexport * from './chart-utils';\nexport * from './get-column-content';\nexport * from './interface/aggregation/aggregation';\nexport * from './interface/aggregation/aggregation-type';\nexport * from './interface/charts/chart-type';\nexport * from './interface/dataset/chart-dataset';\nexport * from './interface/dataset/chart-dataset-options';\nexport * from './interface/dataset/dataset';\nexport * from './interface/dataset/table-dataset';\nexport * from './interface/reports/report';\nexport * from './interface/reports/report-container';\nexport * from './interface/reports/report-variable';\nexport * from './interface/reports-instances/report-container-instance';\nexport * from './interface/reports-instances/report-instance';\nexport * from './interface/styles';\nexport * from './interface/widgets/chart-widget';\nexport * from './interface/widgets/column-widget';\nexport * from './interface/widgets/custom-widget';\nexport * from './interface/widgets/data-widget';\nexport * from './interface/widgets/formula-widget';\nexport * from './interface/widgets/image-container-widget';\nexport * from './interface/widgets/image-widget';\nexport * from './interface/widgets/layout-widget';\nexport * from './interface/widgets/map-widget';\nexport * from './interface/widgets/page-break-widget';\nexport * from './interface/widgets/table-widget';\nexport * from './interface/widgets/text-widget';\nexport * from './interface/widgets/widget';\nexport * from './interface/widgets/widget-type';\nexport * from './interface/widgets/widget-with-content';\nexport * from './interface/widgets-instances/chart-widget-instance';\nexport * from './interface/widgets-instances/column-widget-instance';\nexport * from './interface/widgets-instances/data-widget-instance';\nexport * from './interface/widgets-instances/formula-widget-instance';\nexport * from './interface/widgets-instances/image-container-widget-instance';\nexport * from './interface/widgets-instances/image-widget-instance';\nexport * from './interface/widgets-instances/layout-widget-instance';\nexport * from './interface/widgets-instances/map-widget-instance';\nexport * from './interface/widgets-instances/page-break-widget-instance';\nexport * from './interface/widgets-instances/table-widget-instance';\nexport * from './interface/widgets-instances/text-widget-instance';\nexport * from './interface/widgets-instances/widget-instance';\nexport * from './interface/widgets-instances/widget-with-content-instance';\nexport * from './report';\nexport * from './reports-module';\nexport * from './serializers/aggregation-serializer';\nexport * from './serializers/dataset-serializer';\nexport * from './serializers/report-container-serializer';\nexport * from './serializers/report-serializer';\nexport * from './serializers/widget-serializer';\nexport * from './widget';\nexport * from './widget-components-map';\nexport * from './widget-host';\n\nexport * from './utils/aggregation/create-aggregation';\nexport * from './utils/reports-instances/create-report-instance';\nexport * from './utils/widgets/create-widget';\nexport * from './utils/widgets-instances/create-widget-instance';\nexport * from './utils/widgets-instances/widget-to-widget-instance';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}